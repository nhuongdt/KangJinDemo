var HUbChat = $.connection.formHub;
var chat = $.connection.chatHub;
var hubAlert = $.connection.AlertHub;
var boxloading = '<div class="loading-box">' +
    '<div class="loading-bg">' +
    '<div class="loading-obj">' +
    '<img src="/Content/images/logo-open24-min.png" />' +
    '<div class="inicator-loading">' +
    ' <div>' +
    ' </div>' +
    ' </div>' +
    '</div>';
//Thay đổi loading box trên điện thoại nhưng vẫn giữ nguyên trên máy tính
$('body').gridLoader({ show: true, morewidthheight: 0, iconloading: boxloading });
var connected = false;
$.connection.hub.start().done(function () {
    connected = true;
});
$.connection.hub.disconnected(function () {
    connected = false;
    setTimeout(function () {
        $.connection.hub.start().done(function () {
            connected = true;
            console.log('connect again hub');
        });;
    }, 5000);
});
var FormModel_NewHoaDon = function () {
    var self = this;
    self.ID = ko.observable('00000000-0000-0000-0000-000000000000');
    self.ID_HoaDon = ko.observable();
    self.ID_DoiTuong = ko.observable();
    self.IDRandom = ko.observable();
    self.LoaiHoaDon = ko.observable(1);
    self.MaHoaDon = ko.observable();
    self.MaHoaDonDB = ko.observable('');
    self.MaHoaDonTraHang = ko.observable('');
    self.NgayLapHoaDon = ko.observable(null);
    self.TongTienHang = ko.observable(0);
    self.PhaiThanhToan = ko.observable(0);
    self.TongGiamGia = ko.observable(0);
    self.DaThanhToan = ko.observable(0);
    self.KhachDaTra = ko.observable(0);
    self.PTThueHoaDon = ko.observable(0);
    self.TongTienThue = ko.observable(0);
    self.DienGiai = ko.observable('');
    self.DVTinhGiam = ko.observable('%');
    self.TongChietKhau = ko.observable(0);
    self.IsKhuyenMaiHD = ko.observable(false);
    self.ID_KhuyenMai = ko.observable(null);
    self.ID_NhomDTApplySale = ko.observable(null);
    self.KhuyeMai_GiamGia = ko.observable(0);
    self.TienThua = ko.observable(0);
    self.KhuyenMai_GhiChu = ko.observable('');
    self.TongGiamGiaKM_HD = ko.observable(0);
    self.NgayApDungGoiDV = ko.observable(moment().format('DD/MM/YYY'));
    self.HanSuDungGoiDV = ko.observable(null);
    self.TienMat = ko.observable(0);
    self.TienATM = ko.observable(0);
    self.TienGui = ko.observable(0);
    self.TienTheGiaTri = ko.observable(0);
    self.DiemQuyDoi = ko.observable(0);
    self.TTBangDiem = ko.observable(0);
    self.StatusOffline = ko.observable(0);
    self.TrangThaiHD = ko.observable(0);
    self.TenViTriHD = ko.observable(0);
    self.ID_ViTri = ko.observable(0);
    self.ID_DonVi = ko.observable($('#txtDonVi').val());

    self.PhaiThanhToanDB = ko.observable(0);
    self.TongTienMua = ko.observable(0);
    self.TongTienTra = ko.observable(0);
    self.DaTraKhach = ko.observable(0);
    self.PhaiTraKhach = ko.observable(0);
    self.HoanTraThuKhac = ko.observable(0);
    self.PTGiamDB = ko.observable(0);
    self.TongGiamGiaDB = ko.observable(0);
    self.PTThueDB = ko.observable(0);
    self.TongThueDB = ko.observable(0);
    self.TongGiaGocHangTra = ko.observable(0);
    self.TongChiPhi = ko.observable(0);
    self.HoanTraTamUng = ko.observable(0);
    self.MaHoaDonTH_NVien = ko.observable('');
    self.TongChiPhiHangTra = ko.observable(0);
    self.PTChietKhauHH = ko.observable(0);
    self.TongGiamGiaHang = ko.observable(0);
    self.TongTienHangChuaCK = ko.observable(0);
    self.TongTienKhuyenMai_CT = ko.observable(0);
    self.TongGiamGiaKhuyenMai_CT = ko.observable(0);
    self.ChiPhi_GhiChu = ko.observable();
    self.TongThanhToan = ko.observable();
    self.ListTKPos = ko.observableArray();
    self.ListTKChuyenKhoan = ko.observableArray();
    self.NoHDCu = ko.observable();// ussed to bu tru doitra
    self.IsTraGDV = ko.observable(false);

    self.SetData = function (item) {
        self.ID(item.ID);
        self.ID_HoaDon(item.ID_HoaDon);
        self.ID_DoiTuong(item.ID_DoiTuong);
        self.IDRandom(item.IDRandom);
        self.LoaiHoaDon(item.LoaiHoaDon);
        self.MaHoaDon(item.MaHoaDon);
        self.MaHoaDonDB(item.MaHoaDonDB);
        self.MaHoaDonTraHang(item.MaHoaDonTraHang);
        self.NgayLapHoaDon(item.NgayLapHoaDon);
        self.TongTienHang(item.TongTienHang);
        self.PhaiThanhToan(item.PhaiThanhToan);
        self.TongGiamGia(item.TongGiamGia);
        self.DaThanhToan(item.DaThanhToan);
        self.KhachDaTra(item.KhachDaTra);
        self.PTThueHoaDon(item.PTThueHoaDon);
        self.TongTienThue(item.TongTienThue);
        self.DienGiai(item.DienGiai);
        self.DVTinhGiam(item.DVTinhGiam);
        self.TongChietKhau(item.TongChietKhau);
        self.IsKhuyenMaiHD(item.IsKhuyenMaiHD);
        self.ID_KhuyenMai(item.ID_KhuyenMai);
        self.ID_NhomDTApplySale(item.ID_NhomDTApplySale);
        self.KhuyeMai_GiamGia(item.KhuyeMai_GiamGia);
        self.TienThua(item.TienThua);
        self.KhuyenMai_GhiChu(item.KhuyenMai_GhiChu);
        self.TongGiamGiaKM_HD(item.TongGiamGiaKM_HD);
        self.NgayApDungGoiDV(item.NgayApDungGoiDV);
        self.HanSuDungGoiDV(item.HanSuDungGoiDV);
        self.TienMat(item.TienMat);
        self.TienATM(item.TienATM);
        self.TienGui(item.TienGui);
        self.TienTheGiaTri(item.TienTheGiaTri);
        self.DiemQuyDoi(item.DiemQuyDoi);
        self.TTBangDiem(item.TTBangDiem);
        self.StatusOffline(item.StatusOffline);
        self.TrangThaiHD(item.TrangThaiHD);
        self.TenViTriHD(item.TenViTriHD);
        self.ID_ViTri(item.ID_ViTri);
        self.ID_DonVi(item.ID_DonVi);

        self.PhaiThanhToanDB(item.PhaiThanhToanDB);
        self.TongTienMua(item.TongTienMua);
        self.TongTienTra(item.TongTienTra);
        self.DaTraKhach(item.DaTraKhach);
        self.PhaiTraKhach(item.HoanTraTamUng);// assign = hoantra
        self.HoanTraThuKhac(item.HoanTraThuKhac);
        self.PTThueDB(item.PTThueDB);
        self.TongThueDB(item.TongThueDB);
        self.TongGiaGocHangTra(item.TongGiaGocHangTra);
        self.PTGiamDB(item.PTGiamDB);
        self.TongGiamGiaDB(item.TongGiamGiaDB);
        self.TongChiPhi(item.TongChiPhi);
        self.HoanTraTamUng(item.HoanTraTamUng);
        self.MaHoaDonTH_NVien(item.MaHoaDonTH_NVien);
        self.TongChiPhiHangTra(item.TongChiPhiHangTra);
        self.PTChietKhauHH(item.PTChietKhauHH);
        self.TongGiamGiaHang(item.TongGiamGiaHang);
        self.TongTienHangChuaCK(item.TongTienHangChuaCK);
        self.TongTienKhuyenMai_CT(item.TongTienKhuyenMai_CT);
        self.TongGiamGiaKhuyenMai_CT(item.TongGiamGiaKhuyenMai_CT);
        self.ChiPhi_GhiChu(item.ChiPhi_GhiChu);
        self.TongThanhToan(item.TongThanhToan);
        self.NoHDCu(item.NoHDCu);

        if (!commonStatisJs.CheckNull(item.ListTKPos)) {
            self.ListTKPos(item.ListTKPos);
        }
        else {
            self.ListTKPos([]);
        }
        if (!commonStatisJs.CheckNull(item.ListTKChuyenKhoan)) {
            self.ListTKChuyenKhoan(item.ListTKChuyenKhoan);
        }
        else {
            self.ListTKChuyenKhoan([]);
        }
        self.ListTKChuyenKhoan(item.ListTKChuyenKhoan);

        if (!commonStatisJs.CheckNull(item.IsTraGDV)) {
            self.IsTraGDV(item.IsTraGDV);
        }
        else {
            self.IsTraGDV(false);
        }
    }
}

var NewModel_BanHangLe = function () {
    var self = this;
    var id_DonVi = $('#txtDonVi').val();
    var id_User = $('#txtIDUser').val();
    var userLogin = $('#txtUserLogin').val();
    var shopCookies = $('#txtShopCookie').val();
    var shopCookies = $('#txtShopCookie').val();
    var _idNhanVien = $('#txtIDNhanVien').val();
    var _subDomain = $('#subDomain').val();
    var DMDoiTuongUri = '/api/DanhMuc/DM_DoiTuongAPI/';
    var DM_HangHoaUri = "/api/DanhMuc/DM_HangHoaAPI/";
    var BHHoaDonUri = '/api/DanhMuc/BH_HoaDonAPI/';
    var tree = '';// use at treeview NhomHangHoa
    var tree2 = '';// use at treeview NhomHangHoa --> check KhuyenMai
    self.SubDomain = ko.observable(_subDomain.toLowerCase());
    self.selectedGiaBan = ko.observable();
    self.selectedNVien = ko.observable();
    self.selectedPhongBan = ko.observable();
    self.selectedHangHoa = ko.observable();
    self.selectedNhomHangHoa = ko.observable();
    self.LoaiNganhNghe = ko.observable(0);

    self.txtSoLuong = ko.observable(1);
    self.txtDonGia = ko.observable(0);
    self.txtSoLuongDT = ko.observable(1);
    self.txtDonGiaDT = ko.observable(0);
    self.isSaving = ko.observable(false);

    self.filter = ko.observable();
    self.isSortAsc = ko.observable(true);
    self.selectedNCC = ko.observable();
    self.booleanAdd = ko.observable(true);
    self.countHDoffilne = ko.observable();
    self.filterGiaBan = ko.observable();
    self.filterNVien = ko.observable();
    self.selectedDoiTuong = ko.observable();
    self.IsNhapNhanh = ko.observable(true);
    self.IsNhapNhanh_DoiTra = ko.observable(true);
    var serverTime = sstime.GetDatetime();
    self.DateHDDefault = ko.observable(moment(serverTime).format('DD/MM/YYYY'));
    self.TimeHDDefault = ko.observable(moment(serverTime).format('HH:mm'));
    self.FilesSelect = ko.observableArray();
    self.HaveImage_Select = ko.observable(false);
    self.IDDoiTuong_PhieuThu = ko.observable();
    self.NoSau = ko.observable();
    self.ThuTuKhach = ko.observable();
    self.GhiChu_PhieuThu = ko.observable();
    self.NgayLapPhieuThu = ko.observable(moment(new Date()).format('DD/MM/YYYY HH:mm'));
    self.TienMat_PhieuThu = ko.observable();
    self.TienATM_PhieuThu = ko.observable(0);
    self.TienGui_PhieuThu = ko.observable(0);
    self.KhachTT_PhieuThu = ko.observable();
    self.TienTheGiaTri_PhieuThu = ko.observable(0);
    self.TongThanhToan = ko.observable(0);
    self.CongVaoTK = ko.observable(0);
    self.ListHDisDebit = ko.observableArray();
    self.ListTime = ko.observableArray();
    self.selectID_POSPT = ko.observable();
    self.selectID_ChuyenKhoanPT = ko.observable();
    self.checkEmail = ko.observable(true);
    self.windowWidth = ko.observable($(window).width());
    self.ThietLap = ko.observableArray(); // thiet lap he thong
    self.ThietLap_TichDiem = ko.observableArray();
    self.ThietLap_TraHang = ko.observableArray();
    self.DienHienTai = ko.observable(0); // bind at popThanhToanThe
    self.TienQuyDoi = ko.observable(0); // so tien quy doi duoc tu Diem
    self.ChotSo_ChiNhanh = ko.observableArray();
    // Khuyen Mai
    self.showNhomHoTro = ko.observable(false);
    self.ID_HHTang = ko.observable();
    self.ID_HHTangHoaDon = ko.observable();
    self.ID_KhuyenMai = ko.observable(); // to do add HangHoa KM
    self.DMKhuyenMai = ko.observableArray();
    self.ListKM_ofHangHoa = ko.observableArray();
    self.ListKM_ofHoaDon = ko.observableArray();
    self.KM_KMApDung = ko.observableArray();
    self.HangHoaTangs = ko.observableArray([]);
    self.HangHoaTang_HoaDons = ko.observableArray([]);
    self.HangHoaChoseTangs = ko.observableArray([]);
    self.ID_DonViQuiDoiMua = ko.observable();
    self.ID_NhomHHMua = ko.observable();
    self.SoLuongTang = ko.observable();
    self.SoLuongMua = ko.observable();
    self.HHTang_AfterRender = ko.observableArray();
    self.HHTangHoaDon_AfterRender = ko.observableArray();
    self.HH_KhuyenMai = ko.observable(); // to do view infor KhuyenMai of HangHoaHH_KhuyenMai
    self.HD_KhuyenMai = ko.observable(); // to do set value of rdoKMaiHD
    self.IsTangTheoNhom = ko.observable(false); // check xem HangHoa Khuyen Mai thuoc loai tang theo nhom OR tang theo ID_QuiDoi
    self.GiamGiaKM = ko.observable();
    self.GiamGiaTheoPhanTram = ko.observable();
    self.HinhThucKM = ko.observable();
    self.HHTang_HoaDon = ko.observableArray();
    self.ListIDNhanVienQuyen = ko.observableArray();
    self.TrangThaiKhachHang = ko.observableArray();
    self.PhongBans = ko.observableArray();
    self.TinhThanhs = ko.observableArray();
    self.QuanHuyens = ko.observableArray();
    self.AllQuanHuyens = ko.observableArray();
    self.NguonKhachs = ko.observableArray();
    self.VungMiens = ko.observableArray();
    self.NhomDoiTuongs = ko.observableArray();
    self.HangHoas = ko.observableArray();// fiter by Nhom
    self.PageResults = ko.observableArray();
    self.HangHoaOlds = ko.observableArray();
    self.HangHoaAll = ko.observableArray();// after filter TonKho > 0
    self.HangHoaAll_notLoHang = ko.observableArray();
    self.HoaDonTHs = ko.observableArray();
    self.HangHoaAfterAdds = ko.observableArray();
    self.HoaDons = ko.observable(new FormModel_NewHoaDon());
    self.NhanViens = ko.observableArray(); // lstNhanvien not ID_DonVi
    self.NhanViens_ChiNhanh = ko.observableArray(); // lstNhanvien with ID_DonVi (duplicate NVien)
    self.DoiTuongs = ko.observableArray(); // use to check addKhachHang
    self.ChiTietHangHoa = ko.observableArray();
    self.NhomHangHoas = ko.observableArray();
    self.GiaBans = ko.observableArray(); // lst BangGia after change NCC, NVien
    self.AllBangGia = ko.observableArray(); // all BGia in DB
    self.AllGiaBanChiTiet = ko.observableArray();
    self.ChiTietDoiTuong = ko.observableArray();
    self.PhongBanSelected = ko.observableArray();
    self.HoaDonByIDViTri = ko.observableArray();
    self.HoaDonOffline = ko.observableArray();
    self.CongTy = ko.observableArray();
    self.ChiNhanhs = ko.observableArray();
    self.ChiNhanhs_byUser = ko.observableArray();
    self.ChiNhanh0 = ko.observableArray();
    // tab location
    self.AllPhongBans = ko.observableArray();
    self.AllNhomBans = ko.observableArray();
    self.PhongBans_byIDNhom = ko.observableArray();
    self.IDPhongBan_Chosing = ko.observable();
    self.MenhGiaTienGoiy = ko.observableArray();
    // modal TP dinh luong
    self.ListHangHoa_DinhLuong = ko.observableArray();
    self.Grid_TPDinhLuongChosed = ko.observableArray();
    // nếu trả hàng, và Đổi lần 4 --> ẩn không cho đổi (chỉ dc trả)
    self.CountDoiTra = ko.observable(0);

    // modal infor hd of other user
    self.Modal_HoaDons = ko.observableArray();
    self.NumberTableUsed = ko.observable(0);
    self.NumberTableEmpty = ko.observable(0);
    self.titleChinhanh = ko.computed(function () {
        if (self.ChiNhanh0() !== null && self.ChiNhanh0() !== undefined) { return self.ChiNhanh0().TenDonVi; }
        else {
            return "";
        }
    });
    self.selectedChiNhanh = ko.observable();
    self.NhanVien0 = ko.observableArray();
    self.titleNhanvien = ko.computed(function () {
        if (self.NhanVien0() !== null && self.NhanVien0() !== undefined && self.NhanVien0().length > 0) { return self.NhanVien0()[0].TenNhanVien; }
        else {
            return "";
        }
    });
    self.GiaBan0 = ko.observableArray();
    self.titleGiaban = ko.computed(function () {
        if (self.GiaBan0() !== null && self.GiaBan0() !== undefined && self.GiaBan0().length > 0) { return self.GiaBan0()[0].TenGiaBan; }
        else {
            return "";
        }
    });
    self.cusChosing = ko.computed(function () {
        if (self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong() !== undefined && self.ChiTietDoiTuong().length > 0) {
            return {
                MaNguoiNop: self.ChiTietDoiTuong()[0].MaDoiTuong,
                TenNguoiNop: self.ChiTietDoiTuong()[0].TenDoiTuong,
                SoDienThoai: self.ChiTietDoiTuong()[0].DienThoai,
                NoHienTai: self.ChiTietDoiTuong()[0].NoHienTai,
                TongTichDiem: self.ChiTietDoiTuong()[0].TongTichDiem,
            }
        }
        else {
            return {
                MaNguoiNop: '',
                TenNguoiNop: '',
                SoDienThoai: '',
                NoHienTai: 0,
                TongTichDiem: 0,
            }
        }
    });
    self.CTHoaDonPrint = ko.observableArray();
    self.CTHoaDonPrintMH = ko.observableArray();
    self.InforHDprintf = ko.observableArray();
    self.DM_MauIn = ko.observableArray();
    self.NhomHHChosed = ko.observableArray();
    // count CTHD (header)
    self.SumProduct = ko.observable(0);
    self.SumQuantity = ko.observable(0);
    // Thanh toan = The, NganHang
    self.ListAccountPOS = ko.observableArray();
    self.ListAccountChuyenKhoan = ko.observableArray();
    self.selectID_POS = ko.observable();
    self.selectID_ChuyenKhoan = ko.observable();
    self.filterAcPOS = ko.observable();
    self.filterAcCK = ko.observable();
    // phan bo tien vao HD
    self.shareMoneys = ko.observableArray();
    // chon nhieu nhom KhachHang
    self.NhomDoiTuongDB = ko.observableArray();
    self.NhomDoiTuongChosed = ko.observableArray();
    // hide/show colum CTHD
    self.show_STT = ko.observable(true);
    self.show_ProductCode = ko.observable(true);
    self.show_ProductName = ko.observable(true);
    self.show_ProductCount = ko.observable(true);
    self.show_ProductPrice = ko.observable(true);
    self.show_ProductSale = ko.observable(true);
    self.show_SumPrice = ko.observable(true);
    self.show_WidthProductName = ko.observable("calc(100% - 550px)");
    self.showHeader_STT = ko.observable(true);
    self.showHeader_ProductCode = ko.observable(true);
    self.showHeader_ProductName = ko.observable(true);
    self.showHeader_ProductCount = ko.observable(true);
    self.showHeader_ProductPrice = ko.observable(true);
    self.showHeader_SumPrice = ko.observable(true);
    self.showHeader_ProductSale = ko.observable(true);
    self.showHeader_WidthProductName = ko.observable("calc(100% - 550px)");

    // get cookie "Account" from brower (if deleted userLogin --> go to Login)
    var cookieAccount = $.cookie("Account");
    if (cookieAccount === undefined) {
        window.location.href = '/Login';
    }
    self.DMChungTus = ko.observableArray([
        { MaLoaiChungTu: 0, TenLoaiChungTu: 'Tất cả' },
        { MaLoaiChungTu: 1, TenLoaiChungTu: 'Hóa đơn' },
        { MaLoaiChungTu: 3, TenLoaiChungTu: 'Đặt hàng' },
        { MaLoaiChungTu: 6, TenLoaiChungTu: 'Trả hàng' },
    ]);
    self.selectLoaiChungTu = ko.observable();
    // Tra Hang
    self.selectNewProduct = ko.observable();
    self.NewProducts = ko.observableArray();
    self.HoaDonTraHang = ko.observableArray();
    self.indexOfMaHD = ko.observable();
    self.filterFromDate = ko.observable();
    self.filterToDate = ko.observable();
    self.pageSize = ko.observable(12);
    self.currentPage = ko.observable(0);
    self.pageSizeHD = ko.observable(4);

    // phan trang Dat Hang
    self.filterFromDateDH = ko.observable();
    self.filterToDateDH = ko.observable();
    self.HoaDonDHs = ko.observableArray();
    self.pageSizesDH = [10, 20, 30];
    self.pageSizeDH = ko.observable(10);
    self.currentPageDH = ko.observable(0);
    self.fromitem = ko.observable(1);
    self.toitem = ko.observable();
    self.PageCountDH = ko.observable();
    self.TotalRecordDH = ko.observable();
    // DatHang
    self.StatusHD = ko.observable();
    self.ID_HoaDonUpdate = ko.observable();
    // ap dung giam gia theo nhom
    self.ListGroupSale = ko.observableArray();
    self.Quyen_NguoiDung = ko.observableArray();
    // Setting print invoice
    self.setViewSoDoPhong = ko.observable(false);
    self.setLuuTam = ko.observable(false);
    self.setNhapQuyCach = ko.observable(false);
    self.setHideProduct = ko.observable(false);
    self.setPrintDraft = ko.observable(false);
    self.setPrintPay = ko.observable(true);
    self.setPrintTicket = ko.observable(false);
    self.numberOfPrint = ko.observable(1);
    self.ListTempPrint = ko.observableArray();
    self.roleCurrent = ko.observable(0);
    self.roleCustomer_Insert = ko.observable(false);
    self.roleCustomer_ThanhToanNo = ko.observable(false);
    self.roleChangePriceProduct = ko.observable(false);// biến chung check quyền thay đổi giá cho all loại hóa đơn (todo)
    self.roleChangePriceProduct_Invoice = ko.observable(false); // change price of product at Invoice
    self.roleChangeDiscountProduct = ko.observable(false);
    self.roleChangeSale_Invoice = ko.observable(false); // change sale of Invoice
    self.roleChangePriceProduct_Order = ko.observable(false);
    self.roleChangeSale_Order = ko.observable(false);
    self.roleChangePriceProduct_Return = ko.observable(false);
    self.roleChangeSale_Return = ko.observable(false);
    self.roleChangePriceProduct_ServicePackage = ko.observable(false);
    self.roleChangeSale_ServicePackage = ko.observable(false);
    self.RoleChange_ChietKhauNV = ko.observable(false);
    self.roleUpdateImg = ko.observable(false);
    self.RoleInsert_Invoice = ko.observable(false);
    self.RoleInsert_Order = ko.observable(false);
    self.RoleInsert_Service = ko.observable(false);
    self.RoleInsert_Return = ko.observable(false);
    self.RoleXuly_Order = ko.observable(false);
    self.RoleView_ChietKhauNV = ko.observable(false);
    self.rolePrintDraf_Invoice = ko.observable(false);
    self.roleHoaDonHoTro_Insert = ko.observable(false);

    // const localStorage
    const lcMaHD = 'maHDCache';
    const lcListHD = 'lstHDLe';
    const lcListCTHD = 'lstCTHDLe';
    const lcCTHDTraHang_fromHD = 'CTHDTraHang'; // save cache CTHD if TraHang from HD
    const lcListCTHD_DoiTra = 'lstCTHDLe_TraHang'; // save CTHD doi tra
    const lcProductKM_HoaDon = 'productKM_HoaDon';
    const lcDM_DoiTuong = 'DM_DoiTuongs'; // lst KH offline
    const lcCTDatHang_Const = 'lcCTDatHang';
    const lcSetPrintConst = "SetPrintBL";
    const lcXuLiDonHang_Const = 'lcXuLiDonHang';
    const nameHD_TraHang = 'Trả hàng '; // have space
    const nameHD_AddGoiDV = 'Gói DVụ ';
    const nameHD_UpdateDH = 'BG';
    const nameHD_InsertDH = 'Đặt hàng ';
    const nameHD_InsertBH = 'Hóa đơn ';
    const nameHD_BaoHanh = 'Bảo hành ';

    function CheckHDNull_andRemove() {
        var lstHDFist = localStorage.getItem(lcListHD);
        if (lstHDFist === 'null') {
            localStorage.removeItem(lcListHD);
            localStorage.removeItem(lcListCTHD);
        }
    }
    function CheckCreateHD_fromOtherForm() {
        var addQuick = localStorage.getItem('InsertQuickly');
        if (addQuick !== null) {
            addQuick = parseInt(addQuick);
            localStorage.removeItem('InsertQuickly');
        }
        if (localStorage.getItem('fromTraHang') === 'true' || addQuick === 5) {
            localStorage.removeItem('fromTraHang');
            vmTraHang.ID_DonVi = id_DonVi;
            vmTraHang.LoaiHoaDon = self.HoaDons().LoaiHoaDon();
            vmTraHang.showModal();
        }
        else {
            var loaiHD = 0;
            if (localStorage.getItem('fromHoaDon') === 'true') {
                loaiHD = 1;
            }
            if (localStorage.getItem('fromDatHang') === 'true') {
                loaiHD = 3;
            }
            else {
                if (localStorage.getItem('fromGoiDichVu') === 'true') {
                    loaiHD = 19;
                }
                else {
                    if (localStorage.getItem('fromBaoHanh') === 'true') {
                        loaiHD = 2;
                    }
                }
            }
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
            }
            else {
                lstHD = [];
            }
            var maHDNew = nameHD_InsertBH;
            switch (loaiHD) {
                case 1:
                    localStorage.removeItem('fromHoaDon');
                    break;
                case 2:
                    localStorage.removeItem('fromBaoHanh');
                    maHDNew = nameHD_BaoHanh;
                    break;
                case 3:
                    localStorage.removeItem('fromDatHang');
                    localStorage.removeItem('lcCTDatHang');
                    localStorage.removeItem(lcXuLiDonHang_Const);
                    maHDNew = nameHD_InsertDH;
                    break;
                case 19:
                    localStorage.removeItem('fromGoiDichVu');
                    maHDNew = nameHD_AddGoiDV;
                    break;
            }
            if (loaiHD !== 0) {
                var max = GetMax_MaHoaDon(loaiHD, lstHD);
                var objHDNew = newHoaDon(maHDNew + (max + 1), loaiHD);
                lstHD.push(objHDNew);
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                _maHoaDon = maHDNew + (max + 1);
                localStorage.setItem(lcMaHD, _maHoaDon);
            }
        }
    }
    var initLoad = false;
    $(document).ready(function () {
        initLoad = true;
    });
    var db = new Dexie(_subDomain);
    db.version(1).stores({
        DM_DoiTuong: 'ID, Name_Phone',
        DM_HangHoa: 'ID, Name',
        NS_NhanVien: '++id',
        DM_GiaBan: 'ID',
        HDDatHang_UpdateStatus: 'ID, Status',
        HDDatHang_Offline: 'ID',
        HeThongTichDiem: 'ID_TichDiem',
        DM_MauIn: 'ID',
        Quyen_NguoiDung: '++id',
        HT_NguoiDung: 'ID',
        DM_QuanHuyen: 'ID',
        DM_LoHang: '++id',
        DM_DonVi: 'ID',
        KhachHang_HangHoa: 'ID_DoiTuong',
        ChietKhau_NhanVien: '++id',
        DM_KhuyenMai: 'ID',
        DM_TaiKhoanNganHang: 'ID',
        DM_NhanVienLienQuan: '++id',
        DM_ViTri: 'ID',
        DM_KhuVuc: 'ID',
        DM_DoiTuong_TrangThai: 'ID',
        DinhLuong_DichVu: 'ID',
    });


    var t;
    var now = serverTime;
    var date = now.getDate();
    if (date < 10) {
        date = '0' + date;
    }
    var month = now.getMonth() + 1;
    if (month < 10) {
        month = '0' + month;
    }
    day = date + "/" + month + "/" + now.getFullYear();
    function timer() {
        var currentTime = sstime.GetDatetime();
        var hours = currentTime.getHours();
        var minutes = currentTime.getMinutes();
        var sec = currentTime.getSeconds();
        if (hours < 10) {
            hours = "0" + hours;
        }
        if (minutes < 10) {
            minutes = "0" + minutes;
        }
        if (sec < 10) {
            sec = "0" + sec;
        }
        var t_str = hours + ":" + minutes;
        t = setTimeout(timer, 1000);
        self.DateHDDefault(day);
        self.TimeHDDefault(t_str);
    }
    function stopTimer() {
        clearTimeout(t);
    }
    // auto DongBoHoa HoaDon and update Status for HD DatHang
    var timeDongBo;
    function AutoUpdate_StatusHD_AndDongBoHoa() {
        timeDongBo = setTimeout(AutoUpdate_StatusHD_AndDongBoHoa, 5 * 1000 * 60); // 5 phut, load 1 lan
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            lstHD = lstHD.filter(x => x.StatusOffline === true);
            if (lstHD.length > 0) {
                UpdateStatus_HDDatHang();
                $('#btnDongBoHoa').trigger('click');
            }
        }
    }
    //AutoUpdate_StatusHD_AndDongBoHoa();
    function PageLoad() {
        console.log(3);
        GetNganhNgheKinhDoanh();
        GetUserCookies();
        GetListIDNhanVien_byUserLogin('KhachHang');
        getAllDMHangHoas();
        GetNhanVien_NguoiDung();
        GetDMGiaBan_GBApDung();
        GetHT_Quyen_ByNguoiDung();
        GetAll_LoHang();
        GetHT_TichDiem();
        GetInforChiNhanh();
        GetKM_CTKhuyenMai();
        GetDM_TaiKhoanNganHang();
        GetListTrangThaiKhachHang();
        Call_ManyFunction_Onsuccess();
        CheckHDNull_andRemove();
        RemoveHD_undefinedTrangThai();
        UpdateDonVi_inCacheOld();
        CheckCreateHD_fromOtherForm();
        SetPageSize_FullProduct(true);
        GetTree_NhomHangHoa();
        GetCauHinhHeThong();
        Call_ManyFunctionDB_PageLoad();
        GetAllQuy_KhoanThuChi();
    }

    function CheckCache(funcName) {
        funcName = funcName + ': ';
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);

            var xx = $.map(cthd, function (x) {
                return {
                    IDRandomHD: x.IDRandomHD,
                    MaHoaDon: x.MaHoaDon,
                    TenHangHoa: x.TenHangHoa,
                    MaHangHoa: x.MaHangHoa,
                    SoLuong: x.SoLuong,
                    DonGia: x.DonGia,
                    ThanhTien: x.ThanhTien,
                    IDQuiDoi: x.ID_DonViQuiDoi,
                    ID_LoHang: x.ID_LoHang,
                }
            });
            console.log(funcName, xx);
        }
        else {
            console.log(funcName, ' null');
        }
    }
    // use delete cache khong hop le
    function RemoveHD_undefinedTrangThai() {
        var arrIDRandom = [];
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD === null) {
            lstHD = [];
        }
        else {
            lstHD = JSON.parse(lstHD);
            lstHD = $.grep(lstHD, function (x) {
                return x.TrangThaiHD !== undefined;
            });
            for (let i = 0; i < lstHD.length; i++) {
                arrIDRandom.push(lstHD[i].IDRandom);
                if (lstHD[i].DiemGiaoDichDB === undefined) {
                    lstHD[i].DiemGiaoDichDB = 0;
                }
                if (lstHD[i].MaHoaDonDB === undefined) {
                    lstHD[i].MaHoaDonDB = lstHD[i].MaHoaDon;
                }
                if (lstHD[i].PhaiThanhToanDB === undefined) {
                    lstHD[i].PhaiThanhToanDB = 0;
                }
                if (lstHD[i].TongChiPhiHangTra === undefined) {
                    lstHD[i].TongChiPhiHangTra = 0;
                }
                if (lstHD[i].TongGiamGiaHang === undefined) {
                    lstHD[i].TongGiamGiaHang = 0;
                }
                if (lstHD[i].PTChietKhauHH === undefined) {
                    lstHD[i].TongGiamGiaHang = 0;
                }
                if (lstHD[i].TongTienHangChuaCK === undefined) {
                    lstHD[i].TongTienHangChuaCK = 0;
                }
                if (lstHD[i].TongTienKhuyenMai_CT === undefined) {
                    lstHD[i].TongTienKhuyenMai_CT = 0;
                }
                if (commonStatisJs.CheckNull(lstHD[i].ListTKPos)) {
                    lstHD[i].ListTKPos = [];
                }
                if (commonStatisJs.CheckNull(lstHD[i].ListTKChuyenKhoan)) {
                    lstHD[i].ListTKChuyenKhoan = [];
                }
                if (lstHD[i].PTThueHoaDon === undefined) {
                    if (!commonStatisJs.CheckNull(lstHD[i].PTThue)) {
                        lstHD[i].PTThueHoaDon = lstHD[i].PTThue;
                    }
                    else {
                        lstHD[i].PTThueHoaDon = 0;
                    }
                }
                if (commonStatisJs.CheckNull(lstHD[i].IsTraGDV)) {
                    lstHD[i].IsTraGDV = false;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd === null) {
            cthd = [];
        }
        else {
            cthd = JSON.parse(cthd);
            // assign DuocTichDiem = 1 if undefined
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].DuocTichDiem === undefined) {
                    cthd[i].DuocTichDiem = 1;
                    cthd[i].DichVuTheoGio = 0;
                }

                if (commonStatisJs.CheckNull(cthd[i].ThanhPhanComBo)) {
                    cthd[i].ThanhPhanComBo = [];
                }

                for (let j = 0; j < cthd[i].ThanhPhan_DinhLuong.length; j++) {
                    if (commonStatisJs.CheckNull(cthd[i].ThanhPhan_DinhLuong[j].isDefault)) {
                        cthd[i].ThanhPhan_DinhLuong[j].isDefault = false;
                    }
                }
                for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                    for (let k = 0; k < cthd[i].ThanhPhanComBo[j].ThanhPhan_DinhLuong.length; k++) {
                        if (commonStatisJs.CheckNull(cthd[i].ThanhPhanComBo[j].ThanhPhan_DinhLuong[k].isDefault)) {
                            cthd[i].ThanhPhanComBo[j].ThanhPhan_DinhLuong[k].isDefault = false;
                        }
                    }
                }
                if (commonStatisJs.CheckNull(cthd[i].LoaiHangHoa)) {
                    if (cthd[i].LaHangHoa) {
                        cthd[i].LoaiHangHoa = 1;
                    }
                    else {
                        cthd[i].LoaiHangHoa = 2;
                    }
                }

                for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                    cthd[i].DM_LoHang[j].ThanhPhanComBo = [];
                    if (commonStatisJs.CheckNull(cthd[i].DM_LoHang[j].LoaiHangHoa)) {
                        cthd[i].DM_LoHang[j].LoaiHangHoa = 1;
                    }
                }
                for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                    cthd[i].HangCungLoais[j].ThanhPhanComBo = [];
                    if (commonStatisJs.CheckNull(cthd[i].HangCungLoais[j].LoaiHangHoa)) {
                        if (cthd[i].HangCungLoais[j].LaHangHoa) {
                            cthd[i].HangCungLoais[j].LoaiHangHoa = 1;
                        }
                        else {
                            cthd[i].HangCungLoais[j].LoaiHangHoa = 2;
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
        }
    }

    function UpdateDonVi_inCacheOld() {
        id_DonVi = id_DonVi.toLowerCase();

        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                let forIn = lstHD[i];
                if (forIn.ID_DonVi.toLowerCase() !== id_DonVi) {
                    if (forIn.MaHoaDon.indexOf('Copy') === -1 && forIn.ID === const_GuidEmpty
                        && commonStatisJs.CheckNull(forIn.ID_HoaDon)) {
                        forIn.ID_DonVi = id_DonVi;
                    }
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }

    function GetNhomDoiTuong_DonVi() {
        ajaxHelper(DMDoiTuongUri + 'GetNhomDoiTuong_DonVi?loaiDT=1', 'GET').done(function (obj) {
            if (obj.res === true) {
                let data = obj.data;
                if (self.ThietLap().QuanLyKhachHangTheoDonVi) {
                    // only get Nhom chua cai dat ChiNhanh or in this ChiNhanh
                    var arrNhom = [];
                    for (let i = 0; i < data.length; i++) {
                        if (data[i].NhomDT_DonVi.length > 0) {
                            var ex = $.grep(data[i].NhomDT_DonVi, function (x) {
                                return x.ID === id_DonVi;
                            });
                            if (ex.length) {
                                arrNhom.push(data[i]);
                            }
                        }
                        else {
                            arrNhom.push(data[i]);
                        }
                    }
                    self.NhomDoiTuongDB(arrNhom);
                    vmThemMoiKhach.listData.NhomKhachs = arrNhom;
                    vmThemMoiKhach.QuanLyKhachHangTheoDonVi = true;
                }
                else {
                    self.NhomDoiTuongDB(data);
                    vmThemMoiKhach.listData.NhomKhachs = data;
                    vmThemMoiKhach.QuanLyKhachHangTheoDonVi = false;
                }
            }
        });
    }

    // changeChiNhanh: don't need load again this func
    function Call_ManyFunctionDB_PageLoad() {
        ajaxHelper(BHHoaDonUri + "BanHang_ManyFunctionDB_PageLoad?idChiNhanh=" + id_DonVi, 'GET').done(function (obj) {
            if (obj.res === true) {
                self.CongTy(obj.CongTy);
                self.ChotSo_ChiNhanh(obj.ChotSo);
                self.ThietLap_TraHang(obj.CauHinhTraHang);
                self.VungMiens(obj.VungMien);

                vmThemMoiKhach.listData.NguonKhachs = obj.NguonKhach;
                vmThemMoiNhomKhach.listData.VungMiens = obj.VungMien;
                vmThanhToan.ThietLapChotSo = obj.ChotSo;

                if (self.CongTy().length > 0) {
                    vmThanhToan.inforCongTy = {
                        TenCongTy: self.CongTy()[0].TenCongTy,
                        DiaChiCuaHang: self.CongTy()[0].DiaChi,
                        LogoCuaHang: Open24FileManager.hostUrl + self.CongTy()[0].DiaChiNganHang,
                        TenChiNhanh: self.titleChinhanh,
                    };
                }
                vmThanhToan.listData.arrIDDonVi = [id_DonVi];
            }
        });
    }

    self.KhoanThuChis = ko.observableArray();
    function GetAllQuy_KhoanThuChi() {
        ajaxHelper('/api/DanhMuc/Quy_HoaDonAPI/' + 'GetQuy_KhoanThuChi', 'GET').done(function (x) {
            if (x.res === true) {
                self.KhoanThuChis(x.data);
                vmThanhToan.listData.KhoanThuChis = self.KhoanThuChis();
            }
        })
    }

    function AssignCTHD_ChoThanhToan(cthdDB, cacheCTHD, hd) {
        var idRandomHD = hd.IDRandom, maHoaDon = hd.MaHoaDon;
        // order by SoThuTu ASC --> group Hang Hoa by LoHang
        var arrCTsort = cthdDB.sort(function (a, b) {
            var x = a.SoThuTu,
                y = b.SoThuTu;
            return x < y ? -1 : x > y ? 1 : 0;
        });
        var arrIDQuiDoi = [];
        for (let i = 0; i < arrCTsort.length; i++) {
            // if TangKem of HangHoa --> not push CTHD
            if (arrCTsort[i].ID_TangKem !== null) {
                continue;
            }
            arrCTsort[i].IDRandomHD = idRandomHD;
            arrCTsort[i].MaHoaDon = maHoaDon;
            arrCTsort[i].LoaiHoaDon = 1;
            arrCTsort[i].SoLuongDaMua = 0;
            arrCTsort[i].TienChietKhau = arrCTsort[i].GiamGia;
            arrCTsort[i].DVTinhGiam = '%';
            arrCTsort[i].GiaBan = arrCTsort[i].DonGia;
            // get ThanhTien from DB
            arrCTsort[i].ChatLieu = '';
            if (arrCTsort[i].ID_ChiTietGoiDV !== null) {
                arrCTsort[i].ChatLieu = '4';
            }
            if (arrCTsort[i].TienChietKhau > 0 && arrCTsort[i].PTChietKhau === 0) {
                arrCTsort[i].DVTinhGiam = 'VND';
            }
            arrCTsort[i].SrcImage = null;
            arrCTsort[i].CssWarning = false;
            arrCTsort[i].IsKhuyenMai = false;
            arrCTsort[i].IsOpeningKMai = false;
            arrCTsort[i].DiemKhuyenMai = 0;
            arrCTsort[i].TenKhuyenMai = '';
            arrCTsort[i].HangHoa_KM = [];
            arrCTsort[i].HangCungLoais = [];
            arrCTsort[i].ThanhPhanComBo = [];
            arrCTsort[i].LaConCungLoai = false;
            // get ID_ChiTietDinhLuong, ID_ChiTietGoiDV from DB
            arrCTsort[i].ListDonViTinh = [];
            arrCTsort[i].ShowWarningQuyCach = false;
            arrCTsort[i].SoLuongQuyCach = 0;
            let idVitri = arrCTsort[i].ID_ViTri;
            if (idVitri === const_GuidEmpty) arrCTsort[i].ID_ViTri = null;
            let dtStart = arrCTsort[i].ThoiGian;
            arrCTsort[i].TimeStart = 0;
            arrCTsort[i].TimeRemain = 0;
            arrCTsort[i].QuaThoiGian = 0;
            arrCTsort[i].SoPhutThucHien = arrCTsort[i].SoPhutThucHien === null ? 0 : arrCTsort[i].SoPhutThucHien;

            if (arrCTsort[i].LaHangHoa === false && arrCTsort[i].ThoiGianHoanThanh !== null) {
                arrCTsort[i].TimeStart = moment(dtStart).format('HH:mm');
                // tinh so phut da dung
                let daSD = getMinutesBetweenDates(dtStart, new Date());
                let conlai = arrCTsort[i].SoPhutThucHien - daSD;
                if (conlai > 0) {
                    arrCTsort[i].TimeRemain = conlai;// thoigian (setup) - thoigian(used)
                    arrCTsort[i].QuaThoiGian = 0;
                }
                else {
                    arrCTsort[i].TimeRemain = 0;
                    arrCTsort[i].QuaThoiGian = conlai;
                }
                arrCTsort[i].ThoiGianThucHien = arrCTsort[i].SoPhutThucHien;// assign ThoiGianThucHien = SoPhuThucHie (setup) --> bind in list SoDo
            }
            arrCTsort[i].ThoiGian = moment(dtStart).format('YYYY-MM-DD HH:mm');
            // lo hang
            let quanLiTheoLo = false;
            let idLoHang = arrCTsort[i].ID_LoHang;
            if (idLoHang !== null && idLoHang !== '00000000-0000-0000-0000-000000000000') {
                quanLiTheoLo = true;
            }
            arrCTsort[i].QuanLyTheoLoHang = quanLiTheoLo;
            arrCTsort[i].DM_LoHang = [];
            arrCTsort[i].ID_LoHang = idLoHang;
            arrCTsort[i].LotParent = quanLiTheoLo;
            // PhiDichVu, LaPTPhiDichVu (get from DB store)
            arrCTsort[i].TongPhiDichVu = arrCTsort[i].SoLuong * arrCTsort[i].PhiDichVu;
            if (arrCTsort[i].LaPTPhiDichVu) {
                arrCTsort[i].TongPhiDichVu = Math.round(arrCTsort[i].SoLuong * arrCTsort[i].GiaBan / 100);
            }
            // check exist in cacheCTHD
            if ($.inArray(arrCTsort[i].ID_DonViQuiDoi, arrIDQuiDoi) === -1) {
                arrIDQuiDoi.unshift(arrCTsort[i].ID_DonViQuiDoi);
                arrCTsort[i].IDRandom = CreateIDRandom('CTHD_');
                if (quanLiTheoLo) {
                    let objLot = newHangHoa(arrCTsort[i], hd, false);
                    arrCTsort[i].DM_LoHang.push(objLot);
                }
                // USE FOR SPA (add BH_NhanVienThucHien)
                var nvThuHienOld = arrCTsort[i].BH_NhanVienThucHien;
                // remove BH_NhanVienThucHien old, and add again
                arrCTsort[i].BH_NhanVienThucHien = [];
                if (nvThuHienOld !== null) {
                    let lstNV_TH = '';
                    let lstNV_TV = '';
                    let lstNV_TH_Print = '';
                    let lstNV_TV_Print = '';
                    for (let j = 0; j < nvThuHienOld.length; j++) {
                        let itemFor = nvThuHienOld[j];
                        let isNVThucHien = itemFor.ThucHien_TuVan;
                        let tienCK = itemFor.TienChietKhau;
                        let gtriPtramCK = itemFor.PT_ChietKhau;
                        let isPTram = gtriPtramCK > 0 ? true : false;
                        let gtriCK_TH = 0;
                        let gtriCK_TV = 0;
                        let tacVu = 1;
                        let ckMacDinh = gtriPtramCK;
                        if (isNVThucHien) {
                            if (itemFor.TheoYeuCau) {
                                tacVu = 3;  // thuchien theo yeucau
                            }
                            else {
                                tacVu = 1;
                            }
                            if (isPTram) {
                                gtriCK_TH = gtriPtramCK;
                                lstNV_TH += itemFor.TenNhanVien + ' (' + gtriCK_TH + ' %), ';
                            }
                            else {
                                gtriCK_TH = tienCK;
                                lstNV_TH += itemFor.TenNhanVien + ' (' + formatNumber3Digit(gtriCK_TH) + ' đ), ';
                                ckMacDinh = tienCK / itemFor.HeSo / arrCTsort[i].SoLuong;
                            }
                            lstNV_TH_Print += itemFor.TenNhanVien + ', ';
                        }
                        else {
                            tacVu = 2;
                            if (isPTram) {
                                gtriCK_TV = gtriPtramCK;
                                lstNV_TV += itemFor.TenNhanVien + ' (' + gtriCK_TV + ' %), ';
                            }
                            else {
                                gtriCK_TV = tienCK;
                                lstNV_TV += itemFor.TenNhanVien + ' (' + formatNumber3Digit(gtriCK_TV) + ' đ), ';
                                ckMacDinh = tienCK / itemFor.HeSo / arrCTsort[i].SoLuong;
                            }
                            lstNV_TV_Print += itemFor.TenNhanVien + ', ';
                        }
                        let idRandom = CreateIDRandom('IDRandomCK_');
                        let itemNV = {
                            IDRandom: idRandom,
                            ID_NhanVien: itemFor.ID_NhanVien,
                            TenNhanVien: itemFor.TenNhanVien,
                            ThucHien_TuVan: isNVThucHien,
                            TienChietKhau: tienCK,
                            PT_ChietKhau: gtriPtramCK,
                            TheoYeuCau: false,
                            TacVu: tacVu,
                            HeSo: itemFor.HeSo,
                            ChietKhauMacDinh: ckMacDinh,
                            TinhChietKhauTheo: itemFor.TinhChietKhauTheo,
                        };
                        arrCTsort[i].BH_NhanVienThucHien.push(itemNV);
                    }
                    // to do assign GhiChu_NVThucHien
                    arrCTsort[i].GhiChu_NVThucHien = (lstNV_TH === '' ? '' : 'Thực hiện: ' + Remove_LastComma(lstNV_TH));
                    arrCTsort[i].GhiChu_NVTuVan = (lstNV_TV === '' ? '' : 'Tư vấn: ' + Remove_LastComma(lstNV_TV));
                    arrCTsort[i].GhiChu_NVThucHienPrint = (lstNV_TH_Print === '' ? '' : Remove_LastComma(lstNV_TH_Print));
                    arrCTsort[i].GhiChu_NVTuVanPrint = (lstNV_TV_Print === '' ? '' : Remove_LastComma(lstNV_TV_Print));
                }
                else {
                    arrCTsort[i].GhiChu_NVTuVan = ''
                    arrCTsort[i].GhiChu_NVTuVanPrint = '';
                    arrCTsort[i].GhiChu_NVThucHien = '';
                    arrCTsort[i].GhiChu_NVThucHienPrint = '';
                }
                // assign TP_DinhLuong for CTHD
                if (arrCTsort[i].ThanhPhan_DinhLuong !== null && arrCTsort[i].ThanhPhan_DinhLuong !== undefined) {
                    for (let k = 0; k < arrCTsort[i].ThanhPhan_DinhLuong.length; k++) {
                        let tpDL = arrCTsort[i].ThanhPhan_DinhLuong[k];
                        arrCTsort[i].ThanhPhan_DinhLuong[k].STT = k + 1;
                        arrCTsort[i].ThanhPhan_DinhLuong[k].isDefault = false;
                        arrCTsort[i].ThanhPhan_DinhLuong[k].IDRandom = CreateIDRandom('TPDL_');
                        arrCTsort[i].ThanhPhan_DinhLuong[k].SoLuongQuyCach = tpDL.SoLuong * tpDL.QuyCach;
                        arrCTsort[i].ThanhPhan_DinhLuong[k].SoLuongMacDinh = 1 / arrCTsort[i].SoLuong;
                        arrCTsort[i].ThanhPhan_DinhLuong[k].GiaVonAfter = tpDL.SoLuong * tpDL.GiaVon;
                    }
                }
                else {
                    arrCTsort[i].ThanhPhan_DinhLuong = [];
                }
                cacheCTHD.push(arrCTsort[i]);
            }
            else {
                // find in cacheCTHD with same ID_QuiDoi
                for (let j = 0; j < cacheCTHD.length; j++) {
                    if (cacheCTHD[j].MaHoaDon === maHoaDon && cacheCTHD[j].ID_DonViQuiDoi === arrCTsort[i].ID_DonViQuiDoi) {
                        if (quanLiTheoLo) {
                            // push DM_Lo
                            let objLot = newHangHoa(arrCTsort[i], hd, false);
                            objLot.ID = arrCTsort[i].ID;// used to update ViTri for CTHD
                            objLot.LotParent = false;
                            objLot.IDRandom = CreateIDRandom('DMLo_');
                            cacheCTHD[j].DM_LoHang.push(objLot);
                        }
                        else {
                            arrCTsort[i].IDRandomHD = idRandomHD;
                            arrCTsort[i].IDRandom = CreateIDRandom('RandomCT');
                            arrCTsort[i].LaConCungLoai = true;
                            arrCTsort[i].GhiChu_NVTuVan = ''
                            arrCTsort[i].GhiChu_NVTuVanPrint = '';
                            arrCTsort[i].GhiChu_NVThucHien = '';
                            arrCTsort[i].GhiChu_NVThucHienPrint = '';
                            arrCTsort[i].ThanhPhan_DinhLuong = [];
                            cacheCTHD[j].HangCungLoais.push(arrCTsort[i]);
                        }
                        break;
                    }
                }
            }
        }
        // sort CTHD by SoThuTu desc
        cacheCTHD = cacheCTHD.sort(function (a, b) {
            var x = a.SoThuTu, y = b.SoThuTu;
            return x < y ? 1 : x > y ? -1 : 0;
        });
        return cacheCTHD;
    }
    function SetDefaultPropertierCTHD(itemCT) {
        itemCT.ThuocTinh_GiaTri = '';
        var itemHH = $.grep(self.HangHoaAll(), function (x) {
            return x.ID_DonViQuiDoi === itemCT.ID_DonViQuiDoi;
        });
        if (itemHH.length > 0) {
            itemCT.ThuocTinh_GiaTri = itemHH[0].ThuocTinh_GiaTri;
            itemCT.TonKho = itemHH[0].TonKho;
        }
        itemCT.IsKhuyenMai = false;
        itemCT.IsOpeningKMai = false;
        itemCT.TenKhuyenMai = '';
        itemCT.HangHoa_KM = [];
        itemCT.DiemKhuyenMai = 0;
        itemCT.GhiChu_NVThucHien = '';
        itemCT.BH_NhanVienThucHien = [];
        itemCT.GhiChu_NVTuVan = '';
        itemCT.GhiChu_NVThucHienPrint = ''; // used to printHoaDon (not show %ChietKhau)
        itemCT.GhiChu_NVTuVanPrint = '';
        itemCT.ListDonViTinh = [];
        itemCT.ShowWarningQuyCach = false;
        itemCT.SoLuongQuyCach = 0;
        itemCT.HangCungLoais = [];
        itemCT.LaConCungLoai = false;
        itemCT.ID_ViTri = null;
        itemCT.TenViTri = '';
        itemCT.TimeStart = 0;
        itemCT.QuaThoiGian = 0;
        itemCT.TimeRemain = 0;
        itemCT.ThoiGianThucHien = 0;
        itemCT.ThoiGian = moment(new Date()).format('YYYY-MM-DD HH:mm');
        return itemCT;
    }
    function CountTableUsed() {
        var totalTable = self.AllPhongBans().length;
        var ctHaveViTri = [];
        var arrID = [];
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0, k = lstCTHD.length; i < k; i++) {
                if (lstCTHD[i].ID_ViTri !== null) {
                    ctHaveViTri.push(lstCTHD[i]);
                }
                // find in HangCungLoai
                for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                    if (lstCTHD[i].HangCungLoais[j].ID_ViTri !== null) {
                        ctHaveViTri.push(lstCTHD[i].HangCungLoais[j]);
                    }
                }
                // find in DMLoHang
                for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                    if (lstCTHD[i].DM_LoHang[j].ID_ViTri !== null) {
                        ctHaveViTri.push(lstCTHD[i].DM_LoHang[j]);
                    }
                }
            }
        }
        // find in cthd
        for (let i = 0; i < ctHaveViTri.length; i++) {
            if ($.inArray(ctHaveViTri[i].ID_ViTri, arrID) === -1) {
                arrID.push(ctHaveViTri[i].ID_ViTri);
            }
        }
        var ctDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
        if (ctDoiTra !== null) {
            ctDoiTra = JSON.parse(ctDoiTra);
            ctHaveViTri = [];// reset & push again
            for (let i = 0, k = ctDoiTra.length; i < k; i++) {
                if (ctDoiTra[i].ID_ViTri !== null) {
                    ctHaveViTri.push(ctDoiTra[i]);
                }
                // find in HangCungLoai
                for (let j = 0; j < ctDoiTra[i].HangCungLoais.length; j++) {
                    if (ctDoiTra[i].HangCungLoais[j].ID_ViTri !== null) {
                        ctHaveViTri.push(ctDoiTra[i].HangCungLoais[j]);
                    }
                }
                // find in DMLoHang
                for (let j = 0; j < ctDoiTra[i].DM_LoHang.length; j++) {
                    if (ctDoiTra[i].DM_LoHang[j].ID_ViTri !== null) {
                        ctHaveViTri.push(ctDoiTra[i].DM_LoHang[j]);
                    }
                }
            }
            // find in cthd_doitra
            for (let i = 0; i < ctHaveViTri.length; i++) {
                if ($.inArray(ctHaveViTri[i].ID_ViTri, arrID) === -1) {
                    arrID.push(ctHaveViTri[i].ID_ViTri);
                }
            }
        }
        var countUsed = arrID.length;
        self.NumberTableUsed(countUsed);
        self.NumberTableEmpty(totalTable - countUsed);
    }
    function Add_NewProperties_CTHD() {
        var lstHDLe = localStorage.getItem(lcListHD);
        var lstCTHDLe = localStorage.getItem(lcListCTHD);
        if (lstHDLe !== null) {
            lstHDLe = JSON.parse(lstHDLe);
            if (lstCTHDLe !== null) {
                lstCTHDLe = JSON.parse(lstCTHDLe);
                for (let i = 0; i < lstCTHDLe.length; i++) {
                    if (lstCTHDLe[i].HangCungLoais === undefined) {
                        lstCTHDLe[i].HangCungLoais = [];
                        lstCTHDLe[i].LaConCungLoai = false;
                        lstCTHDLe[i].ChatLieu = '';
                    }
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHDLe));
            }
        }
    };
    function getListHoaDonLe() {
        var createHDfrom = parseInt(localStorage.getItem('createHDfrom'));
        var lstHDLe = localStorage.getItem(lcListHD);
        var lstCTHDLe = localStorage.getItem(lcListCTHD);
        if (lstHDLe !== null) {
            lstHDLe = JSON.parse(lstHDLe);
        }
        else {
            lstHDLe = [];
        }
        if (lstCTHDLe !== null) {
            lstCTHDLe = JSON.parse(lstCTHDLe);
        }
        else {
            lstCTHDLe = [];
        }

        var idRandomHD = CreateIDRandom('HD_');
        var mahoadon = '';
        var hdExist = [];
        let loadimglc = true;
        switch (createHDfrom) {
            case 1: // copy Dat Hang
                var lcCopyDatHang = localStorage.getItem('lcCopyDatHang');
                if (lcCopyDatHang !== null) {
                    lcCopyDatHang = JSON.parse(lcCopyDatHang);
                    mahoadon = 'Copy' + lcCopyDatHang.MaHoaDon;
                    _maHoaDon = mahoadon;
                    localStorage.setItem(lcMaHD, mahoadon);

                    // vi cache SaoChep chỉ lưu 1 phần tử, nên find lcCopyDatHang
                    hdExist = $.grep(lstHDLe, function (x) {
                        return x.MaHoaDon === mahoadon && x.NguoiTao === userLogin;
                    });
                    if (hdExist.length > 0) {
                        idRandomHD = hdExist[0].IDRandom;
                    }
                    else {
                        lcCopyDatHang.MaHoaDon = mahoadon;
                        lcCopyDatHang.IDRandom = idRandomHD;
                        lcCopyDatHang.NguoiTao = userLogin;// save NguoiTao to do check when Delete_whenTimeout
                        lcCopyDatHang.ID = const_GuidEmpty;
                        lstHDLe.push(lcCopyDatHang);
                        localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));
                    }
                    if (hdExist.length === 0) {
                        // add ctDatHang to cthd
                        let lcCTDatHangCopy = localStorage.getItem('lcCTDatHangCopy');
                        if (lcCTDatHangCopy !== null) {
                            lcCTDatHangCopy = JSON.parse(lcCTDatHangCopy);
                            for (let i = 0; i < lcCTDatHangCopy.length; i++) {
                                lcCTDatHangCopy[i].MaHoaDon = mahoadon;
                                lcCTDatHangCopy[i].IDRandomHD = idRandomHD;
                                // update MaHoaDon for DM_LoHang in cache CTDatHang
                                for (let j = 0; j < lcCTDatHangCopy[i].DM_LoHang.length; j++) {
                                    lcCTDatHangCopy[i].DM_LoHang[j].MaHoaDon = mahoadon;
                                    lcCTDatHangCopy[i].DM_LoHang[j].IDRandomHD = idRandomHD;
                                }
                                for (let j = 0; j < lcCTDatHangCopy[i].HangCungLoais.length; j++) {
                                    lcCTDatHangCopy[i].HangCungLoais[j].MaHoaDon = mahoadon;
                                    lcCTDatHangCopy[i].HangCungLoais[j].IDRandomHD = idRandomHD;
                                }
                                for (let j = 0; j < lcCTDatHangCopy[i].ThanhPhanComBo.length; j++) {
                                    lcCTDatHangCopy[i].ThanhPhanComBo[j].MaHoaDon = mahoadon;
                                    lcCTDatHangCopy[i].ThanhPhanComBo[j].IDRandomHD = idRandomHD;
                                }
                                lstCTHDLe.push(lcCTDatHangCopy[i]);
                            }
                            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHDLe));
                        }
                    }

                    localStorage.removeItem('lcCopyDatHang');
                    localStorage.removeItem('lcCTDatHangCopy');
                }
                break;
            case 2: // Xu li Dat Hang
                var lcXuLiDatHang = localStorage.getItem(lcXuLiDonHang_Const);
                if (lcXuLiDatHang !== null) {
                    lcXuLiDatHang = JSON.parse(lcXuLiDatHang);// chi xoa cache sau khi luu hoadon

                    // find hddathang dang xuly (vi co the xu ly nhieu hoa don cung luc)
                    let itemXuLi = $.grep(lcXuLiDatHang, function (item) {
                        return item.Status === 1;
                    });
                    if (itemXuLi.length > 0) {
                        mahoadon = itemXuLi[0].MaHoaDon;
                        localStorage.setItem(lcMaHD, mahoadon);

                        // check exist in hd
                        hdExist = $.grep(lstHDLe, function (x) {
                            return x.MaHoaDon === mahoadon && x.NguoiTao === userLogin;
                        });
                        if (hdExist.length > 0) {
                            idRandomHD = hdExist[0].IDRandom;
                            // delete all CTHD with MaHD DatHang
                            lstCTHDLe = $.grep(lstCTHDLe, function (item) {
                                return item.IDRandomHD !== idRandomHD;
                            });
                        }
                        else {
                            itemXuLi[0].IDRandom = idRandomHD;
                            itemXuLi[0].NguoiTao = userLogin;
                            lstHDLe.push(itemXuLi[0]);
                            localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));
                        }

                        let ctXuLy = localStorage.getItem(lcCTDatHang_Const);
                        if (ctXuLy !== null) {
                            ctXuLy = JSON.parse(ctXuLy);
                            // find ctDatHang dangxuly
                            ctXuLy = $.grep(ctXuLy, function (x) {
                                return x.MaHoaDon === mahoadon;
                            });
                            // add to cthd
                            for (let i = 0; i < ctXuLy.length; i++) {
                                ctXuLy[i].IDRandomHD = idRandomHD;
                                for (let j = 0; j < ctXuLy[i].DM_LoHang.length; j++) {
                                    ctXuLy[i].DM_LoHang[j].IDRandomHD = idRandomHD;
                                }
                                for (let j = 0; j < ctXuLy[i].HangCungLoais.length; j++) {
                                    ctXuLy[i].HangCungLoais[j].IDRandomHD = idRandomHD;
                                }
                                for (let j = 0; j < ctXuLy[i].ThanhPhanComBo.length; j++) {
                                    ctXuLy[i].ThanhPhanComBo[j].IDRandomHD = idRandomHD;
                                }
                                lstCTHDLe.push(ctXuLy[i]);
                            }
                            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHDLe));
                        }

                        // update again status Status = 0 to cache dangxuly (1.dang chon xuly, 0.nguoclai)
                        for (let i = 0; i < lcXuLiDatHang.length; i++) {
                            if (lcXuLiDatHang[i].MaHoaDon === mahoadon) {
                                lcXuLiDatHang[i].IDRandom = idRandomHD;
                                lcXuLiDatHang[i].Status = 0;
                                break;
                            }
                        }
                        localStorage.setItem(lcXuLiDonHang_Const, JSON.stringify(lcXuLiDatHang));
                    }
                    else {
                        localStorage.removeItem(lcXuLiDonHang_Const);
                        localStorage.removeItem(lcCTDatHang_Const);
                    }
                }
                break;
            case 3: // Sao Chep HD
            case 6: // Sao Chep GDV
            case 7: // update HDTamLuu
            case 8: // update HD was save
            case 9:// hoadon baohanh
                var lcHDSaoChep = localStorage.getItem('lcHDSaoChep');
                if (lcHDSaoChep !== null) {
                    lcHDSaoChep = JSON.parse(lcHDSaoChep);
                    let idHD = const_GuidEmpty;

                    switch (createHDfrom) {
                        case 7:
                        case 8:
                            mahoadon = lcHDSaoChep.MaHoaDon;
                            idHD = lcHDSaoChep.ID;// keep ID used to update HD
                            lcHDSaoChep.PhaiThanhToan = lcHDSaoChep.DaThanhToan; // số tiền còn lại phaiTT

                            hdExist = $.grep(lstHDLe, function (x) {
                                return x.MaHoaDon === mahoadon;// cap nhat HDTanLuu of other user
                            });
                            for (let i = 0; i < lstHDLe.length; i++) {
                                if (lstHDLe[i].MaHoaDon === mahoadon) {
                                    lstHDLe[i].NguoiTao = userLogin;// phải gán lại userlogin hiện tại
                                    lstHDLe[i].Status = 1;
                                    break;
                                }
                            }
                            loadimglc = false;
                            vmUpAnhHoaDon.GetListImgInvoiceDB(idHD, idRandomHD);
                            break;
                        case 3:
                        case 6:
                            mahoadon = 'Copy' + lcHDSaoChep.MaHoaDon;
                            hdExist = $.grep(lstHDLe, function (x) {
                                return x.MaHoaDon === mahoadon && x.NguoiTao === userLogin;
                            });
                            break;
                        case 9:// hdbaohanh
                            mahoadon = nameHD_BaoHanh + (GetMax_MaHoaDon(2, lstHDLe) + 1);
                            hdExist = $.grep(lstHDLe, function (x) {
                                return x.MaHoaDon === lcHDSaoChep.MaHoaDon && x.NguoiTao === userLogin
                                    && x.LoaiHoaDon === 2;
                            });
                            break;
                    }

                    if (hdExist.length > 0) {
                        mahoadon = hdExist[0].MaHoaDon;
                        idRandomHD = hdExist[0].IDRandom;
                    }
                    else {
                        if (createHDfrom === 8) {
                            lcHDSaoChep.NgayLapHoaDon = moment(lcHDSaoChep.NgayLapHoaDon).format('YYYY-MM-DD HH:mm'); // update HD --> keep ngay old
                        }
                        else {
                            lcHDSaoChep.NgayLapHoaDon = null;// assign = null --> auto update time at BanLe (call func timer())
                        }
                        lcHDSaoChep.MaHoaDon = mahoadon;
                        lcHDSaoChep.IDRandom = idRandomHD;
                        lcHDSaoChep.NguoiTao = userLogin;// save NguoiTao to do check when Delete_whenTimeout
                        lcHDSaoChep.ID = idHD;
                        lstHDLe.push(lcHDSaoChep);
                    }
                    localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));

                    if (hdExist.length === 0) {
                        // add again CTHD SaoChep 
                        let lcCTHDSaoChep = localStorage.getItem('lcCTHDSaoChep');
                        if (lcCTHDSaoChep !== null) {
                            lcCTHDSaoChep = JSON.parse(lcCTHDSaoChep);
                            for (let i = 0; i < lcCTHDSaoChep.length; i++) {
                                lcCTHDSaoChep[i].MaHoaDon = mahoadon;
                                lcCTHDSaoChep[i].IDRandomHD = idRandomHD;
                                lcCTHDSaoChep[i].ThoiGianThucHien = lcCTHDSaoChep[i].SoPhutThucHien === null ? 0 : lcCTHDSaoChep[i].SoPhutThucHien;

                                // update DM_LoHang for lcCTHDSaoChep
                                for (let j = 0; j < lcCTHDSaoChep[i].DM_LoHang.length; j++) {
                                    lcCTHDSaoChep[i].DM_LoHang[j].MaHoaDon = mahoadon;
                                    lcCTHDSaoChep[i].DM_LoHang[j].IDRandomHD = idRandomHD;
                                }
                                // update IDRandomHD for HangCungLoai
                                for (let j = 0; j < lcCTHDSaoChep[i].HangCungLoais.length; j++) {
                                    lcCTHDSaoChep[i].HangCungLoais[j].MaHoaDon = mahoadon;
                                    lcCTHDSaoChep[i].HangCungLoais[j].IDRandomHD = idRandomHD;
                                }
                                for (let j = 0; j < lcCTHDSaoChep[i].ThanhPhanComBo.length; j++) {
                                    lcCTHDSaoChep[i].ThanhPhanComBo[j].MaHoaDon = mahoadon;
                                    lcCTHDSaoChep[i].ThanhPhanComBo[j].IDRandomHD = idRandomHD;
                                }
                                lstCTHDLe.push(lcCTHDSaoChep[i]);
                            }
                            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHDLe));
                        }

                        // check khuyenmai hanghoa theo hoadon
                        let kmHoaDon = localStorage.getItem(lcProductKM_HoaDon);
                        if (kmHoaDon !== null) {
                            kmHoaDon = JSON.parse(kmHoaDon);
                            for (let i = 0; i < kmHoaDon.length; i++) {
                                if (kmHoaDon[i].MaHoaDon === mahoadon) {
                                    kmHoaDon[i].IDRandomHD = idRandomHD;
                                }
                            }
                            localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(kmHoaDon));
                        }
                    }

                    localStorage.removeItem('lcHDSaoChep');
                    localStorage.removeItem('lcCTHDSaoChep');

                    _maHoaDon = mahoadon;
                    localStorage.setItem(lcMaHD, mahoadon);
                }
                break;
            case 4: // Sao Chep Tra Hang
                var lcHDTHSaoChep = localStorage.getItem('lcHDTHSaoChep');
                if (lcHDTHSaoChep !== null) {
                    lcHDTHSaoChep = JSON.parse(lcHDTHSaoChep);
                    mahoadon = 'Copy' + lcHDTHSaoChep.MaHoaDon;
                    _maHoaDon = mahoadon;
                    localStorage.setItem(lcMaHD, mahoadon);

                    hdExist = $.grep(lstHDLe, function (x) {
                        return x.MaHoaDon === mahoadon && x.NguoiTao === userLogin;
                    })
                    if (hdExist.length > 0) {
                        idRandomHD = hdExist[0].IDRandom;
                    }
                    else {
                        lcHDTHSaoChep.MaHoaDon = mahoadon;
                        lcHDTHSaoChep.IDRandom = idRandomHD;
                        lcHDTHSaoChep.NguoiTao = userLogin;// save NguoiTao to do check when Delete_whenTimeout
                        lcHDTHSaoChep.ID = const_GuidEmpty;
                        lstHDLe.push(lcHDTHSaoChep);
                        localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));
                    }
                    if (hdExist.length === 0) {
                        // add to CTHD 
                        let lcCTHDTHSaoChep = localStorage.getItem('lcCTHDTHSaoChep');
                        if (lcCTHDTHSaoChep !== null) {
                            lcCTHDTHSaoChep = JSON.parse(lcCTHDTHSaoChep);
                            for (let i = 0; i < lcCTHDTHSaoChep.length; i++) {
                                lcCTHDTHSaoChep[i].MaHoaDon = mahoadon;
                                lcCTHDTHSaoChep[i].IDRandomHD = idRandomHD;
                                for (let j = 0; j < lcCTHDTHSaoChep[i].DM_LoHang.length; j++) {
                                    lcCTHDTHSaoChep[i].DM_LoHang[j].MaHoaDon = mahoadon;
                                    lcCTHDTHSaoChep[i].DM_LoHang[j].IDRandomHD = idRandomHD;
                                }
                                for (let j = 0; j < lcCTHDTHSaoChep[i].HangCungLoais.length; j++) {
                                    lcCTHDTHSaoChep[i].HangCungLoais[j].MaHoaDon = mahoadon;
                                    lcCTHDTHSaoChep[i].HangCungLoais[j].IDRandomHD = idRandomHD;
                                }
                                for (let j = 0; j < lcCTHDTHSaoChep[i].ThanhPhanComBo.length; j++) {
                                    lcCTHDTHSaoChep[i].ThanhPhanComBo[j].MaHoaDon = mahoadon;
                                    lcCTHDTHSaoChep[i].ThanhPhanComBo[j].IDRandomHD = idRandomHD;
                                }
                                lstCTHDLe.push(lcCTHDTHSaoChep[i]);
                            }
                            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHDLe));
                        }
                    }

                    localStorage.removeItem('lcHDTHSaoChep');
                    localStorage.removeItem('lcCTHDTHSaoChep');
                }
                break;
            case 5: // XuatBan from NhapHang
                var lcHDNhapHang = localStorage.getItem('lcHDForNH');
                if (lcHDNhapHang !== null) {
                    lcHDNhapHang = JSON.parse(lcHDNhapHang);
                    // awlay add newHoaDon
                    let countHD = GetMax_MaHoaDon(1, lstHDLe) + 1;
                    mahoadon = nameHD_InsertBH + countHD;
                    lcHDNhapHang.NgayLapHoaDon = null;
                    lcHDNhapHang.MaHoaDon = mahoadon;
                    lcHDNhapHang.IDRandom = idRandomHD;
                    lcHDNhapHang.ID_NhanVien = _idNhanVien; // assign again idnhanvien
                    lcHDNhapHang.NguoiTao = userLogin;
                    lcHDNhapHang.ID = const_GuidEmpty;
                    lstHDLe.push(lcHDNhapHang);
                    localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));

                    // push to cthd
                    let lcCTNhapHang = localStorage.getItem('lcCTHDForNH');
                    if (lcCTNhapHang !== null) {
                        lcCTNhapHang = JSON.parse(lcCTNhapHang);
                        for (let i = 0; i < lcCTNhapHang.length; i++) {
                            lcCTNhapHang[i].MaHoaDon = mahoadon;
                            lcCTNhapHang[i].IDRandomHD = idRandomHD;
                            // update DM_LoHang for lcCTNhapHang
                            for (let j = 0; j < lcCTNhapHang[i].DM_LoHang.length; j++) {
                                lcCTNhapHang[i].DM_LoHang[j].MaHoaDon = mahoadon;
                                lcCTNhapHang[i].DM_LoHang[j].IDRandomHD = idRandomHD;
                            }
                            // update DM_LoHang for lcCTNhapHang
                            for (let j = 0; j < lcCTNhapHang[i].HangCungLoais.length; j++) {
                                lcCTNhapHang[i].HangCungLoais[j].MaHoaDon = mahoadon;
                                lcCTNhapHang[i].HangCungLoais[j].IDRandomHD = idRandomHD;
                            }
                            lstCTHDLe.push(lcCTNhapHang[i]);
                        }
                        localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHDLe));
                    }
                    _maHoaDon = mahoadon;
                    localStorage.setItem(lcMaHD, mahoadon);

                    localStorage.removeItem('lcHDForNH');
                    localStorage.removeItem('lcCTHDForNH');
                }
                break;
            default:
                // get maHD from cache
                break;
        }
        localStorage.removeItem('createHDfrom');
        Add_NewProperties_CTHD();
        BindHD_CTHDafterSave();
        ShowDivDefault();
        Bind_CTHĐoiTra_afterHideColumn();
        Call_6Func(true);
        //vmUpAnhHoaDon.InvoiceChosing.IDRandomHD = self.HoaDons().IDRandom();
        //if (loadimglc) {
        //    vmUpAnhHoaDon.GetListImgInvoiceLC();
        //}
        console.log("getListHoaDonLe");
        $('#ddlDMChungTus').removeAttr('disabled');
    }

    // tinh so luong hang mua --> show at header
    function Caculator_AmountProduct() {
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            if (_maHoaDon === '') {
                _maHoaDon = $('.bill-bxslide li.using font').text();
            }
            // find hd opening--> get IDRandom
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                var itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
                var sumQuantity = 0;
                var sumProduct = 0;
                if (itemEx.length > 0) {
                    var arrCTHDopen = $.grep(lstCTHD, function (x) {
                        return x.IDRandomHD === itemEx[0].IDRandom;
                    });
                    if (arrCTHDopen.length > 0) {
                        sumProduct = arrCTHDopen.length;
                        for (let i = 0; i < arrCTHDopen.length; i++) {
                            sumQuantity += parseFloat(arrCTHDopen[i].SoLuong);
                            // count HH Khuyen mai of Hang hoa
                            for (let j = 0; j < arrCTHDopen[i].HangHoa_KM.length; j++) {
                                sumQuantity += parseFloat(arrCTHDopen[i].HangHoa_KM[j].SoLuong);
                                sumProduct += 1;
                            }
                            // count Lot in Hang hoa
                            for (let k = 1; k < arrCTHDopen[i].DM_LoHang.length; k++) {
                                sumQuantity += parseFloat(arrCTHDopen[i].DM_LoHang[k].SoLuong);
                            }
                            // count hangcungloai
                            for (let k = 0; k < arrCTHDopen[i].HangCungLoais.length; k++) {
                                sumQuantity += parseFloat(arrCTHDopen[i].HangCungLoais[k].SoLuong);
                            }
                        }
                    }
                    // count HH Khuyen mai of  Hoa don
                    var lstKM_ProductHD = localStorage.getItem(lcProductKM_HoaDon);
                    if (lstKM_ProductHD !== null) {
                        lstKM_ProductHD = JSON.parse(lstKM_ProductHD);
                        lstKM_ProductHD = $.grep(lstKM_ProductHD, function (x) {
                            return x.IDRandomHD === itemEx[0].IDRandom;
                        });
                        for (let i = 0; i < lstKM_ProductHD.length; i++) {
                            sumQuantity += parseFloat(lstKM_ProductHD[i].SoLuong);
                            sumProduct += 1;
                        }
                    }
                }
                // round number to 3 decimals (OK)
                var numberRound = Math.round(sumQuantity * 1000) / 1000;
                self.SumQuantity(numberRound);
                self.SumProduct(sumProduct);
            }
            else {
                self.SumQuantity(0);
                self.SumProduct(0);
            }
        }
    }

    function CheckQuyenExist(maquyen) {
        var role = $.grep(self.Quyen_NguoiDung(), function (x) {
            return x.MaQuyen === maquyen;
        });
        return role.length > 0;
    }

    // update GiaVon for CTHD, CTHD_DoiTra
    function Update_GiaVonCTHD_FirstLoad(cacheName) {
        var tinhGiaVonTB = self.ThietLap().GiaVonTrungBinh;
        if (!tinhGiaVonTB) {
            var lstCTHD = localStorage.getItem(cacheName);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                let li = lstCTHD.length;
                for (let i = 0; i < li; i++) {
                    var itemCTHD = lstCTHD[i];
                    // not update cache CTHD TraHang
                    if (itemCTHD.loaiHoaDon !== 6 || (cacheName === lcListCTHD_DoiTra && itemCTHD.loaiHoaDon === 6)) {
                        for (let j = 0; j < self.HangHoaAll().length; j++) {
                            var itemHH = self.HangHoaAll()[j];
                            if (itemCTHD.ID_DonViQuiDoi === self.HangHoaAll()[j].ID_DonViQuiDoi) {
                                var itemHH_Lo = $.grep(self.HangHoaAll(), function (x) {
                                    return x.ID_DonViQuiDoi === itemCTHD.ID_DonViQuiDoi;
                                });
                                if (itemHH.QuanLyTheoLoHang) {
                                    // update GiaVon for DM_Lo
                                    for (let k = 0; k < itemCTHD.DM_LoHang.length; k++) {
                                        if (itemCTHD.DM_LoHang[k].LotParent) {
                                            lstCTHD[i].GiaVon = itemHH.GiaVon;
                                        }
                                        var itemHH_Lo2 = $.grep(itemHH_Lo, function (x) {
                                            return x.ID_LoHang === itemCTHD.DM_LoHang[k].ID_LoHang;
                                        });
                                        if (itemHH_Lo2.length > 0) {
                                            lstCTHD[i].DM_LoHang[k].GiaVon = itemHH_Lo2[0].GiaVon;
                                        }
                                    }
                                }
                                else {
                                    // dichVu: not update GiaVon (GiaVon Dvu =0)
                                    if (itemHH.LaHangHoa) {
                                        lstCTHD[i].GiaVon = itemHH.GiaVon;
                                    }
                                }
                                break;
                            }
                        }
                    }
                }
                localStorage.setItem(cacheName, JSON.stringify(lstCTHD));
            }
        }
    }

    async function GetTonKho_byIDQuyDoi(param) {
        let xx = await ajaxHelper(DMHangHoaUri + 'GetTonKho_byIDQuyDois', 'POST', param).done(function (x) { }).then(function (x) {
            if (x.res) return x.data;
            return [];
        }).fail(function () {
            return [];
        });
        return xx;
    }

    // update TonKho, warning, DM_LoHang (when join DM_Lo)
    function UpdateTonKhoCTHD_FirstLoad(cacheName) {
        var cthd = localStorage.getItem(cacheName);
        if (cthd != null) {
            cthd = JSON.parse(cthd);

            let arrIDHoaDon_update = [];
            let lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                arrIDHoaDon_update = $.grep(lstHD, function (x) {
                    return x.TrangThaiHD == 8
                }).map(function (o) {
                    return o.ID
                })
            }

            var loaiHD = 1;
            if (cthd.length > 0) {
                loaiHD = cthd[0].LoaiHoaDon;
            }
            var xuatAm = true;
            switch (loaiHD) {
                case 1:
                case 2:
                    xuatAm = self.ThietLap().XuatAm;
                    break;
                case 3:
                    xuatAm = self.ThietLap().DatHangXuatAm;
                    break;
            }

            let cthd_LaHH = $.grep(cthd, function (x) {
                return x.LaHangHoa;
            })
            let arrIDQuiDoi = $.unique(cthd_LaHH.map(function (x) {
                return x.ID_DonViQuiDoi;
            }).sort());

            let arrIDLoHang = cthd_LaHH.filter(o => o.QuanLyTheoLoHang).map(function (x) {
                return x.ID_LoHang;
            });

            // idquidoi of combo + tpdl
            for (let i = 0; i < cthd.length; i++) {
                let forOut = cthd[i];
                if (!commonStatisJs.CheckNull(forOut.ThanhPhanComBo) && forOut.ThanhPhanComBo.length > 0) {
                    for (let j = 0; j < forOut.ThanhPhanComBo.length; j++) {
                        let forIn = forOut.ThanhPhanComBo[j];
                        if (forIn.LoaiHangHoa === 1) {
                            arrIDQuiDoi.push(forIn.ID_DonViQuiDoi);
                            if (forIn.QuanLyTheoLoHang) {
                                arrIDLoHang.push(forIn.ID_LoHang);
                            }
                        }
                    }
                }

                if (!commonStatisJs.CheckNull(forOut.ThanhPhan_DinhLuong) && forOut.ThanhPhan_DinhLuong.length > 0) {
                    for (let j = 0; j < forOut.ThanhPhan_DinhLuong.length; j++) {
                        let forIn = forOut.ThanhPhan_DinhLuong[j];
                        if (forIn.LoaiHangHoa === 1) {
                            arrIDQuiDoi.push(forIn.ID_DonViQuiDoi);
                            if (forIn.QuanLyTheoLoHang) {
                                arrIDLoHang.push(forIn.ID_LoHang);
                            }
                        }
                    }
                }
            }

            arrIDLoHang = $.unique($.grep(arrIDLoHang, function (x) {
                return x !== null;
            }).sort());

            if (arrIDQuiDoi.length === 0) {
                return;
            }

            var param = {
                ID_ChiNhanh: id_DonVi,
                ToDate: moment(new Date()).format('YYYY-MM-DD HH:mm'),
                ListIDQuyDoi: arrIDQuiDoi,
                ListIDLoHang: arrIDLoHang,
            }
            ajaxHelper(DMHangHoaUri + 'GetTonKho_byIDQuyDois', 'POST', param).done(function (x) {
                if (x.res) {
                    let data = x.data;
                    for (let j = 0; j < cthd.length; j++) {
                        let forOut = cthd[j];
                        let isUpdate = false;
                        if ($.inArray(forOut.ID_HoaDon, arrIDHoaDon_update) > -1) {
                            isUpdate = true;
                        }
                        if (forOut.LaHangHoa) {
                            let dataDB = $.grep(data, function (o) {
                                return o.ID_DonViQuiDoi === forOut.ID_DonViQuiDoi
                                    && (!forOut.QuanLyTheoLoHang || (o.ID_LoHang === forOut.ID_LoHang))
                            });
                            if (dataDB.length > 0) {
                                cthd[j].TonKho = dataDB[0].TonKho + (isUpdate ? cthd[j].SoLuong : 0);
                            }
                            cthd[j].CssWarning = xuatAm === false && cthd[j].TonKho < forOut.SoLuong;

                            for (let k = 0; k < cthd[j].DM_LoHang.length; k++) {
                                let forIn = cthd[j].DM_LoHang[k];
                                let dataDB2 = $.grep(data, function (o) {
                                    return o.ID_DonViQuiDoi === forIn.ID_DonViQuiDoi
                                        && (!forIn.QuanLyTheoLoHang || (o.ID_LoHang === forIn.ID_LoHang))
                                });
                                if (dataDB2.length > 0) {
                                    cthd[j].DM_LoHang[k].TonKho = dataDB2[0].TonKho + (isUpdate ? cthd[j].DM_LoHang[k].SoLuong : 0);
                                }
                                cthd[j].DM_LoHang[k].CssWarning = xuatAm === false && cthd[j].DM_LoHang[k].TonKho < forIn.SoLuong;
                            }
                            for (let k = 0; k < cthd[j].HangCungLoais.length; k++) {
                                cthd[j].HangCungLoais[k].TonKho = cthd[j].TonKho;
                                cthd[j].HangCungLoais[k].CssWarning = cthd[j].CssWarning;
                            }

                            for (let k = 0; k < cthd[j].ThanhPhanComBo.length; k++) {
                                let forIn = cthd[j].ThanhPhanComBo[k];
                                let dataDB2 = $.grep(data, function (o) {
                                    return o.ID_DonViQuiDoi === forIn.ID_DonViQuiDoi
                                        && (!forIn.QuanLyTheoLoHang || (o.ID_LoHang === forIn.ID_LoHang))
                                });
                                if (dataDB2.length > 0) {
                                    cthd[j].ThanhPhanComBo[k].TonKho = dataDB2[0].TonKho + isUpdate ? cthd[j].ThanhPhanComBo[k].SoLuong : 0;
                                }
                                cthd[j].ThanhPhanComBo[k].CssWarning = xuatAm === false && cthd[j].ThanhPhanComBo[k].TonKho < forIn.SoLuong;
                            }
                        }

                        for (let k = 0; k < cthd[j].ThanhPhanComBo.length; k++) {
                            let forIn = cthd[j].ThanhPhanComBo[k];
                            let dataDB2 = $.grep(data, function (o) {
                                return o.ID_DonViQuiDoi === forIn.ID_DonViQuiDoi
                                    && (!forIn.QuanLyTheoLoHang || (o.ID_LoHang === forIn.ID_LoHang))
                            });
                            if (dataDB2.length > 0) {
                                cthd[j].ThanhPhanComBo[k].TonKho = dataDB2[0].TonKho + (isUpdate ? cthd[j].ThanhPhanComBo[k].SoLuong : 0);
                            }
                            cthd[j].ThanhPhanComBo[k].CssWarning = xuatAm === false && cthd[j].ThanhPhanComBo[k].TonKho < forIn.SoLuong;
                        }

                        for (let k = 0; k < cthd[j].ThanhPhan_DinhLuong.length; k++) {
                            let forIn = cthd[j].ThanhPhan_DinhLuong[k];
                            let dataDB2 = $.grep(data, function (o) {
                                return o.ID_DonViQuiDoi === forIn.ID_DonViQuiDoi
                                    && (!forIn.QuanLyTheoLoHang || (o.ID_LoHang === forIn.ID_LoHang))
                            });
                            if (dataDB2.length > 0) {
                                cthd[j].ThanhPhan_DinhLuong[k].TonKho = dataDB2[0].TonKho + (isUpdate ? cthd[j].ThanhPhan_DinhLuong[k].SoLuong : 0);
                            }
                            cthd[j].ThanhPhan_DinhLuong[k].CssWarning = xuatAm === false && cthd[j].ThanhPhan_DinhLuong[k].TonKho < forIn.SoLuong;
                        }
                    }
                    localStorage.setItem(cacheName, JSON.stringify(cthd));
                }
            })
        }
    }

    // if set XuatAm = false && loaiHD = 1: get products have TonKho > 0
    // if set DatHangXuatAm = false && loaiHD = 3: get products have TonKho > 0
    function LoadAgainHangHoa_IfNotXuatAm_FirstLoad() {
        var loaiHD = GetLoaiHoaDon_ofHDopening();
        var lstHH_haveTonKho = [];
        // check ThietLap: XuatAm|DatHangXuatAm
        //if (loaiHD === 1) {
        //    if (self.ThietLap().XuatAm === false) {
        //        lstHH_haveTonKho = $.grep(self.HangHoaOlds(), function (x) {
        //            return (x.TonKho > 0 && x.LaHangHoa) || x.LaHangHoa === false;
        //        });
        //    }
        //}
        //else {
        //    if (loaiHD === 3) {
        //        if (self.ThietLap().DatHangXuatAm === false) {
        //            lstHH_haveTonKho = $.grep(self.HangHoaOlds(), function (x) {
        //                return (x.TonKho > 0 && x.LaHangHoa) || x.LaHangHoa === false;
        //            });
        //        }
        //    }
        //}
        // check set from cache
        var itemEx = [];
        var lcSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lcSetPrint !== null) {
            lcSetPrint = JSON.parse(lcSetPrint);
            itemEx = $.grep(lcSetPrint, function (x) {
                return x.HideProduct === true;
            })
        }
        if (itemEx.length > 0 && loaiHD !== 6) {
            // tra hang: van hien thi hang co TonKho < 0
            lstHH_haveTonKho = $.grep(self.HangHoaOlds(), function (x) {
                return (x.TonKho > 0 && x.LaHangHoa) || x.LaHangHoa === false;
            });
        }
        //else {
        //    lstHH_haveTonKho = $.grep(self.HangHoaOlds(), function (x) {
        //        return x.DuocBanTrucTiep && x.TonKho;
        //    });
        //}
        // chi bind DS HangHoa dc ban truc tiep
        //self.HangHoaAll($.extend(true, [], lstHH_haveTonKho));
        //self.HangHoas($.extend(true, [], lstHH_haveTonKho));
        if (lstHH_haveTonKho.length > 0) {
            self.HangHoaAll($.extend(true, [], lstHH_haveTonKho));
            self.HangHoas($.extend(true, [], lstHH_haveTonKho));
        }
        else {
            self.HangHoaAll($.extend(true, [], self.HangHoaOlds()));
            self.HangHoas($.extend(true, [], self.HangHoaOlds()));
        }
        var lstHH_notLoHang = $.grep(self.HangHoaAll(), function (x) {
            return (x.QuanLyTheoLoHang === false || x.QuanLyTheoLoHang === null) && x.LaHangHoa === true;
        });
        self.HangHoaAll_notLoHang(lstHH_notLoHang);
        vm_HangHoa.reset(self.HangHoaAll());
        model_TH.reset(self.HangHoaAll());
        BindListHangHoa_ByPage();
    }
    var productLoadEnd = false;

    function getAllDMHangHoas() {
        // bán hàng: chỉ get lô đang được sử dụng (đã check TrangThai in store procedure)
        ajaxHelper(DM_HangHoaUri + "GetListHangHoas_QuyDoiNH_Anh_IEnumerable?iddonvi=" + id_DonVi, 'GET').done(function (data) {
            // show icon sort, next page after finished load hanghoa
            $('#divSort_NextHH').show();
            $('#thanhtoan').show();// div chinhanh: only show when online
            $('body').gridLoader({ show: false });
            productLoadEnd = true;
            if (data !== null) {
                self.HangHoaOlds(data);
                LoadAgainHangHoa_IfNotXuatAm_FirstLoad();

                // use when time load HangHoa  > time load Quyen_NguoiDung
                if (roleLoadEnd) {
                    CheckRole();
                    DeleteHD_CTHD_ifNotRole();
                    SubFunction_getAllDMHangHoas();
                }
            }
            $('#txtSearchHH').focus();
        });
    }

    function SubFunction_getAllDMHangHoas() {
        if (IsShop_SpaSalon()) {
            self.ClickTab_PhongBan(false, true);
        }
        else {
            Update_GiaVonCTHD_FirstLoad(lcListCTHD);
            Update_GiaVonCTHD_FirstLoad(lcListCTHD_DoiTra);
            getListHoaDonLe();
            ActiveTab_SoDoPhong(true);
        }
    }

    function UpdateGiaBanHangHoa_inList(lst) {
        // get giaban with banggia is chosing
        var arrGB = [];
        var idBangGia = self.selectedGiaBan();
        if (idBangGia !== null && idBangGia !== const_GuidEmpty) {
            arrGB = $.grep(self.AllBangGia(), function (item) {
                return item.ID === idBangGia;
            });
            if (arrGB.length > 0) {
                for (let i = 0; i < lst.length; i++) {
                    let itemGB = $.grep(arrGB[0].GiaBanChiTiet, function (x) {
                        return x.ID_DonViQuiDoi === lst[i].ID_DonViQuiDoi;
                    });
                    if (itemGB.length === 0) {
                        itemGB = $.grep(self.HangHoaOlds(), function (x) {
                            return x.ID_DonViQuiDoi === lst[i].ID_DonViQuiDoi && x.ID_LoHang === lst[i].ID_LoHang;
                        });
                    }
                    lst[i].GiaBan = itemGB.length > 0 ? itemGB[0].GiaBan : 0;
                }
            }
        }
        if (arrGB.length === 0) {
            for (let i = 0; i < lst.length; i++) {
                let itemHH = $.grep(self.HangHoaOlds(), function (x) {
                    return x.ID_DonViQuiDoi === lst[i].ID_DonViQuiDoi && x.ID_LoHang === lst[i].ID_LoHang;
                });
                lst[i].GiaBan = itemHH.length > 0 ? itemHH[0].GiaBan : 0;
            }
        }
        return lst;
    }

    // search auto hanghoa
    var indexHH = 0;
    var vm_HangHoa = new Vue({
        el: '#el',
        data: function () {
            return {
                query: '',
                filters: [],
            }
        },
        methods: {
            reset: function (item) {
                this.filters = [];
                this.query = '';
            },
            click: function (item) {
                GetTonKho_ofHangHoafromDB(item, 1);
                $('#showseach').hide();
            },
            submit: function (event) {
                var keycode = event.keyCode;
                switch (keycode) {
                    case 13:
                        var result = this.findBy(this.query.trim());
                        var idChose = null;
                        var focus = false;
                        $('#showseach ul li').each(function (i) {
                            if ($(this).hasClass('hoverenabled')) {
                                idChose = $(this).attr('id');
                                $('#showseach').hide();
                                focus = true;
                            }
                        });
                        if (result.length > 0 && this.query !== '' && focus === false) {
                            $('#showseach').hide();
                        }
                        var arrID = (idChose === null ? '' : idChose).split('_');
                        var idLoHang = arrID[1];
                        if (idLoHang === 'null') {
                            // gan null to do check in result
                            idLoHang = null;
                        }
                        if (arrID.length > 1) {
                            var itemFocus = result.filter(x => x.ID_DonViQuiDoi === arrID[0] && x.ID_LoHang === idLoHang);
                            if (itemFocus.length > 0) {
                                GetTonKho_ofHangHoafromDB(itemFocus[0], 1);
                            }
                        }
                        HideLostFocust();
                        break;
                    case 38:
                        indexHH = indexHH - 1;
                        if (indexHH < 0) {
                            indexHH = $("#showseach ul li").length - 1;
                            $('#showseach').stop().animate({
                                scrollTop: $('#showseach').offset().top + 500
                            }, 1000);
                        }
                        else if (indexHH <= 9 && indexHH > 0) {
                            $('#showseach').stop().animate({
                                scrollTop: $('#showseach').offset().top - 500
                            }, 1000);
                        }
                        $('#showseach ul li').each(function (i) {
                            $(this).removeClass('hoverenabled');
                            if (indexHH === i) {
                                $(this).addClass('hoverenabled');
                            }
                        });
                        break;
                    case 40:
                        indexHH = indexHH + 1;
                        if (indexHH >= ($("#showseach ul li").length)) {
                            indexHH = 0;
                            $('#showseach').stop().animate({
                                scrollTop: $('#showseach').offset().top - 500
                            }, 1000);
                        }
                        else if (indexHH > 9 && indexHH < ($("#showseach ul li").length)) {
                            $('#showseach').stop().animate({
                                scrollTop: $('#showseach').offset().top + 500
                            }, 1000);
                        }
                        $('#showseach ul li').each(function (i) {
                            $(this).removeClass('hoverenabled');
                            if (i === indexHH) {
                                $(this).addClass('hoverenabled');
                            }
                        });
                        break;
                }
            },
            loadFocus: function () {
            },
            // TÌm kiếm hàng hóa
            findBy: function (value) {
                if (value === '') return [];
                let txt = locdau(value);
                // select top 30
                let lst = self.HangHoaAll().filter(function (item) {
                    return item['Name'].indexOf(txt) > -1;
                }).slice(0, 30)
                //lst = lst.sort(function (xx, yy) {
                //    let x = xx.NgayHetHan, y = yy.NgayHetHan;
                //    return (x === null || y === null) ? 1 : x < y ? -1 : 0;
                //}).slice(0,30)
                // get giaban with banggia is chosing
                lst = UpdateGiaBanHangHoa_inList(lst);
                return lst;
            }
        },
        computed: {
            // return hàng hóa
            searchResult: function () {
                var result = this.findBy(this.query.trim());
                if (result.length < 1 || this.query === '') {
                    $('#showseach').hide();
                }
                else {
                    $('#showseach').show();
                    indexHH = 0;
                }
                $('#showseach ul li').each(function (i) {
                    if (i === 0) {
                        $(this).addClass('hoverenabled');
                    }
                    else {
                        $(this).removeClass('hoverenabled');
                    }
                });
                $('#showseach').stop().animate({
                    scrollTop: $('#showseach').offset().top - 600
                }, 1000);
                return result;
            }
        }
    });

    // search auto HangHoa TraHang
    var indexTraHang = -1;
    var model_TH = new Vue({
        el: '#divSearchTH',
        data: function () {
            return {
                query_TH: '',
                data_th: [],
            }
        },
        methods: {
            reset: function (item) {
                this.data_th = [];
                this.query_Kh = '';
            },
            click: function (item) {
                self.Click_ChoseHangLo_DoiTra(item, 1);
                $('#showseach_TH').hide();
            },
            submit: function (event) {
                var keyCode = event.keyCode;
                switch (keyCode) {
                    case 13:
                        var result = this.fillter_TH(this.query_TH);
                        var idChose = null;
                        var focus = false;
                        $('#showseach_TH ul li').each(function (i) {
                            if ($(this).hasClass('hoverenabled')) {
                                $('#showseach_TH').hide();
                                focus = true;
                                idChose = $(this).attr('id');
                            }
                        });
                        if (result.length > 0 && this.query_Kh !== '' && focus === false) {
                            $('#showseach_TH').hide();
                        }
                        // add HangHoa
                        var arrID = (idChose === null ? '' : idChose).split('_');
                        var idLoHang = arrID[1];
                        if (idLoHang === 'null') {
                            // gan null to do check in result
                            idLoHang = null;
                        }
                        if (arrID.length > 1) {
                            var itemFocus = result.filter(x => x.ID_DonViQuiDoi === arrID[0] && x.ID_LoHang === idLoHang);
                            if (itemFocus.length > 0) {
                                self.Click_ChoseHangLo_DoiTra(itemFocus[0], 1);
                            }
                        }
                        HideLostFocust();
                        break;
                    case 38:
                        indexTraHang = indexTraHang - 1;
                        if (indexTraHang < 0) {
                            indexTraHang = $("#showseach_TH ul li").length - 1;
                            this.loadFocus();
                        }
                        else {
                            $('#showseach_TH ul li:not(:first-child).hoverenabled').removeClass('hoverenabled').prev().addClass('hoverenabled');
                        }
                        $('#showseach_TH').animate({
                            scrollTop: 50 * indexTraHang
                        }, 100);
                        break;
                    case 40:
                        indexTraHang = indexTraHang + 1;
                        if (indexTraHang >= ($("#showseach_TH ul li").length)) {
                            indexTraHang = 0;
                            this.loadFocus();
                        }
                        else {
                            $('#showseach_TH ul li:not(:last-child).hoverenabled').removeClass('hoverenabled').next().addClass('hoverenabled');
                        }
                        $('#showseach_TH').animate({
                            scrollTop: 50 * indexTraHang
                        }, 100);
                        break;
                }
            },
            loadFocus: function () {
                $('#showseach_TH ul li').each(function (i) {
                    $(this).removeClass('hoverenabled');
                    if (indexTraHang === i) {
                        $(this).addClass('hoverenabled');
                    }
                });
            },
            // Tìm kiếm danh sách hàng hóa cần trả
            fillter_TH: function (value) {
                if (value === '') return [];
                let txt = locdau(value);
                let lst = self.HangHoaAll().filter(function (item) {
                    return item['Name'].indexOf(txt) > -1;
                }).slice(0, 30);
                // get giaban with banggia is chosing
                lst = UpdateGiaBanHangHoa_inList(lst);
                return lst;
            },
        },
        computed: {
            // Return danh sách trả hàng
            SearchTraHang: function () {
                var result = this.fillter_TH(this.query_TH);
                if (result.length < 1 || this.query_TH === '') {
                    $('#showseach_TH').hide();
                }
                else {
                    indexTraHang = 0;
                    this.loadFocus();
                    $('#showseach_TH').animate({
                        scrollTop: 50 * indexTraHang
                    }, 100);
                    $('#showseach_TH').show();
                }
                $('#showseach_TH ul li').each(function (i) {
                    if (i === 0) {
                        $(this).addClass('hoverenabled');
                    }
                    else {
                        $(this).removeClass('hoverenabled');
                    }
                });
                return result;
            }
        }
    });

    var indexPhongBan = 0;
    var vm_PhongBan = new Vue({
        el: '#sodo',
        data: function () {
            return {
                query: '',
                filters: [],
            }
        },
        methods: {
            reset: function (item) {
                this.filters = [];
                this.query = '';
            },
            click: function (item) {
                self.ChosePhong_HD(item, 1, false);
                $('#divSearchVT').hide();
            },
            submit: function (event) {
                var keyPress = event.keyCode;
                switch (keyPress) {
                    case 13:
                        var result = this.findBy(this.query.trim());
                        var focus = false;
                        $('#allLocation li').each(function (i) {
                            if ($(this).hasClass('hoverenabled')) {
                                self.ChosePhong_HD(result[i]);
                                focus = true;
                            }
                        });
                        if (result.length > 0 && this.query !== '' && focus === false) {
                            self.ChosePhong_HD(result[0]);
                        }
                        $('#txtSearchVT').focus();
                        break;
                    case 37://left
                    case 38://up
                        indexPhongBan = indexPhongBan - 1;
                        if (indexPhongBan < 0) {
                            indexPhongBan = $("#allLocation li").length.length - 1;
                        }
                        this.loadFocus();
                        break;
                    case 39://right
                    case 40://dows
                        indexPhongBan = indexPhongBan + 1;
                        if (indexPhongBan >= $("#allLocation li").length) {
                            indexPhongBan = 0;
                        }
                        this.loadFocus();
                        break;
                }
            },
            loadFocus: function () {
                $('#allLocation li').removeClass('hoverenabled');
                $('#allLocation li').each(function (i) {
                    if (i === indexPhongBan) {
                        $(this).addClass('hoverenabled');
                        return false;
                    }
                });
                $('#txtSearchVT').focus();
            },
            findBy: function (value) {
                if (value === '') return self.AllPhongBans();
                let txt = locdau(value);
                return self.AllPhongBans().filter(function (item) {
                    return locdau(item['NameFull']).indexOf(txt) > -1;
                });
            }
        },
        computed: {
            resultPhongBan: function () {
                var result = this.findBy(this.query.trim());
                self.PhongBans_byIDNhom(result);
                $('#txtSearchVT').focus();
                return result;
            }
        }
    });
    function containsAll(needles, haystack) {
        // replace special character
        needles = $.grep(needles, function (x) {
            return x.replace(/[&\/\\#,+()$~%.'":*?<>{}@]/g, '');
        })
        for (let i = 0, len = needles.length; i < len; i++) {
            if (needles[i] === '') continue;
            if (locdau(haystack).search(new RegExp(locdau(needles[i]), "i")) < 0) return false;
        }
        return true;
    }
    function GetTree_NhomHangHoa() {
        ajaxHelper('/api/DanhMuc/DM_NhomHangHoaAPI/' + 'GetTree_NhomHangHoa', 'GET').done(function (obj) {
            if (obj.res === true) {
                let data = obj.data;
                if (data.length > 0) {
                    data = data.sort((a, b) => a.text.localeCompare(b.text, undefined, { caseFirst: "upper" }));
                }
                self.NhomHangHoas(data);
                // bind data on tree
                tree = $('#tree').tree({
                    primaryKey: 'id',
                    uiLibrary: 'bootstrap',
                    dataSource: data,
                    checkboxes: true,
                });
                // use to get arrIDNhomChild when check KMai
                tree2 = $('#tree2').tree({
                    primaryKey: 'id',
                    uiLibrary: 'bootstrap',
                    dataSource: data,
                    checkboxes: true,
                });
                partialProduct.NhomHangHoas(data);
            }
        })
    }
    self.querySearch = ko.observable("");
    $('#txtSearchNhomHH').keypress(function (e) {
        if (e.keyCode === 13) {
            var filter = locdau($(this).val());
            var arr = GetChildren_NhomHH([], self.NhomHangHoas(), filter, [], true);
            tree.destroy();
            tree = $('#tree').tree({
                primaryKey: 'id',
                uiLibrary: 'bootstrap',
                dataSource: arr,
                checkboxes: true,
            });
        }
    })
    function GetChildren_NhomHH(arrParent, arrJson, txtSearch, arr, isRoot) {
        if (txtSearch === '') {
            return self.NhomHangHoas();
        }
        for (let i = 0; i < arrJson.length; i++) {
            let tenNhom = locdau(arrJson[i].text);
            if (tenNhom.indexOf(txtSearch) > -1) {
                if (isRoot) {
                    arr.push(arrJson[i]);
                }
                else {
                    var ex = $.grep(arr, function (x) {
                        return x.id === arrParent.id;
                    })
                    if (ex.length === 0) {
                        arr.push(arrParent);
                    }
                    else {
                        // neu da ton tai, thoat vong for of children
                        return;
                    }
                }
            }
            if (arrJson[i].children.length > 0) {
                GetChildren_NhomHH(arrJson[i], arrJson[i].children, txtSearch, arr, false);
            }
        }
        return arr;
    }

    function GetUserCookies() {
        $.getJSON("/api/DanhMuc/NS_NhanVienAPI/" + 'GetUserCookies', function (nv_nd) {

            _idNhanVien = nv_nd.ID_NhanVien;
            id_User = nv_nd.ID;
            userLogin = nv_nd.TaiKhoan;
            id_DonVi = nv_nd.ID_DonVi;

            vmThemMoiKhach.inforLogin = {
                ID_NhanVien: _idNhanVien,
                ID_User: id_User,
                UserLogin: userLogin,
                ID_DonVi: id_DonVi,
            };

            vmUpAnhHoaDon.inforLogin = {
                ID_NhanVien: _idNhanVien,
                ID_User: id_User,
                UserLogin: userLogin,
                ID_DonVi: id_DonVi,
            };

            WriteData_Dexie(db.HT_NguoiDung, [nv_nd]);
        });
    }
    self.ListNVien_TuVanThucHien = ko.observableArray();
    function GetNhanVien_NguoiDung() {
        ajaxHelper("/api/DanhMuc/NS_NhanVienAPI/" + 'GetNhanVien_NguoiDung', 'GET').done(function (x) {
            if (x.res === true) {
                let data = x.data;
                self.NhanViens_ChiNhanh(data);

                var lstNV_byDonVi = $.grep(data, function (x) {
                    return x.ID_DonVi === id_DonVi;
                });
                for (let i = 0; i < lstNV_byDonVi.length; i++) {
                    lstNV_byDonVi[i].StatusCV = 0;
                }
                self.NhanViens(lstNV_byDonVi);

                WriteData_Dexie(db.NS_NhanVien, data);

                vmThanhToanGara.listData.NhanViens = lstNV_byDonVi;
                vmHoaHongHoaDon.listData.NhanViens = lstNV_byDonVi;
                vmHoaHongDV.listData.NhanViens = lstNV_byDonVi;

                let tenNV = '';
                let nvien = $.grep(self.NhanViens(), function (x) {
                    return x.ID === _idNhanVien;
                });
                if (nvien.length > 0) {
                    tenNV = nvien[0].TenNhanVien;
                }
                vmThanhToan.inforLogin = {
                    ID_NhanVien: _idNhanVien,
                    ID_User: id_User,
                    UserLogin: userLogin,
                    ID_DonVi: id_DonVi,
                    TenNhanVien: tenNV,
                };
                vmThanhToan.listData.NhanViens = lstNV_byDonVi;
            }
        })
    }


    function GetDMGiaBan_GBApDung() {
        ajaxHelper("/api/DanhMuc/DM_GiaBanAPI/" + "GetDMGiaBan_GBApDung_ChiTiet?idDonVi=" + id_DonVi, 'GET').done(function (obj) {
            if (obj.res === true) {
                let data = obj.data;
                self.AllBangGia(data);
                WriteData_Dexie(db.DM_GiaBan, data);
            }
        });
    };
    function BindLstBangGia_byNhanVien_andDoiTuong() {
        var objBGChung = {
            TenGiaBan: 'Bảng giá chuẩn',
            ID: const_GuidEmpty,
        }
        // filter BangGia by LoaiHoaDon
        var loaiHD = GetLoaiHoaDon_ofHDopening().toString();
        var arrBGLoaiChungTu = [];
        for (let i = 0; i < self.AllBangGia().length; i++) {
            let itGB = self.AllBangGia()[i];
            if (itGB.LoaiChungTuApDung !== null) {
                let arrChungTu = itGB.LoaiChungTuApDung.split(',');
                arrChungTu = RemoveItemEmpty(arrChungTu);
                // push BG co loai chung tu = loaiHD
                if ($.inArray(loaiHD, arrChungTu) > -1) {
                    arrBGLoaiChungTu.push(itGB);
                }
            }
        }
        // push BG co loai chung tu === null
        for (let i = 0; i < self.AllBangGia().length; i++) {
            if (self.AllBangGia()[i].LoaiChungTuApDung === null) {
                arrBGLoaiChungTu.push(self.AllBangGia()[i]);
            }
        }

        // get BangGia if BGia apply for all NhanVien, allDoiTuong
        var arrBGia = [];
        for (let i = 0; i < arrBGLoaiChungTu.length; i++) {
            if (arrBGLoaiChungTu[i].TatCaNhanVien && arrBGLoaiChungTu[i].TatCaDoiTuong) {
                arrBGia.push(arrBGLoaiChungTu[i]);
            }
        }
        // get BGia apply for NhanVien is chosing
        for (let i = 0; i < arrBGLoaiChungTu.length; i++) {
            let itFor = arrBGLoaiChungTu[i];
            let lenGBAD = itFor.DM_GiaBan_ApDung.length;
            if (itFor.TatCaNhanVien === false || itFor.TatCaDoiTuong === false) {
                if (itFor.TatCaNhanVien === false) {
                    // apply for all DoiTuong
                    if (itFor.TatCaDoiTuong) {
                        for (let j = 0; j < lenGBAD; j++) {
                            if (itFor.DM_GiaBan_ApDung[j].ID_NhanVien === self.selectedNVien()) {
                                arrBGia.push(itFor);
                                break; // esc for DM_GiaBan_ApDung
                            }
                        }
                    }
                    else {
                        // apply by ID_NhomDoiTuong
                        for (let j = 0; j < lenGBAD; j++) {
                            if (itFor.DM_GiaBan_ApDung[j].ID_NhanVien === self.selectedNVien()
                                && self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0
                                && self.ChiTietDoiTuong()[0].ID_NhomDoiTuong.toLowerCase().indexOf(itFor.DM_GiaBan_ApDung[j].ID_NhomKhachHang) > -1) {
                                arrBGia.push(itFor);
                                break; // esc for DM_GiaBan_ApDung
                            }
                        }
                    }
                }
                else {
                    // chi con truong hop TatCaDoiTuong === false (OK)
                    if (itFor.TatCaDoiTuong === false) {
                        // apply by ID_NhomDoiTuong
                        for (let j = 0; j < lenGBAD; j++) {
                            if (self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0) {
                                if (self.ChiTietDoiTuong()[0].ID_NhomDoiTuong !== null && self.ChiTietDoiTuong()[0].ID_NhomDoiTuong !== undefined
                                    && self.ChiTietDoiTuong()[0].ID_NhomDoiTuong.toLowerCase().indexOf(itFor.DM_GiaBan_ApDung[j].ID_NhomKhachHang) > -1) {
                                    arrBGia.push(itFor);
                                    break; // esc for DM_GiaBan_ApDung
                                }
                            }
                        }
                    }
                }
            }
        }
        arrBGia = FillterBangGia_byNgayTrongTuan(arrBGia);
        self.GiaBans(arrBGia);
        self.GiaBans.unshift(objBGChung);
    }
    function FillterBangGia_byNgayTrongTuan(lstBangGia) {
        // filter BangGia by NgayLapHD
        var dtNgayLapHD = moment($('#datepicker').val(), 'DD/MM/YYYY').format('YYYY-MM-DD');
        var today = (new Date(dtNgayLapHD)).getDay() + 1; // 1 --> 7 (1: chu nhat)
        // check null NgayTrongTuan
        var arrBGNgayTrongTuan = [];
        for (let i = 0; i < lstBangGia.length; i++) {
            if (lstBangGia[i].NgayTrongTuan !== null && lstBangGia[i].NgayTrongTuan !== undefined) {
                // push BG co loai chung tu = loaiHD
                if (lstBangGia[i].NgayTrongTuan.indexOf(today.toString()) > -1) {
                    arrBGNgayTrongTuan.push(lstBangGia[i]);
                }
            }
        }
        for (let i = 0; i < lstBangGia.length; i++) {
            if (lstBangGia[i].NgayTrongTuan === null) {
                // push BG co loai NgayTrongTuan === null
                arrBGNgayTrongTuan.push(lstBangGia[i]);
            }
        }
        return arrBGNgayTrongTuan;
    }
    function GetListTrangThaiKhachHang() {
        ajaxHelper(DMDoiTuongUri + 'GetListTrangThaiTimKiem', 'GET').done(function (obj) {
            var data = obj.data;
            if (obj.res === true && data !== undefined) {
                self.TrangThaiKhachHang(data);

                vmThemMoiKhach.listData.TrangThaiKhachs = data;
                WriteData_Dexie(db.DM_DoiTuong_TrangThai, data);
            }
        });
    };
    self.ListAllDoiTuong = ko.observableArray();// to do bind at list NguoiGioiThieu (ThemMoiKH)

    self.showHoaDonOffline = function () {
        $('#getoffline').modal('show');
        $('#btnDongBoHoa').removeAttr('disabled');
        $('#ddlDMChungTus').removeAttr('disabled');
        self.selectLoaiChungTu(0);
        // remove loai 19
        var lstLoaiChungTu = $.grep(self.DMChungTus(), function (x) {
            return x.MaLoaiChungTu !== 19;
        });
        self.DMChungTus(lstLoaiChungTu);
        // add again if spa
        if (IsShop_SpaSalon()) {
            self.DMChungTus.push({ MaLoaiChungTu: 19, TenLoaiChungTu: 'Gói dịch vụ' })
        }
        $('#lblStatusConnect').text("Có internet");
        $('.connect').css('color', 'blue');
        $(".connect i").css('color', 'blue');
        $('#btnDongBoHoa').css('display', '');
    }
    self.getHangHoa_ByIDNhom = function () {
        $('#mdFilterNhomHH').modal('hide');
        var lc_HangHoas = self.HangHoaAll();
        self.currentPage(0);
        var arrIDNhomHang = [];
        // if checkAll= true
        var checkAll = $('#ckAllNhom').is(':checked');
        if (checkAll) {
            self.NhomHHChosed([]);
            self.NhomHHChosed.push({ id: 0, text: 'Tất cả', ID_Parent: null });
        }
        else {
            // get ID_NhomHH before chose again
            var arrIDNhom_Before = [];
            for (let i = 0; i < self.NhomHHChosed().length; i++) {
                arrIDNhom_Before.push(self.NhomHHChosed()[i].id);
            }
            arrIDNhomHang = tree.getCheckedNodes();// get id all checked
            for (let i = 0; i < arrIDNhomHang.length; i++) {
                let data = tree.getDataById(arrIDNhomHang[i]);
                if (data.ID_Parent === null) {
                    if ($.inArray(data.id, arrIDNhom_Before) === -1) {// add if not yet chosed
                        self.NhomHHChosed.push(data);
                    }
                }
                else {
                    if ($.inArray(data.ID_Parent, arrIDNhomHang) === -1) {
                        if ($.inArray(data.id, arrIDNhom_Before) === -1) {
                            self.NhomHHChosed.push(data);
                        }
                    }
                }
            }
            // remove if not exist
            var arrNhomChosed = $.grep(self.NhomHHChosed(), function (item) {
                return $.inArray(item.id, arrIDNhomHang) > -1;
            });
            self.NhomHHChosed(arrNhomChosed);
        }
        var arrHangHoa = [];
        if (arrIDNhomHang.length > 0) {
            for (let i = 0; i < arrIDNhomHang.length; i++) {
                for (let j = 0; j < lc_HangHoas.length; j++) {
                    if (arrIDNhomHang[i] === lc_HangHoas[j].ID_NhomHangHoa) {
                        arrHangHoa.push(lc_HangHoas[j]);
                    }
                }
            }
            self.HangHoas(arrHangHoa);
        }
        else {
            self.HangHoas($.extend(true, [], self.HangHoaAll()));
        }
        UpdateGiaBan_inListHangHoa_byPage(self.selectedGiaBan());
    }
    self.RemoveChoseNhomHH = function (item) {
        // remove item in arrID
        var thisID = item.id;
        for (let i = 0; i < self.NhomHHChosed().length; i++) {
            if (self.NhomHHChosed()[i].id === thisID) {
                self.NhomHHChosed.splice(i, 1);
                if (thisID !== 0) {// id = 0: all
                    tree.uncheck(tree.getNodeById(thisID));
                }
                break;
            }
        }
        self.getHangHoa_ByIDNhom();
    }
    self.ShowListNhomHH = function () {
        $('#mdFilterNhomHH').modal('show');
        tree.uncheckAll();
        if (self.NhomHHChosed().length === 1 && self.NhomHHChosed()[0].id === 0) {
            if (self.NhomHHChosed().length === 1 && self.NhomHHChosed()[i].id === 0) {
                tree.checkAll();
            }
        }
        else {
            for (let i = 0; i < self.NhomHHChosed().length; i++) {
                var node = tree.getNodeById(self.NhomHHChosed()[i].id);
                if (node !== null && node !== undefined) {
                    tree.check(node);
                }
            }
        }
    }
    self.showPopupAddKH = function () {
        vmThemMoiKhach.listData.NhanViens = self.NhanViens();
        vmThemMoiKhach.showModalAdd();
    }

    self.showPopupEditKH = function (item) {
        item.TenTrangThai = '';
        item.TenNhanVienPhuTrach = '';
        item.TenNguoiGioiThieu = item.NguoiGioiThieu;

        vmThemMoiKhach.listData.NhanViens = self.NhanViens();
        vmThemMoiKhach.showModalUpdate(item);
    }

    function ResetInput_KhachHang() {
        $('jqauto-customer .gara-search-HH').val('');
    }
    self.deleteNCC = function (item) {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        // reset CTDoiTuong
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            let itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            if (itemHD.length > 0) {
                var idRandomHD = itemHD[0].IDRandom;
                if (itemHD[0].StatusOffline === false) {
                    var cthd = localStorage.getItem(lcListCTHD);
                    var usingService = [];
                    if (cthd !== null) {
                        cthd = JSON.parse(cthd);
                        usingService = $.grep(cthd, function (x) {
                            return x.IDRandomHD === idRandomHD && x.ChatLieu === '4';
                        });
                    }
                    if (usingService.length > 0) {
                        dialogConfirm('Thông báo', 'Đang sử dụng <b> gói dịch vụ sẵn </b>. Bạn có chắc chắn chuyển sang <b>mua mới không? </b>', function () {
                            AgreeDelete(idRandomHD, itemHD);
                            ResetInput_KhachHang();
                        });
                    }
                    else {
                        AgreeDelete(idRandomHD, itemHD);
                        ResetInput_KhachHang();
                    }
                }
            }
            else {
                self.selectedNCC(null);
                ResetInput_KhachHang();
            }
        }
        else {
            self.selectedNCC(null);
            ResetInput_KhachHang();
        }
        // bind again infor HoaDon (bind after update KhuyenMai)
        var lstHDafter = localStorage.getItem(lcListHD);
        if (lstHDafter !== null) {
            lstHDafter = JSON.parse(lstHDafter);
            let itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHDafter);
            if (itemHD.length > 0) {
                self.HoaDons().SetData(itemHD[0]);
            }
        }
        $('#txtSearchHH').focus();
        ClearTextSearch();
        HideShow_Icon_ChietKhauNV();
        self.showNhomHoTro(false);
    };

    function AgreeDelete(idRandomHD, itemHD) {
        if ((itemHD[0].LoaiHoaDon === 1 && itemHD[0].ID_HoaDon === null)
            || (itemHD[0].LoaiHoaDon === 19)) {
            self.Change_KhachHang(null);
            // reset KhuyenMai for HangHoa, HoaDon
            self.KM_KMApDung([]);
            UpdateKhuyenMai_CTHD(null, idRandomHD);
            ResetKM_HangHoa_byIDRandomHD(idRandomHD);
            ResetKM_HoaDon(idRandomHD);
        }
        else {
            if (itemHD[0].LoaiHoaDon === 3 || (itemHD[0].LoaiHoaDon === 6 && itemHD[0].ID_HoaDon === null)) {
                self.Change_KhachHang(null);
            }
        }
        UpdateGiamGiaHD_ByNhomKH(idRandomHD);
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        ChuyenSuDungGDV_toHoaDonMua(idRandomHD);
    }
    function SaveHD_RemoveDisable() {
        $('input').removeAttr('disabled');
        $('.bgwhite').hide();
        $('body').gridLoader({ show: false });
        self.isSaving(false);
    }


    self.SaveGoiDV_andCreatHDSuDung = function () {
        self.isSaving(true);

        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }

        let lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            let hdEx = GetHDOpening_byIDRandom(self.HoaDons().IDRandom(), lstHD);
            if (hdEx.length > 0) {

                let idRandomHD = hdEx[0].IDRandom;
                let idCus = hdEx[0].ID_DoiTuong;

                let check = CheckNgayLapHD(hdEx[0].NgayLapHoaDon);
                if (!check) {
                    SaveHD_RemoveDisable();
                    return;
                }
                // check  tong giam gia > tien mua hang
                if (formatNumberToFloat(hdEx[0].TongTienHang) < formatNumberToFloat(hdEx[0].TongGiamGiaKM_HD)) {
                    ShowMessage_Danger('Giảm giá hóa đơn không được lớn hơn tổng tiền hàng');
                    SaveHD_RemoveDisable();
                    return;
                }

                // get nameDT for print HoaDon
                if (commonStatisJs.CheckNull(idCus)) {
                    ShowMessage_Danger('Vui lòng chọn khách hàng khi mua gói dịch vụ');
                    SaveHD_RemoveDisable();
                    return false;
                }

                let objCTAdd = [];
                let cthd = localStorage.getItem(lcListCTHD);
                if (cthd !== null) {
                    cthd = JSON.parse(cthd);
                    objCTAdd = GetCTHoaDon_FromArr(cthd, idRandomHD);
                }
                if (objCTAdd.length === 0) {
                    ShowMessage_Danger('Vui lòng nhập chi tiết hóa đơn');
                    SaveHD_RemoveDisable();
                    return;
                }

                $('body').gridLoader();

                for (let i = 0; i < objCTAdd.length; i++) {
                    if (objCTAdd[i].QuanLyTheoLoHang) {
                        if (objCTAdd[i].ID_LoHang === null || objCTAdd[i].ID_LoHang === undefined) {
                            ShowMessage_Danger('Vui lòng nhập đầy đủ thông tin lô cho hàng hóa ');
                            SaveHD_RemoveDisable();
                            return;
                        }
                    }
                }

                // update DonGia= GiaBan
                for (let i = 0; i < objCTAdd.length; i++) {
                    objCTAdd[i].DonGia = objCTAdd[i].GiaBan;
                }

                // remove CTHD with QuanLyTheoLo, but ID_Lo== null
                objCTAdd = GetArrCTHD_withIDLoHangOtherNull(objCTAdd);

                var myData = {};
                let maHoaDon = hdEx[0].MaHoaDon;
                // HD Offline/Copy/Tamluu => giu nguyen ma
                if (hdEx[0].StatusOffline === true || maHoaDon.indexOf('Copy') > -1 || hdEx[0].ID !== const_GuidEmpty) {
                    hdEx[0].MaHoaDon = maHoaDon;
                }
                else {
                    hdEx[0].MaHoaDon = null;
                }

                // ID_DonVi
                if (commonStatisJs.CheckNull(hdEx[0].ID_DonVi)) {
                    hdEx[0].ID_DonVi = id_DonVi;
                }

                let ghichuKMHD = '';
                for (let i = 0; i < objCTAdd.length; i++) {
                    if (objCTAdd[i].IsKhuyenMai && objCTAdd[i].TenKhuyenMai !== '') {
                        ghichuKMHD += objCTAdd[i].TenKhuyenMai + '<br /> ';
                    }
                }
                ghichuKMHD += hdEx[0].KhuyenMai_GhiChu;
                if (ghichuKMHD === undefined || ghichuKMHD.indexOf('undefined') > -1) {
                    ghichuKMHD = '';
                }
                hdEx[0].KhuyenMai_GhiChu = ghichuKMHD;

                // check NgayLapHD is null, and get
                let ngaylapHD = GetNgayLapHD_whenSave(hdEx[0].NgayLapHoaDon);
                hdEx[0].NgayLapHoaDon = ngaylapHD;
                myData.objHoaDon = hdEx[0];
                myData.objCTHoaDon = objCTAdd;
                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                PostHD_HoaDon_DichVu(myData, true);
            }
        }
    }

    self.saveHoaDonTraHang = async function (isTamLuu) {
        // check role LuuNhap
        if (isTamLuu) {
            var saveDraft = $.grep(self.Quyen_NguoiDung(), function (x) {
                return x.MaQuyen === 'HoaDon_LuuNhap';
            });
            if (saveDraft.length === 0) {
                ShowMessage_Danger('Bạn không có quyền lưu nháp hóa đơn');
                SaveHD_RemoveDisable();
                return;
            }
        }
        // check sinhanh 'ae2d3f1c-213a-48e3-a87a-3338e0ec4861'
        let deviceId = getDeviceId();
        if (deviceId === 'ae2d3f1c-213a-48e3-a87a-3338e0ec4861') {
            ShowMessage_Danger('Bạn không có quyền lưu hóa đơn');
            SaveHD_RemoveDisable();
            return;
        }

        $('body').gridLoader();
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        var lstHDTemp = localStorage.getItem(lcListHD);
        if (lstHDTemp !== null) {
            lstHDTemp = JSON.parse(lstHDTemp);

            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHDTemp);
            if (itemHD.length > 0) {

                var idRandomHD = itemHD[0].IDRandom;
                var check = CheckNgayLapHD(itemHD[0].NgayLapHoaDon);
                if (!check) {
                    SaveHD_RemoveDisable();
                    return;
                }
                // check  tong giam gia > tien mua hang
                if (formatNumberToFloat(itemHD[0].TongTienHang) < formatNumberToFloat(itemHD[0].TongGiamGiaKM_HD)) {
                    ShowMessage_Danger('Giảm giá hóa đơn không được lớn hơn tổng tiền hàng');
                    SaveHD_RemoveDisable();
                    return;
                }

                let ctDoiTuong = self.ChiTietDoiTuong();
                let cusCode = '', cusName = '';
                if (!commonStatisJs.CheckNull(ctDoiTuong) && ctDoiTuong.length > 0) {
                    cusCode = ctDoiTuong[0].MaDoiTuong;
                    cusName = ctDoiTuong[0].TenDoiTuong;
                }

                //  HD Tra
                if (itemHD[0].LoaiHoaDon === 6) {
                    if (itemHD[0].HoanTraTamUng > 0) {
                        if (itemHD[0].DaTraKhach > itemHD[0].HoanTraTamUng) {
                            ShowMessage_Danger('Vui lòng không nhập quá số tiền cần thanh toán');
                            SaveHD_RemoveDisable();
                            return;
                        }
                        if (itemHD[0].DaTraKhach < itemHD[0].HoanTraTamUng) {
                            ShowMessage_Danger('Vui lòng trả đủ tiền cho khách');
                            SaveHD_RemoveDisable();
                            return;
                        }
                    }
                    else {
                        if (itemHD[0].TienThua > 0) {
                            ShowMessage_Danger('Vui lòng không nhập quá số tiền cần thanh toán');
                            SaveHD_RemoveDisable();
                            return;
                        }
                    }
                    var idDonVi = itemHD[0].ID_DonVi;
                    if (idDonVi === undefined || idDonVi.indexOf('0000') > -1 || idDonVi === null) {
                        idDonVi = id_DonVi; // get from cookie
                    }
                    // phaiTTTraHang = tien ma cua hang phai TT thuc te trong hoa don 
                    // va hoan tra tam ung cho khach = itemHD[0].PhaiTraKhach ( save PhieuChi)
                    var phaiTTTraHang = itemHD[0].TongGiaGocHangTra - itemHD[0].TongGiamGiaDB
                        + itemHD[0].TongThueDB - itemHD[0].TongChiPhiHangTra;
                    // if HD offline --> not change MaHoaDon
                    var maHDSave = null;
                    if (itemHD[0].StatusOffline || itemHD[0].MaHoaDon.indexOf('Copy') > -1) {
                        maHDSave = itemHD[0].MaHoaDon;
                    }
                    // check NgayLapHD is null, and get
                    var ngaylapHD = GetNgayLapHD_whenSave(itemHD[0].NgayLapHoaDon);
                    // if TraHang from HD tich diem --> get DiemGD of TraHang--> save DB
                    var diemGD = 0;
                    if (itemHD[0].FromHDTichDiem) {
                        diemGD = GetDiemGiaoDich_HDTraHang(itemHD[0].TongGiaGocHangTra - itemHD[0].TongGiamGiaDB);
                    }
                    // gán ID_TaiKhoanChuyenKhoan + ID_TaiKhoanPos vào cả HDTra + HDMuaMoi
                    var objTraHang = {
                        LoaiHoaDon: 6,
                        ID: const_GuidEmpty,
                        ID_HoaDon: itemHD[0].ID_HoaDon, // ID_HoaDon goc
                        ID_DoiTuong: itemHD[0].ID_DoiTuong,
                        ID_BangGia: itemHD[0].ID_BangGia,
                        ID_NhanVien: itemHD[0].ID_NhanVien,
                        ID_DonVi: idDonVi,
                        NguoiTao: userLogin,
                        MaDoiTuong: cusCode,
                        TenDoiTuong: cusName,
                        NgayLapHoaDon: ngaylapHD,
                        TongTienHang: itemHD[0].TongGiaGocHangTra, // 
                        PhaiThanhToan: phaiTTTraHang,
                        TongThanhToan: phaiTTTraHang,
                        TongGiamGia: itemHD[0].TongGiamGiaDB,
                        TongChiPhi: itemHD[0].TongChiPhiHangTra,
                        DaThanhToan: itemHD[0].DaTraKhach,
                        PTThueHoaDon: itemHD[0].PTThueDB,
                        TongTienThue: itemHD[0].TongThueDB,
                        ChoThanhToan: false,
                        DienGiai: itemHD[0].DienGiai,
                        DVTinhGiam: '%',
                        PTGiam: 0,
                        Status: 1, // open(1) - close(0) : use HDOffline
                        MaHoaDon: maHDSave,
                        StatusOffline: itemHD[0].StatusOffline,
                        TienMat: itemHD[0].TienMat, // luu vao So chi
                        TienGui: itemHD[0].TienGui,
                        TienATM: itemHD[0].TienATM,
                        TienTheGiaTri: itemHD[0].TienTheGiaTri,
                        TienThua: itemHD[0].TienThua,
                        DiemGiaoDich: diemGD, // tra hang thi bi tru diem
                        MaHoaDonTraHang: itemHD[0].MaHoaDonTraHang, // used to get when save history 
                        ID_TaiKhoanChuyenKhoan: itemHD[0].ID_TaiKhoanChuyenKhoan, // tra hang: vẫn cho phép trả = chuyển khoản
                        ID_TaiKhoanPos: itemHD[0].ID_TaiKhoanPos,
                        BH_NhanVienThucHiens: [],
                        ListTKPos: itemHD[0].ListTKPos,
                        ListTKChuyenKhoan: itemHD[0].ListTKChuyenKhoan,
                    };
                    // if đổi trả gói DV --> loaiHD = 19
                    var loaiHD_DoiTra = 1;
                    if (itemHD[0].MaHoaDon.indexOf('DV') > -1) {
                        loaiHD_DoiTra = 19;
                        let ngayapdung = itemHD[0].NgayApDungGoiDV;
                        if (ngayapdung === '' || ngayapdung === null) {
                            ngayapdung = null;
                        }
                        else {
                            ngayapdung = moment(ngayapdung, 'DD/MM/YYYY').format('YYYY-MM-DD');
                        }
                        let handung = itemHD[0].HanSuDungGoiDV;
                        if (handung === '' || handung === null) {
                            handung = null;
                        }
                        else {
                            handung = moment(handung, 'DD/MM/YYYY').format('YYYY-MM-DD');
                        }
                        itemHD[0].NgayApDungGoiDV = ngayapdung;
                        itemHD[0].HanSuDungGoiDV = handung;
                    }
                    // if MuaMoi < TongTienTra: KhachCanTra = 0, nhung van phai luu PhaiThanhToan = Tong tien ma khach phai Thanh toan
                    var phaiTTMuaMoi = itemHD[0].TongTienHang - itemHD[0].TongGiamGia + itemHD[0].TongTienThue;

                    var objMuaHang = {
                        LoaiHoaDon: loaiHD_DoiTra,
                        ID: const_GuidEmpty,
                        ID_DoiTuong: itemHD[0].ID_DoiTuong,
                        ID_BangGia: itemHD[0].ID_BangGia,
                        ID_NhanVien: itemHD[0].ID_NhanVien,
                        ID_DonVi: idDonVi,
                        NguoiTao: userLogin,
                        MaDoiTuong: cusCode,
                        TenDoiTuong: cusName,
                        NgayLapHoaDon: ngaylapHD,
                        TongTienHang: itemHD[0].TongTienHang,
                        PhaiThanhToan: phaiTTMuaMoi,
                        TongThanhToan: phaiTTMuaMoi,
                        TongGiamGia: itemHD[0].TongGiamGia,
                        DaThanhToan: itemHD[0].DaThanhToan,
                        PTThueHoaDon: itemHD[0].PTThueHoaDon,
                        TongTienThue: itemHD[0].TongTienThue,
                        ChoThanhToan: false,
                        DienGiai: itemHD[0].DienGiai,
                        DVTinhGiam: '%',
                        TongChietKhau: itemHD[0].TongChietKhau,
                        Status: 1, // open(1) - close(0) : use HDOffline
                        MaHoaDon: null,
                        StatusOffline: itemHD[0].StatusOffline,
                        TienMat: itemHD[0].TienMat, // luu vao So thu
                        TienGui: itemHD[0].TienGui,
                        TienATM: itemHD[0].TienATM,
                        TienThua: itemHD[0].TienThua,
                        DiemGiaoDich: itemHD[0].DiemGiaoDich,
                        DiemQuyDoi: itemHD[0].DiemQuyDoi,
                        TTBangDiem: itemHD[0].TTBangDiem,
                        DiemHienTai: itemHD[0].DiemHienTai,
                        DiemKhuyenMai: itemHD[0].DiemKhuyenMai,
                        NgayApDungGoiDV: itemHD[0].NgayApDungGoiDV,
                        HanSuDungGoiDV: itemHD[0].HanSuDungGoiDV,
                        BH_NhanVienThucHiens: itemHD[0].BH_NhanVienThucHiens,
                        ID_TaiKhoanChuyenKhoan: itemHD[0].ID_TaiKhoanChuyenKhoan,
                        ID_TaiKhoanPos: itemHD[0].ID_TaiKhoanPos,
                        ID_ViTri: itemHD[0].ID_ViTri,// doitra: co ID_ViTri (VD: tra hang + su dung DV)
                        CreateTime: itemHD[0].CreateTime,
                        ThoiGianThucHien: itemHD[0].ThoiGianThucHien,
                        ChiPhi: itemHD[0].TongChiPhi,
                        TongThueKhachHang: itemHD[0].TongTienThue,
                        ListTKPos: itemHD[0].ListTKPos,
                        ListTKChuyenKhoan: itemHD[0].ListTKChuyenKhoan,
                    };
                    // check and assign TienTheGiaTri for objHoaDon --> save Quy_HoaDon
                    if (formatNumberToFloat(itemHD[0].HoanTraTamUng) > 0) {
                        objTraHang.TienTheGiaTri = itemHD[0].TienTheGiaTri;
                    }
                    else {
                        objMuaHang.TienTheGiaTri = itemHD[0].TienTheGiaTri;
                    }

                    if (vmThanhToanGara.GridNVienBanGoi_Chosed.length > 0) {
                        objMuaHang.BH_NhanVienThucHiens = vmThanhToanGara.GridNVienBanGoi_Chosed;
                    }

                    var objAdd = itemHD[0]; // get to print HoaDon
                    var lstCTHD_TH = localStorage.getItem(lcListCTHD);
                    var arrCTHD_TraHang = [];
                    var arrCTHD_LoHang_TH = [];
                    if (lstCTHD_TH !== null) {
                        lstCTHD_TH = JSON.parse(lstCTHD_TH);
                        arrCTHD_TraHang = $.grep(lstCTHD_TH, function (item) {
                            return item.IDRandomHD === idRandomHD;
                        });
                        // add to do save CTHD
                        for (let i = 0; i < arrCTHD_TraHang.length; i++) {
                            // push CTHD
                            if (arrCTHD_TraHang[i].SoLuong > 0) {
                                arrCTHD_LoHang_TH.push(arrCTHD_TraHang[i]);
                            }
                            for (let j = 1; j < arrCTHD_TraHang[i].DM_LoHang.length; j++) {
                                // only add DM_LoHang in CTHD if SoLuong > 0
                                if (arrCTHD_TraHang[i].DM_LoHang[j].SoLuong > 0) {
                                    arrCTHD_LoHang_TH.push(arrCTHD_TraHang[i].DM_LoHang[j]);
                                }
                            }
                            for (let j = 0; j < arrCTHD_TraHang[i].HangCungLoais.length; j++) {
                                if (arrCTHD_TraHang[i].HangCungLoais[j].SoLuong > 0) {
                                    arrCTHD_LoHang_TH.push(arrCTHD_TraHang[i].HangCungLoais[j]);
                                }
                            }
                        }
                        // check add Lot, but not chose Lot
                        var arrIDLo_Null = arrCTHD_LoHang_TH.filter(x => x.QuanLyTheoLoHang && x.ID_LoHang === null);
                        if (arrIDLo_Null.length > 0) {
                            ShowMessage_Danger('Vui lòng nhập đầy đủ thông tin lô cho hàng hóa');
                            SaveHD_RemoveDisable();
                            return;
                        }
                        // Check chưa chọn Lô (vì ID_Lo được sinh từ động, nên có thể ID_Lo !=null, nhưng không tồn tại trong DB)
                        // Hàng trả (không check lô ngừng kinh doanh)
                        var arrLo_notInput = '';
                        for (let j = 0; j < arrCTHD_LoHang_TH.length; j++) {
                            if (arrCTHD_LoHang_TH[j].QuanLyTheoLoHang && arrCTHD_LoHang_TH[j].ID_LoHang !== null) {
                                var itemLot = $.grep(self.AllLot(), function (x) {
                                    return x.ID === arrCTHD_LoHang_TH[j].ID_LoHang;
                                });
                                if (itemLot.length === 0) {
                                    arrLo_notInput += arrCTHD_LoHang_TH[j].TenHangHoa + ', ';
                                }
                            }
                        }
                        if (arrLo_notInput !== '') {
                            ShowMessage_Danger('Vui lòng nhập đầy đủ thông tin lô cho hàng hóa ' + arrLo_notInput);
                            SaveHD_RemoveDisable();
                            return;
                        }
                        // remove CTHD with QuanLyTheoLo, but ID_Lo== null
                        arrCTHD_LoHang_TH = GetArrCTHD_withIDLoHangOtherNull(arrCTHD_LoHang_TH);
                    }
                    var lstCTHD_MH = localStorage.getItem(lcListCTHD_DoiTra);
                    var arrCTHD_MuaHang = [];
                    var arrCTHD_MuaHang_LoHang = [];
                    if (lstCTHD_MH !== null) {
                        lstCTHD_MH = JSON.parse(lstCTHD_MH);
                        arrCTHD_MuaHang = $.grep(lstCTHD_MH, function (item) {
                            return item.IDRandomHD === idRandomHD;
                        });
                        for (let i = 0; i < arrCTHD_MuaHang.length; i++) {
                            if (arrCTHD_MuaHang[i].SoLuong > 0) {
                                arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[i]);
                            }
                            for (let j = 1; j < arrCTHD_MuaHang[i].DM_LoHang.length; j++) {
                                if (arrCTHD_MuaHang[i].DM_LoHang[j].SoLuong > 0) {
                                    arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[i].DM_LoHang[j]);
                                }
                            }
                            for (let j = 0; j < arrCTHD_MuaHang[i].HangCungLoais.length; j++) {
                                if (arrCTHD_MuaHang[i].HangCungLoais[j].SoLuong > 0) {
                                    arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[i].HangCungLoais[j]);
                                }
                            }
                        }
                        // check add Lot, but not chose Lot
                        var arrIDLo_Null2 = arrCTHD_MuaHang_LoHang.filter(x => x.QuanLyTheoLoHang && x.ID_LoHang === null);
                        if (arrIDLo_Null2.length > 0) {
                            ShowMessage_Danger('Vui lòng nhập đầy đủ thông tin lô cho hàng hóa ');
                            SaveHD_RemoveDisable();
                            return;
                        }
                    }
                    if (arrCTHD_TraHang.length === 0) {
                        ShowMessage_Danger('Vui lòng nhập chi tiết trả hàng');
                        SaveHD_RemoveDisable();
                        return false;
                    }
                    // check MuaMoi enough TonKho
                    var msgErr = "";
                    // khong cho phep mua hang khi het ton 
                    if (self.ThietLap().XuatAm === false) {
                        const checkTonKho = await CheckTonKho_CTHD(arrCTHD_MuaHang_LoHang, ngaylapHD);
                        if (!checkTonKho) {
                            SaveHD_RemoveDisable();
                            return false;
                        }
                    }
                    // check if Soluong = 0
                    for (let i = 0; i < arrCTHD_MuaHang.length; i++) {
                        if (arrCTHD_MuaHang[i].SoLuong === 0) {
                            msgErr += arrCTHD_MuaHang[i].TenHangHoa + ", ";
                        }
                    }
                    if (msgErr !== "") {
                        msgErr = Remove_LastComma(msgErr);
                        ShowMessage_Danger('Vui lòng nhập số lượng cho hàng hóa ' + msgErr);
                        SaveHD_RemoveDisable();
                        return false;
                    }
                    // update DonGia in CTHD TraHang if GiaBan > DonGia ban dau (update 21.12.2017)
                    var slTra = 0;
                    var slDaMua = 0;
                    // count SoLuongTra, SoLuongDaMua  --> check xem da tra het chua
                    for (let i = 0; i < arrCTHD_LoHang_TH.length; i++) {
                        arrCTHD_LoHang_TH[i].DonGia = arrCTHD_LoHang_TH[i].GiaBan;
                        slTra += arrCTHD_LoHang_TH[i].SoLuong;
                        slDaMua += arrCTHD_LoHang_TH[i].SoLuongDaMua;
                    }
                    // update DonGia in CTHD DoiTra if GiaBan > DonGia ban dau 
                    for (let i = 0; i < arrCTHD_MuaHang_LoHang.length; i++) {
                        arrCTHD_MuaHang_LoHang[i].DonGia = arrCTHD_MuaHang_LoHang[i].GiaBan;
                    }
                    // remove CTHD with QuanLyTheoLo, but ID_Lo== null
                    arrCTHD_MuaHang_LoHang = GetArrCTHD_withIDLoHangOtherNull(arrCTHD_MuaHang_LoHang);
                    if (arrCTHD_LoHang_TH.length === 0) {
                        ShowMessage_Danger('Vui lòng nhập thông tin hàng trả lại');
                        SaveHD_RemoveDisable();
                        return false;
                    }
                    var isTraHet = (slTra === slDaMua);
                    UpdateInforKH_inLstDoiTuongs(itemHD[0], isTraHet);
                    // Nang/Ha Nhom after update infor KH
                    var myDataTH = {};
                    myDataTH.objHoaDon = objTraHang;
                    myDataTH.objCTHoaDon = arrCTHD_LoHang_TH;
                    myDataTH.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                    // remove cache CTTH with MaHD = 'Tra hang'
                    var cacheCTHH = localStorage.getItem(lcCTHDTraHang_fromHD);
                    if (cacheCTHH !== null) {
                        cacheCTHH = JSON.parse(cacheCTHH);
                        cacheCTHH = $.grep(cacheCTHH, function (x) {
                            return x.IDRandomHD !== idRandomHD;
                        });
                        localStorage.setItem(lcCTHDTraHang_fromHD, JSON.stringify(cacheCTHH));
                    }
                    if (objTraHang.StatusOffline === false) {
                        // update TonKho if HD mua and not offline
                        UpdateTonKho_forListHangHoa_andCTHD(myDataTH.objCTHoaDon, true);
                        // chỉ áp dụng khuyến mại tại thời diểm mua và trên 1hóa đơn
                        //Update_SoLanMua_byIDQuiDoi(objTraHang, myDataTH.objCTHoaDon, true);
                    }
                    // POST HD Tra
                    ajaxHelper(BHHoaDonUri + "PostBH_HoaDon_SoQuy_Spa_NKySuDung", 'POST', myDataTH).done(function (objDB) {
                        if (objDB.res === true) {
                            var itemDB = objDB.data;
                            $('.bgwhite').hide();
                            objTraHang.ID = itemDB.ID;
                            objTraHang.MaHoaDon = itemDB.MaHoaDon;
                            objTraHang.NgayLapHoaDon = itemDB.NgayLapHoaDon;

                            HDTraHang_InsertTPDinhLuong(itemDB.ID);

                            if (self.HoaDons().HoanTraTamUng() > 0) {
                                SavePhieuThuChi_DoiTra(itemHD[0], objTraHang, null);
                            }
                            else {
                                if (formatNumberToFloat(itemHD[0].PhaiThanhToanDB) != 0 && arrCTHD_MuaHang_LoHang.length === 0) {
                                    SavePhieuThuChi_DoiTra(itemHD[0], objTraHang, null);
                                }
                            }

                            // Update Diem KH
                            UpdateDiemKH_toDB(itemHD[0].ID_DoiTuong);
                            UpdateNhomKH_DB(itemHD[0].ID_DoiTuong);

                            var myDataMH = {};
                            if (arrCTHD_MuaHang_LoHang.length > 0) {
                                if (objMuaHang.StatusOffline === false) {
                                    // update TonKho if HD mua and not offline
                                    UpdateTonKho_forListHangHoa_andCTHD(arrCTHD_MuaHang_LoHang, false);
                                }
                                // save GioVao, GioRa
                                if (objMuaHang.CreateTime !== 0) {
                                    var objTime = GetGioVaoRa_ofHD(objMuaHang);
                                    objMuaHang.GioVao = objTime.GioVao;
                                    objMuaHang.GioRa = objTime.GioRa;
                                }
                                objMuaHang.ID_HoaDon = itemDB.ID;
                                myDataMH.objHoaDon = objMuaHang;
                                myDataMH.objCTHoaDon = arrCTHD_MuaHang_LoHang;
                                myDataMH.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                // gán lại ngaylapHD 
                                myDataMH.NgayLapHoaDon = moment(new Date(itemDB.NgayLapHoaDon)).add('miliseconds', 3);

                                ajaxHelper(BHHoaDonUri + "PostBH_HoaDon_SoQuy_Spa_NKySuDung", 'POST', myDataMH).done(function (objDB2) {
                                    if (objDB2.res === true) {
                                        var itemMH = objDB2.data;
                                        objMuaHang.ID = itemMH.ID;
                                        objMuaHang.MaHoaDon = itemMH.MaHoaDon;
                                        objMuaHang.NgayLapHoaDon = itemMH.NgayLapHoaDon;

                                        if (formatNumberToFloat(objAdd.HoanTraTamUng) <= 0 && formatNumberToFloat(objAdd.DaThanhToan) > 0) {
                                            SavePhieuThuChi_DoiTra(itemHD[0], objTraHang, objMuaHang);
                                        }

                                        vmThemMoiKhach.NangNhomKhachHang(objMuaHang.ID_DoiTuong);
                                        Post_BHChiTiet_DinhDanh(objMuaHang.ID, objMuaHang.LoaiHoaDon);
                                    }
                                })
                            }
                            else {
                                vmThemMoiKhach.NangNhomKhachHang(objTraHang.ID_DoiTuong);
                            }
                            // Start Print
                            objAdd.NgayLapHoaDon = objTraHang.NgayLapHoaDon; // set used to get when print
                            objAdd.DiemGiaoDich = objMuaHang.DiemGiaoDich - objTraHang.DiemGiaoDich - objMuaHang.DiemQuyDoi;// bind at InHoaDon
                            objAdd = GetInforHDPrint(objAdd);
                            var arrCTHD_format = GetCTHDPrint_Format(myDataTH.objCTHoaDon);
                            self.CTHoaDonPrint(arrCTHD_format); // CTHD tra Hang
                            // CTHD mua hang
                            if (arrCTHD_MuaHang_LoHang.length > 0) {
                                var arrCTHDMH_format = GetCTHDPrint_Format(myDataMH.objCTHoaDon);
                                self.CTHoaDonPrintMH(arrCTHDMH_format);
                            }
                            objAdd.MaHoaDon = itemDB.MaHoaDon;
                            self.InforHDprintf(objAdd);
                            // end Print
                            if (arrCTHD_MuaHang_LoHang.length > 0) {
                                self.InHoaDon("DTH", false);
                            }
                            else {
                                self.InHoaDon("TH", false);
                            }
                            // remove HD after save
                            var lstHDafter = localStorage.getItem(lcListHD);
                            lstHDafter = JSON.parse(lstHDafter);
                            lstHDafter = RemoveHD_byMaHoaDon(_maHoaDon, lstHDafter);
                            localStorage.setItem(lcListHD, JSON.stringify(lstHDafter));
                            // remove CTHoaDon in Cache
                            var lstCTHD = localStorage.getItem(lcListCTHD);
                            if (lstCTHD !== null) {
                                lstCTHD = JSON.parse(lstCTHD);
                                lstCTHD = $.grep(lstCTHD, function (item) {
                                    return item.IDRandomHD !== idRandomHD;
                                });
                                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                            }
                            // remove CTHD_Muamoi
                            var cacheCTHD_MH = localStorage.getItem(lcListCTHD_DoiTra);
                            if (cacheCTHD_MH !== null) {
                                cacheCTHD_MH = JSON.parse(cacheCTHD_MH);
                                cacheCTHD_MH = $.grep(cacheCTHD_MH, function (item) {
                                    return item.IDRandomHD !== idRandomHD;
                                });
                                localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cacheCTHD_MH));
                            }
                            // get all CTHDTH if TraHang is from HoaDon
                            var cthdTraHang_fromHD = localStorage.getItem(lcCTHDTraHang_fromHD);
                            if (cthdTraHang_fromHD !== null) {
                                cthdTraHang_fromHD = JSON.parse(cthdTraHang_fromHD);
                                cthdTraHang_fromHD = $.grep(cthdTraHang_fromHD, function (x) {
                                    return x.IDRandomHD !== idRandomHD;
                                });
                                localStorage.getItem(lcCTHDTraHang_fromHD, JSON.stringify(cthdTraHang_fromHD));
                            }
                            UpdateWarning_CTHD_afterSave();
                            BindHD_CTHDafterSave();
                            Call_6Func();
                            SaveHD_RemoveDisable();
                        }
                        else {
                            ShowMessage_Danger(objDB.mes);
                        }
                    }).always(function () {
                        SaveHD_RemoveDisable();
                    }).fail(function (x) {
                        var notSaleOffline = self.ThietLap() !== null && self.ThietLap().BanHangOffline === false;
                        if (notSaleOffline) {
                            ShowMessage_Danger('Mất kết nối mạng. Vui lòng thanh toán lại hóa đơn');
                            SaveHD_RemoveDisable();
                            return false;
                        }
                        SaveHDOffline();
                        objAdd = GetInforHDPrint(objAdd);
                        objAdd.MaHoaDon = _maHoaDon;
                        self.InforHDprintf(objAdd);
                        var arrCTHD_format = GetCTHDPrint_Format(arrCTHD_TraHang);
                        var arrCTHDMH_format = GetCTHDPrint_Format(arrCTHD_MuaHang);
                        self.CTHoaDonPrint(arrCTHD_format); // CTHD tra Hang
                        self.CTHoaDonPrintMH(arrCTHDMH_format); // CTHD mua hang
                        if (arrCTHD_MuaHang.length > 0) {
                            self.InHoaDon("DTH", false);
                        }
                        else {
                            self.InHoaDon("TH", false);
                        }
                        BindHD_CTHDafterSave();
                        ShowMessage_Success('Không có kết nối Internet. Giao dịch đã được lưu tạm trên máy');
                        SaveHD_RemoveDisable();
                        Call_6Func();

                    });

                    UpdateInforKH_toDB(objTraHang.ID_DoiTuong);
                }
                else {
                    switch (itemHD[0].LoaiHoaDon) {
                        case 1:
                        case 2:
                        case 19:
                            if (isTamLuu === false) {
                                if (itemHD[0].TrangThaiHD === 3) {
                                    // get DiemGiaoDich of HD --> update Diem Kh to DB
                                    var hd = UpdateDiemGiaoDich_forHoaDon(idRandomHD);
                                    if (hd.length > 0) {
                                        itemHD[0].DiemGiaoDich = hd[0].DiemGiaoDich;
                                    }
                                }
                                // update NoHienTai, NoCu, Diem, SoLanMuaHang for KH
                                // if updatehd & changeKH: don't update inforKH todo
                                UpdateInforKH_inLstDoiTuongs(itemHD[0], false);
                            }
                            self.saveHoaDonKhuyenMai(isTamLuu);
                            break;
                        case 3:
                            self.saveDatHang(false);
                            break;
                    }
                }
            }
            else {
                ShowMessage_Danger('Vui lòng nhập thông tin hóa đơn');
                SaveHD_RemoveDisable();
                return;
            }
        }
        else {
            ShowMessage_Danger('Vui lòng nhập thông tin hóa đơn');
            SaveHD_RemoveDisable();
            return;
        }
    }
    function SaveHDOffline() {
        $('.bgwhite').hide();
        // find itemHD with maHD
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            var maHDon = '';
            if (itemHD.length > 0) {
                var idRandomHD = itemHD[0].IDRandom;
                var saveFirst = false;
                if (itemHD[0].StatusOffline === false) {
                    var rd = Math.floor(Math.random() * 1000000 + 1);
                    switch (itemHD[0].LoaiHoaDon) {
                        case 1:
                            maHDon = 'HDO' + rd;
                            break;
                        case 3:
                            maHDon = 'DHO' + rd;
                            break;
                        case 6:
                            maHDon = 'THO' + rd;
                            break;
                        case 19:
                            maHDon = 'GDVO' + rd;
                            break;
                    }
                    for (let i = 0; i < lstHD.length; i++) {
                        if (lstHD[i].IDRandom === idRandomHD) {
                            // nếu cập nhật DatHang: vẫn update MaHoaDon (vì có cập nhật MaHoaDon cho CTHD) (không nên cập nhật mã BG nếu update todo)
                            // nhung trong DB, khong can update Ma
                            lstHD[i].MaHoaDon = maHDon;
                            lstHD[i].MaHoaDonDB = maHDon;
                            lstHD[i].Status = 0;
                            lstHD[i].StatusOffline = true;
                            if (lstHD[i].NgayLapHoaDon === null) {
                                lstHD[i].NgayLapHoaDon = moment(new Date()).format('YYYY-MM-DD HH:mm');
                            }
                            break;
                        }
                    }
                    saveFirst = true;
                }
                else {
                    // if save again HDOffline -> change status HDOffline
                    for (let i = 0; i < lstHD.length; i++) {
                        if (lstHD[i].IDRandom === idRandomHD) {
                            lstHD[i].Status = 0;
                            var ngayLap_formatAgain = GetNgayLapHD_whenSave(lstHD[i].NgayLapHoaDon);
                            lstHD[i].NgayLapHoaDon = ngayLap_formatAgain;
                            break;
                        }
                    }
                    maHDon = _maHoaDon;
                }
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                // remove ltsHD with maHoaDon = itemHD[0].MaHoaDonTraHang
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].LoaiHoaDon === 3 && lstHD[i].MaHoaDon === itemHD[0].MaHoaDonTraHang) {
                        lstHD.splice(i, 1);
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                var lstCTHD = localStorage.getItem(lcListCTHD);
                if (lstCTHD !== null) {
                    lstCTHD = JSON.parse(lstCTHD);
                    lstCTHD = $.grep(lstCTHD, function (item) {
                        return item.SoLuong !== 0;
                    });
                    for (let i = 0; i < lstCTHD.length; i++) {
                        if (lstCTHD[i].IDRandomHD === idRandomHD) {
                            lstCTHD[i].MaHoaDon = maHDon;
                            for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                                lstCTHD[i].DM_LoHang[j].MaHoaDon = maHDon;
                            }
                            lstCTHD[i].DM_LoHang = $.grep(lstCTHD[i].DM_LoHang, function (x) {
                                return x.QuanLyTheoLoHang && x.ID_LoHang !== null;
                            })
                        }
                    }
                    localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                }
                // update Hang KM of HoaDon
                var productKM_ofHD = localStorage.getItem(lcProductKM_HoaDon);
                if (productKM_ofHD !== null) {
                    productKM_ofHD = JSON.parse(productKM_ofHD);
                    for (let i = 0; i < productKM_ofHD.length; i++) {
                        if (productKM_ofHD[i].IDRandomHD === idRandomHD) {
                            productKM_ofHD[i].MaHoaDon = maHDon;
                        }
                    }
                    localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(productKM_ofHD));
                }
                // update maHD offline for HD mua moi of TraHang
                var lstCTHD_TraHang = localStorage.getItem(lcListCTHD_DoiTra);
                if (lstCTHD_TraHang !== null) {
                    lstCTHD_TraHang = JSON.parse(lstCTHD_TraHang);
                    for (let i = 0; i < lstCTHD_TraHang.length; i++) {
                        if (lstCTHD_TraHang[i].IDRandomHD === idRandomHD) {
                            lstCTHD_TraHang[i].MaHoaDon = maHDon;
                            // update MaHoaDon for Dm_Lo
                            for (let j = 0; j < lstCTHD_TraHang[i].DM_LoHang.length; j++) {
                                lstCTHD_TraHang[i].DM_LoHang[j].MaHoaDon = maHDon;
                            }
                            // remove DM_LoHang have QuanLyTheoLo = true, but ID_LoHang= null
                            lstCTHD_TraHang[i].DM_LoHang = $.grep(lstCTHD_TraHang[i].DM_LoHang, function (x) {
                                return x.QuanLyTheoLoHang && x.ID_LoHang !== null;
                            });
                        }
                    }
                    localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD_TraHang));
                }
                // update status for HDDatHang if sumSoLuong int HD >= sum in lcCTDatHang
                var ctDatHang = localStorage.getItem('lcCTDatHang');
                if (ctDatHang !== null) {
                    ctDatHang = JSON.parse(ctDatHang);
                    var arrIDQuiDoi_DatHang = [];
                    var arrIDLoHang_DatHang = [];
                    var sumConLai = 0;
                    var sumMua = 0;
                    // calculator Sum SoLuongDaMua, Sum SoLuongConLai
                    for (let i = 0; i < ctDatHang.length; i++) {
                        if (ctDatHang[i].MaHoaDon === itemHD[0].MaHoaDonTraHang) {
                            sumConLai += ctDatHang[i].SoLuongConLai;
                            // sum SoluongConLai in DM_Lo
                            for (let k = 1; k < ctDatHang[i].DM_LoHang.length; k++) {
                                if (ctDatHang[i].DM_LoHang[k].SoLuongConLai > 0) {
                                    sumConLai += ctDatHang[i].DM_LoHang[k].SoLuongConLai;
                                    // get ID_LoHang, ID_QuiDoi in cache ctDatHang
                                    arrIDLoHang_DatHang.push(ctDatHang[i].DM_LoHang[k].ID_LoHang);
                                    arrIDQuiDoi_DatHang.push(ctDatHang[i].DM_LoHang[k].ID_DonViQuiDoi);
                                }
                            }
                            for (let k = 0; k < ctDatHang[i].HangCungLoais.length; k++) {
                                if (ctDatHang[i].HangCungLoais[k].SoLuongConLai > 0) {
                                    sumConLai += ctDatHang[i].HangCungLoais[k].SoLuongConLai;
                                    arrIDQuiDoi_DatHang.push(ctDatHang[i].HangCungLoais[k].ID_DonViQuiDoi);
                                }
                            }
                            if (ctDatHang[i].SoLuongConLai > 0) {
                                if (ctDatHang[i].ID_LoHang !== null && ctDatHang[i].QuanLyTheoLoHang) {
                                    // push ID_LoHang from parent
                                    arrIDLoHang_DatHang.push(ctDatHang[i].ID_LoHang);
                                }
                                // get arrID_QuiDoi, arrID_Lo in cache ctDatHang
                                arrIDQuiDoi_DatHang.push(ctDatHang[i].ID_DonViQuiDoi);
                            }
                        }
                    }
                    // get unique ID (because if same ID_QuiDoi, ID_Lo same)
                    arrIDLoHang_DatHang = $.unique(arrIDLoHang_DatHang.sort());
                    arrIDQuiDoi_DatHang = $.unique(arrIDQuiDoi_DatHang.sort());
                    var arrIDQuiDoi_CTHD = [];
                    var arrIDLoHang_CTHD = [];
                    for (let j = 0; j < lstCTHD.length; j++) {
                        var objCTHD = lstCTHD[j];
                        if (objCTHD.IDRandomHD === idRandomHD) {
                            // sum SoLuongMua of HH same IDQuiDoi and (IDLoHang !=null || ID_LoHang must in arrIDLoHang)
                            if ($.inArray(objCTHD.ID_DonViQuiDoi, arrIDQuiDoi_DatHang) > -1
                                && (objCTHD.ID_LoHang === null || $.inArray(objCTHD.ID_LoHang, arrIDLoHang_DatHang) > -1)) {
                                sumMua += parseFloat(objCTHD.SoLuong);
                            }
                            // add ID_QuiDoi if exist in arrQuiDoi DatHang
                            if ($.inArray(objCTHD.ID_DonViQuiDoi, arrIDQuiDoi_CTHD) === -1 && $.inArray(objCTHD.ID_DonViQuiDoi, arrIDQuiDoi_DatHang) > -1) {
                                arrIDQuiDoi_CTHD.push(objCTHD.ID_DonViQuiDoi);
                            }
                            // add ID_LoHang if exist in arrLoHang DatHang
                            if ($.inArray(objCTHD.ID_LoHang, arrIDLoHang_CTHD) === -1 && objCTHD.ID_LoHang !== null
                                && $.inArray(objCTHD.ID_LoHang, arrIDLoHang_DatHang) > -1) {
                                arrIDLoHang_CTHD.push(objCTHD.ID_LoHang);
                            }
                            // sum && get ID_LoHang, ID_QuiDoi in DM_LoHang
                            for (let k = 1; k < lstCTHD[j].DM_LoHang.length; k++) {
                                var itemLo = lstCTHD[j].DM_LoHang[k];
                                if ($.inArray(itemLo.ID_DonViQuiDoi, arrIDQuiDoi_DatHang) > -1
                                    && (itemLo.ID_LoHang === null || $.inArray(itemLo.ID_LoHang, arrIDLoHang_DatHang) > -1)) {
                                    sumMua += parseFloat(itemLo.SoLuong);
                                }
                                // add ID_QuiDoi if exist in arrQuiDoi DatHang
                                if ($.inArray(itemLo.ID_DonViQuiDoi, arrIDQuiDoi_CTHD) === -1 && $.inArray(itemLo.ID_DonViQuiDoi, arrIDQuiDoi_DatHang) > -1) {
                                    arrIDQuiDoi_CTHD.push(itemLo.ID_DonViQuiDoi);
                                }
                                // add ID_LoHang if exist in arrLoHang DatHang
                                if ($.inArray(itemLo.ID_LoHang, arrIDLoHang_CTHD) === -1 && itemLo.ID_LoHang !== null
                                    && $.inArray(itemLo.ID_LoHang, arrIDLoHang_DatHang) > -1) {
                                    arrIDLoHang_CTHD.push(itemLo.ID_LoHang);
                                }
                            }
                        }
                    }
                    // get unique ID (because if same ID_QuiDoi, ID_Lo same)
                    arrIDLoHang_CTHD = $.unique(arrIDLoHang_CTHD.sort());
                    // if (len QuiDoi + len Lohang) in DatHang = (len QuiDoi + len Lohang) in CTHD
                    if (sumMua >= sumConLai && arrIDQuiDoi_DatHang.length === arrIDQuiDoi_CTHD.length && arrIDLoHang_DatHang.length === arrIDLoHang_CTHD.length) {
                        self.StatusHD(3);
                        self.ID_HoaDonUpdate(itemHD[0].ID_HoaDon);
                        // add data to indexDBlocal
                        AddHDDatHang_updateStatus();
                    }
                    else {
                        self.ID_HoaDonUpdate(itemHD[0].ID_HoaDon);
                        $('#modalpopup_endDonDH').modal('show');
                    }
                }
                // update SoLuongConLai for BH_HoaDonChiTiet in HDDatHang offline
                db.HDDatHang_Offline.get(self.ID_HoaDonUpdate(), function (x) {
                    for (let i = 0; i < x.BH_HoaDon_ChiTiet.length; i++) {
                        let ct = x.BH_HoaDon_ChiTiet[i];
                        for (let j = 0; j < lstCTHD.length; j++) {
                            if (lstCTHD[j].IDRandomHD === idRandomHD) {
                                if (ct.ID_DonViQuiDoi === lstCTHD[j].ID_DonViQuiDoi) {
                                    if (ct.ID === lstCTHD[j].ID) {
                                        x.BH_HoaDon_ChiTiet[i].SoLuongConLai = ct.SoLuong - ct.SoLuongConLai;
                                    }
                                    else {
                                        for (let k = 0; k < lstCTHD[j].HangCungLoais.length; k++) {
                                            if (ct.ID === lstCTHD[j].HangCungLoais[k].ID) {
                                                x.BH_HoaDon_ChiTiet[i].SoLuongConLai = ct.SoLuong - ct.SoLuongConLai;
                                            }
                                        }
                                    }
                                    break;
                                }
                            }
                        }
                    }
                    db.HDDatHang_Offline.where('ID').equals(self.ID_HoaDonUpdate()).modify({ BH_HoaDon_ChiTiet: x.BH_HoaDon_ChiTiet });
                    // delete in HDDatHang status
                    db.HDDatHang_UpdateStatus.get(self.ID_HoaDonUpdate(), function (x1) {
                        if (x1 !== undefined && x1.Status === 3) {
                            db.HDDatHang_UpdateStatus.delete(self.ID_HoaDonUpdate());
                        }
                    })
                });
                // update TonKho if save Offline lan 1 (Tra +, Mua -)
                if (saveFirst) {
                    // get CTHD is doing save
                    var lstCTHD_using = lstCTHD.filter(x => x.IDRandomHD === idRandomHD);
                    switch (itemHD[0].LoaiHoaDon) {
                        case 1:
                            // Mua -
                            UpdateTonKho_forListHangHoa_andCTHD(lstCTHD_using, false);
                            //Update_SoLanMua_byIDQuiDoi(itemHD[0], lstCTHD_using, false);
                            break;
                        case 6:
                            // Tra +
                            UpdateTonKho_forListHangHoa_andCTHD(lstCTHD_using, true);
                            //Update_SoLanMua_byIDQuiDoi(itemHD[0], lstCTHD_using, true);
                            // Mua -
                            var ctDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                            if (ctDoiTra !== null) {
                                ctDoiTra = JSON.parse(ctDoiTra);
                                ctDoiTra = ctDoiTra.filter(x => x.IDRandomHD === idRandomHD);
                                if (ctDoiTra.length > 0) {
                                    UpdateTonKho_forListHangHoa_andCTHD(ctDoiTra, false);
                                    //Update_SoLanMua_byIDQuiDoi(itemHD[0], ctDoiTra, false);
                                }
                            }
                            break;
                    }
                    // update warning CTHD, CTHD_DoiTra
                    UpdateWarning_CTHD_afterSave();
                }
            }
            // count HD offline
            var lstHDO = $.grep(lstHD, function (item) {
                return item.StatusOffline === true && item.NguoiTao === userLogin && item.ID_DonVi === id_DonVi;
            });
            self.HoaDonOffline(lstHDO);
            self.countHDoffilne(lstHDO.length);
            _maHoaDon = maHDon; // assign to do print
            localStorage.setItem(lcMaHD, _maHoaDon);
        }
    }
    function AddHDDatHang_updateStatus() {
        let tbl = db.HDDatHang_UpdateStatus;
        tbl.get(self.ID_HoaDonUpdate(), function (item) {
            tbl.put({ ID: self.ID_HoaDonUpdate(), Status: self.StatusHD() });
        });
    }

    function Insert_ThongBaoHetTonKho(cthd) {
        cthd = cthd.filter(x => x.LaHangHoa);
        var arrQuiDoi = cthd.map(function (x) {
            return x.ID_DonViQuiDoi;
        })
        var arrIDLo = cthd.filter(x => x.ID_LoHang !== null).map(function (x) {
            return x.ID_LoHang;
        })
        var param = {
            ID_ChiNhanh: id_DonVi,
            ListIDQuyDoi: arrQuiDoi,
            ListIDLoHang: arrIDLo,
        }
        ajaxHelper('/api/DanhMuc/HT_API/Insert_ThongBaoHetTon', 'POST', param).done(function () {

        })
    }

    // MuaHang(tru TonKho), TraHang(cong TonKho)
    // use when list HangHoa = list HangHoa + list LoHang
    function UpdateTonKho_forListHangHoa_andCTHD(objCTHD, isTraHang) {

        // group cthd by idquyidoi + idlo (baogom ca TPDL)
        let arrCT = []; arrQuiDoi = [];
        for (let i = 0; i < objCTHD.length; i++) {
            let itFor = objCTHD[i];

            switch (itFor.LoaiHangHoa) {
                case 1:
                    arrQuiDoi.push(itFor.ID_DonViQuiDoi);
                    arrCT.push(itFor);
                    break;
                case 2:
                    if (itFor.ThanhPhan_DinhLuong.length > 0) {
                        // dluong chon thucong
                        for (let k = 0; k < itFor.ThanhPhan_DinhLuong.length; k++) {
                            let tpdl = itFor.ThanhPhan_DinhLuong[k];
                            if ($.inArray(tpdl.ID_DonViQuiDoi, arrQuiDoi) === -1) {
                                arrQuiDoi.push(tpdl.ID_DonViQuiDoi);
                                arrCT.push(tpdl);
                            }
                            else {
                                for (let j = 0; j < arrCT.length; j++) {
                                    if (arrCT[j].ID_DonViQuiDoi === tpdl.ID_DonViQuiDoi && tpdl.ID_LoHang === arrCT[j].ID_LoHang) {
                                        arrCT[j].SoLuong += tpdl.SoLuong;
                                    }
                                }
                            }
                        }
                    }
                    else {
                        // dluong was setup
                        let arrTP = $.grep(vmThanhPhanDinhLuong.All_DinhLuongDichVu, function (x) {
                            return x.ID_DichVu === itFor.ID_DonViQuiDoi;
                        });
                        if (arrTP.length > 0) {
                            for (let k = 0; k < arrTP.length; k++) {
                                let tpdl = arrTP[k];
                                if (tpdl.LoaiHangHoa === 1) {
                                    if ($.inArray(tpdl.ID_DonViQuiDoi, arrQuiDoi) === -1) {
                                        arrQuiDoi.push(tpdl.ID_DonViQuiDoi);
                                        tpdl.SoLuong = itFor.SoLuong * tpdl.SoLuongMacDinh;
                                        arrCT.push(tpdl);
                                    }
                                    else {
                                        for (let j = 0; j < arrCT.length; j++) {
                                            if (arrCT[j].ID_DonViQuiDoi === tpdl.ID_DonViQuiDoi && tpdl.ID_LoHang === arrCT[j].ID_LoHang) {
                                                arrCT[j].SoLuong += tpdl.SoLuong * itFor.SoLuong;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    break;
            }
        }

        // update again TonKho for list HangHoaAll
        let lengHH = self.HangHoaAll().length;
        for (let i = 0; i < arrCT.length; i++) {
            let idLoHangCTHD = arrCT[i].ID_LoHang;
            idLoHangCTHD = (idLoHangCTHD === undefined ? null : idLoHangCTHD);
            let j = 0;
            for (j; j < lengHH; j++) {
                let itemHH = self.HangHoaAll()[j];
                if (itemHH.ID_DonViQuiDoi === arrCT[i].ID_DonViQuiDoi && itemHH.LaHangHoa) {
                    // update self.HangHoaAll() --> knockout auto update self.HangHoas
                    if (itemHH.QuanLyTheoLoHang === false) {
                        if (isTraHang) {
                            self.HangHoaAll()[j].TonKho += arrCT[i].SoLuong;
                        }
                        else {
                            self.HangHoaAll()[j].TonKho -= arrCT[i].SoLuong;
                        }
                        break;
                    }
                    else {
                        if (itemHH.ID_LoHang === idLoHangCTHD) {
                            if (isTraHang) {
                                self.HangHoaAll()[j].TonKho += arrCT[i].SoLuong;
                            }
                            else {
                                self.HangHoaAll()[j].TonKho -= arrCT[i].SoLuong;
                            }
                            UpdateTonKho_InDMLo(itemHH.ID_DonViQuiDoi, itemHH.ID_LoHang, self.HangHoaAll()[j].TonKho);
                            break;
                        }
                    }
                }
            }
        }

        let idRandomHD = objCTHD[0].IDRandomHD;
        // update TonKho for cthd con lai
        let ctMua = localStorage.getItem(lcListCTHD);
        if (ctMua !== null) {
            ctMua = JSON.parse(ctMua);
            for (let i = 0; i < ctMua.length; i++) {
                // chi update nhung hang hoa con lai chua luu HoaDon
                if (ctMua[i].IDRandomHD !== idRandomHD) {

                    // update tonkho for tpdl
                    if (ctMua[i].LoaiHangHoa === 2) {
                        for (let k = 0; k < ctMua[i].ThanhPhan_DinhLuong.length; k++) {
                            let tpdl = ctMua[i].ThanhPhan_DinhLuong[k];
                            if (tpdl.LoaiHangHoa === 1) {
                                let itXuat = $.grep(arrCT, (x) => {
                                    return x.ID_DonViQuiDoi === tpdl.ID_DonViQuiDoi;
                                });
                                if (itXuat.length > 0) {
                                    if (itXuat[0].QuanLyTheoLoHang) {
                                        itXuat = $.grep(itXuat, (x) => {
                                            return x.ID_LoHang === tpdl.ID_LoHang;
                                        });
                                    }
                                    if (itXuat.length > 0 && !isTraHang) {
                                        ctMua[i].ThanhPhan_DinhLuong[k].TonKho -= itXuat[0].SoLuong;
                                    }
                                }
                            }
                        }
                    }

                    for (let j = 0; j < arrCT.length; j++) {
                        let ctOld = arrCT[j];
                        if (ctOld.ID_DonViQuiDoi === ctMua[i].ID_DonViQuiDoi && ctOld.LaHangHoa) {
                            if (ctOld.QuanLyTheoLoHang) {
                                for (let k = 0; i < ctMua[i].DM_LoHang.length; i++) {
                                    if (ctOld.ID_LoHang === ctMua[i].DM_LoHang[k].ID_LoHang) {
                                        if (isTraHang) {
                                            ctMua[i].DM_LoHang[k].TonKho += ctOld.SoLuong;
                                        }
                                        else {
                                            ctMua[i].DM_LoHang[k].TonKho -= ctOld.SoLuong;
                                        }
                                        break;
                                    }
                                }
                                if (ctOld.ID_LoHang === ctMua[i].ID_LoHang) {
                                    if (isTraHang) {
                                        ctMua[i].TonKho += ctOld.SoLuong;
                                    }
                                    else {
                                        ctMua[i].TonKho -= ctOld.SoLuong;
                                    }
                                    break;
                                }
                            }
                            else {
                                if (isTraHang) {
                                    ctMua[i].TonKho += ctOld.SoLuong;
                                }
                                else {
                                    ctMua[i].TonKho -= ctOld.SoLuong;
                                }
                                break;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(ctMua));
        }

        // update TonKho for cthd_DoiTra
        let ctDoi = localStorage.getItem(lcListCTHD_DoiTra);
        if (ctDoi !== null) {
            ctDoi = JSON.parse(ctDoi);
            for (let i = 0; i < ctDoi.length; i++) {
                // chi update nhung hang hoa con lai chua luu HoaDon
                if (ctDoi[i].IDRandomHD !== idRandomHD) {
                    for (let j = 0; j < arrCT.length; j++) {
                        let ctOld = arrCT[j];
                        if (ctOld.ID_DonViQuiDoi === ctDoi[i].ID_DonViQuiDoi && ctOld.LaHangHoa) {
                            if (ctOld.QuanLyTheoLoHang) {
                                for (let k = 0; i < ctDoi[i].DM_LoHang.length; i++) {
                                    if (ctOld.ID_LoHang === ctDoi[i].DM_LoHang[k].ID_LoHang) {
                                        if (isTraHang) {
                                            ctDoi[i].DM_LoHang[k].TonKho += ctOld.SoLuong;
                                        }
                                        else {
                                            ctDoi[i].DM_LoHang[k].TonKho -= ctOld.SoLuong;
                                        }
                                        break;
                                    }
                                }
                                if (ctOld.ID_LoHang === ctDoi[i].ID_LoHang) {
                                    if (isTraHang) {
                                        ctDoi[i].TonKho += ctOld.SoLuong;
                                    }
                                    else {
                                        ctDoi[i].TonKho -= ctOld.SoLuong;
                                    }
                                    break;
                                }
                            }
                            else {
                                if (isTraHang) {
                                    ctDoi[i].TonKho += ctOld.SoLuong;
                                }
                                else {
                                    ctDoi[i].TonKho -= ctOld.SoLuong;
                                }
                                break;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(ctDoi));
        }

        // update tonkho for vmThanhPhanDinhLuong.All_DinhLuongDichVu
        let lenDL = vmThanhPhanDinhLuong.All_DinhLuongDichVu.length;
        for (let i = 0; i < lenDL; i++) {
            let itFor = vmThanhPhanDinhLuong.All_DinhLuongDichVu[i];
            if (itFor.LoaiHangHoa === 1) {
                let itXuat = $.grep(arrCT, (x) => {
                    return x.ID_DonViQuiDoi === itFor.ID_DonViQuiDoi;
                });
                if (itXuat.length > 0) {
                    if (itXuat[0].QuanLyTheoLoHang) {
                        itXuat = $.grep(itXuat, (x) => {
                            return x.ID_LoHang === itFor.ID_LoHang;
                        });
                    }
                    if (itXuat.length > 0 && !isTraHang) {
                        vmThanhPhanDinhLuong.All_DinhLuongDichVu[i].TonKho -= itXuat[0].SoLuong;
                    }
                }
            }
        }
    }

    function uuidv4() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }

    // update warning For CTHD con lai (because after ThanhToan, TonKho will be change)
    function UpdateWarning_CTHD_afterSave() {
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0; i < lstCTHD.length; i++) {
                let itemCTHD = lstCTHD[i];
                let laHangHoa = itemCTHD.LaHangHoa;
                let loaiHD = itemCTHD.LoaiHoaDon;
                let xuatAm = true;
                switch (loaiHD) {
                    case 1:
                        xuatAm = self.ThietLap().XuatAm;
                        break;
                    case 3:
                        xuatAm = self.ThietLap().DatHangXuatAm;
                        break;
                }
                // update warning CTHD
                lstCTHD[i].CssWarning = (xuatAm === false && laHangHoa && itemCTHD.TonKho < itemCTHD.SoLuong);
                // update warning DM_Lo
                for (let j = 0; j < itemCTHD.DM_LoHang.length; j++) {
                    lstCTHD[i].DM_LoHang[j].CssWarning = (xuatAm === false && laHangHoa && itemCTHD.DM_LoHang[j].TonKho < itemCTHD.DM_LoHang[j].SoLuong);
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
        }
        var lstCTHD_DT = localStorage.getItem(lcListCTHD_DoiTra);
        if (lstCTHD_DT !== null) {
            lstCTHD_DT = JSON.parse(lstCTHD_DT);
            let xuatAm2 = self.ThietLap().XuatAm;
            for (let i = 0; i < lstCTHD_DT.length; i++) {
                let itemCTHD = lstCTHD_DT[i];
                let laHangHoa2 = itemCTHD.LaHangHoa;
                lstCTHD_DT[i].CssWarning = (xuatAm2 === false && laHangHoa2 && itemCTHD.TonKho < itemCTHD.SoLuong);
                for (let j = 0; j < itemCTHD.DM_LoHang.length; j++) {
                    lstCTHD_DT[i].DM_LoHang[j].CssWarning = (xuatAm2 === false && laHangHoa2 && itemCTHD.DM_LoHang[j].TonKho < itemCTHD.DM_LoHang[j].SoLuong);
                }
            }
            localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD_DT));
        }
    }

    function UpdateTonKho_InDMLo(idQuiDoi, idLoHang, tonkho) {
        for (let i = 0; i < self.AllLot().length; i++) {
            let itFor = self.AllLot()[i];
            if (itFor.ID_DonViQuiDoi === idQuiDoi && itFor.ID === idLoHang) {
                itFor.TonKho = tonkho;
                break;
            }
        }
    }

    function GetMaHoaDonNew_byRole() {
        var maHDNew = nameHD_InsertBH;
        var loaiHD = 1;
        if (!self.RoleInsert_Invoice()) {
            if (self.RoleInsert_Order()) {
                maHDNew = nameHD_InsertDH;
                loaiHD = 3;
            }
            else {
                if (self.RoleInsert_Service()) {
                    maHDNew = nameHD_AddGoiDV;
                    loaiHD = 19;
                }
                else {
                    if (self.RoleInsert_Return()) {
                        maHDNew = nameHD_TraHang;
                        loaiHD = 6;
                    }
                    else {
                        maHDNew = nameHD_BaoHanh;
                        loaiHD = 2;
                    }
                }
            }
        }
        return {
            MaHoaDon: maHDNew,
            LoaiHoaDon: loaiHD,
        }
    }

    function BindHD_CTHDafterSave() {
        let objMaHD = GetMaHoaDonNew_byRole();
        var maHDNew = objMaHD.MaHoaDon + '1';
        var idRandom = '';

        var lstHD = localStorage.getItem(lcListHD);

        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var arrPB_HD = GetListHD_Opening();
            if (arrPB_HD.length > 0) {
                // bind CTHoaDon with MaHon = last-child
                var hdLast = [];
                var maHDCache = localStorage.getItem(lcMaHD);
                if (maHDCache !== null && maHDCache !== '' && maHDCache !== 'null') {
                    hdLast = GetHDOpening_byMaHoaDon(maHDCache, arrPB_HD);
                    if (hdLast.length === 0) {
                        hdLast = arrPB_HD[arrPB_HD.length - 1];
                    }
                    else {
                        hdLast = hdLast[0];
                    }
                }
                else {
                    hdLast = arrPB_HD[arrPB_HD.length - 1];
                }

                _maHoaDon = hdLast.MaHoaDon;
                idRandom = hdLast.IDRandom;
                self.IDPhongBan_Chosing(hdLast.ID_ViTri);

                self.selectedNCC(hdLast.ID_DoiTuong);
                GetInForCustomer_byID(hdLast.ID_DoiTuong);
                self.SetNhanVien(hdLast.ID_NhanVien);
                self.SetChiNhanh(hdLast.ID_DonVi);
                BindLstBangGia_byNhanVien_andDoiTuong();
                if (self.selectedGiaBan() !== hdLast.ID_BangGia) {
                    UpdateGiaBan_inListHangHoa_byPage(hdLast.ID_BangGia);
                }
                self.SetBangGia(hdLast.ID_BangGia);
                BindHD_byIDRandom(idRandom);
                BindCTHD_byIDRandomHD(idRandom);
                SetText_lblTienMat(hdLast, 1);
                OnOff_Timer(hdLast.NgayLapHoaDon);

                if (hdLast.StatusOffline === false) {
                    $('input, select').removeAttr('disabled');
                    $('.parent-price-1, #txtDaThanhToan').removeAttr('disabled');
                }
            }
            else {
                let objEmpty = newHoaDon(maHDNew, objMaHD.LoaiHoaDon);
                _maHoaDon = maHDNew;
                idRandom = objEmpty.IDRandom;
                self.PhongBanSelected([])
                self.PhongBanSelected.push(objEmpty);
                self.resetInforHD_CTHD();
                self.IDPhongBan_Chosing(null);
                ClearTextSearch();
                stopTimer();
                timer();
            }
            // bind HDOffline
            var lstHDO = $.grep(lstHD, function (x) {
                return x.StatusOffline === true && x.ID_DonVi === id_DonVi && x.NguoiTao === userLogin;
            });
            self.HoaDonOffline(lstHDO);
            self.countHDoffilne(lstHDO.length);
        }
        else {
            let objEmpty = newHoaDon(maHDNew, objMaHD.LoaiHoaDon);
            var idBangGiaNew = objEmpty.ID_BangGia;
            if (idBangGiaNew !== undefined && idBangGiaNew !== null && idBangGiaNew !== const_GuidEmpty) {
                // add new HD with BanGia old --> keep BangGia after refresh
                lstHD = [];
                lstHD.push(objEmpty);
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
            }
            _maHoaDon = maHDNew;
            idRandom = objEmpty.IDRandom;
            self.PhongBanSelected([]);
            self.PhongBanSelected.push(objEmpty);
            self.resetInforHD_CTHD();
            self.IDPhongBan_Chosing(null);
            self.HoaDonOffline([]);
            self.countHDoffilne(0);
            ClearTextSearch();
            timer();
        }
        localStorage.setItem(lcMaHD, _maHoaDon);
        // get maHoaDon after close or Save
        GetCurrentPage_byMaHoaDon(_maHoaDon);
        SetBorder_LotEnd_CTHD();
        localStorage.setItem('lcIDRandom', idRandom); // used to get at form DisplayCustomer when first load
        vmUpAnhHoaDon.InvoiceChosing.IDRandomHD = idRandom;
        vmUpAnhHoaDon.GetListImgInvoiceLC();
        DemSoLanDoiTra_byID();
    }

    function DemSoLanDoiTra_byID() {
        if (self.HoaDons().LoaiHoaDon() === 6) {
            ajaxHelper(BHHoaDonUri + 'DemSoLanDoiTra_byID?idHoaDon=' + self.HoaDons().ID_HoaDon()).done(function (data) {
                self.CountDoiTra(data);
            })
        } else {
            self.CountDoiTra(0);
        }
    }

    function Bind_CTHĐoiTra_afterHideColumn() {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var loaiHD = GetLoaiHoaDon_ofHDopening();
        var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
        if (lstCTHD_TH !== null && lstCTHD_TH !== '[]') {
            lstCTHD_TH = JSON.parse(lstCTHD_TH);
            // hide divMuaHang if not CTHD
            var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
            var arrCTHD = $.grep(lstCTHD_TH, function (itemCT) {
                return itemCT.IDRandomHD === idRandomHD;
            });
            // hide divMuaHang if not CTHD
            if (loaiHD === 6 && arrCTHD.length === 0) {
                $('#divMuaHang').css('display', 'none');
            }
            // bind CTHoaDOn
            self.NewProducts(arrCTHD);
            SetBorder_LotEnd_CTHD();
        }
    }
    function GetInforHDPrint(objHD) {
        var objPrint = $.extend({}, objHD);
        var tenDTuong = 'Khách lẻ';
        var itemEx = self.ChiTietDoiTuong();
        var notruoc = 0;
        var nosau = 0;
        var address = '';
        var phone = '';
        var maKH = '';
        var tongdiemKH = '';
        var ngaysinh = '';
        var tenNhomKH = 'Nhóm mặc định';
        var tongTaiKhoanThe = 0;
        var tongSuDungThe_TruocDo = 0;
        var soDuConLai_TruocDo = 0;
        var cusTax = '';
        var ttBangTheGtri = formatNumberToFloat(objHD.TienTheGiaTri);
        if (itemEx.length === 0) {
            // find in lst KH offline
            var khOffline = localStorage.getItem(lcDM_DoiTuong);
            if (khOffline !== null) {
                khOffline = JSON.parse(khOffline);
                var itemKH = $.grep(khOffline, function (item) {
                    return item.MaHoaDon === objHD.MaHoaDon;
                });
                if (itemKH.length > 0) {
                    itemEx = itemKH;
                }
            }
        }
        if (itemEx.length > 0) {
            maKH = itemEx[0].MaDoiTuong;
            tenDTuong = itemEx[0].TenDoiTuong;
            address = itemEx[0].DiaChi;
            phone = itemEx[0].DienThoai;
            tongdiemKH = itemEx[0].TongTichDiem;
            notruoc = objHD.ID_DoiTuong === '00000000-0000-0000-0000-000000000000' ? 0 : itemEx[0].NoHienTai;

            ngaysinh = itemEx[0].NgaySinh_NgayTLap === null ? '' : moment(itemEx[0].NgaySinh_NgayTLap).format('DD/MM/YYYY');
            tenNhomKH = itemEx[0].TenNhomDT;
            cusTax = itemEx[0].MaSoThue;
            if (self.ChiTietDoiTuong() !== undefined && self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0) {
                // lấy thông tin Thẻ giá trị từ Khách hàng đang chọn (phải get trước khi reset hoặc bind lại infor hóa đơn)
                tongTaiKhoanThe = vmThanhToanGara.theGiaTriCus.TongNapThe;
                tongSuDungThe_TruocDo = vmThanhToanGara.theGiaTriCus.SuDungThe - vmThanhToanGara.theGiaTriCus.HoanTraTheGiaTri;
                if (tongSuDungThe_TruocDo < 0) {
                    tongTaiKhoanThe += Math.abs(tongSuDungThe_TruocDo);
                }
                soDuConLai_TruocDo = vmThanhToanGara.theGiaTriCus.SoDuTheGiaTri;
            }
        }
        // khach hang
        phone = (phone === null || phone === undefined) ? '' : phone; // check phone null
        objPrint.MaDoiTuong = maKH;
        objPrint.TenDoiTuong = tenDTuong;
        objPrint.DiaChiKhachHang = address;
        objPrint.DienThoaiKhachHang = phone;
        objPrint.NgaySinh_NgayTLap = ngaysinh;
        objPrint.TongTichDiem = tongdiemKH;
        objPrint.TenNhomKhach = Remove_LastComma(tenNhomKH);
        objPrint.MaSoThue = cusTax;
        objPrint.NguoiTaoHD = objPrint.NguoiTao;

        if (objHD.NgayLapHoaDon === null) {
            objPrint.NgayLapHoaDon = moment(new Date()).format('DD/MM/YYYY HH:mm');
        }
        else {
            objPrint.NgayLapHoaDon = moment(objHD.NgayLapHoaDon, 'YYYY-MM-DD HH:mm').format('DD/MM/YYYY HH:mm');
        }
        var ngaylapHD = objPrint.NgayLapHoaDon;
        objPrint.Ngay = moment(ngaylapHD, 'DD/MM/YYYY HH:mm').format('DD');
        objPrint.Thang = moment(ngaylapHD, 'DD/MM/YYYY HH:mm').format('MM');
        objPrint.Nam = moment(ngaylapHD, 'DD/MM/YYYY HH:mm').format('YYYY');

        // nhan vien BH
        var staffName = '';
        var itemNV = $.grep(self.NhanViens(), function (item) {
            return item.ID === objHD.ID_NhanVien;
        });
        if (itemNV.length > 0) {
            staffName = itemNV[0].TenNhanVien;
        }
        objPrint.NhanVienBanHang = staffName;

        var tiendu = 0, tienthieuHD = 0, tongcong = 0; daThanhToan = 0;
        // if TraKhach
        if (objPrint.HoanTraTamUng > 0) {
            tiendu = formatNumberToFloat(objHD.DaTraKhach) -
                (formatNumberToFloat(objHD.TongTienTra) - formatNumberToFloat(objHD.TongTienMua));

            tongcong = formatNumberToFloat(objHD.HoanTraTamUng);
            objPrint.TongCong = formatNumber3Digit(tongcong);
            daThanhToan = formatNumberToFloat(objHD.DaTraKhach);
            tongSuDungThe_TruocDo -= ttBangTheGtri; // trừ tiền sử dụng (vì trả lại TKThẻ)
            soDuConLai_TruocDo += ttBangTheGtri;// cộng tiền vào TKThe
            objPrint.PhaiTraKhach = tongcong;
        }
        else {
            // if KhachTra
            tiendu = formatNumberToFloat(objHD.DaThanhToan)
                - (formatNumberToFloat(objHD.TongTienMua) - formatNumberToFloat(objHD.TongTienTra));

            tongcong = formatNumberToFloat(objHD.PhaiThanhToan);
            objPrint.TongCong = formatNumber3Digit(tongcong);
            daThanhToan = formatNumberToFloat(objHD.DaThanhToan);
            tongSuDungThe_TruocDo += ttBangTheGtri;
            soDuConLai_TruocDo -= ttBangTheGtri; // trừ tiền sử dụng thẻ
            objPrint.PhaiTraKhach = 0;
        }
        tongSuDungThe_TruocDo = tongSuDungThe_TruocDo < 0 ? 0 : tongSuDungThe_TruocDo;
        soDuConLai_TruocDo = soDuConLai_TruocDo < 0 ? 0 : soDuConLai_TruocDo;

        if (tiendu < 0) {
            tienthieuHD = Math.abs(tiendu);
            tiendu = 0;
        }

        objPrint.TongTienTraHang = formatNumber3Digit(objHD.TongGiaGocHangTra);
        objPrint.TongChiPhi = formatNumber3Digit(objHD.TongChiPhi);
        objPrint.TongChiPhiHangTra = formatNumber3Digit(objHD.TongChiPhiHangTra);
        objPrint.DaTraKhach = formatNumber3Digit(objHD.DaTraKhach);
        objPrint.TongTaiKhoanThe = formatNumber3Digit(tongTaiKhoanThe);
        objPrint.TongSuDungThe = formatNumber3Digit(tongSuDungThe_TruocDo);
        objPrint.SoDuConLai = formatNumber3Digit(soDuConLai_TruocDo);
        objPrint.TongTienHoaDonMua = formatNumber3Digit(objHD.TongTienHang);
        objPrint.TongTienHDSauGiamGia = formatNumber3Digit(formatNumberToFloat(objHD.TongTienHang) - formatNumberToFloat(objHD.TongGiamGiaKM_HD));

        objPrint.TongTienHangChuaCK = formatNumber3Digit(objHD.TongTienHangChuaCK, 3);
        objPrint.TongGiamGia = formatNumber3Digit(objHD.TongGiamGiaKM_HD);
        objPrint.TongGiamGiaHD_HH = formatNumber3Digit(objHD.TongGiamGiaHang + objHD.TongGiamGiaKM_HD);

        objPrint.TongTienThue = formatNumber3Digit(objHD.TongTienThue);
        objPrint.TongGiamGiaHangTra = formatNumber3Digit(objHD.TongGiamGiaDB);
        objPrint.TienBangChu = DocSo(tongcong);
        objPrint.KH_TienBangChu = DocSo(daThanhToan);
        objPrint.PhaiThanhToan = formatNumber3Digit(objHD.PhaiThanhToan);
        objPrint.DaThanhToan = formatNumber3Digit(daThanhToan);
        objPrint.TongTienHang = objPrint.TongTienHoaDonMua;
        objPrint.TienThua = formatNumber3Digit(tiendu);
        objPrint.TienKhachThieu = formatNumber3Digit(tienthieuHD);
        objPrint.DiemGiaoDich = formatNumber3Digit(objHD.DiemGiaoDich);
        objPrint.NoTruoc = formatNumber3Digit(notruoc);
        nosau = notruoc + tienthieuHD;
        objPrint.NoSau = formatNumber3Digit(nosau);
        // chi nhanh
        objPrint.TenChiNhanh = '';
        objPrint.DienThoaiChiNhanh = '';
        objPrint.DiaChiChiNhanh = '';
        var itemChiNhanh = $.grep(self.ChiNhanhs(), function (item) {
            return item.ID === id_DonVi;
        });
        if (itemChiNhanh.length > 0) {
            objPrint.TenChiNhanh = itemChiNhanh[0].TenDonVi;
            objPrint.DienThoaiChiNhanh = itemChiNhanh[0].SoDienThoai;
            objPrint.DiaChiChiNhanh = itemChiNhanh[0].DiaChi;
        }
        // congty
        if (self.CongTy() !== null && self.CongTy().length > 0) {
            objPrint.LogoCuaHang = Open24FileManager.hostUrl + self.CongTy()[0].DiaChiNganHang;
            objPrint.TenCuaHang = self.CongTy()[0].TenCongTy;
            objPrint.DiaChiCuaHang = self.CongTy()[0].DiaChi;
        }
        // tai khoan ngan hang POS
        var accountPOS = $.grep(self.ListAccountPOS(), function (x) {
            return x.ID === objHD.ID_TaiKhoanPos;
        });
        if (accountPOS.length > 0 && formatNumberToFloat(objHD.TienATM) > 0) {
            objPrint.TenNganHangPOS = accountPOS[0].TenNganHang;
            objPrint.TenChuThePOS = accountPOS[0].TenChuThe;
            objPrint.SoTaiKhoanPOS = accountPOS[0].SoTaiKhoan;
        }
        else {
            objPrint.TenNganHangPOS = '';
            objPrint.TenChuThePOS = '';
            objPrint.SoTaiKhoanPOS = '';
        }
        // tai khoan ngan hang Chuyen Khoan
        var accountCK = $.grep(self.ListAccountChuyenKhoan(), function (x) {
            return x.ID === objHD.ID_TaiKhoanChuyenKhoan;
        });
        if (accountCK.length > 0 && formatNumberToFloat(objHD.TienGui) > 0) {
            objPrint.TenNganHangChuyenKhoan = accountCK[0].TenNganHang;
            objPrint.TenChuTheChuyenKhoan = accountCK[0].TenChuThe;
            objPrint.SoTaiKhoanChuyenKhoan = accountCK[0].SoTaiKhoan;
        }
        else {
            objPrint.TenNganHangChuyenKhoan = '';
            objPrint.TenChuTheChuyenKhoan = '';
            objPrint.SoTaiKhoanChuyenKhoan = '';
        }
        objPrint.TienMat = formatNumber3Digit(objHD.TienMat);
        objPrint.TienGui = formatNumber3Digit(objHD.TienGui);
        objPrint.ChuyenKhoan = objPrint.TienGui;
        objPrint.TienATM = formatNumber3Digit(objHD.TienATM);
        objPrint.TienTheGiaTri = formatNumber3Digit(ttBangTheGtri);
        objPrint.TongTienThue = formatNumber3Digit(objHD.TongTienThue);
        objPrint.TongThueDB = formatNumber3Digit(objHD.TongThueDB);
        objPrint.TienDoiDiem = formatNumber3Digit(objHD.TTBangDiem);
        objPrint.TongSoLuongHang = formatNumber3Digit(self.SumQuantity());
        objPrint.TenPhongBan = objHD.TenViTriHD;

        let pthuc = '';
        if (formatNumberToFloat(objHD.TienMat) > 0) {
            pthuc = 'Tiền mặt, ';
        }
        if (formatNumberToFloat(objHD.TienATM) > 0) {
            pthuc += 'POS, ';
        }
        if (formatNumberToFloat(objHD.TienGui) > 0) {
            pthuc += 'Chuyển khoản, ';
        }
        if (formatNumberToFloat(objHD.TienTheGiaTri) > 0) {
            pthuc = 'Thẻ giá trị, ';
        }
        if (formatNumberToFloat(objHD.TienDoiDiem) > 0) {
            pthuc += 'POS, ';
        }
        if (formatNumberToFloat(objHD.TienDatCoc) > 0) {
            pthuc += 'Tiền cọc, ';
        }
        objPrint.PhuongThucTT = Remove_LastComma(pthuc);

        // nhanvienthuchien
        let nvHoaDon = '';
        let nvHoaDon_inCK = '';
        if (objHD.BH_NhanVienThucHiens !== null && objHD.BH_NhanVienThucHiens.length > 0) {
            for (let i = 0; i < objHD.BH_NhanVienThucHiens.length; i++) {
                let nv = objHD.BH_NhanVienThucHiens[i];
                nvHoaDon += nv.TenNhanVien + ', ';
                nvHoaDon_inCK += nv.TenNhanVien.concat(nv.PT_ChietKhau > 0 ? ' ('.concat(nv.PT_ChietKhau, ' %)') : ' ('.concat(formatNumber3Digit(nv.TienChietKhau), ')'), ', ');
            }
        }
        objPrint.ChietKhauNVHoaDon = Remove_LastComma(nvHoaDon);
        objPrint.ChietKhauNVHoaDon_InGtriCK = Remove_LastComma(nvHoaDon_inCK);
        return objPrint;
    }
    function GetCTHDPrint_Format(arr) {
        var cthdPrint = [];
        for (let i = 0, li = arr.length; i < li; i++) {
            let itFor = $.extend({}, arr[i]);
            let dongia = formatNumberToFloat(itFor.DonGia);
            let tienGiam = formatNumberToFloat(itFor.TienChietKhau);
            let tienthue = formatNumberToFloat(itFor.TienThue);
            let soluong = formatNumberToFloat(itFor.SoLuong);
            itFor.DonGia = formatNumber3Digit(dongia);
            itFor.TienChietKhau = formatNumber3Digit(tienGiam);
            itFor.TienThue = formatNumber3Digit(tienthue);
            itFor.GiaBan = formatNumber3Digit(dongia - tienGiam);
            itFor.SoLuong = formatNumber3Digit(itFor.SoLuong, 4);
            itFor.ThanhTien = formatNumber3Digit(itFor.ThanhTien);
            itFor.ThanhToan = formatNumber3Digit(soluong * (dongia - tienGiam + tienthue));
            itFor.ThanhTienTruocCK = formatNumber3Digit(dongia * soluong);
            itFor.SoLuongDVDaSuDung = 0;
            itFor.SoLuongDVConLai = 0;
            itFor.BH_ThanhTien = 0;

            if (itFor.ChatLieu === '4') {
                for (let m = 0; m < vmNKGoiBaoDuong.listData.GoiDichVu.length; m++) {
                    let for1 = vmNKGoiBaoDuong.listData.GoiDichVu[m];
                    for (let j = 0; j < for1.lstDetail.length; j++) {
                        let for2 = for1.lstDetail[j];
                        for (let k = 0; k < for2.ComBo.length; k++) {
                            let for3 = for2.ComBo[k];
                            if (itFor.ID_ChiTietGoiDV === for3.ID_ChiTietGoiDV) {
                                itFor.SoLuongDVDaSuDung = for3.SoLuongDung + soluong;
                                itFor.SoLuongDVConLai = for3.TangKem ? for3.SoLuongTang - itFor.SoLuongDVDaSuDung : for3.SoLuongMua - itFor.SoLuongDVDaSuDung;
                                break;
                            }
                        }
                    }
                }
            }

            for (let k = 0; k < itFor.HangCungLoais.length; k++) {
                let cungloai = itFor.HangCungLoais[k];
                let dongia1 = formatNumberToFloat(cungloai.DonGia);
                let tienGiam1 = formatNumberToFloat(cungloai.TienChietKhau);
                let soluong1 = formatNumberToFloat(cungloai.SoLuong);
                let bh_tt1 = soluong1 * formatNumberToFloat(cungloai.DonGiaBaoHiem);
                itFor.HangCungLoais[k].SoLuong = formatNumber3Digit(soluong1);
                itFor.HangCungLoais[k].TienChietKhau = formatNumber3Digit(tienGiam1);
                itFor.HangCungLoais[k].TienThue = formatNumber3Digit(cungloai.TienThue);
                itFor.HangCungLoais[k].DonGia = formatNumber3Digit(dongia1);
                itFor.HangCungLoais[k].DonGiaBaoHiem = formatNumber3Digit(cungloai.DonGiaBaoHiem);
                itFor.HangCungLoais[k].BH_ThanhTien = formatNumber3Digit(bh_tt1);
                itFor.HangCungLoais[k].GiaBan = formatNumber3Digit(dongia1 - tienGiam1);
                itFor.HangCungLoais[k].ThanhTien = formatNumber3Digit(cungloai.ThanhTien);
                itFor.HangCungLoais[k].ThanhToan = formatNumber3Digit(cungloai.ThanhToan);
                itFor.HangCungLoais[k].SoLuongDVDaSuDung = 0;
                itFor.HangCungLoais[k].SoLuongDVConLai = 0;
            }

            // manv thuchien, tuvan
            let nvTH = '';
            let nvTV = '';
            let th_CoCK = '';
            let tv_CoCK = '';
            for (let k = 0; k < itFor.BH_NhanVienThucHien.length; k++) {
                let nvien = itFor.BH_NhanVienThucHien[k];
                switch (nvien.ThucHien_TuVan) {
                    case true:
                        nvTH += nvien.MaNhanVien + ', ';
                        th_CoCK += nvien.TenNhanVien.concat(nvien.PT_ChietKhau > 0 ? ' ('.concat(nvien.PT_ChietKhau, ' %)') : ' ('.concat(formatNumber3Digit(nvien.TienChietKhau), ')'), ', ');
                        break;
                    case false:
                        nvTV += nvien.MaNhanVien + ', ';
                        tv_CoCK += nvien.TenNhanVien.concat(nvien.PT_ChietKhau > 0 ? ' ('.concat(nvien.PT_ChietKhau, ' %)') : ' ('.concat(formatNumber3Digit(nvien.TienChietKhau), ')'), ', ');
                        break;
                }
            }
            itFor.NVThucHienDV_CoCK = Remove_LastComma(th_CoCK);
            itFor.NVTuVanDV_CoCK = Remove_LastComma(tv_CoCK);
            itFor.MaNVThucHien = Remove_LastComma(nvTH);
            itFor.MaNVTuVan = Remove_LastComma(nvTV);

            cthdPrint.push(itFor);
        }

        // order by STT ASC before print (in theo thứ tự Ngược so với thứ tự hiển thị trên hóa đơn ct (từ dưới lên))
        cthdPrint = cthdPrint.sort(function (a, b) {
            var x = a.SoThuTu, y = b.SoThuTu;
            return x > y ? 1 : x < y ? -1 : 0
        });
        return cthdPrint;
    }
    // get infor HD,CTHD offline
    self.goDetail = function (item) {
        $('#getoffline').modal('hide');
        $('#txtSearchHH').attr("disabled", "disabled");

        var idRandom = item.IDRandom;
        _maHoaDon = item.MaHoaDon;
        self.IDPhongBan_Chosing(item.ID_ViTri);// assign to do active PhongBan at SoDoPhong

        // disable search HangHoa
        // get chi tiet HoaDon with MHD ='HDO'
        var lstHD = localStorage.getItem(lcListHD);
        lstHD = JSON.parse(lstHD);
        var itemEx = GetHDOpening_byIDRandom(idRandom, lstHD);
        if (itemEx.length > 0) {
            BindHD_byIDRandom(idRandom);
            BindCTHD_byIDRandomHD(idRandom);
            GetInForCustomer_byID(itemEx[0].ID_DoiTuong);
            self.SetNhanVien(itemEx[0].ID_NhanVien);
            self.SetBangGia(itemEx[0].ID_BangGia);

            // chek if item is opening and exist
            var blExist = false;
            if (self.PhongBanSelected().length > 0) {
                $.map(self.PhongBanSelected(), function (item) {
                    if (item.IDRandom === _maHoaDon) {
                        blExist = true;
                        return;
                    }
                })
            }
            if (blExist) {
                GetCurrentPage_byMaHoaDon(_maHoaDon);
                $('.bill-bxslide li.using').removeClass('using');
                // add class 'using' li with maHoaDon
                $('.bill-bxslide li font').each(function () {
                    if ($(this).text() === _maHoaDon) {
                        $(this).parent().addClass('using');
                        return;
                    }
                });
            }
            else {
                // push
                self.PhongBanSelected.push(itemEx[0]);
                // update Status = 1 (HDoffline)
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].MaHoaDon === _maHoaDon) {
                        lstHD[i].Status = 1;
                        break;
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                localStorage.setItem(lcMaHD, _maHoaDon);
                GetCurrentPage_byMaHoaDon(_maHoaDon);
            }
        }
        $('input,select').attr('disabled', 'disabled');
        // visible textbox, button
        $('.inner-setup, .parent-price-1, #txtDaThanhToan').attr('disabled', 'disabled');
        $('#ddlDMChungTus').removeAttr('disabled');
        Caculator_AmountProduct();
        SetBorder_LotEnd_CTHD();
    }
    // if KH offline: 1. Don't saved --> save KhachHang in DB, after save HoaDon
    // else (2): get ID_DoiTuong saved, in assign HoaDon and save HoaDon
    function Check_KHOffline_AndSaveHoaDon(myData) {
        var idDTuongHD = myData.objHoaDon.ID_DoiTuong;
        var lstDoiTuong = localStorage.getItem(lcDM_DoiTuong);
        var itemDoiTuong = [];
        if (lstDoiTuong !== null) {
            var lstDoiTuong1 = JSON.parse(lstDoiTuong);
            itemDoiTuong = $.grep(lstDoiTuong1, function (item) {
                return item.ID === idDTuongHD;
            });
        }
        // if exist KH offline
        if (itemDoiTuong.length > 0) {
            // check ID_DoiTuong if KH offline (if KH offline saved)
            var afterDT = localStorage.getItem(lcDM_DoiTuong);
            if (afterDT !== null) {
                afterDT = JSON.parse(afterDT);
                let itemDToff = $.grep(afterDT, function (x) {
                    return x.MaDoiTuong === idDTuongHD;
                });
                if (itemDToff.length > 0) {
                    idDTuongHD = itemDToff[0].ID;
                }
            }
            if (idDTuongHD !== null && idDTuongHD.length >= 36) {
                myData.objHoaDon.ID_DoiTuong = idDTuongHD;
                PostHD_SoQuy_DongBo(myData);
            }
            else {
                // 1.add DoiTuong, HoaDon
                AddKhachHang_HoaDon(itemDoiTuong[0], myData, true, false);
            }
        }
        else {
            // check ID_DoiTuong if KH offline (if KH offline saved)
            var afterDT2 = localStorage.getItem(lcDM_DoiTuong);
            if (afterDT2 !== null) {
                afterDT2 = JSON.parse(afterDT2);
                let itemDToff = $.grep(afterDT2, function (x) {
                    return x.MaDoiTuong === idDTuongHD;
                });
                if (itemDToff.length > 0) {
                    idDTuongHD = itemDToff[0].ID;
                }
            }
            // assign again ID_DoiTuong 
            myData.objHoaDon.ID_DoiTuong = idDTuongHD;
            if (idDTuongHD === null || idDTuongHD.length >= 36) {
                PostHD_SoQuy_DongBo(myData);
            }
        }
    }
    function GetID_DoiTuong_THOffline(objHD) {
        var idDTuongHD = objHD.ID_DoiTuong;
        var lstDoiTuong = localStorage.getItem(lcDM_DoiTuong);
        if (lstDoiTuong !== null) {
            var lstDoiTuong1 = JSON.parse(lstDoiTuong);
            var itemDoiTuong = $.grep(lstDoiTuong1, function (item) {
                return item.ID === idDTuongHD;
            });
            if (itemDoiTuong.length > 0) {
                // check ID_DoiTuong if KH offline (if KH offline saved)
                var afterDT = localStorage.getItem(lcDM_DoiTuong);
                if (afterDT !== null) {
                    afterDT = JSON.parse(afterDT);
                    var itemDToff = $.grep(afterDT, function (x) {
                        return x.MaDoiTuong === idDTuongHD;
                    });
                    if (itemDToff.length > 0) {
                        idDTuongHD = itemDToff[0].ID;
                    }
                }
            }
        }
        return idDTuongHD;
    }
    self.DongBoHoa = function () {
        $('#btnDongBoHoa').attr('disabled', 'disabled');
        $('.divDongBoHoa').gridLoader();
        // getListHoadOn_offline
        var lst_HDoffline = localStorage.getItem(lcListHD);
        var lstCTHD = localStorage.getItem(lcListCTHD);
        var lstDoiTuong = localStorage.getItem(lcDM_DoiTuong);
        if (lst_HDoffline !== null) {
            lst_HDoffline = JSON.parse(lst_HDoffline);

            var lstHD_byUser = $.grep(lst_HDoffline, function (x) {
                return x.StatusOffline === true && x.NguoiTao === userLogin;
            })
            if (lstHD_byUser.length === 0) {
                ShowMessage_Danger('Không tồn tại hóa đơn offline');
                $('.divDongBoHoa').gridLoader({ show: false });
                $('#btnDongBoHoa').removeAttr('disabled');
                return;
            }
            // lst HD offline
            var lstHDO = $.grep(lstHD_byUser, function (item) {
                return item.LoaiHoaDon === 1;
            });
            // lst GDV offline
            var lstGDVO = $.grep(lstHD_byUser, function (item) {
                return item.LoaiHoaDon === 19;
            });
            var lstDHO = $.grep(lstHD_byUser, function (item) {
                return item.LoaiHoaDon === 3;
            });
            // lst HDTrahang offline
            var lstTHO = $.grep(lstHD_byUser, function (item) {
                return item.LoaiHoaDon === 6;
            });
            var productKMs = localStorage.getItem(lcProductKM_HoaDon);
            if (productKMs !== null) {
                productKMs = JSON.parse(productKMs);
            }
            else {
                productKMs = [];
            }
            let arrIDRandom = [];
            switch (self.selectLoaiChungTu()) {
                case 0: // tat ca
                    if (lstCTHD !== null) {
                        lstCTHD = JSON.parse(lstCTHD);
                        // HDoffline
                        var maHoaDon = '';
                        for (let i = 0; i < lstHDO.length; i++) {
                            maHoaDon = lstHDO[i].MaHoaDon;
                            var arrHangHoa = [];
                            for (let j = 0; j < lstCTHD.length; j++) {
                                if (lstCTHD[j].MaHoaDon === maHoaDon) {
                                    // add Hang Khuyen Mai
                                    for (let k = 0; k < lstCTHD[j].HangHoa_KM.length; k++) {
                                        arrHangHoa.push(lstCTHD[j].HangHoa_KM[k]);
                                    }
                                    // add CTHD if SoLuong > 0
                                    //if (lstCTHD[j].SoLuong > 0) {
                                    arrHangHoa.push(lstCTHD[j]);
                                    //}
                                    // add Hang Hoa theo Lo
                                    for (let m = 1; m < lstCTHD[j].DM_LoHang.length; m++) {
                                        //if (lstCTHD[j].DM_LoHang[m].SoLuong > 0) {
                                        arrHangHoa.push(lstCTHD[j].DM_LoHang[m]);
                                        //}
                                    }
                                    // add HangCungLoai
                                    for (let m = 0; m < lstCTHD[j].HangCungLoais.length; m++) {
                                        //if (lstCTHD[j].HangCungLoais[m].SoLuong > 0) {
                                        arrHangHoa.push(lstCTHD[j].HangCungLoais[m]);
                                        //}
                                    }
                                }
                            }
                            // add product KhuyenMai of HoaDon into CTHD
                            for (let k = 0; k < productKMs.length; k++) {
                                if (productKMs[k].MaHoaDon === maHoaDon) {
                                    arrHangHoa.push(productKMs[k]);
                                }
                            }
                            // add GhiChu_KhuyenMai for objHD --> to do save DB
                            let ghichuKMHD = '';
                            for (let j = 0; j < arrHangHoa.length; j++) {
                                if (arrHangHoa[j].IsKhuyenMai) {
                                    ghichuKMHD += arrHangHoa[j].TenKhuyenMai + '<br /> ';
                                }
                            }
                            ghichuKMHD += lstHDO[i].KhuyenMai_GhiChu;
                            lstHDO[i].KhuyenMai_GhiChu = ghichuKMHD;
                            // check NgayLapHD is null, and get
                            let ngaylapHD = GetNgayLapHD_whenSave(lstHDO[i].NgayLapHoaDon);
                            lstHDO[i].NgayLapHoaDon = ngaylapHD;
                            // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                            arrHangHoa = GetArrCTHD_withIDLoHangOtherNull(arrHangHoa);
                            if (arrHangHoa.length > 0) {
                                let myData = {};
                                // ID_DonVi
                                if (lstHDO[i].ID_DonVi === '' || lstHDO[i].ID_DonVi === null || lstHDO[i].ID_DonVi === undefined) {
                                    lstHDO[i].ID_DonVi = id_DonVi;
                                }
                                myData.objHoaDon = lstHDO[i];
                                myData.objCTHoaDon = arrHangHoa;
                                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                // save KH offline + HD
                                Check_KHOffline_AndSaveHoaDon(myData);
                            }
                        }
                        // GDV offline
                        for (let i = 0; i < lstGDVO.length; i++) {
                            maHoaDon = lstGDVO[i].MaHoaDon;
                            var arrHangHoa_GDV = [];
                            for (let j = 0; j < lstCTHD.length; j++) {
                                if (lstCTHD[j].MaHoaDon === maHoaDon) {
                                    // add Hang Khuyen Mai
                                    for (let k = 0; k < lstCTHD[j].HangHoa_KM.length; k++) {
                                        arrHangHoa_GDV.push(lstCTHD[j].HangHoa_KM[k]);
                                    }
                                    if (lstCTHD[j].SoLuong > 0) {
                                        arrHangHoa_GDV.push(lstCTHD[j]);
                                    }
                                    // add Hang Hoa theo Lo
                                    for (let m = 1; m < lstCTHD[j].DM_LoHang.length; m++) {
                                        if (lstCTHD[j].DM_LoHang[m].SoLuong > 0) {
                                            arrHangHoa_GDV.push(lstCTHD[j].DM_LoHang[m]);
                                        }
                                    }
                                    for (let m = 0; m < lstCTHD[j].HangCungLoais.length; m++) {
                                        if (lstCTHD[j].HangCungLoais[m].SoLuong > 0) {
                                            arrHangHoa_GDV.push(lstCTHD[j].HangCungLoais[m]);
                                        }
                                    }
                                }
                            }
                            // add product KhuyenMai of HoaDon into CTHD
                            for (let k = 0; k < productKMs.length; k++) {
                                if (productKMs[k].MaHoaDon === maHoaDon) {
                                    arrHangHoa_GDV.push(productKMs[k]);
                                }
                            }
                            // add GhiChu_KhuyenMai for objHD --> to do save DB
                            let ghichuKMHD = '';
                            for (let j = 0; j < arrHangHoa_GDV.length; j++) {
                                if (arrHangHoa_GDV[j].IsKhuyenMai) {
                                    ghichuKMHD += arrHangHoa_GDV[j].TenKhuyenMai + '<br /> ';
                                }
                            }
                            ghichuKMHD += lstGDVO[i].KhuyenMai_GhiChu;
                            lstGDVO[i].KhuyenMai_GhiChu = ghichuKMHD;
                            // check NgayLapHD is null, and get
                            let ngaylapHD = GetNgayLapHD_whenSave(lstGDVO[i].NgayLapHoaDon);
                            lstGDVO[i].NgayLapHoaDon = ngaylapHD;
                            // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                            arrHangHoa_GDV = GetArrCTHD_withIDLoHangOtherNull(arrHangHoa_GDV);
                            if (arrHangHoa_GDV.length > 0) {
                                let myData = {};
                                // ID_DonVi
                                if (lstGDVO[i].ID_DonVi === '' || lstGDVO[i].ID_DonVi === null || lstGDVO[i].ID_DonVi === undefined) {
                                    lstGDVO[i].ID_DonVi = id_DonVi;
                                }
                                myData.objHoaDon = lstGDVO[i];
                                myData.objCTHoaDon = arrHangHoa_GDV;
                                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                // save KH offline + HD
                                Check_KHOffline_AndSaveHoaDon(myData);
                            }
                        }
                        // DatHangOffline
                        for (let i = 0; i < lstDHO.length; i++) {
                            maHoaDon = lstDHO[i].MaHoaDon;
                            var arrHangHoaDH = [];
                            for (let j = 0; j < lstCTHD.length; j++) {
                                if (lstCTHD[j].MaHoaDon === maHoaDon) {
                                    if (lstCTHD[j].SoLuong > 0) {
                                        lstCTHD[j].ID_ChiTietGoiDV = null;
                                        lstCTHD[j].ChatLieu = '';
                                        arrHangHoaDH.push(lstCTHD[j]);
                                    }
                                    // add Hang Hoa theo Lo
                                    for (let m = 1; m < lstCTHD[j].DM_LoHang.length; m++) {
                                        if (lstCTHD[j].DM_LoHang[m].SoLuong > 0) {
                                            lstCTHD[j].DM_LoHang[m].ID_ChiTietGoiDV = null;
                                            lstCTHD[j].DM_LoHang[m].ChatLieu = '';
                                            arrHangHoaDH.push(lstCTHD[j].DM_LoHang[m]);
                                        }
                                    }
                                    for (let m = 0; m < lstCTHD[j].HangCungLoais.length; m++) {
                                        if (lstCTHD[j].HangCungLoais[m].SoLuong > 0) {
                                            lstCTHD[j].HangCungLoais[m].ID_ChiTietGoiDV = null;
                                            lstCTHD[j].HangCungLoais[m].ChatLieu = '';
                                            arrHangHoaDH.push(lstCTHD[j].HangCungLoais[m]);
                                        }
                                    }
                                }
                            }
                            // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                            arrHangHoaDH = GetArrCTHD_withIDLoHangOtherNull(arrHangHoaDH);
                            if (arrHangHoaDH.length > 0) {
                                let myData = {};
                                // ID_DonVi
                                if (lstDHO[i].ID_DonVi === '' || lstDHO[i].ID_DonVi === null || lstDHO[i].ID_DonVi === undefined) {
                                    lstDHO[i].ID_DonVi = id_DonVi;
                                }
                                // check NgayLapHD is null, and get
                                let ngaylapHD = GetNgayLapHD_whenSave(lstDHO[i].NgayLapHoaDon);
                                lstDHO[i].NgayLapHoaDon = ngaylapHD;
                                myData.objHoaDon = lstDHO[i];
                                myData.objCTHoaDon = arrHangHoaDH;
                                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                // neu cap nhat bao gia: tien khachTT = tien phaiTT (old) + phaiTT
                                if (myData.objHoaDon.ID !== null && myData.objHoaDon.ID !== const_GuidEmpty) {
                                    myData.objHoaDon.PhaiThanhToan = lstDHO[i].KhachDaTra + lstDHO[i].DaThanhToan;
                                }
                                Check_KHOffline_AndSaveHoaDon(myData);
                            }
                        }
                        // HDTraHang offline
                        if (lstTHO.length > 0) {
                            for (let i = 0; i < lstTHO.length; i++) {
                                let itFor = lstTHO[i];
                                // get diem KH --> update DB
                                maHoaDon = itFor.MaHoaDon;
                                let arrHangHoaTH = [];
                                for (let j = 0; j < lstCTHD.length; j++) {
                                    if (lstCTHD[j].MaHoaDon === maHoaDon) {
                                        if (lstCTHD[j].SoLuong > 0) {
                                            arrHangHoaTH.push(lstCTHD[j]);
                                        }
                                        // push DM_Lo
                                        for (let m = 1; m < lstCTHD[j].DM_LoHang.length; m++) {
                                            if (lstCTHD[j].DM_LoHang[m].SoLuong > 0) {
                                                arrHangHoaTH.push(lstCTHD[j].DM_LoHang[m]);
                                            }
                                        }
                                        for (let m = 0; m < lstCTHD[j].HangCungLoais.length; m++) {
                                            if (lstCTHD[j].HangCungLoais[m].SoLuong > 0) {
                                                arrHangHoaTH.push(lstCTHD[j].HangCungLoais[m]);
                                            }
                                        }
                                    }
                                }
                                // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                                arrHangHoaTH = GetArrCTHD_withIDLoHangOtherNull(arrHangHoaTH);
                                if (arrHangHoaTH.length > 0) {
                                    let myData = {};
                                    // ID_DonVi
                                    if (itFor.ID_DonVi === '' || itFor.ID_DonVi === null || itFor.ID_DonVi === undefined) {
                                        itFor.ID_DonVi = id_DonVi;
                                    }
                                    let ngaylapHD = GetNgayLapHD_whenSave(itFor.NgayLapHoaDon);
                                    let phaiTTTraHang = formatNumberToFloat(itFor.TongGiaGocHangTra) - formatNumberToFloat(itFor.TongGiamGiaDB)
                                        + formatNumberToFloat(itFor.TongThueDB) - formatNumberToFloat(itFor.TongChiPhiHangTra);
                                    // if ThietLapTich Diem === true and ID_DoiTuong !== null --> update DiemGiaoDich for HD TraHang
                                    let diemGD = 0;
                                    if (itFor.FromHDTichDiem) {
                                        diemGD = GetDiemGiaoDich_HDTraHang(itFor.TongGiaGocHangTra - itFor.TongGiamGiaDB);
                                    }
                                    // check KH offline
                                    let objTraHang = {
                                        LoaiHoaDon: 6,
                                        ID: const_GuidEmpty,
                                        ID_HoaDon: itFor.ID_HoaDon, // ID_HoaDon goc
                                        ID_DoiTuong: itFor.ID_DoiTuong,
                                        ID_BangGia: itFor.ID_BangGia,
                                        ID_NhanVien: itFor.ID_NhanVien,
                                        ID_DonVi: itFor.ID_DonVi,
                                        NgayLapHoaDon: ngaylapHD,
                                        TongTienHang: itFor.TongGiaGocHangTra, // 
                                        PhaiThanhToan: phaiTTTraHang,
                                        TongGiamGia: itFor.TongGiamGiaDB,
                                        TongChiPhi: itFor.TongChiPhiHangTra,
                                        DaThanhToan: itFor.DaTraKhach,
                                        PTThueHoaDon: 0,
                                        TongTienThue: itFor.TongThueDB,
                                        ChoThanhToan: false,
                                        DienGiai: itFor.DienGiai,
                                        DVTinhGiam: '%',
                                        PTGiam: 0,
                                        Status: 1, // open(1) - close(0) : use HDOffline
                                        MaHoaDon: maHoaDon,
                                        StatusOffline: false,
                                        TienMat: itFor.TienMat, // luu vao So chi
                                        TienGui: itFor.TienGui,
                                        TienThua: 0,
                                        DiemGiaoDich: diemGD,
                                        MaHoaDonTraHang: itFor.MaHoaDonTraHang, // used to get when save history 
                                        ID_TaiKhoanChuyenKhoan: itFor.ID_TaiKhoanChuyenKhoan,
                                        ID_TaiKhoanPos: itFor.ID_TaiKhoanPos,
                                        //IsTraGoiDV: itFor.IsTraGoiDV,
                                        BH_NhanVienThucHiens: [],
                                    };
                                    let phaiTTMuaMoi = formatNumberToFloat(itFor.TongTienHang) - formatNumberToFloat(itFor.TongGiamGia)
                                        + formatNumberToFloat(itFor.TongTienThue);

                                    let objMuaHang = {
                                        LoaiHoaDon: 1,
                                        ID: const_GuidEmpty,
                                        ID_DoiTuong: itFor.ID_DoiTuong,
                                        ID_BangGia: itFor.ID_BangGia,
                                        ID_NhanVien: itFor.ID_NhanVien,
                                        ID_DonVi: itFor.ID_DonVi,
                                        NgayLapHoaDon: ngaylapHD,
                                        TongTienHang: itFor.TongTienHang,
                                        PhaiThanhToan: phaiTTMuaMoi,
                                        TongGiamGia: itFor.TongGiamGia,
                                        DaThanhToan: itFor.DaThanhToan,
                                        PTThueHoaDon: itFor.PTThueHoaDon,
                                        TongTienThue: itFor.TongTienThue,
                                        ChoThanhToan: false,
                                        DienGiai: itFor.DienGiai,
                                        DVTinhGiam: '%',
                                        TongChietKhau: itFor.TongChietKhau,
                                        Status: 1,
                                        MaHoaDon: null,
                                        StatusOffline: false,
                                        TienMat: itFor.TienMat, // luu vao So thu
                                        TienGui: itFor.TienGui,
                                        TienThua: itFor.TienThua,
                                        DiemKhuyenMai: itFor.DiemKhuyenMai,
                                        DiemGiaoDich: itFor.DiemGiaoDich,
                                        DiemQuyDoi: itFor.DiemQuyDoi,
                                        TTBangDiem: itFor.TTBangDiem,
                                        DiemHienTai: itFor.DiemHienTai,
                                        BH_NhanVienThucHiens: itFor.BH_NhanVienThucHiens,
                                        ID_TaiKhoanChuyenKhoan: itFor.ID_TaiKhoanChuyenKhoan,
                                        ID_TaiKhoanPos: itFor.ID_TaiKhoanPos,
                                        ID_ViTri: itFor.ID_ViTri,
                                        CreateTime: itFor.CreateTime,
                                        ThoiGianThucHien: itFor.ThoiGianThucHien,
                                        TongThueKhachHang: itFor.TongTienThue,
                                    };

                                    let loaiHD_DoiTra = 1;
                                    if (!commonStatisJs.CheckNull(itFor.NgayApDungGoiDV)) {
                                        loaiHD_DoiTra = 19;
                                        objMuaHang.NgayApDungGoiDV = moment(itFor.NgayApDungGoiDV, 'DD/MM/YYYY').format('YYYY-MM-DD');
                                    }
                                    if (!commonStatisJs.CheckNull(itFor.HanSuDungGoiDV)) {
                                        objMuaHang.HanSuDungGoiDV = moment(itFor.HanSuDungGoiDV, 'DD/MM/YYYY').format('YYYY-MM-DD');
                                    }

                                    objMuaHang.LoaiHoaDon = loaiHD_DoiTra;

                                    // check and assign TienTheGiTri for objHoaDon --> save Quy_HoaDon
                                    if (formatNumberToFloat(itFor.PhaiTraKhach) > 0) {
                                        objTraHang.TienTheGiaTri = itFor.TienTheGiaTri;
                                    }
                                    else {
                                        objMuaHang.TienTheGiaTri = itFor.TienTheGiaTri;
                                    }
                                    myData.objHoaDon = objTraHang;
                                    myData.objCTHoaDon = arrHangHoaTH;
                                    myData.objTHO = itFor;
                                    myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                    UpdateInforKH_toDB(objTraHang.ID_DoiTuong);
                                    console.log('myDataTH ', myData)

                                    ajaxHelper(BHHoaDonUri + 'PostBH_HoaDon_SoQuy_Spa_NKySuDung', 'POST', myData).done(function (x) {
                                        if (x.res) {
                                            var itemDB = x.data;
                                            objTraHang.ID = itemDB.ID;
                                            objTraHang.MaHoaDon = itemDB.MaHoaDon;
                                            objTraHang.NgayLapHoaDon = itemDB.NgayLapHoaDon;

                                            // insert quy if Tong Tra > Khach Mua Moi
                                            if (formatNumberToFloat(myData.objTHO.DaTraKhach) > 0) {
                                                GetQuyHoaDonfromHD_andInsert(objTraHang);
                                            }
                                            var lstCTHD_MH = localStorage.getItem(lcListCTHD_DoiTra);
                                            var arrCTHD_MuaHang = [];
                                            var arrCTHD_MuaHang_LoHang = [];
                                            if (lstCTHD_MH !== null) {
                                                lstCTHD_MH = JSON.parse(lstCTHD_MH);
                                                arrCTHD_MuaHang = $.grep(lstCTHD_MH, function (item) {
                                                    return item.MaHoaDon === itemDB.MaHoaDon;
                                                });
                                                for (let n = 0; n < arrCTHD_MuaHang.length; n++) {
                                                    if (arrCTHD_MuaHang[n].SoLuong > 0) {
                                                        arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[n]);
                                                    }
                                                    for (let o = 1; o < arrCTHD_MuaHang[n].DM_LoHang.length; o++) {
                                                        arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[n].DM_LoHang[o]);
                                                    }
                                                    for (let m = 0; m < arrCTHD_MuaHang[n].HangCungLoais.length; m++) {
                                                        arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[n].HangCungLoais[m]);
                                                    }
                                                }
                                            }
                                            // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                                            arrCTHD_MuaHang_LoHang = GetArrCTHD_withIDLoHangOtherNull(arrCTHD_MuaHang_LoHang);
                                            if (arrCTHD_MuaHang.length > 0) {
                                                // save GioVao, GioRa
                                                if (objMuaHang.CreateTime !== 0) {
                                                    var objTime = GetGioVaoRa_ofHD(objMuaHang);
                                                    objMuaHang.GioVao = objTime.GioVao;
                                                    objMuaHang.GioRa = objTime.GioRa;
                                                }
                                                let myDataMH = {};
                                                objMuaHang.ID_HoaDon = itemDB.ID;
                                                myDataMH.objHoaDon = objMuaHang;
                                                myDataMH.objCTHoaDon = arrCTHD_MuaHang_LoHang;
                                                myDataMH.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                                console.log('myDataMH ', myData)

                                                ajaxHelper(BHHoaDonUri + 'PostBH_HoaDon_SoQuy_Spa_NKySuDung', 'POST', myDataMH).done(function (x2) {
                                                    if (x2.res) {
                                                        var itemMH = x2.data;
                                                        objMuaHang.ID = itemMH.ID;
                                                        objMuaHang.MaHoaDon = itemMH.MaHoaDon;
                                                        objMuaHang.NgayLapHoaDon = itemMH.NgayLapHoaDon;

                                                        // insert quy if Khach Mua Moi > Tong Tra
                                                        if (formatNumberToFloat(myData.objTHO.DaThanhToan) > 0) {
                                                            GetQuyHoaDonfromHD_andInsert(objMuaHang);
                                                        }

                                                        lstCTHD_MH = $.grep(lstCTHD_MH, function (item) {
                                                            return item.MaHoaDon.indexOf('O') === -1;
                                                        });
                                                        localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD));
                                                        vmThemMoiKhach.NangNhomKhachHang(objMuaHang.ID_DoiTuong);
                                                    }
                                                })
                                            }
                                        }
                                    }).always(function () {
                                        self.countHDoffilne(0);
                                        self.HoaDonOffline([]);
                                        $('#btnDongBoHoa').removeAttr('disabled');
                                        $('input, select ').removeAttr('disabled');
                                        $('#getoffline').modal('hide');
                                        $('#ptGiam').text(0);
                                    })
                                }
                            }
                        }
                        // delete all HD with HDO
                        lst_HDoffline = $.grep(lst_HDoffline, function (x) {
                            return x.StatusOffline === false;;
                        })
                        localStorage.setItem(lcListHD, JSON.stringify(lst_HDoffline));
                        // get idrandom after
                        for (let i = 0; i < lst_HDoffline.length; i++) {
                            arrIDRandom.push(lst_HDoffline[i].IDRandom);
                        }
                        // delete HDO in lstCTHoaDon
                        lstCTHD = $.grep(lstCTHD, function (x) {
                            return $.inArray(x.IDRandomHD, arrIDRandom) > -1;
                        })
                        localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                        // gọi func sau khi xóa cache HD, CTHD: vì khi đồng bộ, async = true chạycác dòng lệnh theo thứ tự
                        Call_6Func();
                    }
                    // xoa all cache lstDoiTuong offline
                    localStorage.removeItem(lcDM_DoiTuong);
                    // remove all cache KM_of HD if HDO + DHO
                    productKMs = $.grep(productKMs, function (x) {
                        return x.MaHoaDon.indexOf('HDO') === -1 || (x.MaHoaDon.indexOf('HDO') > -1 && x.NguoiTao !== userLogin);
                    });
                    localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(productKMs));
                    break;
                case 1: // hoa don
                    if (lstCTHD !== null) {
                        let lstCTHDCase1 = JSON.parse(lstCTHD);
                        let maHoaDonHDO = '';
                        for (let k = 0; k < lstHDO.length; k++) {
                            maHoaDonHDO = lstHDO[k].MaHoaDon;
                            let arrHangHoaCase1 = [];
                            for (let j = 0; j < lstCTHDCase1.length; j++) {
                                if (lstCTHDCase1[j].MaHoaDon === maHoaDonHDO) {
                                    // push Hang KM
                                    for (let m = 0; m < lstCTHDCase1[j].HangHoa_KM.length; m++) {
                                        arrHangHoaCase1.push(lstCTHDCase1[j].HangHoa_KM[m]);
                                    }
                                    // push DM_Lo
                                    for (let n = 1; n < lstCTHDCase1[j].DM_LoHang.length; n++) {
                                        arrHangHoaCase1.push(lstCTHDCase1[j].DM_LoHang[n]);
                                    }
                                    for (let n = 0; n < lstCTHDCase1[j].HangCungLoais.length; n++) {
                                        arrHangHoaCase1.push(lstCTHDCase1[j].HangCungLoais[n]);
                                    }
                                    arrHangHoaCase1.push(lstCTHDCase1[j]);
                                }
                            }
                            // add product KhuyenMai of HoaDon into CTHD
                            let productKMs = localStorage.getItem(lcProductKM_HoaDon);
                            if (productKMs !== null) {
                                productKMs = JSON.parse(productKMs);
                                for (let m = 0; m < productKMs.length; m++) {
                                    if (productKMs[m].MaHoaDon === maHoaDonHDO) {
                                        arrHangHoaCase1.push(productKMs[m]);
                                    }
                                }
                            }
                            // add GhiChu_KhuyenMai for objHD --> to do save DB
                            let ghichuKMHD = '';
                            for (let j = 0; j < arrHangHoaCase1.length; j++) {
                                if (arrHangHoaCase1[j].IsKhuyenMai) {
                                    ghichuKMHD += arrHangHoaCase1[j].TenKhuyenMai + '<br /> ';
                                }
                            }
                            ghichuKMHD += lstHDO[k].KhuyenMai_GhiChu;
                            lstHDO[k].KhuyenMai_GhiChu = ghichuKMHD;
                            // remove ID_LoHang = null
                            arrHangHoaCase1 = GetArrCTHD_withIDLoHangOtherNull(arrHangHoaCase1);
                            if (arrHangHoaCase1.length > 0) {
                                let myData = {};
                                // ID_DonVi
                                if (lstHDO[k].ID_DonVi === null || lstHDO[k].ID_DonVi === undefined) {
                                    lstHDO[k].ID_DonVi = id_DonVi;
                                }
                                let ngaylapHD = GetNgayLapHD_whenSave(lstHDO[k].NgayLapHoaDon);
                                lstHDO[k].NgayLapHoaDon = ngaylapHD;
                                myData.objHoaDon = lstHDO[k];
                                myData.objCTHoaDon = arrHangHoaCase1;
                                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;

                                Check_KHOffline_AndSaveHoaDon(myData);
                            }
                        }
                        // delete all HD MuaHang offline
                        lst_HDoffline = $.grep(lst_HDoffline, function (item) {
                            return item.StatusOffline === false
                                || (item.StatusOffline === true && item.LoaiHoaDon !== 1)
                                || (item.StatusOffline === true && item.NguoiTao !== userLogin);
                        });
                        localStorage.setItem(lcListHD, JSON.stringify(lst_HDoffline));
                        // get idrandom after
                        for (let i = 0; i < lst_HDoffline.length; i++) {
                            arrIDRandom.push(lst_HDoffline[i].IDRandom);
                        }
                        // delete HDO in lstCTHoaDon
                        lstCTHD = $.grep(lstCTHD, function (x) {
                            return $.inArray(x.IDRandomHD, arrIDRandom) > -1;
                        });
                        localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                    }
                    productKMs = $.grep(productKMs, function (x) {
                        return x.MaHoaDon.indexOf('HDO') === -1;
                    });
                    localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(productKMs));
                    RemoveKHoffline_afterSave();
                    // gọi func sau khi xóa cache HD, CTHD: vì khi đồng bộ, async = true chạycác dòng lệnh theo thứ tự
                    Call_6Func();
                    break;
                case 3: // dathang
                    if (lstCTHD !== null) {
                        let lstCTHDCase1 = JSON.parse(lstCTHD);
                        let maHoaDonHDO = '';
                        for (let k = 0; k < lstDHO.length; k++) {
                            maHoaDonHDO = lstDHO[k].MaHoaDon;
                            let arrHangHoaCase1 = [];
                            for (let j = 0; j < lstCTHDCase1.length; j++) {
                                if (lstCTHDCase1[j].MaHoaDon === maHoaDonHDO) {
                                    if (lstCTHDCase1[j].SoLuong > 0) {
                                        lstCTHDCase1[j].ID_ChiTietGoiDV = null;
                                        lstCTHDCase1[j].ChatLieu = '';
                                        arrHangHoaCase1.push(lstCTHDCase1[j]);
                                    }
                                    for (let n = 1; n < lstCTHDCase1[j].DM_LoHang.length; n++) {
                                        if (lstCTHDCase1[j].DM_LoHang[n].SoLuong > 0) {
                                            lstCTHDCase1[j].DM_LoHang[n].ID_ChiTietGoiDV = null;
                                            lstCTHDCase1[j].DM_LoHang[n].ChatLieu = '';
                                            arrHangHoaCase1.push(lstCTHDCase1[j].DM_LoHang[n]);
                                        }
                                    }
                                    for (let n = 0; n < lstCTHDCase1[j].HangCungLoais.length; n++) {
                                        if (lstCTHDCase1[j].HangCungLoais[n].SoLuong > 0) {
                                            lstCTHDCase1[j].HangCungLoais[n].ID_ChiTietGoiDV = null;
                                            lstCTHDCase1[j].HangCungLoais[n].ChatLieu = '';
                                            arrHangHoaCase1.push(lstCTHDCase1[j].HangCungLoais[n]);
                                        }
                                    }
                                }
                            }
                            // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                            arrHangHoaCase1 = GetArrCTHD_withIDLoHangOtherNull(arrHangHoaCase1);
                            if (arrHangHoaCase1.length > 0) {
                                let myData = {};
                                // ID_DonVi
                                if (lstDHO[k].ID_DonVi === '' || lstDHO[k].ID_DonVi === null || lstDHO[k].ID_DonVi === undefined) {
                                    lstDHO[k].ID_DonVi = id_DonVi;
                                }
                                // check NgayLapHD is null, and get
                                let ngaylapHD = GetNgayLapHD_whenSave(lstDHO[k].NgayLapHoaDon);
                                lstDHO[k].NgayLapHoaDon = ngaylapHD;
                                myData.objHoaDon = lstDHO[k];
                                myData.objCTHoaDon = arrHangHoaCase1;
                                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                // if update DatHang (BG00..)
                                if (myData.objHoaDon.ID !== null && myData.objHoaDon.ID !== const_GuidEmpty) {
                                    myData.objHoaDon.PhaiThanhToan = lstDHO[k].KhachDaTra + lstDHO[k].DaThanhToan;
                                }
                                Check_KHOffline_AndSaveHoaDon(myData);
                            }
                        }
                        // delete all HD DatHang offline
                        lst_HDoffline = $.grep(lst_HDoffline, function (item) {
                            return item.StatusOffline === false
                                || (item.StatusOffline === true && item.LoaiHoaDon !== 3)
                                || (item.StatusOffline === true && item.NguoiTao !== userLogin);
                        });
                        localStorage.setItem(lcListHD, JSON.stringify(lst_HDoffline));
                        // get idrandom after
                        for (let i = 0; i < lst_HDoffline.length; i++) {
                            arrIDRandom.push(lst_HDoffline[i].IDRandom);
                        }
                        // delete HDO in lstCTHoaDon
                        lstCTHD = $.grep(lstCTHD, function (x) {
                            return $.inArray(x.IDRandomHD, arrIDRandom) > -1;
                        });
                        localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                    }
                    // remove KH offline in cache
                    RemoveKHoffline_afterSave();
                    // gọi func sau khi xóa cache HD, CTHD: vì khi đồng bộ, async = true chạycác dòng lệnh theo thứ tự
                    Call_6Func();
                    break;
                case 6: // tra hang
                    if (lstCTHD !== null) {
                        lstCTHD = JSON.parse(lstCTHD);
                        if (lstTHO.length > 0) {
                            var maHDTHO = '';
                            for (let i = 0; i < lstTHO.length; i++) {
                                maHDTHO = lstTHO[i].MaHoaDon;
                                var arrHangHoaTHCase6 = [];
                                for (let j = 0; j < lstCTHD.length; j++) {
                                    if (lstCTHD[j].MaHoaDon === maHDTHO) {
                                        if (lstCTHD[j].SoLuong > 0) {
                                            arrHangHoaTHCase6.push(lstCTHD[j]);
                                        }
                                        for (let n = 1; n < lstCTHD[j].DM_LoHang.length; n++) {
                                            if (lstCTHD[j].DM_LoHang[n].SoLuong > 0) {
                                                arrHangHoaTHCase6.push(lstCTHD[j].DM_LoHang[n]);
                                            }
                                        }
                                        for (let n = 0; n < lstCTHD[j].HangCungLoais.length; n++) {
                                            if (lstCTHD[j].HangCungLoais[n].SoLuong > 0) {
                                                arrHangHoaTHCase6.push(lstCTHD[j].HangCungLoais[n]);
                                            }
                                        }
                                    }
                                }
                                // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                                arrHangHoaTHCase6 = GetArrCTHD_withIDLoHangOtherNull(arrHangHoaTHCase6);
                                if (arrHangHoaTHCase6 !== '') {
                                    let myData = {};
                                    // ID_DonVi
                                    if (lstTHO[i].ID_DonVi === '' || lstTHO[i].ID_DonVi === null || lstTHO[i].ID_DonVi === undefined) {
                                        lstTHO[i].ID_DonVi = id_DonVi;
                                    }
                                    let diemGD = 0;
                                    if (lstTHO[i].FromHDTichDiem) {
                                        diemGD = GetDiemGiaoDich_HDTraHang(lstTHO[i].TongGiaGocHangTra - lstTHO[i].TongGiamGiaDB);
                                    }

                                    let ngaylapHD = GetNgayLapHD_whenSave(lstTHO[i].NgayLapHoaDon);
                                    let phaiTTTraHang = formatNumberToFloat(lstTHO[i].TongGiaGocHangTra) - formatNumberToFloat(lstTHO[i].TongGiamGiaDB)
                                        + formatNumberToFloat(lstTHO[i].TongThueDB) - formatNumberToFloat(lstTHO[i].TongChiPhiHangTra);
                                    let objTraHang = {
                                        LoaiHoaDon: 6,
                                        ID: const_GuidEmpty,
                                        ID_HoaDon: lstTHO[i].ID_HoaDon, // ID_HoaDon goc
                                        ID_DoiTuong: lstTHO[i].ID_DoiTuong,
                                        ID_BangGia: lstTHO[i].ID_BangGia,
                                        ID_NhanVien: lstTHO[i].ID_NhanVien,
                                        ID_DonVi: lstTHO[i].ID_DonVi,
                                        NgayLapHoaDon: ngaylapHD,
                                        TongTienHang: lstTHO[i].TongGiaGocHangTra, // 
                                        PhaiThanhToan: phaiTTTraHang,
                                        TongGiamGia: lstTHO[i].TongGiamGiaDB,
                                        TongChiPhi: lstTHO[i].TongChiPhiHangTra,
                                        DaThanhToan: lstTHO[i].DaTraKhach,
                                        PTThueHoaDon: 0,
                                        TongTienThue: lstTHO[i].TongThueDB,
                                        ChoThanhToan: false,
                                        DienGiai: lstTHO[i].DienGiai,
                                        DVTinhGiam: '%',
                                        PTGiam: 0,
                                        Status: 1, // open(1) - close(0) : use HDOffline
                                        MaHoaDon: maHDTHO,
                                        StatusOffline: false,
                                        TienMat: lstTHO[i].TienMat, // luu vao So chi
                                        TienGui: lstTHO[i].TienGui,
                                        TienThua: 0,
                                        DiemGiaoDich: diemGD,
                                        MaHoaDonTraHang: lstTHO[i].MaHoaDonTraHang, // used to get when save history 
                                        ID_TaiKhoanChuyenKhoan: lstTHO[i].ID_TaiKhoanChuyenKhoan,
                                        ID_TaiKhoanPos: lstTHO[i].ID_TaiKhoanPos,
                                        //IsTraGoiDV: lstTHO[i].IsTraGoiDV,
                                    };
                                    let objMuaHang = {};
                                    // check and assign TienTheGiTri for objHoaDon --> save Quy_HoaDon
                                    if (formatNumberToFloat(lstTHO[i].PhaiTraKhach) > 0) {
                                        objTraHang.TienTheGiaTri = lstTHO[i].TienTheGiaTri;
                                    }
                                    else {
                                        objMuaHang.TienTheGiaTri = lstTHO[i].TienTheGiaTri;
                                    }
                                    myData.objHoaDon = objTraHang;
                                    myData.objCTHoaDon = arrHangHoaTHCase6;
                                    myData.objTHO = lstTHO[i];   // assign to update Diem
                                    myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                    UpdateInforKH_toDB(objTraHang.ID_DoiTuong);
                                    console.log('myData ', myData)

                                    ajaxHelper(BHHoaDonUri + "PostBH_HoaDon_SoQuy_Spa_NKySuDung", 'POST', myData).done(function (x) {
                                        if (x.res) {
                                            var itemDB = x.data;
                                            objTraHang.ID = itemDB.ID;
                                            objTraHang.MaHoaDon = itemDB.MaHoaDon;
                                            objTraHang.NgayLapHoaDon = itemDB.NgayLapHoaDon;

                                            // insert quy if Tong Tra > Khach Mua Moi
                                            if (formatNumberToFloat(myData.objTHO.DaTraKhach) > 0) {
                                                GetQuyHoaDonfromHD_andInsert(objTraHang);
                                            }

                                            var objTH = myData.objTHO;
                                            if (objTH.TongTienHang > 0) {
                                                var phaiTTMuaMoi = formatNumberToFloat(objTH.TongTienHang) - formatNumberToFloat(objTH.TongGiamGia)
                                                    + formatNumberToFloat(objTH.TongTienThue);

                                                let loaiHD_DoiTra = 1;
                                                if (!commonStatisJs.CheckNull(lstTHO[i].NgayApDungGoiDV)) {
                                                    loaiHD_DoiTra = 19;
                                                    objMuaHang.NgayApDungGoiDV = moment(lstTHO[i].NgayApDungGoiDV, 'DD/MM/YYYY').format('YYYY-MM-DD');
                                                }
                                                if (!commonStatisJs.CheckNull(lstTHO[i].HanSuDungGoiDV)) {
                                                    objMuaHang.HanSuDungGoiDV = moment(lstTHO[i].HanSuDungGoiDV, 'DD/MM/YYYY').format('YYYY-MM-DD');
                                                }

                                                objMuaHang = {
                                                    LoaiHoaDon: loaiHD_DoiTra,
                                                    ID: const_GuidEmpty,
                                                    ID_DoiTuong: objTH.ID_DoiTuong,
                                                    ID_BangGia: objTH.ID_BangGia,
                                                    ID_NhanVien: objTH.ID_NhanVien,
                                                    ID_DonVi: objTH.ID_DonVi,
                                                    NgayLapHoaDon: ngaylapHD,
                                                    TongTienHang: objTH.TongTienHang,
                                                    PhaiThanhToan: phaiTTMuaMoi,
                                                    TongGiamGia: objTH.TongGiamGia,
                                                    DaThanhToan: objTH.DaThanhToan,
                                                    PTThueHoaDon: objTH.PTThueHoaDon,
                                                    TongTienThue: objTH.TongTienThue,
                                                    ChoThanhToan: false,
                                                    DienGiai: objTH.DienGiai,
                                                    DVTinhGiam: '%',
                                                    TongChietKhau: objTH.TongChietKhau, // PTGiam
                                                    Status: 1, // open(1) - close(0) : use HDOffline
                                                    MaHoaDon: null,
                                                    StatusOffline: false,
                                                    TienMat: objTH.TienMat, // luu vao So thu
                                                    TienGui: objTH.TienGui,
                                                    TienThua: objTH.TienThua,
                                                    DiemKhuyenMai: objTH.DiemKhuyenMai,
                                                    DiemGiaoDich: objTH.DiemGiaoDich, // mua hang thi moi co diem giao dich
                                                    TTBangDiem: objTH.TTBangDiem,
                                                    DiemHienTai: objTH.DiemHienTai,
                                                    DiemQuyDoi: objTH.DiemQuyDoi,
                                                    BH_NhanVienThucHiens: objTH.BH_NhanVienThucHiens,
                                                    ID_TaiKhoanChuyenKhoan: objTH.ID_TaiKhoanChuyenKhoan,
                                                    ID_TaiKhoanPos: objTH.ID_TaiKhoanPos,
                                                    ID_ViTri: objTH.ID_ViTri,
                                                    CreateTime: objTH.CreateTime,
                                                    ThoiGianThucHien: objTH.ThoiGianThucHien,
                                                    TongThueKhachHang: objTH.TongTienThue,
                                                };
                                                let lstCTHD_MH = localStorage.getItem(lcListCTHD_DoiTra);
                                                let arrCTHD_MuaHang = [];
                                                let arrCTHD_MuaHang_LoHang = [];
                                                if (lstCTHD_MH !== null) {
                                                    lstCTHD_MH = JSON.parse(lstCTHD_MH);
                                                    arrCTHD_MuaHang = $.grep(lstCTHD_MH, function (item) {
                                                        return item.MaHoaDon === itemDB.MaHoaDon;
                                                    });
                                                    for (let m = 0; m < arrCTHD_MuaHang.length; m++) {
                                                        for (let n = 1; n < arrCTHD_MuaHang[m].DM_LoHang.length; n++) {
                                                            if (arrCTHD_MuaHang[m].DM_LoHang[n].SoLuong > 0) {
                                                                arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[m].DM_LoHang[n]);
                                                            }
                                                        }
                                                        for (let n = 0; n < arrCTHD_MuaHang[m].HangCungLoais.length; n++) {
                                                            if (arrCTHD_MuaHang[m].HangCungLoais[n].SoLuong > 0) {
                                                                arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[m].HangCungLoais[n]);
                                                            }
                                                        }
                                                        if (arrCTHD_MuaHang[m].SoLuong > 0) {
                                                            arrCTHD_MuaHang_LoHang.push(arrCTHD_MuaHang[m]);
                                                        }
                                                    }
                                                }
                                                // remove CTHD have QuanLyTheoLo, but ID_LoHang = null
                                                arrCTHD_MuaHang = GetArrCTHD_withIDLoHangOtherNull(arrCTHD_MuaHang);
                                                // save GioVao, GioRa
                                                if (objMuaHang.CreateTime !== 0) {
                                                    let objTime = GetGioVaoRa_ofHD(objMuaHang);
                                                    objMuaHang.GioVao = objTime.GioVao;
                                                    objMuaHang.GioRa = objTime.GioRa;
                                                }
                                                let myDataMH = {};
                                                objMuaHang.ID_HoaDon = itemDB.ID;
                                                myDataMH.objHoaDon = objMuaHang;
                                                myDataMH.objCTHoaDon = arrCTHD_MuaHang;
                                                myDataMH.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                                                console.log('myDataMH ', myDataMH);

                                                ajaxHelper(BHHoaDonUri + "PostBH_HoaDon_SoQuy_Spa_NKySuDung", 'POST', myDataMH).done(function (x2) {
                                                    if (x2.res) {
                                                        var itemMH = x2.data;
                                                        objMuaHang.ID = itemMH.ID;
                                                        objMuaHang.MaHoaDon = itemMH.MaHoaDon;
                                                        objMuaHang.NgayLapHoaDon = itemMH.NgayLapHoaDon;

                                                        // insert quy if Khach Mua Moi > Tong Tra
                                                        if (formatNumberToFloat(myData.objTHO.DaThanhToan) > 0) {
                                                            GetQuyHoaDonfromHD_andInsert(objMuaHang);
                                                        }
                                                        lstCTHD_MH = $.grep(lstCTHD_MH, function (item) {
                                                            return item.MaHoaDon.indexOf('O') === -1;
                                                        });
                                                        localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD));
                                                    }
                                                })
                                            }
                                        }
                                    })
                                }
                            }
                            //delete cache THO
                            lst_HDoffline = $.grep(lst_HDoffline, function (x) {
                                return x.StatusOffline === false
                                    || (x.StatusOffline === true && x.LoaiHoaDon !== 6)
                                    || (x.StatusOffline === true && x.NguoiTao !== userLogin);
                            });
                            localStorage.setItem(lcListHD, JSON.stringify(lst_HDoffline));
                            // get idrandom after
                            for (let i = 0; i < lst_HDoffline.length; i++) {
                                arrIDRandom.push(lst_HDoffline[i].IDRandom);
                            }
                            // delete HDO in lstCTHoaDon
                            lstCTHD = $.grep(lstCTHD, function (x) {
                                return $.inArray(x.IDRandomHD, arrIDRandom) > -1;
                            });
                            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                        }
                    }
                    Call_6Func();
                    break;
                case 19: // goi dich vu
                    if (lstCTHD !== null) {
                        var lstCTHDCase1 = JSON.parse(lstCTHD);
                        var maHoaDonGDV = '';
                        for (let k = 0; k < lstGDVO.length; k++) {
                            maHoaDonGDV = lstGDVO[k].MaHoaDon;
                            let arrHangHoaCase1 = [];
                            for (let j = 0; j < lstCTHDCase1.length; j++) {
                                if (lstCTHDCase1[j].MaHoaDon === maHoaDonGDV) {
                                    // push Hang KM
                                    for (let m = 0; m < lstCTHDCase1[j].HangHoa_KM.length; m++) {
                                        arrHangHoaCase1.push(lstCTHDCase1[j].HangHoa_KM[m]);
                                    }
                                    // push DM_Lo
                                    for (let n = 1; n < lstCTHDCase1[j].DM_LoHang.length; n++) {
                                        arrHangHoaCase1.push(lstCTHDCase1[j].DM_LoHang[n]);
                                    }
                                    for (let n = 0; n < lstCTHDCase1[j].HangCungLoais.length; n++) {
                                        arrHangHoaCase1.push(lstCTHDCase1[j].HangCungLoais[n]);
                                    }
                                    // push CT
                                    arrHangHoaCase1.push(lstCTHDCase1[j]);
                                }
                            }
                            // add product KhuyenMai of HoaDon into CTHD
                            for (let m = 0; m < productKMs.length; m++) {
                                if (productKMs[m].MaHoaDon === maHoaDonHDO) {
                                    arrHangHoaCase1.push(productKMs[m]);
                                }
                            }
                            // add GhiChu_KhuyenMai for objHD --> to do save DB
                            let ghichuKMHD = '';
                            for (let j = 0; j < arrHangHoaCase1.length; j++) {
                                if (arrHangHoaCase1[j].IsKhuyenMai) {
                                    ghichuKMHD += arrHangHoaCase1[j].TenKhuyenMai + '<br /> ';
                                }
                            }
                            ghichuKMHD += lstGDVO[k].KhuyenMai_GhiChu;
                            lstGDVO[k].KhuyenMai_GhiChu = ghichuKMHD;
                            // remove ID_LoHang = null
                            arrHangHoaCase1 = GetArrCTHD_withIDLoHangOtherNull(arrHangHoaCase1);
                            if (arrHangHoaCase1.length > 0) {
                                let myData = {};
                                // ID_DonVi
                                if (lstGDVO[k].ID_DonVi === null || lstGDVO[k].ID_DonVi === undefined) {
                                    lstGDVO[k].ID_DonVi = id_DonVi;
                                }
                                let ngaylapHD = GetNgayLapHD_whenSave(lstGDVO[k].NgayLapHoaDon);
                                lstGDVO[k].NgayLapHoaDon = ngaylapHD;
                                myData.objHoaDon = lstGDVO[k];
                                myData.objCTHoaDon = arrHangHoaCase1;
                                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;

                                Check_KHOffline_AndSaveHoaDon(myData);
                            }
                        }
                        // delete all HD MuaHang offline
                        lst_HDoffline = $.grep(lst_HDoffline, function (item) {
                            return item.StatusOffline === false
                                || (item.StatusOffline === true && item.LoaiHoaDon !== 19)
                                || (item.StatusOffline === true && item.NguoiTao !== userLogin);
                        });
                        localStorage.setItem(lcListHD, JSON.stringify(lst_HDoffline));
                        // get idrandom after
                        for (let i = 0; i < lst_HDoffline.length; i++) {
                            arrIDRandom.push(lst_HDoffline[i].IDRandom);
                        }
                        // delete HDO in lstCTHoaDon
                        lstCTHD = $.grep(lstCTHD, function (x) {
                            return $.inArray(x.IDRandomHD, arrIDRandom) > -1;
                        });
                        localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                    }
                    productKMs = $.grep(productKMs, function (x) {
                        return x.MaHoaDon.indexOf('GDVO') === -1;
                    });
                    localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(productKMs));
                    RemoveKHoffline_afterSave();
                    Call_6Func();
                    break;
            }
            // count again HDO
            var lstHDaftersave = localStorage.getItem(lcListHD);
            if (lstHDaftersave !== null) {
                lstHDaftersave = JSON.parse(lstHDaftersave);
                var listHDO_aftersave = $.grep(lstHDaftersave, function (x) {
                    return x.StatusOffline === true && x.NguoiTao === userLogin && x.ID_DonVi === id_DonVi;
                });
                self.countHDoffilne(listHDO_aftersave.length);
                self.HoaDonOffline(listHDO_aftersave);
            }
            BindHD_CTHDafterSave();
            //ActiveTab_SoDoPhong(false);
        }
        else {
            $('#btnDongBoHoa').removeAttr('disabled');
            ShowMessage_Danger('Không tồn tại hóa đơn offline');
        }
        $('.divDongBoHoa').gridLoader({ show: false });
    }
    function RemoveKHoffline_afterSave() {
        // get lstHD after save
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var arrID_DoiTuong = [];
            for (let i = 0; i < lstHD.length; i++) {
                // get all ID_DoiTuong in lstHD
                arrID_DoiTuong.push(lstHD[i].ID_DoiTuong);
            }
            // delete in KH offline
            var khOffline = localStorage.getItem(lcDM_DoiTuong);
            if (khOffline !== null) {
                khOffline = JSON.parse(khOffline);
                for (let i = 0; i < khOffline.length; i++) {
                    // delete KH offline if (ID && MaDoiTuong) not exist in arrID_DoiTuong (OK)
                    if (($.inArray(khOffline[i].MaDoiTuong, arrID_DoiTuong) === -1) && ($.inArray(khOffline[i].ID, arrID_DoiTuong) === -1)) {
                        khOffline.splice(i, 1);
                    }
                }
                localStorage.setItem(lcDM_DoiTuong, JSON.stringify(khOffline));
            }
        }
        else {
            localStorage.removeItem(lcDM_DoiTuong);
        }
    }
    function ClearTextSearch() {
        $('#txtSearchHH').val('');
        $('#txtSoLuong').val('');// soluong,dongia at NhapNhanh_Thuong
        $('#txtDonGia').val('');
        $('#txtSearchKH').val('');
        $('#txtSearchDoiTra').val('');
        ResetInput_KhachHang();
    }

    self.addPhongBan = function () {
        $('#txtSearchHH').focus();
        $('#lblTienMat').text('(Tiền mặt)');
        $('input, select').removeAttr('disabled');
        self.HH_KhuyenMai(undefined);
        self.HD_KhuyenMai(undefined);
        ClearTextSearch();
        stopTimer();
        timer();
        HideShow_HeaderCTHD();

        var obj = GetMaHoaDonNew_byRole();
        var loaiHD = obj.LoaiHoaDon;
        var maHDNew = obj.MaHoaDon;
        var max = 1;

        var arrHD_byUser = [];
        var lstHDLe = localStorage.getItem(lcListHD);
        if (lstHDLe !== null) {
            lstHDLe = JSON.parse(lstHDLe);
            arrHD_byUser = $.grep(lstHDLe, function (x) {
                return x.StatusOffline === false && x.NguoiTao === userLogin && x.TrangThaiHD === 1;
            });
        }
        else {
            lstHDLe = [];
        }

        var arrHD = $.grep(arrHD_byUser, function (x) {
            return x.LoaiHoaDon === loaiHD;
        });

        if (arrHD.length > 0) {
            max = Math.max.apply(Math, arrHD.map(function (item) {
                return item.MaHoaDon.match(/\d+/);
            }));
        }
        else {
            // khong add HoaDon 1, vi neu add sẽ bị add cùng lúc Hóa đơn 1, Hóa đơn 2
            if (lstHDLe.length > 0) {
                max = 0;
            }
            else {
                lstHDLe = [];
                let newObjFirst = newHoaDon(maHDNew + '1');
                lstHDLe.push(newObjFirst);
            }
        }

        var objNew = newHoaDon(maHDNew + (max + 1), obj.LoaiHoaDon);
        lstHDLe.push(objNew);
        localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));
        _maHoaDon = maHDNew + (max + 1);
        localStorage.setItem(lcMaHD, _maHoaDon);
        GetCurrentPage_byMaHoaDon(_maHoaDon);

        self.resetInforHD_CTHD();
        ResetInfor_KhachHang();
        Call_6Func();
        vmUpAnhHoaDon.InvoiceChosing.IDRandomHD = self.HoaDons().IDRandom();
        vmUpAnhHoaDon.GetListImgInvoiceLC();
        // call this func after get loaiHD current
        //LoadAgain_ListHangHoa_IfNotXuatAm(loaiHD);
    }

    self.IsClickCloseHD = ko.observable(false);

    $('#modalPopuplgDelete').on('hidden.bs.modal', function () {
        // tranh truong hop goi ham update giaban khi GetThongTinHoaDon 
        // vi func CloseHoaDon nam trong the li cua func GetThongTinHoaDon
        self.IsClickCloseHD(false);
    })

    self.CloseHoaDon = function (item) {
        self.IsClickCloseHD(true);

        ClearTextSearch();
        var thisMaHD = this.MaHoaDon;
        var hdOpen = [];
        var idRandom = '';
        var idHoaDon = const_GuidEmpty;
        var trangthaiHD = 1;
        var lstHoaDon = localStorage.getItem(lcListHD);
        if (lstHoaDon !== null) {
            lstHoaDon = JSON.parse(lstHoaDon);
            hdOpen = GetHDOpening_byMaHoaDon(thisMaHD, lstHoaDon);
            if (hdOpen.length > 0) {
                // get IDRandom at this func because, when add HangHoa, not bind again PhongBanSelected, so IDRandom #
                idRandom = hdOpen[0].IDRandom;
                trangthaiHD = hdOpen[0].TrangThaiHD;
                idHoaDon = hdOpen[0].ID;
            }
        }
        else {
            lstHoaDon = [];
        }
        var lstCTHoaDon = localStorage.getItem(lcListCTHD);
        var itemEx = [];
        // find in CTHD Ban
        if (lstCTHoaDon !== null) {
            lstCTHoaDon = JSON.parse(lstCTHoaDon);
            itemEx = $.grep(lstCTHoaDon, function (x) {
                return x.IDRandomHD === idRandom;
            });
        }
        // find in CTHD Doi tra
        if (itemEx.length === 0) {
            var lstCTHoaDon_DoiTra = localStorage.getItem(lcListCTHD_DoiTra);
            if (lstCTHoaDon_DoiTra !== null) {
                lstCTHoaDon_DoiTra = JSON.parse(lstCTHoaDon_DoiTra);
                itemEx = $.grep(lstCTHoaDon_DoiTra, function (x) {
                    return x.IDRandomHD === idRandom;
                });
            }
        }
        if (itemEx.length > 0) {
            let tilte = 'Xác nhận xóa';
            let mes = 'Hệ thống sẽ không lưu thông tin chi tiết của <b>'.concat(thisMaHD, ' </b> trên màn hình bán hàng. Bạn có chắc chắn muốn xóa không?')
            if (idHoaDon !== const_GuidEmpty) {
                tilte = 'Đóng hóa đơn';
                mes = 'Bạn có chắc chắn muốn đóng hóa đơn <b> '.concat(thisMaHD, '</b> không?');
            }
            dialogConfirm(tilte, mes, function () {
                vmUpAnhHoaDon.ClearLocalStorage(self.HoaDons().IDRandom());
                self.IsClickCloseHD(false);
                // remove hoadon in cache if not HD offline
                //if (item.StatusOffline === false) {
                lstHoaDon = RemoveHD_byMaHoaDon(thisMaHD, lstHoaDon);
                localStorage.setItem(lcListHD, JSON.stringify(lstHoaDon));
                var lstCTHoaDon2 = jQuery.grep(lstCTHoaDon, function (x) {
                    return x.IDRandomHD !== idRandom;
                });
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHoaDon2));
                // remove CTHoaDon in cache TraHang
                var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
                if (lstCTHD_TH !== null) {
                    lstCTHD_TH = JSON.parse(lstCTHD_TH);
                    var arrCTHD_THafter = $.grep(lstCTHD_TH, function (x) {
                        return x.IDRandomHD !== idRandom;
                    });
                    localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(arrCTHD_THafter));
                }
                // delete cache CTTraHang
                var cthdTraHang = localStorage.getItem(lcCTHDTraHang_fromHD);
                if (cthdTraHang !== null) {
                    cthdTraHang = JSON.parse(cthdTraHang);
                    cthdTraHang = $.grep(cthdTraHang, function (itemCTTH) {
                        return itemCTTH.IDRandomHD !== idRandom;
                    });
                    localStorage.setItem(lcCTHDTraHang_fromHD, JSON.stringify(cthdTraHang));
                }
                // reset HD_KhuyenMai --> not chose radio
                self.HD_KhuyenMai(undefined);
                // delete productKM_HoaDon && bind again HHTang_HoaDon
                var lstProductKM_HD = localStorage.getItem(lcProductKM_HoaDon);
                if (lstProductKM_HD !== null) {
                    lstProductKM_HD = JSON.parse(lstProductKM_HD);
                    lstProductKM_HD = $.grep(lstProductKM_HD, function (x) {
                        return x.IDRandomHD !== idRandom;
                    });
                    localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(lstProductKM_HD));
                }
                BindHD_CTHDafterSave();
                // get after BindHD_CTHDafterSave, because 'lcIDRandom' was assign  at this func
                var idSend = localStorage.getItem('lcIDRandom');
                SendDataBanHangToPos_byUser(idSend, 1);

                // remove cache XuLiDonHang
                var lcXuLiDonHang = localStorage.getItem(lcXuLiDonHang_Const);
                if (lcXuLiDonHang !== null) {
                    lcXuLiDonHang = JSON.parse(lcXuLiDonHang);
                    lcXuLiDonHang = $.grep(lcXuLiDonHang, function (xx) {
                        return xx.MaHoaDon !== thisMaHD;
                    });
                    localStorage.setItem(lcXuLiDonHang_Const, JSON.stringify(lcXuLiDonHang));
                    var lcCTDatHang = localStorage.getItem('lcCTDatHang');
                    if (lcCTDatHang !== null) {
                        lcCTDatHang = JSON.parse(lcCTDatHang);
                        lcCTDatHang = $.grep(lcCTDatHang, function (x) {
                            return x.MaHoaDon !== thisMaHD;
                        });
                        localStorage.setItem('lcCTDatHang', JSON.stringify(lcCTDatHang));
                    }
                }
                Call_6Func();
                HideShow_HeaderCTHD();
            })
        }
        else {
            vmUpAnhHoaDon.ClearLocalStorage(self.HoaDons().IDRandom());
            self.IsClickCloseHD(false);
            lstHoaDon = RemoveHD_byMaHoaDon(thisMaHD, lstHoaDon);
            localStorage.setItem(lcListHD, JSON.stringify(lstHoaDon));
            GetCurrentPage_byMaHoaDon(_maHoaDon);
            BindHD_CTHDafterSave();
            Call_6Func();
            HideShow_HeaderCTHD();
        }
    }
    self.resetInforHD_CTHD = function () {
        self.NewProducts([]);
        self.HangHoaAfterAdds([]);
        self.HHTang_HoaDon([]);
        self.HoaDons(new FormModel_NewHoaDon());
        let obj = GetMaHoaDonNew_byRole();
        self.HoaDons().LoaiHoaDon(obj.LoaiHoaDon);//active tab gdv, bg
        ResetInfor_KhachHang();
        self.SetNhanVien(_idNhanVien);
        BindLstBangGia_byNhanVien_andDoiTuong();
        var idBangGiaOld = self.selectedGiaBan();
        if (idBangGiaOld !== const_GuidEmpty) {
            UpdateGiaBan_inListHangHoa_byPage(const_GuidEmpty);
        }
        self.SetBangGia(const_GuidEmpty);
        self.SetChiNhanh(id_DonVi);
    }

    function ResetInfor_KhachHang() {
        self.selectedNCC(null);
        self.ChiTietDoiTuong([]);

        vmThanhToanGara.theGiaTriCus.SoDuTheGiaTri = 0;
        vmThanhToanGara.theGiaTriCus.CongNoThe = 0;
        if (vmNKGoiBaoDuong.listData.GoiDichVu.length > 0) {
            vmNKGoiBaoDuong.listData.GoiDichVu = [];
            vmNKGoiBaoDuong.filterGDV.ListFilter = [];
        }
        ResetInput_KhachHang();
    }

    self.GetThongTinHoaDon = function () {
        if (self.IsClickCloseHD()) {
            return false;
        }
        // reset KhuyenMai to do set value new
        self.HH_KhuyenMai(undefined);
        self.HD_KhuyenMai(undefined);
        var thisMaHD = this.MaHoaDon;
        _maHoaDon = thisMaHD;
        localStorage.setItem(lcMaHD, thisMaHD);

        var lstHD = localStorage.getItem(lcListHD);
        var itemExist = [];
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            itemExist = GetHDOpening_byMaHoaDon(thisMaHD, lstHD);
            var idRandom = '';
            if (itemExist.length > 0) {
                idRandom = itemExist[0].IDRandom;
                self.IDPhongBan_Chosing(itemExist[0].ID_ViTri);

                GetInForCustomer_byID(itemExist[0].ID_DoiTuong);
                self.SetNhanVien(itemExist[0].ID_NhanVien);
                BindLstBangGia_byNhanVien_andDoiTuong();
                if (self.selectedGiaBan() !== itemExist[0].ID_BangGia) {
                    UpdateGiaBan_inListHangHoa_byPage(itemExist[0].ID_BangGia);
                }
                self.SetBangGia(itemExist[0].ID_BangGia);
                self.SetChiNhanh(itemExist[0].ID_DonVi)
                BindHD_byIDRandom(idRandom);
                BindCTHD_byIDRandomHD(idRandom);
                OnOff_Timer(itemExist[0].NgayLapHoaDon);
                SetText_lblTienMat(itemExist[0], 1);
                SendDataBanHangToPos_byUser(idRandom, 1);
            }
        }
        vmUpAnhHoaDon.InvoiceChosing.IDRandomHD = self.HoaDons().IDRandom();
        vmUpAnhHoaDon.GetListImgInvoiceLC();
        // styele this
        $('.bill-bxslide  li.using').removeClass('using');
        $('.bill-bxslide  li font').each(function () {
            if ($(this).text() === thisMaHD) {
                $(this).parent().addClass('using');
            }
        });
        $('#ddlDMChungTus').removeAttr('disabled');
        $('#txtSearchHH').focus();
        ClearTextSearch();
        Call_6Func();
        SetBorder_LotEnd_CTHD();
        DemSoLanDoiTra_byID();
    }
    //phan trang: buton prev, next: HangHoa
    self.PageCount = ko.computed(function () {
        var div;
        if (self.HangHoas() !== null) {
            div = Math.floor(self.HangHoas().length / self.pageSize());
            div += self.HangHoas().length % self.pageSize() > 0 ? 1 : 0;
        }
        return div - 1;
    });
    function BindListHangHoa_ByPage() {
        var first = self.currentPage() * self.pageSize();
        var lst = self.HangHoas().slice(first, first + self.pageSize());
        self.PageResults($.extend(true, [], lst));
    }

    self.hasPrevious = ko.computed(function () {
        return self.currentPage() !== 0;
    });
    self.hasNext = ko.computed(function () {
        return self.currentPage() !== self.PageCount();
    });
    self.next = function () {
        if (self.currentPage() < self.PageCount()) {
            self.currentPage(self.currentPage() + 1);
            UpdateGiaBan_inListHangHoa_byPage(self.selectedGiaBan());
        }
    }
    self.previous = function () {
        if (self.currentPage() !== 0) {
            self.currentPage(self.currentPage() - 1);
            UpdateGiaBan_inListHangHoa_byPage(self.selectedGiaBan());
        }
    }
    function UpdateAgain_ListDVT_forCTHD(isCTDoiTra, idRandomHD) {
        var cacheName = lcListCTHD;
        if (isCTDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var lstCTHD = localStorage.getItem(cacheName);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0; i < lstCTHD.length; i++) {
                var itemFor = lstCTHD[i];
                if (itemFor.IDRandomHD === idRandomHD) {
                    // find all HangHoa same ID_HangHoa
                    var lstHangHoa_sameIDHangHoa = $.grep(self.HangHoaAll(), function (x) {
                        return x.ID === itemFor.ID_HangHoa;
                    });
                    var arrIDQuiDoi = [];
                    for (let k = 0; k < lstHangHoa_sameIDHangHoa.length; k++) {
                        if ($.inArray(lstHangHoa_sameIDHangHoa[k].ID_DonViQuiDoi, arrIDQuiDoi) === -1) {
                            arrIDQuiDoi.push(lstHangHoa_sameIDHangHoa[k].ID_DonViQuiDoi);
                        }
                    }
                    // get CTHD same ID_HangHoa
                    var arrIDQuiDoiEx = [];
                    var lstCTHD_sameIDHangHoa = $.grep(lstCTHD, function (x) {
                        return x.IDRandomHD === idRandomHD && x.ID_HangHoa === itemFor.ID_HangHoa;
                    });
                    for (let k = 0; k < lstCTHD_sameIDHangHoa.length; k++) {
                        arrIDQuiDoiEx.push(lstCTHD_sameIDHangHoa[k].ID_DonViQuiDoi);
                    }
                    //  find DVTinh not exist in CTHD
                    var lstDVT = [];
                    for (let j = 0; j < arrIDQuiDoi.length; j++) {
                        if ($.inArray(arrIDQuiDoi[j], arrIDQuiDoiEx) === -1 || arrIDQuiDoi[j] === itemFor.ID_DonViQuiDoi) {
                            var itemHH = $.grep(lstHangHoa_sameIDHangHoa, function (x) {
                                return x.ID_DonViQuiDoi === arrIDQuiDoi[j];
                            });
                            if (itemHH.length > 0) {
                                var objDVT = {
                                    ID_DonViQuiDoi: arrIDQuiDoi[j],
                                    TenDonViTinh: itemHH[0].TenDonViTinh,
                                }
                                lstDVT.push(objDVT);
                            }
                        }
                    }
                    // assign again ListDonViTinh
                    lstCTHD[i].ListDonViTinh = lstDVT;
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(lstCTHD));
        }
    }
    // if HDTraHang: assign ListDonViTinh = [] --> not allow change
    function Reset_ListDVT_forCTHD_TraHang() {
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0; i < lstCTHD.length; i++) {
                if (lstCTHD[i].LoaiHoaDon === 6) {
                    lstCTHD[i].ListDonViTinh = [];
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
        }
    }
    // not use
    self.Expand_ddlDonViTinh = function (item) {
        var thisObj = event.currentTarget;
        var isShow = item.ListDonViTinh.length > 0;
        if (isShow) {
            $(thisObj).addClass('open');
        }
        //$(thisObj).find('.notshow').attr('aria-expanded', isShow);
    }
    // change DVT of hang hoa at ddl DonViTinh
    self.ChangeDVT_HangHoa = function (item, itemCTHD, isDoiTra) {
        if (item.ID_DonViQuiDoi !== itemCTHD.ID_DonViQuiDoi) {
            if (item.ChatLieu === '4') {
                dialogConfirm('Thông báo ', 'Bạn đang sử dụng dịch vụ từ <b> gói mua sẵn </b>. Bạn có muốn <b> hủy </b> sử dụng gói và <b>thay thế </b> bằng buổi lẻ không?', function () {
                    UpdateHDCTHD_whenChangeDVT(item, itemCTHD, isDoiTra);
                })
            }
            else {
                UpdateHDCTHD_whenChangeDVT(item, itemCTHD, isDoiTra);
            }
        }
    }
    function UpdateHDCTHD_whenChangeDVT(itemHH, itemCTHD, isDoiTra) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        // find HoaDon opening
        var lstHD1 = localStorage.getItem(lcListHD);
        var hdOpening = [];
        if (lstHD1 !== null) {
            lstHD1 = JSON.parse(lstHD1);
            hdOpening = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD1);
        }
        var itemChosing = $.grep(self.HangHoaAll(), function (x) {
            return x.ID_DonViQuiDoi === itemHH.ID_DonViQuiDoi;
        });
        itemChosing = UpdateGiaBanHangHoa_inList(itemChosing);
        var idRandomHD = hdOpening[0].IDRandom;
        // find && update CTHD with new ID_QuiDoi
        if (itemChosing.length > 0 && hdOpening.length > 0) {
            var lstCTHD = localStorage.getItem(cacheName);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                for (let i = 0; i < lstCTHD.length; i++) {
                    if (lstCTHD[i].ID_DonViQuiDoi === itemCTHD.ID_DonViQuiDoi && lstCTHD[i].IDRandomHD === idRandomHD) {
                        lstCTHD[i].ID_DonViQuiDoi = itemChosing[0].ID_DonViQuiDoi;
                        lstCTHD[i].DonGia = itemChosing[0].GiaBan;
                        lstCTHD[i].GiaBan = itemChosing[0].GiaBan;
                        lstCTHD[i].GiaVon = itemChosing[0].GiaVon;
                        lstCTHD[i].MaHangHoa = itemChosing[0].MaHangHoa;
                        lstCTHD[i].TenDonViTinh = itemChosing[0].TenDonViTinh;
                        lstCTHD[i].TonKho = itemChosing[0].TonKho;
                        lstCTHD[i].QuyCach = itemChosing[0].QuyCach;
                        lstCTHD[i].TyLeChuyenDoi = itemChosing[0].TyLeChuyenDoi;
                        lstCTHD[i].LaDonViChuan = itemChosing[0].LaDonViChuan;
                        lstCTHD[i].SoLuongQuyCach = 0;
                        lstCTHD[i].ID_ChiTietGoiDV = null;
                        lstCTHD[i].PTChietKhau = 0;
                        lstCTHD[i].TienChietKhau = 0;
                        lstCTHD[i].PTThue = 0;
                        lstCTHD[i].TienThue = 0;
                        lstCTHD[i].ThanhTien = lstCTHD[i].SoLuong * itemChosing[0].GiaBan;
                        lstCTHD[i].ThanhToan = lstCTHD[i].ThanhTien;
                        // if HD create from HDDatHang: reset SoLuongDaMua 
                        if (hdOpening[0].MaHoaDonTraHang !== null && hdOpening[0].MaHoaDonTraHang !== undefined && hdOpening[0].MaHoaDonTraHang !== '') {
                            lstCTHD[i].SoLuongDaMua = 0;
                        }
                        // update DM_LoHang
                        for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                            lstCTHD[i].DM_LoHang[j].ID_DonViQuiDoi = itemChosing[0].ID_DonViQuiDoi;
                            lstCTHD[i].DM_LoHang[j].DonGia = itemChosing[0].GiaBan;
                            lstCTHD[i].DM_LoHang[j].GiaBan = itemChosing[0].GiaBan;
                            lstCTHD[i].DM_LoHang[j].GiaVon = itemChosing[0].GiaVon;
                            lstCTHD[i].DM_LoHang[j].MaHangHoa = itemChosing[0].MaHangHoa;
                            lstCTHD[i].DM_LoHang[j].TenDonViTinh = itemChosing[0].TenDonViTinh;
                            lstCTHD[i].DM_LoHang[j].TonKho = itemChosing[0].TonKho;
                            lstCTHD[i].DM_LoHang[j].PTChietKhau = 0;
                            lstCTHD[i].DM_LoHang[j].TienChietKhau = 0;
                            lstCTHD[i].DM_LoHang[j].PTThue = 0;
                            lstCTHD[i].DM_LoHang[j].TienThue = 0;
                            lstCTHD[i].DM_LoHang[j].ThanhTien = lstCTHD[i].DM_LoHang[j].SoLuong * itemChosing[0].GiaBan;
                            lstCTHD[i].DM_LoHang[j].ThanhToan = lstCTHD[i].DM_LoHang[j].ThanhTien;
                        }
                        // update HangCungLoai
                        for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                            lstCTHD[i].HangCungLoais[j].ID_DonViQuiDoi = itemChosing[0].ID_DonViQuiDoi;
                            lstCTHD[i].HangCungLoais[j].DonGia = itemChosing[0].GiaBan;
                            lstCTHD[i].HangCungLoais[j].GiaBan = itemChosing[0].GiaBan;
                            lstCTHD[i].HangCungLoais[j].GiaVon = itemChosing[0].GiaVon;
                            lstCTHD[i].HangCungLoais[j].MaHangHoa = itemChosing[0].MaHangHoa;
                            lstCTHD[i].HangCungLoais[j].TenDonViTinh = itemChosing[0].TenDonViTinh;
                            lstCTHD[i].HangCungLoais[j].TonKho = itemChosing[0].TonKho;
                            lstCTHD[i].HangCungLoais[j].PTChietKhau = 0;
                            lstCTHD[i].HangCungLoais[j].TienChietKhau = 0;
                            lstCTHD[i].HangCungLoais[j].PTThue = 0;
                            lstCTHD[i].HangCungLoais[j].TienThue = 0;
                            lstCTHD[i].HangCungLoais[j].ThanhTien = lstCTHD[i].HangCungLoais[j].SoLuong * itemChosing[0].GiaBan;
                            lstCTHD[i].HangCungLoais[j].ThanhToan = lstCTHD[i].HangCungLoais[j].ThanhTien;
                        }
                        break;
                    }
                }
                localStorage.setItem(cacheName, JSON.stringify(lstCTHD));
                UpdateWarning_forCTHD_byIDQuiDoi(itemChosing[0].ID_DonViQuiDoi, idRandomHD);
                UpdateKhuyenMai_CTHD(itemChosing[0].ID_DonViQuiDoi, idRandomHD);
                UpdateAgain_ListDVT_forCTHD(isDoiTra, idRandomHD);
                UpdateChietKhauNV_inCTHD(itemCTHD.IDRandom, isDoiTra);
                ResetPTChietKhauHH_PTThue(idRandomHD);

                if (!isDoiTra) {
                    ResetKM_HangHoa(itemChosing[0].ID_DonViQuiDoi, itemChosing[0].ID_NhomHangHoa, idRandomHD);
                    ResetKM_HoaDon(idRandomHD);
                    BindCTHD_byIDRandomHD(idRandomHD);
                }

                UpdateCacheHDLe(idRandomHD, isDoiTra);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                // bind infor HD
                var lstHD = localStorage.getItem(lcListHD);
                if (lstHD !== null) {
                    lstHD = JSON.parse(lstHD);
                    var arrHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
                    self.HoaDons().SetData(arrHD[0]);
                }
                if (isDoiTra) {
                    Bind_CTHĐoiTra_afterHideColumn();
                }
            }
            HideShow_Icon_ChietKhauNV();
        }
    }

    function GetMax_MaHoaDon(loaiHD, lstHD) {
        var max = 0;
        var lstHD_byUser = $.grep(lstHD, function (x) {
            return x.StatusOffline === false && x.NguoiTao === userLogin && x.TrangThaiHD === 1;
        });
        var arrHD = $.grep(lstHD_byUser, function (x) {
            return x.LoaiHoaDon === loaiHD;
        });
        if (arrHD.length > 0) {
            max = Math.max.apply(Math, arrHD.map(function (item) {
                return item.MaHoaDon.match(/\d+/);
            }));
        }
        else {
            max = 0;
        }
        return max;
    }

    function GetHDOpening_byMaHoaDon(maHD, lstHD) {
        var arr = $.grep(lstHD, function (x) {
            return x.MaHoaDon === maHD &&
                (x.NguoiTao === userLogin || $.inArray(x.TrangThaiHD, [3, 4, 7]) > -1); // 1.New, 3.HDTamLuu, 4.DaTT, 7.DaXoa
        });
        return arr;
    }

    function GetHDOpening_byIDRandom(idRandom, lstHD) {
        var arr = $.grep(lstHD, function (x) {
            return x.IDRandom === idRandom;
        });
        return arr;
    }

    function RemoveHD_byMaHoaDon(maHD, lstHD) {
        // delete all hd other user
        return $.grep(lstHD, function (x) {
            //return x.MaHoaDon !== maHD || (x.MaHoaDon === maHD && x.NguoiTao !== userLogin);
            return x.MaHoaDon !== maHD;// neu mo HDTamLuu of user other --> remove
        })
    }
    function GetIDRandomHD_byMaHoaDon(maHD) {
        var idRandom = '';
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemEx = GetHDOpening_byMaHoaDon(maHD, lstHD);
            if (itemEx.length > 0) {
                idRandom = itemEx[0].IDRandom;
            }
        }
        return idRandom;
    }
    function Focus_InputPhaiThanhToan() {
        if (self.windowWidth() > 1280) {
            // neu ipad: khong focus vao input
            $('#txtDaThanhToan').select();
        }
    }
    // tinh tong thoi gian thuc hien dich vu (chi loai 1)
    function CaculatorTimeDoingService(laHangHoa, idRandomHD, isDoiTra) {
        if (laHangHoa === false) {
            var nameCache = lcListCTHD;
            if (isDoiTra) {
                nameCache = lcListCTHD_DoiTra;
            }
            var lstCTHD = localStorage.getItem(nameCache);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                var lstDV = $.grep(lstCTHD, function (x) {
                    return x.IDRandomHD === idRandomHD && x.LaHangHoa === false;
                });
                var totalTime = 0;
                for (let i = 0; i < lstDV.length; i++) {
                    totalTime += lstDV[i].ThoiGianThucHien * lstDV[i].SoLuong;
                }
                // update time in lstHD
                var lstHD = localStorage.getItem(lcListHD);
                if (lstHD !== null) {
                    lstHD = JSON.parse(lstHD);
                    for (let i = 0; i < lstHD.length; i++) {
                        if (lstHD[i].IDRandom === idRandomHD) {
                            lstHD[i].ThoiGianThucHien = totalTime;
                            break;
                        }
                    }
                    localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                }
            }
        }
    }
    // check hide- show input/ lable DonGia
    function GetRoleChangePrice(loaiHD) {
        var role = false;
        switch (loaiHD) {
            case 1:
                role = self.roleChangePriceProduct_Invoice();
                break;
            case 2:
                role = self.roleChangePriceProduct_Invoice();
                break;
            case 3:
                role = self.roleChangePriceProduct_Order();
                break;
            case 6:
                role = self.roleChangePriceProduct_Return();
                break;
            case 19:
                role = self.roleChangePriceProduct_ServicePackage();
                break;
        }
        return role;
    }

    function GetRoleChangeDiscountProduct(itemCT) {
        var role = false;
        let maquyen = '';
        switch (itemCT.LoaiHoaDon) {
            case 1:
                maquyen = 'HoaDon_ThayDoiChietKhau_HangHoa';
                break;
            case 2:
                maquyen = 'HoaDon_ThayDoiChietKhau_HangHoa';
                break;
            case 3:
                maquyen = 'DatHang_ThayDoiChietKhau_HangHoa';
                break;
            case 19:
                maquyen = 'GoiDichVu_TThayDoiChietKhau_HangHoa';
                break;
            case 6:
                if (itemCT.MaHoaDon.indexOf('DV') > -1) {
                    maquyen = 'GoiDichVu_TThayDoiChietKhau_HangHoa';
                }
                else {
                    maquyen = 'HoaDon_ThayDoiChietKhau_HangHoa';
                }
                break;
        }
        var role = $.grep(self.Quyen_NguoiDung(), function (x) {
            return x.MaQuyen === maquyen;
        });
        self.roleChangeDiscountProduct(role.length > 0);
        return role.length > 0;
    }

    function GetNgaySX_NgayHH(ctDoing) {
        var ngaysx = ctDoing.NgaySanXuat;
        if (!commonStatisJs.CheckNull(ngaysx)) {
            ngaysx = moment(ngaysx).format('DD/MM/YYYY');
        }
        var hansd = ctDoing.NgayHetHan;
        if (!commonStatisJs.CheckNull(hansd)) {
            hansd = moment(hansd).format('DD/MM/YYYY');
        }
        return {
            NgaySanXuat: ngaysx,
            NgayHetHan: hansd,
        }
    }

    function newHangHoa(ctDoing, hd, addCungLoai = false) {
        var loaiHD = addCungLoai ? ctDoing.LoaiHoaDon : hd.LoaiHoaDon;
        var ptThue = self.HoaDons().PTThueHoaDon() > 0 ? self.HoaDons().PTThueHoaDon() : 0;
        var ptGiamGiaHH = self.HoaDons().PTChietKhauHH() > 0 ? self.HoaDons().PTChietKhauHH() : 0;
        let price = formatNumberToFloat(ctDoing.GiaBan);

        if (loaiHD === 2) {
            price = 0;
        }

        var idRandom = CreateIDRandom('RandomCT_');
        let tienCK = ptGiamGiaHH * price / 100;
        var tienthue = ptThue * (price - tienCK) / 100;

        var giaVon = ctDoing.GiaVon;
        var laHangHoa = ctDoing.LaHangHoa;
        if (!laHangHoa) {
            giaVon = 0;
        }
        var idCT_goiDV = ctDoing.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);

        var tongphiDV = 0, soluong = ctDoing.SoLuong;
        if (loaiHD === 1 || loaiHD === 25) {
            tongphiDV = ctDoing.PhiDichVu;
            if (ctDoing.LaPTPhiDichVu) {
                // phidichvu: tinh truoc thue
                tongphiDV = ctDoing.PhiDichVu * soluong * price / 100;
            }
        }
        var sophutTH = 0;
        if (addCungLoai) {
            sophutTH = ctDoing.TimeRemain;
        }
        else {
            sophutTH = ctDoing.SoPhutThucHien;
        }

        var lot = GetNgaySX_NgayHH(ctDoing);
        var combo = [];
        if (!addCungLoai) {
            if (!commonStatisJs.CheckNull(ctDoing.ThanhPhanComBo)) {
                combo = ctDoing.ThanhPhanComBo;
            }
        }

        return {
            SoThuTu: 1,
            IDRandom: idRandom, // check when add Lo = null
            IDRandomHD: addCungLoai ? ctDoing.IDRandomHD : hd.IDRandom,
            MaHoaDon: addCungLoai ? ctDoing.MaHoaDon : hd.MaHoaDon,
            LoaiHoaDon: loaiHD,
            GiaBan: price,
            DonGia: price, // GiaBan of HH ban dau
            GiaVon: giaVon,
            SoLuong: soluong,
            TonKho: ctDoing.TonKho,
            TenHangHoa: ctDoing.TenHangHoa,
            ThuocTinh_GiaTri: ctDoing.ThuocTinh_GiaTri,
            ThanhTien: soluong * (price - tienCK),
            ThanhToan: soluong * (price - tienCK + tienthue),
            ID_DonViQuiDoi: ctDoing.ID_DonViQuiDoi,
            TenDonViTinh: ctDoing.TenDonViTinh,
            MaHangHoa: ctDoing.MaHangHoa,
            ID_HangHoa: ctDoing.ID_HangHoa,
            TienChietKhau: tienCK,// tien giam gia
            PTChietKhau: ptGiamGiaHH, // giam gia: %
            DVTinhGiam: '%',
            ThoiGian: moment(new Date()).format('YYYY-MM-DD HH:mm'),// use get time when click TabSoDo
            GhiChu: ctDoing.GhiChuHH,
            SoLuongDaMua: 0, // Add trong TH tra hang,
            SoLuongConLai: 0,// use at Dathang: so luong con lai sau khi xu li don hang
            CssWarning: false, // warning if TonKho < SoLuong (setting XuatAm)
            LaHangHoa: ctDoing.LaHangHoa,
            ID_NhomHangHoa: ctDoing.ID_NhomHangHoa,
            TenNhomHangHoa: ctDoing.TenNhomHangHoa,
            IsKhuyenMai: false,
            IsOpeningKMai: false,
            ID_KhuyenMai: null,
            HangHoa_KM: [],
            TenKhuyenMai: '',
            PhiDichVu: ctDoing.PhiDichVu,
            LaPTPhiDichVu: ctDoing.LaPTPhiDichVu,
            TongPhiDichVu: tongphiDV,
            ThoiGianThucHien: sophutTH === null ? 0 : sophutTH,
            GhiChuHH: ctDoing.GhiChuHH,
            // lo
            QuanLyTheoLoHang: ctDoing.QuanLyTheoLoHang,
            DM_LoHang: [],
            ID_LoHang: ctDoing.ID_LoHang,
            LotParent: ctDoing.QuanLyTheoLoHang,  // if QuanLyTheoLo= true, lotParent= true -> check when update CTHD
            MaLoHang: ctDoing.MaLoHang,
            NgaySanXuat: lot.NgaySanXuat,
            NgayHetHan: lot.NgayHetHan,

            BH_NhanVienThucHien: [],
            GhiChu_NVThucHien: '',
            GhiChu_NVTuVan: '',
            GhiChu_NVThucHienPrint: '', // used to printHoaDon (not show %ChietKhau)
            GhiChu_NVTuVanPrint: '',
            ID_ChiTietDinhLuong: null,
            ID_ChiTietGoiDV: idCT_goiDV,
            ChatLieu: '',
            // use when TraHang KM || use dich vu co KM
            ID_TangKem: null,
            TangKem: false,
            ListDonViTinh: addCungLoai ? ctDoing.ListDonViTinh : [],
            DiemKhuyenMai: 0,
            // use to check TonKho if same ID_HangHoa
            LaDonViChuan: ctDoing.LaDonViChuan,
            TyLeChuyenDoi: ctDoing.TyLeChuyenDoi,
            ShowWarningQuyCach: false,
            QuyCach: ctDoing.QuyCach,
            SoLuongQuyCach: 0,
            ThanhPhan_DinhLuong: addCungLoai ? ctDoing.QuanLyTheoLoHang ? [] : ctDoing.ThanhPhan_DinhLuong : [],
            HangCungLoais: [],
            LaConCungLoai: addCungLoai,
            PTThue: ptThue,
            TienThue: tienthue,
            ThoiGianBaoHanh: ctDoing.ThoiGianBaoHanh,
            LoaiThoiGianBH: addCungLoai ? ctDoing.LoaiThoiGianBH : ctDoing.LoaiBaoHanh,
            TimeStart: 0,// ampm
            QuaThoiGian: 0,// minutes (timeover)
            TimeRemain: sophutTH,
            TenViTri: addCungLoai ? ctDoing.TenViTri : hd.TenViTriHD,
            ID_ViTri: addCungLoai ? ctDoing.ID_ViTri : hd.ID_ViTri,
            DuocTichDiem: ctDoing.DuocTichDiem,
            DichVuTheoGio: ctDoing.DichVuTheoGio,
            ChietKhauMD_NV: ctDoing.ChietKhauMD_NV,
            ChietKhauMD_NVTheoPT: ctDoing.ChietKhauMD_NVTheoPT,

            TenHangHoaThayThe: ctDoing.TenHangHoa,
            ID_BaoDuong: null,
            DonGiaBaoHiem: 0,
            ThanhPhanComBo: combo,
            LoaiHangHoa: ctDoing.LoaiHangHoa,
            HoaHongTruocChietKhau: ctDoing.HoaHongTruocChietKhau,
        }
    }

    // Note: GioVao = timestart of first DV; Giora= timeEnd = last DV (todo)
    self.addHangHoa = function (itemHH) {
        self.Click_ChoseHangLo(itemHH);
    }
    // assign value for variable hide/show colunm & hide/show header
    function Get_SetHideShowColumCTHD() {
        var lcSetCTHD = localStorage.getItem('lcHideShowColumCTHD_BL');
        if (lcSetCTHD !== null) {
            lcSetCTHD = JSON.parse(lcSetCTHD);
            for (let i = 0; i < lcSetCTHD.length; i++) {
                self.show_STT(lcSetCTHD[i].ShowSTT);
                self.show_ProductCode(lcSetCTHD[i].ShowProductCode);
                self.show_ProductName(lcSetCTHD[i].ShowProductName);
                self.show_ProductPrice(lcSetCTHD[i].ShowProductPrice);
                self.show_SumPrice(lcSetCTHD[i].ShowSumPrice);
                self.show_ProductCount(lcSetCTHD[i].ShowProductCount);
                self.show_ProductSale(lcSetCTHD[i].ShowProductSale);
                HideShow_HeaderCTHD();
                break;
            }
        }
    }
    // call this func after update cache HD (when tang/giam/edit/xoa hanghoa Mua-DoiTra)
    function Update_TienThue_forCTHD(idRandomHD, isDoiTra) {
        var cacheCTHD = lcListCTHD;
        if (isDoiTra) {
            cacheCTHD = lcListCTHD_DoiTra;
        }
        var ptThue = self.HoaDons().TongTienThue() / (self.HoaDons().TongTienHang()) * 100;
        var ptThueHD = self.HoaDons().PTThueHoaDon();
        ptThueHD = ptThueHD > 0 ? ptThueHD : 0;
        var cthd = localStorage.getItem(cacheCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandomHD) {

                    cthd[i].PTThue = ptThueHD;
                    cthd[i].TienThue = ptThue * (cthd[i].DonGia - cthd[i].TienChietKhau) / 100;
                    if (cthd[i].ChatLieu === '4') {
                        cthd[i].ThanhToan = 0;
                    }
                    else {
                        cthd[i].ThanhToan = cthd[i].SoLuong * (cthd[i].DonGia - cthd[i].TienChietKhau + cthd[i].TienThue);
                    }

                    for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                        if (cthd[i].DM_LoHang[j].ChatLieu !== '4') {
                            cthd[i].DM_LoHang[j].PTThue = ptThueHD;
                            cthd[i].DM_LoHang[j].TienThue = ptThue * (cthd[i].DM_LoHang[j].GiaBan - cthd[i].DM_LoHang[j].TienChietKhau) / 100;
                            cthd[i].DM_LoHang[j].ThanhToan = cthd[i].DM_LoHang[j].SoLuong *
                                (cthd[i].DM_LoHang[j].GiaBan - cthd[i].DM_LoHang[j].TienChietKhau + cthd[i].DM_LoHang[j].TienThue);
                        }
                    }
                    for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                        if (cthd[i].HangCungLoais[j].ChatLieu !== '4') {
                            cthd[i].HangCungLoais[j].PTThue = ptThueHD;
                            cthd[i].HangCungLoais[j].TienThue = ptThue * (cthd[i].HangCungLoais[j].GiaBan - cthd[i].HangCungLoais[j].TienChietKhau) / 100;
                            cthd[i].HangCungLoais[j].ThanhToan = cthd[i].HangCungLoais[j].SoLuong
                                * (cthd[i].HangCungLoais[j].GiaBan - cthd[i].HangCungLoais[j].TienChietKhau + cthd[i].HangCungLoais[j].TienThue);
                        }
                    }
                }
            }
            localStorage.setItem(cacheCTHD, JSON.stringify(cthd));
        }
    }

    // used for CTHD Tra (TraHang: get PTThue from DB)
    function Update_TienThue_forCTHDTraHang(idRandomHD) {
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandomHD) {
                    let ptThue = cthd[i].PTThue;
                    if (ptThue > 0) {
                        cthd[i].TienThue = ptThue * (cthd[i].DonGia - cthd[i].TienChietKhau) / 100;
                        cthd[i].ThanhToan = cthd[i].SoLuong * (cthd[i].DonGia - cthd[i].TienChietKhau + cthd[i].TienThue);

                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            cthd[i].DM_LoHang[j].PTThue = ptThue;
                            cthd[i].DM_LoHang[j].TienThue = ptThue * (cthd[i].DM_LoHang[j].GiaBan - cthd[i].DM_LoHang[j].TienChietKhau) / 100;
                            cthd[i].DM_LoHang[j].ThanhToan = cthd[i].DM_LoHang[j].SoLuong *
                                (cthd[i].DM_LoHang[j].GiaBan - cthd[i].DM_LoHang[j].TienChietKhau + cthd[i].DM_LoHang[j].TienThue);
                        }
                        for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                            cthd[i].HangCungLoais[j].PTThue = ptThue;
                            cthd[i].HangCungLoais[j].TienThue = ptThue * (cthd[i].HangCungLoais[j].GiaBan - cthd[i].HangCungLoais[j].TienChietKhau) / 100;
                            cthd[i].HangCungLoais[j].ThanhToan = cthd[i].HangCungLoais[j].SoLuong
                                * (cthd[i].HangCungLoais[j].GiaBan - cthd[i].HangCungLoais[j].TienChietKhau + cthd[i].HangCungLoais[j].TienThue);
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
        }
    }
    self.giamSoLuong = function (item) {
        _maHoaDon = item.MaHoaDon;
        var idRandom = item.IDRandom;
        var idQuiDoi = item.ID_DonViQuiDoi;
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);
        // check if chua chon lo
        //if (item.QuanLyTheoLoHang) {
        //    if (item.ID_LoHang === null || item.ID_LoHang === undefined) {
        //        bottomrightnotify('<i class="fa fa-exclamation-triangle" aria-hidden="true"></i> ' + 'Vui lòng chọn số lô ', 'danger');
        //        return;
        //    }
        //}
        var objNumber = $('#munber_' + idRandom);
        var newNumber = formatNumberToFloat(objNumber.val());
        if (newNumber >= 1) {
            objNumber.val(newNumber - 1);
        }
        var lstHD = JSON.parse(localStorage.getItem(lcListHD));
        var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        if (itemHD[0].StatusOffline === false) {
            var idRandomHD = itemHD[0].IDRandom;
            newNumber = parseFloat(objNumber.val());
            var cthdDoing = FindCTHD_isDoing(item, false);
            cthdDoing.SoLuong = newNumber;
            cthdDoing.ThanhToan = cthdDoing.SoLuong * (cthdDoing.DonGia - cthdDoing.TienChietKhau + cthdDoing.TienThue);
            cthdDoing.ThanhTien = cthdDoing.SoLuong * (cthdDoing.DonGia - cthdDoing.TienChietKhau);

            var lstCTHD = localStorage.getItem(lcListCTHD);
            lstCTHD = JSON.parse(lstCTHD);
            lstCTHD = updateCTHDLe(lstCTHD, cthdDoing);
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));

            if (itemHD[0].LoaiHoaDon !== 6) {
                // check CongNo when use service
                //if (idCT_goiDV !== null) {
                //    var check = CheckCongNo_GoiDV_whenChangeSoLuong(item, parseFloat(objNumber.val()));
                //    if (check === false) {
                //        return check;
                //    }
                //}
                ChangeSoLuong_UpdateSLQuyCach(item, false, item.QuyCach, newNumber);
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, newNumber, false);
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(idQuiDoi, idRandomHD);
                ResetKM_HangHoa(idQuiDoi, item.ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                if (item.ThanhPhanComBo.length > 0) {
                    ChangeSoLuongParent_UpdateCombo(idRandom, newNumber, false);
                }
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
                UpdateChietKhauNV_inCTHD(idRandom, false, cthdDoing);
                BindCTHD_byIDRandomHD(idRandomHD);
                //CaculatorTimeDoingService(item.LaHangHoa, idRandomHD, false);
                // update status change = true for HDDatHang dang XuLy
                if (itemHD[0].LoaiHoaDon === 3) {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }
                SendDataBanHangToPos_byUser(idRandomHD, 1);
            }
            else {
                ChangeSoLuong_UpdateSLQuyCach(item, false, item.QuyCach, newNumber);
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, newNumber, true);
                if (item.ThanhPhanComBo.length > 0) {
                    ChangeSoLuongParent_UpdateCombo(idRandom, cthdDoing.SoLuong, false);
                }
                UpdateHD_TraHang(idRandomHD);
                Update_TienThue_forCTHDTraHang(idRandomHD);
                // bind HangHoa after change QuyCach
                var lstCTHD2 = localStorage.getItem(lcListCTHD);
                if (lstCTHD2 !== null) {
                    lstCTHD2 = JSON.parse(lstCTHD2);
                    var ctHD = $.grep(lstCTHD2, function (itemCT) {
                        return itemCT.IDRandomHD === idRandomHD;
                    });
                    self.HangHoaAfterAdds(ctHD);
                }
            }
            BindHD_byIDRandom(idRandomHD);
            Focus_InputPhaiThanhToan();
        }
        Caculator_AmountProduct();
        HideShow_Icon_ChietKhauNV();
    }
    self.tangSoLuong = function (item) {
        // item: CTHD, DM_LoHang
        _maHoaDon = item.MaHoaDon;
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var idQuiDoi = item.ID_DonViQuiDoi;
        var objNumber = $('#munber_' + idRandom);
        var newNumber = formatNumberToFloat(objNumber.val());
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);
        // get infor of this cthd
        var lstHD = JSON.parse(localStorage.getItem(lcListHD));
        var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        if (itemHD[0].StatusOffline === false) {
            var cthdDoing = FindCTHD_isDoing(item, false);
            var lstCTHD = localStorage.getItem(lcListCTHD);
            lstCTHD = JSON.parse(lstCTHD);
            // HD mua
            if (itemHD[0].LoaiHoaDon !== 6) {
                var check = Check_Enought_SoLuongConLai_ServicePackage(item, (newNumber + 1));
                if (check !== '') {
                    objNumber.val(formatNumber3Digit(item.SoLuongConLai));
                    ShowMessage_Danger(check);
                    return false;
                }

                objNumber.val(newNumber + 1);
                cthdDoing.SoLuong = newNumber + 1;
                cthdDoing.ThanhToan = cthdDoing.SoLuong * (cthdDoing.DonGia - cthdDoing.TienChietKhau + cthdDoing.TienThue);
                cthdDoing.ThanhTien = cthdDoing.SoLuong * (cthdDoing.DonGia - cthdDoing.TienChietKhau);
                lstCTHD = updateCTHDLe(lstCTHD, cthdDoing);
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));

                ChangeSoLuong_UpdateSLQuyCach(item, false, item.QuyCach, cthdDoing.SoLuong);
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, cthdDoing.SoLuong, false);
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(idQuiDoi, idRandomHD);
                ResetKM_HangHoa(idQuiDoi, item.ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                if (item.ThanhPhanComBo.length > 0) {
                    ChangeSoLuongParent_UpdateCombo(idRandom, cthdDoing.SoLuong, false);
                }
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
                UpdateChietKhauNV_inCTHD(idRandom, false, cthdDoing);
                BindCTHD_byIDRandomHD(idRandomHD);
                // update status change = true for HDDatHang dang XuLy
                if (itemHD[0].LoaiHoaDon === 3) {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }
                Focus_InputPhaiThanhToan();
                SendDataBanHangToPos_byUser(idRandomHD, 1);
            }
            else {
                // if TraNhanh --> cho phep tang SL
                if (itemHD[0].ID_HoaDon === null) {
                    objNumber.val(newNumber + 1);
                    newNumber = newNumber + 1;
                }
                else {
                    // chi cho phep tang if soluong tra < soluong da mua
                    if (newNumber < item.SoLuongDaMua) {
                        newNumber = newNumber + 1;
                        // truong hop SLDaMua la so thap phan
                        if (newNumber > item.SoLuongDaMua) {
                            newNumber = item.SoLuongDaMua;
                        }
                        objNumber.val(newNumber);
                    }
                }
                cthdDoing.SoLuong = newNumber;
                cthdDoing.ThanhToan = cthdDoing.SoLuong * (cthdDoing.DonGia - cthdDoing.TienChietKhau + cthdDoing.TienThue);
                cthdDoing.ThanhTien = cthdDoing.SoLuong * (cthdDoing.DonGia - cthdDoing.TienChietKhau);
                lstCTHD = updateCTHDLe(lstCTHD, cthdDoing);
                // update CTHD with soluongTra 
                for (let i = 0; i < lstCTHD.length; i++) {
                    var itemOut = lstCTHD[i];
                    if (itemOut.IDRandomHD === idRandomHD && itemOut.ID_DonViQuiDoi === idQuiDoi
                        && itemOut.ID_ChiTietGoiDV === idCT_goiDV) {
                        // remove warning CTHD (vi chac chan day la HD Tra Hang)
                        lstCTHD[i].CssWarning = false;
                        break;
                    }
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                ChangeSoLuong_UpdateSLQuyCach(item, false, item.QuyCach, newNumber);
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, newNumber, true);
                if (item.ThanhPhanComBo.length > 0) {
                    ChangeSoLuongParent_UpdateCombo(idRandom, cthdDoing.SoLuong, false);
                }
                UpdateHD_TraHang(idRandomHD);
                // bind CTHD after change QuyCach
                var lstCTHD2 = localStorage.getItem(lcListCTHD);
                if (lstCTHD2 !== null) {
                    lstCTHD2 = JSON.parse(lstCTHD2);
                    var ctHD = $.grep(lstCTHD2, function (itemCT) {
                        return itemCT.IDRandomHD === idRandomHD;
                    });
                    self.HangHoaAfterAdds(ctHD);
                }
            }
            BindHD_byIDRandom(idRandomHD);
        }
        Caculator_AmountProduct();
        HideShow_Icon_ChietKhauNV();
    }
    self.xoaHangHoa = function (item) {
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var idQuiDoi = item.ID_DonViQuiDoi;
        var maHoaDon = item.MaHoaDon;
        var loaiHD = item.LoaiHoaDon;
        _maHoaDon = maHoaDon;
        var isOffline = CheckHoaDonOffline_byMaHoaDon(maHoaDon);
        if (isOffline === false) {
            return false;
        }
        var listAllCTHD = localStorage.getItem(lcListCTHD);
        listAllCTHD = JSON.parse(listAllCTHD);
        listAllCTHD = XoaHangHoa_CheckCungLoai(listAllCTHD, item.LotParent, item.QuanLyTheoLoHang, item.LaConCungLoai, idRandom);
        localStorage.setItem(lcListCTHD, JSON.stringify(listAllCTHD));
        UpdateAgain_ListDVT_forCTHD(false, idRandomHD);
        UpdateSoThuTu_CTHD(false, idRandomHD);
        // update TongTienHang if HD mua
        if (_maHoaDon.indexOf('Trả') === -1) {
            Reset_ListDVT_forCTHD_TraHang();
            UpdateCacheHDLe(idRandomHD, false);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        }
        else {
            // update TongGiaGocTraHang
            UpdateHD_TraHang(idRandomHD);
        }
        // reset GiamGia, TienThue if delete all HangHoa of HoaDon
        var lstCTHD_ofThisHD = $.grep(listAllCTHD, function (x) {
            return x.IDRandomHD === idRandomHD;
        });
        if (lstCTHD_ofThisHD.length === 0) {
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].IDRandom === idRandomHD) {
                        lstHD[i].TongChietKhau = 0
                        lstHD[i].TongGiamGia = 0;
                        lstHD[i].TongGiamGiaHangg = 0;
                        lstHD[i].PTChietKhauHH = 0;
                        lstHD[i].PTThueHoaDon = 0;
                        lstHD[i].TongTienThue = 0;
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
            }
        }
        // bind CTHoaDOn
        self.KM_KMApDung([]);
        UpdateKhuyenMai_CTHD(null, idRandomHD);
        ResetKM_HangHoa(idQuiDoi, item.ID_NhomHangHoa, idRandomHD);
        ResetKM_HoaDon(idRandomHD);
        if (loaiHD === 3) {
            Update_StatusXuLy_ofHDDatHang(idRandomHD);
        }
        BindHD_byIDRandom(idRandomHD);
        BindCTHD_byIDRandomHD(idRandomHD);
        Focus_InputPhaiThanhToan();
        Caculator_AmountProduct();
        HideShow_Icon_ChietKhauNV();
        SendDataBanHangToPos_byUser(idRandomHD, 1);
    }
    self.clickVND = function (item) {
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var quanLiTheoLo = item.QuanLyTheoLoHang;
        quanLiTheoLo = (quanLiTheoLo === null ? false : quanLiTheoLo);
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);
        var $this = $('#vnd_' + idRandom);
        if ($this.hasClass('active-re')) {
            $this.removeClass('active-re');
        }
        else {
            $this.addClass('active-re');
        }
        var objSale = $('#pri-g_' + idRandom); // input giam gia
        var tienGiam = 0;
        var ptGiam = 0;
        var priceOld = 0;
        var dvtGiam = '%';
        var itemCTHD = FindCTHD_isDoing(item, false);
        if (itemCTHD !== null) {
            priceOld = itemCTHD.GiaBan;
            ptGiam = itemCTHD.PTChietKhau;
            tienGiam = itemCTHD.TienChietKhau;
            dvtGiam = itemCTHD.DVTinhGiam;

            if (!commonStatisJs.CheckNull(itemCTHD.ID_ChiTietGoiDV) && parseInt(itemCTHD.ChatLieu) === 4) {
                ShowMessage_Danger('Dịch vụ thuộc gói đã mua. Không thay đổi chiết khấu');
                return;
            }
        }
        // if priceOld =0 (chua nhap gia von ban dau o hang hoa)
        if (priceOld !== 0) {
            if ($this.hasClass('active-re')) {
                // caculator agin %
                ptGiam = tienGiam / priceOld * 100;
                objSale.val(formatNumber3Digit(ptGiam));
                dvtGiam = '%';
            }
            else {
                objSale.val(formatNumber3Digit(tienGiam));
                dvtGiam = 'VND';
                ptGiam = 0;
            }
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updatePTVND(cthd, itemCTHD, 1, ptGiam, dvtGiam);
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            }
            if (item.MaHoaDon.indexOf('Trả') > -1) {
                UpdateHD_TraHang(idRandomHD);
            }
            else {
                if (tienGiam > 0) {
                    cthdClickVND_ResetPTramHD(idRandomHD, 1);
                }
                UpdateCacheHDLe(idRandomHD, false);
            }
        }
    }

    function cthdClickVND_ResetPTramHD(idRandomHD, type = 1) {
        var hd = localStorage.getItem(lcListHD);
        if (hd !== null) {
            hd = JSON.parse(hd);
            for (let i = 0; i < hd.length; i++) {
                if (hd[i].IDRandom === idRandomHD) {
                    switch (type) {
                        case 1:
                            hd[i].PTChietKhauHH = 0;
                            break;
                        case 2:
                            hd[i].PTThueHoaDon = 0;
                            break;
                    }
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(hd));
        }
    }

    function UpdateKhachHang_forHD(idDoiTuong) {
        var lstHDTemp = localStorage.getItem(lcListHD);
        if (lstHDTemp === null) {
            lstHDTemp = [];
        }
        else {
            lstHDTemp = JSON.parse(lstHDTemp);
        }
        var idRandomHD = '';
        var itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHDTemp);
        if (itemEx.length === 0) {
            // Creat newHoaDon if not exist and not HD TraHang
            if (_maHoaDon !== undefined && _maHoaDon.indexOf('Trả') === -1) {
                var newHD = newHoaDon(_maHoaDon);
                lstHDTemp.push(newHD);
                idRandomHD = newHD.IDRandom;
            }
        }
        else {
            idRandomHD = itemEx[0].IDRandom;
        }
        for (let i = 0; i < lstHDTemp.length; i++) {
            if (lstHDTemp[i].IDRandom === idRandomHD) {
                lstHDTemp[i].ID_DoiTuong = idDoiTuong;
                break;
            }
        }
        localStorage.setItem(lcListHD, JSON.stringify(lstHDTemp));
    }

    function CheckUsingService_andUpdateCTHD(idRandomHD) {
        // check if using service
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            var usingService = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD && x.ChatLieu === '4';
            });
            if (usingService.length > 0) {
                dialogConfirm('Thông báo', 'Đang sử dụng <b> gói dịch vụ sẵn </b>. Bạn có chắc chắn chuyển sang <b>mua mới không? </b>', function () {
                    ChuyenSuDungGDV_toHoaDonMua(idRandomHD);
                });
            }
        }
    }

    function ChuyenSuDungGDV_toHoaDonMua(idRandomHD) {
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0, li = lstCTHD.length; i < li; i++) {
                if (lstCTHD[i].IDRandomHD === idRandomHD) {
                    if (lstCTHD[i].ChatLieu === '4') {
                        // update again ThanhTien if apply HH - GG theo SL mua
                        let itemHH = $.grep(self.HangHoaAll(), function (x) {
                            return x.ID_DonViQuiDoi === lstCTHD[i].ID_DonViQuiDoi;
                        });
                        itemHH = UpdateGiaBanHangHoa_inList(itemHH);
                        lstCTHD[i].ChatLieu = '';
                        lstCTHD[i].ID_ChiTietGoiDV = null;
                        lstCTHD[i].ID_ChiTietDinhLuong = null;
                        lstCTHD[i].GiaBan = itemHH[0].GiaBan;
                        lstCTHD[i].ThanhTien = itemHH[0].GiaBan * lstCTHD[i].SoLuong;
                        lstCTHD[i].PTChietKhau = 0;
                        lstCTHD[i].TienChietKhau = 0;
                        // alway LoaiHoaDon =1, so have PhiDichVu
                        lstCTHD[i].PhiDichVu = itemHH[0].PhiDichVu;
                        lstCTHD[i].LaPTPhiDichVu = itemHH[0].LaPTPhiDichVu;
                        if (itemHH[0].LaPTPhiDichVu) {
                            lstCTHD[i].TongPhiDichVu = itemHH[0].PhiDichVu * lstCTHD[i].GiaBan * lstCTHD[i].SoLuong / 100;
                        }
                        else {
                            lstCTHD[i].TongPhiDichVu = itemHH[0].PhiDichVu * lstCTHD[i].SoLuong;
                        }

                        for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                            lstCTHD[i].HangCungLoais[j].ChatLieu = '';
                            lstCTHD[i].HangCungLoais[j].ID_ChiTietGoiDV = null;
                            lstCTHD[i].HangCungLoais[j].ID_ChiTietDinhLuong = null;
                            lstCTHD[i].HangCungLoais[j].GiaBan = itemHH[0].GiaBan;
                            lstCTHD[i].HangCungLoais[j].ThanhTien = itemHH[0].GiaBan * lstCTHD[i].HangCungLoais[j].SoLuong;
                            lstCTHD[i].HangCungLoais[j].PTChietKhau = 0;
                            lstCTHD[i].HangCungLoais[j].TienChietKhau = 0;
                            // alway LoaiHoaDon =1, so have PhiDichVu
                            lstCTHD[i].HangCungLoais[j].PhiDichVu = itemHH[0].PhiDichVu;
                            lstCTHD[i].HangCungLoais[j].LaPTPhiDichVu = itemHH[0].LaPTPhiDichVu;
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
            var cthd = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            self.HangHoaAfterAdds(cthd);
            UpdateCacheHDLe(idRandomHD, false);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            BindHD_byIDRandom(idRandomHD);
        }
    }

    self.Customer_GiaTriHoTro = ko.observable();

    self.ChangeCus = function (item) {
        self.Change_KhachHang(item);
    }

    self.showListHoaDon = function () {
        let cus = self.ChiTietDoiTuong()[0];
        let obj = {
            ID: cus.ID,
            MaDoiTuong: cus.MaDoiTuong,
            TenDoiTuong: cus.TenDoiTuong,
            DienThoai: cus.DienThoai,
            NoHienTai: cus.NoHienTai,
        }
        vmThanhToan.showModalThanhToan(obj, 1);
    }

    self.Change_KhachHang = function (item) {
        var idDoiTuong = null;
        if (item !== null) {
            idDoiTuong = item.ID;
        }
        self.selectedNCC(idDoiTuong);

        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD === null) {
            lstHD = [];
        }
        else {
            lstHD = JSON.parse(lstHD);
        }
        var idRandomHD = '';
        var itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        if (itemEx.length === 0) {
            // Creat newHoaDon if not exist 
            if (_maHoaDon !== undefined && _maHoaDon.indexOf('Trả') === -1) {
                var newHD = newHoaDon(_maHoaDon);
                lstHD.push(newHD);
                idRandomHD = newHD.IDRandom;
                itemEx = [newHD];
            }
        }
        else {
            idRandomHD = itemEx[0].IDRandom;
        }
        // update ID_DoiTuong in hd
        var idBangGiaOld = null;
        for (let i = 0; i < lstHD.length; i++) {
            if (lstHD[i].IDRandom === idRandomHD) {
                idBangGiaOld = lstHD[i].ID_BangGia;
                if (lstHD[i].ID_DoiTuong !== idDoiTuong) {
                    if (lstHD[i].LoaiHoaDon === 6 && idDoiTuong.indexOf('KHO') > -1) {
                        ShowMessage_Danger('Trả hàng: Không cho phép chọn khách hàng đang lưu offline');
                        return false;
                    }
                    lstHD[i].ID_DoiTuong = idDoiTuong;
                    // update hoadon: change kle --> khach other: reset khachdatra
                    if (!commonStatisJs.CheckNull(lstHD[i].ID) && lstHD[i].ID !== const_GuidEmpty) {
                        lstHD[i].KhachDaTra = 0;
                    }
                }
                break;
            }
        }
        localStorage.setItem(lcListHD, JSON.stringify(lstHD));

        // only reset if hd have cthd
        if (itemEx[0].StatusOffline === false) {
            if (idDoiTuong !== null) {
                item.ID_NhomDoiTuong = item.IDNhomDoiTuongs;
                item.MaDoiTuong = item.MaNguoiNop;
                item.TenDoiTuong = item.TenNguoiNop;
                self.ChiTietDoiTuong([item]);
            }
            GetInForCustomer_byID(idDoiTuong);
            BindLstBangGia_byNhanVien_andDoiTuong();

            // set default BangGia
            let arrBGNhom = $.grep(self.GiaBans(), function (x) {
                return x.DM_GiaBan_ApDung !== undefined && x.DM_GiaBan_ApDung.length > 0;
            });
            let nhomAD = [];
            if (arrBGNhom.length > 0 && idDoiTuong !== null) {
                let idNhomDTs = item.IDNhomDoiTuongs.toLowerCase();
                for (let i = 0; i < arrBGNhom.length; i++) {
                    for (let j = 0; j < arrBGNhom[i].DM_GiaBan_ApDung.length; j++) {
                        let gbap = arrBGNhom[i].DM_GiaBan_ApDung[j];
                        // chi get banggia cai dat theo nhom
                        if (gbap.ID_NhomKhachHang !== const_GuidEmpty
                            && idNhomDTs.indexOf(gbap.ID_NhomKhachHang) > -1) {
                            nhomAD.push(arrBGNhom[i]);
                            break;
                        }
                    }
                }
            }

            // ưu tiên áp dụng bảng giá theo nhóm
            if (nhomAD.length === 1 && itemEx[0].LoaiHoaDon !== 6) {
                // update again GiaBan cthd
                if (idDoiTuong !== const_GuidEmpty && idDoiTuong !== null) {
                    self.ChangeBangGia(nhomAD[0]);
                }
                else {
                    let bgc = {
                        TenGiaBan: 'Bảng giá chuẩn',
                        ID: const_GuidEmpty,
                    };
                    self.ChangeBangGia(bgc);
                }
            }
            else {
                // if KhachLe, check idbanggia old --> reset to bg chuan
                if (!commonStatisJs.CheckNull(idBangGiaOld) && idBangGiaOld !== const_GuidEmpty && idDoiTuong === null) {
                    let exist = $.grep(self.GiaBans(), function (x) {
                        return x.ID === idBangGiaOld;
                    });
                    if (exist.length === 0) {
                        let bgc = {
                            TenGiaBan: 'Bảng giá chuẩn',
                            ID: const_GuidEmpty,
                        };
                        self.ChangeBangGia(bgc);
                    }
                }

                if (itemEx[0].LoaiHoaDon !== 3) {
                    self.KM_KMApDung([]);
                    UpdateKhuyenMai_CTHD(null, idRandomHD);
                    ResetKM_HangHoa_byIDRandomHD(idRandomHD);
                    ResetKM_HoaDon(idRandomHD);
                    CheckUsingService_andUpdateCTHD(idRandomHD);
                }
                else {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }

                UpdateCacheHDLe(idRandomHD, itemEx[0].LoaiHoaDon === 6);
                UpdateGiamGiaHD_ByNhomKH(idRandomHD);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();

                BindHD_byIDRandom(idRandomHD);
                BindCTHD_byIDRandomHD(idRandomHD);
                SendDataBanHangToPos_byUser(idRandomHD, 1);
            }
        }
    }

    async function GetInforKhachHangFromDB_ByID(id) {
        var date = moment(new Date()).format('YYYY-MM-DD HH:mm');
        if (id !== null) {
            ajaxHelper(DMDoiTuongUri + "GetInforKhachHang_ByID?idDoiTuong=" + id + '&idChiNhanh=' + id_DonVi
                + '&timeStart=' + date + '&timeEnd=' + date + '&wasChotSo=false', 'GET').done(function (data) {
                    if (data !== null) {
                        self.ChiTietDoiTuong(data);

                        vmNKGoiBaoDuong.GetGoiDichVu_ofKhachHang(id);
                        vmThanhToanGara.GetSoDuTheGiaTri(id);
                    }
                    else {
                        ResetInfor_KhachHang();
                    }
                });

            const gtriHotro = await vmNKGoiBaoDuong.GetGiaTriHoTro(id);
            self.Customer_GiaTriHoTro(formatNumber3Digit(gtriHotro));
        }
    }

    function GetInForCustomer_byID(id) {
        if (id !== const_GuidEmpty && id !== null) {
            GetInforKhachHangFromDB_ByID(id);
        }
        else {
            ResetInfor_KhachHang();
            self.Customer_GiaTriHoTro(0);
        }
    }

    function GetAll_IDNhomChild_ofNhomHH(idNhom) {
        var allID = [];
        if (idNhom !== null) {
            tree2.check(tree2.getNodeById(idNhom));//check to do get all child
            allID = tree2.getCheckedNodes();
        }
        return allID;
    }

    self.ChangeBangGia = function (item) {
        var newValue = item.ID;

        self.SetBangGia(newValue);
        UpdateGiaBan_inListHangHoa_byPage(newValue);

        var isChangeBG = false;
        var itemHD = [];
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            if (_maHoaDon === '') {
                _maHoaDon = $('.bill-bxslide li.using font').text();
            }

            itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            if (itemHD.length > 0) {
                let idRandomHD = itemHD[0].IDRandom;
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].IDRandom === idRandomHD) {
                        if (lstHD[i].ID_BangGia !== newValue && lstHD[i].StatusOffline === false) {
                            lstHD[i].ID_BangGia = newValue;
                            isChangeBG = true;
                            break;
                        }
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));

                if (isChangeBG) {
                    ResetKM_HangHoa_byIDRandomHD(idRandomHD);
                    ResetKM_HoaDon(idRandomHD);

                    UpdateThanhTien_inCTHD_byBangGia(itemHD[0]);
                    UpdateGiamGiaHD_ByNhomKH(idRandomHD);
                    UpdateAllChietKhauNV_inCTHD(idRandomHD, false);
                    UpdateChietKhauHD_NhanVien(idRandomHD);
                    UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);

                    BindHD_byIDRandom(idRandomHD);
                    BindCTHD_byIDRandomHD(idRandomHD);
                    SendDataBanHangToPos_byUser(idRandomHD, 1);
                }
            }
        }
    }

    function UpdateAllChietKhauNV_inCTHD(idRandomHD, isDoiTra = false) {
        var nameCache = lcListCTHD;
        if (isDoiTra) {
            nameCache = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(nameCache);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);

            for (let i = 0; i < cthd.length; i++) {
                let itFor = cthd[i];
                if (itFor.IDRandomHD === idRandomHD) {
                    UpdateChietKhauNV_inCTHD(itFor.IDRandom, isDoiTra, itFor);

                    for (let j = 0; j < itFor.DM_LoHang.length; j++) {
                        let forIn = itFor.DM_LoHang[j];
                        UpdateChietKhauNV_inCTHD(forIn.IDRandom, isDoiTra, forIn);
                    }
                    for (let j = 0; j < itFor.HangCungLoais.length; j++) {
                        let forIn = itFor.HangCungLoais[j];
                        UpdateChietKhauNV_inCTHD(forIn.IDRandom, isDoiTra, forIn);
                    }

                    for (let j = 0; j < itFor.ThanhPhanComBo.length; j++) {
                        let forIn = itFor.ThanhPhanComBo[j];

                        if (forIn.BH_NhanVienThucHien.length > 0) {
                            let tongPhiDV = forIn.TongPhiDichVu;
                            if (forIn.LoaiHoaDon === 19) {
                                tongPhiDV = 0;
                            }

                            let gtriTinh = 0;
                            if (forIn.HoaHongTruocChietKhau === 1) {
                                gtriTinh = forIn.DonGia * forIn.SoLuong;
                            }
                            else {
                                gtriTinh = (forIn.DonGia - forIn.TienChietKhau) * forIn.SoLuong;
                            }
                            gtriTinh = gtriTinh - tongPhiDV;
                            gtriTinh = gtriTinh < 0 ? 0 : gtriTinh;

                            for (let k = 0; k < forIn.BH_NhanVienThucHien.length; k++) {
                                let nvien = forIn.BH_NhanVienThucHien[k];
                                let tienCKNew = nvien.ChietKhauMacDinh * forIn.SoLuong * nvien.HeSo;
                                if (nvien.PT_ChietKhau > 0) {
                                    tienCKNew = Math.round(gtriTinh * nvien.PT_ChietKhau / 100) * nvien.HeSo;
                                }
                                cthd[i].ThanhPhanComBo[j].BH_NhanVienThucHien[k].TienChietKhau = tienCKNew;
                            }
                            forIn = CTHD_GetGhiChu_NVTuVanTH(forIn);
                        }
                        break;
                    }
                }
            }
        }
    }

    // update GiaBan at list view PageResults
    function UpdateGiaBan_inListHangHoa_byPage(idBangGia) {
        var from = self.currentPage() * self.pageSize();
        //var lst = self.HangHoas().slice(first, first + self.pageSize());    
        var to = from + self.pageSize();
        if (to > self.HangHoas().length) {
            to = self.HangHoas().length;
        }
        // get giaban with banggia is chosing
        var arrGB = [];
        if (idBangGia !== null && idBangGia !== const_GuidEmpty && idBangGia !== undefined) {
            arrGB = $.grep(self.AllBangGia(), function (item) {
                return item.ID === idBangGia;
            });
            if (arrGB.length > 0) {
                for (let i = from; i < to; i++) {
                    let itemGB = $.grep(arrGB[0].GiaBanChiTiet, function (x) {
                        return x.ID_DonViQuiDoi === self.HangHoas()[i].ID_DonViQuiDoi;
                    });
                    if (itemGB.length === 0) {
                        itemGB = $.grep(self.HangHoaOlds(), function (x) {
                            return x.ID_DonViQuiDoi === self.HangHoas()[i].ID_DonViQuiDoi && x.ID_LoHang === self.HangHoas()[i].ID_LoHang;;
                        });
                    }
                    self.HangHoas()[i].GiaBan = itemGB.length > 0 ? itemGB[0].GiaBan : 0;
                }
            }
        }
        if (arrGB.length === 0) {
            for (let i = from; i < to; i++) {
                let itemHH = $.grep(self.HangHoaOlds(), function (x) {
                    return x.ID_DonViQuiDoi === self.HangHoas()[i].ID_DonViQuiDoi && x.ID_LoHang === self.HangHoas()[i].ID_LoHang;
                });
                self.HangHoas()[i].GiaBan = itemHH.length > 0 ? itemHH[0].GiaBan : 0;
            }
        }
        BindListHangHoa_ByPage();
    }

    // update giaban in cache cthd
    function UpdateGiaBan_inCTHD_byBangGia(cacheName, idRandomHD) {
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
        }
        else {
            cthd = [];
        }
        var banggia = $.grep(self.AllBangGia(), function (x) {
            return x.ID === self.selectedGiaBan();
        });
        if (banggia.length > 0) {
            for (let j = 0; j < cthd.length; j++) {
                if (cthd[j].IDRandomHD === idRandomHD) {
                    let exIDQuiDoi = false;
                    for (let m = 0, ml = banggia[0].GiaBanChiTiet.length; m < ml; m++) {
                        let itemGB = banggia[0].GiaBanChiTiet[m];
                        if (cthd[j].ID_DonViQuiDoi === itemGB.ID_DonViQuiDoi) {
                            cthd[j].GiaBan = itemGB.GiaBan;
                            exIDQuiDoi = true;
                            break;
                        }
                    }
                    if (exIDQuiDoi === false) {
                        let itemHHOld = $.grep(self.HangHoaOlds(), function (x) {
                            return x.ID_DonViQuiDoi === cthd[j].ID_DonViQuiDoi && (x.ID_LoHang === cthd[j].ID_LoHang || cthd[j].QuanLyTheoLoHang === false);
                        });
                        cthd[j].GiaBan = itemHHOld[0].GiaBan;
                    }
                }
            }
        }
        else {
            for (let j = 0; j < cthd.length; j++) {
                if (cthd[j].IDRandomHD === idRandomHD) {
                    let itemHHOld = $.grep(self.HangHoaOlds(), function (x) {
                        return x.ID_DonViQuiDoi === cthd[j].ID_DonViQuiDoi && (x.ID_LoHang === cthd[j].ID_LoHang || cthd[j].QuanLyTheoLoHang === false);
                    });
                    cthd[j].GiaBan = itemHHOld[0].GiaBan;
                }
            }
        }
        localStorage.setItem(cacheName, JSON.stringify(cthd));
    }

    // update thanhtien in cache cthd after update giaban
    function UpdateThanhTien_inCTHD_byBangGia(itemHD) {
        // alway update GiaBan cthd (kể cả hdupdate/hdxuly/hdcopy vì họ cố tình thay bảng giá)
        var idRandomHD = itemHD.IDRandom;
        var sum = 0;
        var sumDT = 0;

        UpdateGiaBan_inCTHD_byBangGia(lcListCTHD, idRandomHD);
        UpdateGiaBan_inCTHD_byBangGia(lcListCTHD_DoiTra, idRandomHD);

        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            // update again thanhtien cthd
            for (let j = 0; j < cthd.length; j++) {
                if (cthd[j].IDRandomHD === idRandomHD) {
                    cthd[j].PTChietKhau = 0;
                    cthd[j].TienChietKhau = 0;
                    cthd[j].TienThue = 0;
                    cthd[j].PTThue = 0;
                    cthd[j].DVTinhGiam = '%';
                    cthd[j].DonGia = cthd[j].GiaBan;
                    cthd[j].ThanhTien = cthd[j].GiaBan * cthd[j].SoLuong;
                    cthd[j].ThanhToan = cthd[j].ThanhTien;
                    sum += cthd[j].ThanhTien;

                    for (let k = 0; k < cthd[j].DM_LoHang.length; k++) {
                        cthd[j].DM_LoHang[k].PTChietKhau = 0;
                        cthd[j].DM_LoHang[k].TienChietKhau = 0;
                        cthd[j].DM_LoHang[k].TienThue = 0;
                        cthd[j].DM_LoHang[k].PTThue = 0;
                        cthd[j].DM_LoHang[k].DVTinhGiam = '%';
                        cthd[j].DM_LoHang[k].DonGia = cthd[j].GiaBan;
                        cthd[j].DM_LoHang[k].GiaBan = cthd[j].GiaBan;
                        cthd[j].DM_LoHang[k].ThanhTien = cthd[j].GiaBan * cthd[j].DM_LoHang[k].SoLuong;
                        cthd[j].DM_LoHang[k].ThanhToan = cthd[j].DM_LoHang[k].ThanhTien;
                        if (k != 0) {
                            sum += cthd[j].DM_LoHang[k].ThanhTien;
                        }
                    }
                    for (let k = 0; k < cthd[j].HangCungLoais.length; k++) {
                        cthd[j].HangCungLoais[k].PTChietKhau = 0;
                        cthd[j].HangCungLoais[k].TienChietKhau = 0;
                        cthd[j].HangCungLoais[k].PTThue = 0;
                        cthd[j].HangCungLoais[k].TienThue = 0;
                        cthd[j].HangCungLoais[k].DVTinhGiam = '%';
                        cthd[j].HangCungLoais[k].GiaBan = cthd[j].GiaBan;
                        cthd[j].HangCungLoais[k].DonGia = cthd[j].GiaBan;
                        cthd[j].HangCungLoais[k].ThanhTien = cthd[j].GiaBan * cthd[j].HangCungLoais[k].SoLuong;
                        cthd[j].HangCungLoais[k].ThanhToan = cthd[j].HangCungLoais[k].ThanhTien;
                        sum += cthd[j].HangCungLoais[k].ThanhTien;
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
        }

        if (itemHD.LoaiHoaDon === 6) {
            var ctDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
            if (ctDoiTra !== null) {
                ctDoiTra = JSON.parse(ctDoiTra);
                // update thanhtien ctDoiTra
                for (let j = 0; j < ctDoiTra.length; j++) {
                    if (ctDoiTra[j].IDRandomHD === idRandomHD) {
                        ctDoiTra[j].PTChietKhau = 0;
                        ctDoiTra[j].TienChietKhau = 0;
                        ctDoiTra[j].PTThue = 0;
                        ctDoiTra[j].TienThue = 0;
                        ctDoiTra[j].DVTinhGiam = '%';
                        ctDoiTra[j].DonGia = ctDoiTra[j].GiaBan;
                        ctDoiTra[j].ThanhTien = ctDoiTra[j].GiaBan * ctDoiTra[j].SoLuong;
                        ctDoiTra[j].ThanhToan = ctDoiTra[j].ThanhTien;
                        sumDT += ctDoiTra[j].ThanhTien;
                        for (let k = 0; k < ctDoiTra[j].DM_LoHang.length; k++) {
                            ctDoiTra[j].DM_LoHang[k].PTChietKhau = 0;
                            ctDoiTra[j].DM_LoHang[k].TienChietKhau = 0;
                            ctDoiTra[j].DM_LoHang[k].PTThue = 0;
                            ctDoiTra[j].DM_LoHang[k].TienThue = 0;
                            ctDoiTra[j].DM_LoHang[k].DVTinhGiam = '%';
                            ctDoiTra[j].DM_LoHang[k].DonGia = ctDoiTra[j].GiaBan;
                            ctDoiTra[j].DM_LoHang[k].ThanhTien = ctDoiTra[j].GiaBan * ctDoiTra[j].DM_LoHang[k].SoLuong;
                            ctDoiTra[j].DM_LoHang[k].ThanhToan = ctDoiTra[j].DM_LoHang[k].ThanhTien;
                            if (k != 0) {
                                sumDT += ctDoiTra[j].DM_LoHang[k].ThanhTien;
                            }
                        }
                        for (let k = 0; k < ctDoiTra[j].HangCungLoais.length; k++) {
                            ctDoiTra[j].HangCungLoais[k].PTChietKhau = 0;
                            ctDoiTra[j].HangCungLoais[k].TienChietKhau = 0;
                            ctDoiTra[j].HangCungLoais[k].PTThue = 0;
                            ctDoiTra[j].HangCungLoais[k].TienThue = 0;
                            ctDoiTra[j].HangCungLoais[k].DVTinhGiam = '%';
                            ctDoiTra[j].HangCungLoais[k].GiaBan = ctDoiTra[j].GiaBan;
                            ctDoiTra[j].HangCungLoais[k].DonGia = ctDoiTra[j].GiaBan;
                            ctDoiTra[j].HangCungLoais[k].ThanhTien = ctDoiTra[j].GiaBan * ctDoiTra[j].HangCungLoais[k].SoLuong;
                            ctDoiTra[j].HangCungLoais[k].ThanhToan = ctDoiTra[j].HangCungLoais[k].ThanhTien;
                            sumDT += ctDoiTra[j].HangCungLoais[k].ThanhTien;
                        }
                    }
                }
                localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(ctDoiTra));

                // update hdTraHang 
                var lstHD = JSON.parse(localStorage.getItem(lcListHD));
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].IDRandom === idRandomHD) {
                        // reset if change banggia
                        lstHD[i].PTThue = 0;
                        lstHD[i].TongTienThue = 0;
                        lstHD[i].PTChietKhauHH = 0;
                        lstHD[i].TongGiamGiaHang = 0;

                        lstHD[i].TongGiaGocHangTra = sum;
                        lstHD[i].TongTienHang = sumDT;
                        lstHD[i].TongTienHangChuaCK = sumDT;
                        if (lstHD[i].TongChietKhau > 0) {
                            lstHD[i].TongGiamGia = lstHD[i].TongChietKhau * sumDT / 100;
                        }
                        lstHD[i].TongGiamGiaKM_HD = lstHD[i].TongGiamGia;

                        lstHD[i].TongTienMua = sumDT - lstHD[i].TongGiamGia + lstHD[i].TongTienThue;
                        lstHD[i].TongTienTra = sum - lstHD[i].TongGiamGiaDB - lstHD[i].TongChiPhiHangTra + lstHD[i].TongThueDB;
                        let phaiTT = lstHD[i].PhaiThanhToanDB - lstHD[i].KhachDaTra - (lstHD[i].TongTienTra - lstHD[i].TongTienMua);
                        if (phaiTT < 0) {
                            // cantrakhach
                            lstHD[i].HoanTraTamUng = Math.abs(phaiTT);
                            lstHD[i].DaTraKhach = lstHD[i].HoanTraTamUng;
                            lstHD[i].TienMat = lstHD[i].HoanTraTamUng;
                            lstHD[i].PhaiThanhToan = 0;
                            lstHD[i].DaThanhToan = 0;
                        }
                        else {
                            // khachcantra
                            lstHD[i].PhaiThanhToan = phaiTT;
                            lstHD[i].DaThanhToan = phaiTT;
                            lstHD[i].TienMat = lstHD[i].PhaiThanhToan;
                            lstHD[i].HoanTraTamUng = 0;
                            lstHD[i].DaTraKhach = 0;
                        }
                        lstHD[i].TienGui = 0;
                        lstHD[i].TienATM = 0;
                        lstHD[i].TienTheGiaTri = 0;
                        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                        break;
                    }
                }
            }
        }
        else {
            UpdateCacheHDLe(idRandomHD, false);
        }
    }

    self.ChangeNVienBan = function (item) {
        $('#txtSearchHH').focus();
        $(".op-function-box").hide();
        $("#op_js_nhanvien").hide();

        var newValue = item.ID;
        self.SetNhanVien(newValue);
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }

        var idRandomHD = '';
        var itemOpen = [];
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD === null) {
            lstHD = [];
        }
        else {
            lstHD = JSON.parse(lstHD);
        }
        var itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        if (itemEx.length === 0) {
            // Creat newHoaDon if not exist and not HD TraHang
            // _maHoaDon === undefined when delete cacheMaHD
            if (_maHoaDon !== undefined && _maHoaDon.indexOf('Trả') === -1) {
                var newHD = newHoaDon(_maHoaDon);
                lstHD.push(newHD);
                idRandomHD = newHD.IDRandom;
            }
        }
        else {
            idRandomHD = itemEx[0].IDRandom;
        }
        for (let i = 0; i < lstHD.length; i++) {
            if (lstHD[i].IDRandom === idRandomHD) {
                if (lstHD[i].ID_NhanVien !== newValue) {
                    lstHD[i].ID_NhanVien = newValue;
                    lstHD[i].TenNhanVien = self.titleNhanvien();
                    itemOpen = lstHD[i];
                }
                break;
            }
        }
        localStorage.setItem(lcListHD, JSON.stringify(lstHD));

        if (itemOpen.StatusOffline === false) {
            BindLstBangGia_byNhanVien_andDoiTuong();
            // check exist ID_BangGia of HD in lst BangGia new
            let itemGB = $.grep(self.GiaBans(), function (item) {
                return item.ID === itemOpen.ID_BangGia;
            });
            if (itemGB.length === 0) {
                // if not exist: reset to BGChuan
                self.ChangeBangGia({ ID: const_GuidEmpty, TenGiaBan: 'Bảng giá chuẩn' });
            }
            else {
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(null, idRandomHD);
                ResetKM_HangHoa_byIDRandomHD(idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                UpdateCacheHDLe(idRandomHD, false);
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                BindHD_byIDRandom(idRandomHD);
                BindCTHD_byIDRandomHD(idRandomHD);
                HideShow_Icon_ChietKhauNV();
            }
        }
    }
    function BindCTHD_whenDocumentReadly() {
        // tranh truong hop bind lai CTHD qua nhieu lan (chi bind sau khi get xong HangHoa)
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null && self.HangHoaAll().length > 0) {
            lstCTHD = JSON.parse(lstCTHD);
            var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
            var ctHD = $.grep(lstCTHD, function (itemCT) {
                return itemCT.IDRandomHD === idRandomHD;
            });
            self.HangHoaAfterAdds(ctHD);
            if (ctHD.length > 0) {
                // remove border for LoHang last of CTHD
                SetBorder_LotEnd_CTHD();
                HideShow_Icon_ChietKhauNV();
                //Enable_Disable_InputLot(_maHoaDon);
            }
        }
    }

    function BindCTHD_byIDRandomHD(idRandomHD) {
        var arr = [];
        var arrDT = [];

        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            arr = $.grep(cthd, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            self.HangHoaAfterAdds(arr);
        }
        else {
            self.HangHoaAfterAdds([]);
        }

        var cthdDT = localStorage.getItem(lcListCTHD_DoiTra);
        if (cthdDT !== null) {
            cthdDT = JSON.parse(cthdDT);
            arrDT = $.grep(cthdDT, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            self.NewProducts(arrDT);
        }
        else {
            self.NewProducts([]);
        }

        if (self.ThietLap().KhuyenMai) {
            // get lst product KM of HoaDon
            var lstKM_HD = localStorage.getItem(lcProductKM_HoaDon);
            if (lstKM_HD !== null) {
                lstKM_HD = JSON.parse(lstKM_HD);
                var arrProduct = $.grep(lstKM_HD, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });
                self.HHTang_HoaDon(arrProduct);
            }
            else {
                self.HHTang_HoaDon([]);
            }
        }
        else {
            self.HHTang_HoaDon([]);
        }
    }

    function GetDataChotSo() {
        // to do check NgayLapHD
        ajaxHelper('/api/DanhMuc/HT_ThietLapAPI/GetDataChotSo?idChiNhanh=' + id_DonVi, 'GET').done(function (data) {
            if (data !== null && data.length > 0) {
                self.ChotSo_ChiNhanh(data);
                vmThanhToan.ThietLapChotSo = data;
            }
        })
    }
    function CheckNgayLapHD(ddMMyyyyHHmmss) {
        var dateNow = moment(new Date()).format('YYYY-MM-DD HH:mm');
        var ngaylapHD = GetNgayLapHD_whenSave(ddMMyyyyHHmmss);
        if (ngaylapHD === '') {
            ShowMessage_Danger('Vui lòng nhập ngày lập hóa đơn');
            $('#datepicker').datetimepicker(
                {
                    format: "d/m/Y",
                    defaultDate: new Date(),
                    mask: true,
                    maxDate: new Date(),
                    timepicker: false,
                });
            return false;
        }
        if (ngaylapHD.indexOf('_') > -1) {
            ShowMessage_Danger('Ngày lập hóa đơn chưa đúng định dạng');
            return false;
        }
        if (ngaylapHD > dateNow) {
            ShowMessage_Danger('Ngày lập hóa đơn vượt quá thời gian hiện tại');
            return false;
        }
        if (self.ThietLap().KhoaSo && self.ChotSo_ChiNhanh().length > 0) {
            let dtChotSo = moment(self.ChotSo_ChiNhanh()[0].NgayChotSo).format('YYYY-MM-DD');
            if (moment(ngaylapHD, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD') <= dtChotSo) {
                ShowMessage_Danger("Ngày lập hóa đơn" + ' phải sau thời gian chốt sổ ' + moment(dtChotSo, 'YYYY-MM-DD').format('DD/MM/YYYY'));
                return false;
            }
        }
        return true;
    }
    $('#datepicker').keypress(function (e) {
        if (e.keyCode === 13) {
            var valDate = $(this).val();
            if (valDate.substr(6, 4) === '____') {
                valDate = valDate.substr(0, 6).concat(now.getFullYear());
                $('#datepicker').val(valDate);
                $('.xdsoft_datetimepicker').css('display', 'none');
            }
            self.ChangeNgayLapHD();
        }
    })
    $('#timepicker').keypress(function (e) {
        if (e.keyCode === 13) {
            self.ChangeNgayLapHD();
        }
    })
    self.ChangeNgayLapHD = function () {
        var datepicker = $('#datepicker').val();
        var timepicker = $('#timepicker').val();
        var dtpicker = datepicker + ' ' + timepicker;
        if (commonStatisJs.CheckNull(datepicker) || commonStatisJs.CheckNull(timepicker)) {
            ShowMessage_Danger('Ngày lập hóa đơn không đúng định dạng');
            return false;
        }
        var check = CheckNgayLapHD(dtpicker);
        if (!check) {
            return;
        }
        // get seconds now (because datetime only return YYYY-MM-DD HH:mm)
        var seconds = (new Date()).getSeconds();
        var dtchange = moment(dtpicker, 'DD/MM/YYYY HH:mm').format('YYYY-MM-DD HH:mm');

        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
        }
        else {
            lstHD = [];
        }
        var idRandomHD = '';
        // if not exist --> add new
        //if (lstHD.length === 0) {
        //    var newHD = newHoaDon(_maHoaDon);
        //    lstHD.push(newHD);
        //    idRandomHD = newHD.IDRandom;
        //}
        // find hd by mahoadon cuurent
        let hdFind = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        if (hdFind.length === 0) {
            var newHD = newHoaDon(_maHoaDon);
            lstHD.push(newHD);
            idRandomHD = newHD.IDRandom;
        }
        for (let i = 0; i < lstHD.length; i++) {
            if (lstHD[i].MaHoaDon === _maHoaDon && (lstHD[i].NguoiTao === userLogin || lstHD[i].TrangThaiHD === 3)) {
                // TraHang: khong cho nhap NgayTra < NgayMua
                if (lstHD[i].LoaiHoaDon === 6 && lstHD[i].ID_HoaDon !== null) {
                    var dtOld = moment(lstHD[i].NgayLapHD_ofHDGoc).format('YYYY-MM-DD HH:mm');
                    var dtNew = moment(dtchange).format('YYYY-MM-DD HH:mm');
                    if (dtNew < dtOld) {
                        ShowMessage_Danger('Ngày trả hàng phải sau ngày mua hàng');
                        return false;
                    }
                }
                lstHD[i].NgayLapHoaDon = dtchange;
                idRandomHD = lstHD[i].IDRandom;
                break;
            }
        }
        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        // assign again self.NgayLapHoaDon
        self.DateHDDefault(datepicker);
        self.TimeHDDefault(timepicker);
        stopTimer();
        // caculator SoSuHienTai by Time if ID_DoiTuong !=null (todo)
        // update ThoiGian in all CTHD with thisHD
        // get date from new Day
        dtchange = moment(dtchange, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD');
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandomHD) {
                    var time = cthd[i].ThoiGian.split(' ')[1];
                    var tgNew = dtchange.concat(' ', time);
                    cthd[i].ThoiGian = tgNew;
                    if (cthd[i].QuanLyTheoLoHang) {
                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            cthd[i].DM_LoHang[j].ThoiGian = tgNew;
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
        }
        // vi bang gia ap dung theo thu trong tuan
        BindLstBangGia_byNhanVien_andDoiTuong();
    }
    // ghi chu HD 
    self.editNote = function () {
        var lcNewHoaDon = localStorage.getItem(lcListHD);
        if (lcNewHoaDon !== null) {
            lcNewHoaDon = JSON.parse(lcNewHoaDon);
            // update note HD
            for (let i = 0; i < lcNewHoaDon.length; i++) {
                if (lcNewHoaDon[i].MaHoaDon === _maHoaDon
                    && (lcNewHoaDon[i].NguoiTao === userLogin || lcNewHoaDon[i].TrangThaiHD === 3)) {
                    lcNewHoaDon[i].DienGiai = $(event.currentTarget).val();
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lcNewHoaDon));
        }
    };

    self.editMaHoaDon = function () {
        let hd = localStorage.getItem(lcListHD);
        if (hd !== null) {
            hd = JSON.parse(hd);
            for (let i = 0; i < hd.length; i++) {
                if (hd[i].IDRandom === self.HoaDons().IDRandom()) {
                    hd[i].MaHoaDonDB = $(event.currentTarget).val();
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(hd));
        }
    };

    // ghi chu HD 
    self.editGhiChuChiPhi = function () {
        var hd = localStorage.getItem(lcListHD);
        if (hd !== null) {
            hd = JSON.parse(hd);
            for (let i = 0; i < hd.length; i++) {
                if (hd[i].IDRandom === self.HoaDons().IDRandom()) {
                    hd[i].ChiPhi_GhiChu = $(event.currentTarget).val();
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(hd));
        }
    };
    // hd other user
    self.popup_editGhiChuHD = function () {
        var idRandomHD = self.Modal_HoaDons().IDRandom;
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            // update note HD
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRandomHD) {
                    lstHD[i].DienGiai = $('#txtpop_NoteHD').val();
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }
    self.MouseOver_CTHD = function (item) {
        var thisObj = event.currentTarget;
        var objFind = $(thisObj).find('.inner-listchoose ._ghi-chu-nhap-hang');
        var hasLot = item.DM_LoHang.length > 0;
        //if (!$(objFind).hasClass('is-show')) {
        //    // show ghichu neu khong co lo
        //    if (hasLot === false) {
        //        $('._ghi-chu-nhap-hang').hide();
        //        $(objFind).show();
        //    }
        //}
    }
    self.UpdateCTHD_GhiChu = function (item, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var quanlyTheoLo = item.QuanLyTheoLoHang;
        var ghichu = $(event.currentTarget).val();
        var concungloai = item.LaConCungLoai;
        var nameCache = lcListCTHD;
        if (isDoiTra) {
            nameCache = lcListCTHD_DoiTra;
        }
        var lcCTHD = localStorage.getItem(nameCache);
        if (lcCTHD !== null) {
            lcCTHD = JSON.parse(lcCTHD);
            if (item.LotParent || (concungloai === false && quanlyTheoLo === false)) {
                for (let i = 0; i < lcCTHD.length; i++) {
                    if (lcCTHD[i].IDRandom === idRandom) {
                        lcCTHD[i].GhiChu = ghichu;
                        break;
                    }
                }
            }
            else {
                if (quanlyTheoLo) {
                    for (let i = 0; i < lcCTHD.length; i++) {
                        for (let j = 0; j < lcCTHD[i].DM_LoHang.length; j++) {
                            if (lcCTHD[i].DM_LoHang[j].IDRandom === idRandom) {
                                lcCTHD[i].DM_LoHang[j].GhiChu = ghichu;
                                i = lcCTHD.length;  // esc for loop
                                break;
                            }
                        }
                    }
                }
                else {
                    for (let i = 0; i < lcCTHD.length; i++) {
                        for (let j = 0; j < lcCTHD[i].HangCungLoais.length; j++) {
                            if (lcCTHD[i].HangCungLoais[j].IDRandom === idRandom) {
                                lcCTHD[i].HangCungLoais[j].GhiChu = ghichu;
                                i = lcCTHD.length;
                                break;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(nameCache, JSON.stringify(lcCTHD));
        }
    }
    self.editSoLuong_NhapThuong = function () {
        var $this = $(event.currentTarget);
        formatNumberObj($this);

        var valThis = formatNumberToFloat($this.val());
        var keyCode = event.keyCode || event.which;
        if (keyCode === 13) {
            if (self.ItemHH_LoChosing().ID_DonViQuiDoi === undefined) {
                ShowMessage_Danger('Vui lòng chọn hàng hóa');
                return;
            }
            if (valThis === 0) {
                ShowMessage_Danger('Vui lòng nhập số lượng cho hàng hóa');
                return;
            }
            GetTonKho_ofHangHoafromDB(self.ItemHH_LoChosing(), 2);
        }
    }
    function CheckHoaDonOffline_byMaHoaDon(maHoaDon) {
        if (maHoaDon.indexOf('Copy') === -1 && maHoaDon.indexOf('O') >= 0) {
            ShowMessage_Danger('Hóa đơn đã được thanh toán offline. Không thể thay đổi thông tin');
            return false;
        }
    }
    // change DonGia --> change TienChietKhau(if pt >0 )
    self.editDonGia_NhapThuong = function () {
        var $this = $(event.currentTarget);
        formatNumberObj($this);
        var keycode = event.keyCode || event.which;
        if (keycode === 13) {
            var product = self.ItemHH_LoChosing();
            self.Click_ChoseHangLo(product, 3);
        }
    }
    self.SortProduct = function () {
        self.HangHoaAfterAdds.reverse();
    }
    self.myFilter = function (item, inputString) {
        var itemSearch = locdau(item.TenDoiTuong);
        var itemSearch2 = item.MaDoiTuong.toLowerCase();
        var iteSearch4 = item.DienThoai === null ? '' : item.DienThoai;
        var locdauInput = locdau(inputString);
        // nen bat chat khong cho nhap dau cach o MaKH
        var arr = itemSearch.split(/\s+/);
        var sThreechars = '';
        for (let i = 0; i < arr.length; i++) {
            sThreechars += arr[i].toString().split('')[0];
        }
        return itemSearch.indexOf(locdauInput) > -1 || itemSearch2.indexOf(locdauInput) > -1 ||
            sThreechars.indexOf(locdauInput) > -1 || (iteSearch4 !== null && iteSearch4.indexOf(locdauInput) > -1);
    }
    self.filterHH = function (item, inputString) {
        var itemSearch = locdau(item.TenHangHoa);
        var itemSearch2 = item.MaHangHoa.toLowerCase();
        var itemSearch3 = item.GiaBan.toString();
        var locdauInput = locdau(inputString);
        var arr = itemSearch.split(/\s+/);
        var sThreechars = '';
        // for loop faster
        var i = 0;
        var lengthArr = arr.length;
        for (i; i < lengthArr; i++) {
            sThreechars += arr[i].toString().split('')[0];
        }
        $('#txtSearchHH').focus();
        return itemSearch.indexOf(locdauInput) > -1 || itemSearch2.indexOf(locdauInput) > -1 || itemSearch3.indexOf(locdauInput) > -1 ||
            sThreechars.indexOf(locdauInput) > -1;
    }
    function UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD) {
        var loaiHD = GetLoaiHoaDon_ofHDopening();
        var cthd = localStorage.getItem(lcListCTHD);
        var cthd_DoiTra = localStorage.getItem(lcListCTHD_DoiTra);
        if (loaiHD === 3) {
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                if (self.ThietLap().DatHangXuatAm === false) {
                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandomHD === idRandomHD && cthd[i].ID_DonViQuiDoi === idQuiDoi) {
                            if (cthd[i].QuanLyTheoLoHang === false) {
                                // update warning CTHD
                                if (cthd[i].LaHangHoa) {
                                    cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                                    for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                                        cthd[i].HangCungLoais[j].CssWarning = (cthd[i].HangCungLoais[j].SoLuong > cthd[i].HangCungLoais[j].TonKho);
                                    }
                                }
                            }
                            else {
                                if (cthd[i].LaHangHoa) {
                                    // update warning CTHD
                                    cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                                    // update warning DM_Lo
                                    for (let j = 1; j < cthd[i].DM_LoHang.length; j++) {
                                        cthd[i].DM_LoHang[j].CssWarning = (cthd[i].DM_LoHang[j].SoLuong > cthd[i].DM_LoHang[j].TonKho);
                                    }
                                }
                            }
                            break;
                        }
                    }
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            }
        }
        else {
            // loai 1,6
            if (loaiHD === 1) {
                if (self.ThietLap().XuatAm === false) {
                    // update CTHD
                    if (cthd !== null) {
                        cthd = JSON.parse(cthd);
                        for (let i = 0; i < cthd.length; i++) {
                            if (cthd[i].IDRandomHD === idRandomHD && cthd[i].ID_DonViQuiDoi === idQuiDoi) {
                                if (cthd[i].QuanLyTheoLoHang === false) {
                                    // update warning CTHD
                                    if (cthd[i].LaHangHoa) {
                                        cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                                        for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                                            cthd[i].HangCungLoais[j].CssWarning = (cthd[i].HangCungLoais[j].SoLuong > cthd[i].HangCungLoais[j].TonKho);
                                        }
                                    }
                                }
                                else {
                                    if (cthd[i].LaHangHoa) {
                                        // update warning CTHD
                                        cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                                        // update warning DM_Lo
                                        for (let j = 1; j < cthd[i].DM_LoHang.length; j++) {
                                            cthd[i].DM_LoHang[j].CssWarning = (cthd[i].DM_LoHang[j].SoLuong > cthd[i].DM_LoHang[j].TonKho);
                                        }
                                    }
                                }
                                break;
                            }
                        }
                        localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
                    }
                }
            }
            else {
                // update CTHD_TraHang: warning = true if SoLuong =0
                if (cthd !== null) {
                    cthd = JSON.parse(cthd);
                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandomHD === idRandomHD && cthd[i].ID_DonViQuiDoi === idQuiDoi) {
                            cthd[i].CssWarning = (parseFloat(cthd[i].SoLuong) === 0);
                            for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                                cthd[i].DM_LoHang[j].CssWarning = (parseFloat(cthd[i].DM_LoHang[j].SoLuong) === 0);
                            }
                            for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                                cthd[i].HangCungLoais[j].CssWarning = (parseFloat(cthd[i].HangCungLoais[j].SoLuong) === 0);
                            }
                            break;
                        }
                    }
                    localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
                }
                // update CTHD_DoiTra
                if (self.ThietLap().XuatAm === false) {
                    if (cthd_DoiTra !== null) {
                        cthd_DoiTra = JSON.parse(cthd_DoiTra);
                        for (let i = 0; i < cthd_DoiTra.length; i++) {
                            if (cthd_DoiTra[i].IDRandomHD === idRandomHD && cthd_DoiTra[i].ID_DonViQuiDoi === idQuiDoi) {
                                if (cthd_DoiTra[i].QuanLyTheoLoHang === false) {
                                    // update warning cthd_DoiTra
                                    if (cthd_DoiTra[i].LaHangHoa) {
                                        cthd_DoiTra[i].CssWarning = (cthd_DoiTra[i].SoLuong > cthd_DoiTra[i].TonKho);
                                        for (let j = 0; j < cthd_DoiTra[i].HangCungLoais.length; j++) {
                                            cthd_DoiTra[i].HangCungLoais[j].CssWarning = (cthd_DoiTra[i].HangCungLoais[j].SoLuong > cthd_DoiTra[i].HangCungLoais[j].TonKho);
                                        }
                                    }
                                }
                                else {
                                    if (cthd_DoiTra[i].LaHangHoa) {
                                        // update warning cthd_DoiTra
                                        cthd_DoiTra[i].CssWarning = (cthd_DoiTra[i].SoLuong > cthd_DoiTra[i].TonKho);
                                        // update warning DM_Lo
                                        for (let j = 1; j < cthd_DoiTra[i].DM_LoHang.length; j++) {
                                            cthd_DoiTra[i].DM_LoHang[j].CssWarning = (cthd_DoiTra[i].DM_LoHang[j].SoLuong > cthd_DoiTra[i].DM_LoHang[j].TonKho);
                                        }
                                    }
                                }
                                break;
                            }
                        }
                        localStorage.getItem(lcListCTHD_DoiTra, JSON.stringify(cthd_DoiTra));
                    }
                }
            }
        }
    }
    // use when edit SoLuong
    function ShowHideWarning_forCTHD_byIDQuiDoi(idRandomHD, idQuiDoi, idRandom) {
        var loaiHD = GetLoaiHoaDon_ofHDopening();
        var cthd = localStorage.getItem(lcListCTHD);
        var cthd_DoiTra = localStorage.getItem(lcListCTHD_DoiTra);
        var itemOpening = [];
        var showWarning = false;
        if (loaiHD === 3 || loaiHD === 1 || cthd_DoiTra === null) {
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].ID_DonViQuiDoi === idQuiDoi && cthd[i].IDRandomHD === idRandomHD) {
                        if (cthd[i].QuanLyTheoLoHang === false) {
                            if (cthd[i].IDRandom === idRandom) {
                                showWarning = cthd[i].CssWarning;
                            }
                            else {
                                for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                                    if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                                        showWarning = cthd[i].HangCungLoais[j].CssWarning;
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                                if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                                    if (cthd[i].DM_LoHang[j].LotParent) {
                                        showWarning = cthd[i].CssWarning;
                                    }
                                    else {
                                        showWarning = cthd[i].DM_LoHang[j].CssWarning;
                                    }
                                    break;
                                }
                            }
                        }
                        break;
                    }
                }
                if (showWarning) {
                    $('#show_wr_' + idRandom).css('display', '');
                }
                else {
                    $('#show_wr_' + idRandom).css('display', 'none');
                }
            }
        }
        else {
            // loai 6
            if (cthd_DoiTra !== null) {
                cthd_DoiTra = JSON.parse(cthd_DoiTra);
                for (let i = 0; i < cthd_DoiTra.length; i++) {
                    if (cthd_DoiTra[i].IDRandomHD === idRandomHD && cthd_DoiTra[i].ID_DonViQuiDoi === idQuiDoi) {
                        if (cthd_DoiTra[i].QuanLyTheoLoHang === false) {
                            if (cthd_DoiTra[i].IDRandom === idRandom) {
                                showWarning = cthd_DoiTra[i].CssWarning;
                            }
                            else {
                                for (let j = 0; j < cthd_DoiTra[i].HangCungLoais.length; j++) {
                                    if (cthd_DoiTra[i].HangCungLoais[j].IDRandom === idRandom) {
                                        showWarning = cthd_DoiTra[i].HangCungLoais[j].CssWarning;
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            for (let j = 0; j < cthd_DoiTra[i].DM_LoHang.length; j++) {
                                if (cthd_DoiTra[i].DM_LoHang[j].IDRandom === idRandom) {
                                    if (cthd_DoiTra[i].DM_LoHang[j].LotParent) {
                                        showWarning = cthd_DoiTra[i].CssWarning;
                                    }
                                    else {
                                        showWarning = cthd_DoiTra[i].DM_LoHang[j].CssWarning;
                                    }
                                    break;
                                }
                            }
                        }
                        break;
                    }
                }
                if (showWarning) {
                    $('#show_wrDT_' + idRandom).css('display', '');
                }
                else {
                    $('#show_wrDT_' + idRandom).css('display', 'none');
                }
            }
            // hide warning CTHD Tra if SoLuong !=0
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].ID_DonViQuiDoi === idQuiDoi && cthd[i].IDRandomHD === idRandomHD) {
                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                                if (cthd[i].DM_LoHang[j].LotParent) {
                                    showWarning = cthd[i].CssWarning;
                                }
                                else {
                                    showWarning = cthd[i].DM_LoHang[j].CssWarning;
                                }
                                break;
                            }
                        }
                        break;
                    }
                }
                if (showWarning) {
                    $('#show_wr_' + idRandom).css('display', '');
                }
                else {
                    $('#show_wr_' + idRandom).css('display', 'none');
                }
            }
        }
    }

    // chi reset HH same ID_nhom or same ID_QuiDoi
    function ResetKM_HangHoa(idQuiDoi, idNhomHH, idRandomHD) {
        self.HH_KhuyenMai(undefined);
        var ctHD = [];
        var lstCTHD_afterKM = localStorage.getItem(lcListCTHD);
        if (lstCTHD_afterKM !== null) {
            lstCTHD_afterKM = JSON.parse(lstCTHD_afterKM);
            // reset KhuyenMai of HangHoa & bind again
            for (let i = 0; i < lstCTHD_afterKM.length; i++) {
                if (lstCTHD_afterKM[i].IDRandomHD === idRandomHD) {
                    // only reset GiamGia if is opening KMai
                    if (lstCTHD_afterKM[i].IsOpeningKMai) {
                        // reset if same ID_nhomHH or same ID_QuiDoi
                        if (lstCTHD_afterKM[i].ID_DonViQuiDoi === idQuiDoi || lstCTHD_afterKM[i].ID_NhomHangHoa === idNhomHH) {
                            lstCTHD_afterKM[i].HangHoa_KM = [];
                            lstCTHD_afterKM[i].TenKhuyenMai = '';
                            // reset giamgia = 0
                            lstCTHD_afterKM[i].PTChietKhau = 0;
                            lstCTHD_afterKM[i].TienChietKhau = 0;
                            lstCTHD_afterKM[i].DVTinhGiam = '%';
                            lstCTHD_afterKM[i].IsOpeningKMai = false;
                            lstCTHD_afterKM[i].ID_KhuyenMai = null;
                            lstCTHD_afterKM[i].DiemKhuyenMai = 0;
                            // not update GiaBan, only update again TienChietKhau = 0
                            lstCTHD_afterKM[i].ThanhTien = lstCTHD_afterKM[i].GiaBan * lstCTHD_afterKM[i].SoLuong;
                            for (let k = 0; k < lstCTHD_afterKM[i].DM_LoHang.length; k++) {
                                lstCTHD_afterKM[i].DM_LoHang[k].PTChietKhau = 0;
                                lstCTHD_afterKM[i].DM_LoHang[k].TienChietKhau = 0;
                                lstCTHD_afterKM[i].DM_LoHang[k].DVTinhGiam = '%';
                                lstCTHD_afterKM[i].DM_LoHang[k].ThanhTien = lstCTHD_afterKM[i].DM_LoHang[k].GiaBan * lstCTHD_afterKM[i].DM_LoHang[k].SoLuong;
                            }
                            for (let k = 0; k < lstCTHD_afterKM[i].HangCungLoais.length; k++) {
                                lstCTHD_afterKM[i].HangCungLoais[k].PTChietKhau = 0;
                                lstCTHD_afterKM[i].HangCungLoais[k].TienChietKhau = 0;
                                lstCTHD_afterKM[i].HangCungLoais[k].DVTinhGiam = '%';
                                lstCTHD_afterKM[i].HangCungLoais[k].ThanhTien = lstCTHD_afterKM[i].HangCungLoais[k].GiaBan * lstCTHD_afterKM[i].HangCungLoais[k].SoLuong;
                            }
                        }
                    }
                    ctHD.push(lstCTHD_afterKM[i]);
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD_afterKM));
        }
        self.HangHoaAfterAdds(ctHD);
    }
    // use editSoLuong, editPrice, editSale
    // chi reset HH same ID_nhom or same ID_QuiDoi
    function ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(idQuiDoi, idNhomHH, idRandomHD) {
        self.HH_KhuyenMai(undefined);
        var lstCTHD_afterKM = localStorage.getItem(lcListCTHD);
        if (lstCTHD_afterKM !== null) {
            lstCTHD_afterKM = JSON.parse(lstCTHD_afterKM);
            // reset KhuyenMai of HangHoa & bind again
            for (let i = 0; i < lstCTHD_afterKM.length; i++) {
                if (lstCTHD_afterKM[i].IDRandomHD === idRandomHD) {
                    if (lstCTHD_afterKM[i].IsOpeningKMai) {
                        // reset if same ID_nhomHH or same ID_QuiDoi
                        if (lstCTHD_afterKM[i].ID_DonViQuiDoi === idQuiDoi || lstCTHD_afterKM[i].ID_NhomHangHoa === idNhomHH) {
                            lstCTHD_afterKM[i].HangHoa_KM = [];
                            lstCTHD_afterKM[i].TenKhuyenMai = '';
                            // reset giamgia = 0
                            lstCTHD_afterKM[i].PTChietKhau = 0;
                            lstCTHD_afterKM[i].TienChietKhau = 0;
                            lstCTHD_afterKM[i].DVTinhGiam = '%';
                            lstCTHD_afterKM[i].ID_KhuyenMai = null;
                            lstCTHD_afterKM[i].IsOpeningKMai = false;
                            lstCTHD_afterKM[i].DiemKhuyenMai = 0;
                            // not update GiaBan, only update again TienChietKhau = 0
                            lstCTHD_afterKM[i].ThanhTien = lstCTHD_afterKM[i].GiaBan * lstCTHD_afterKM[i].SoLuong;
                            for (let k = 0; k < lstCTHD_afterKM[i].DM_LoHang.length; k++) {
                                lstCTHD_afterKM[i].DM_LoHang[k].PTChietKhau = 0;
                                lstCTHD_afterKM[i].DM_LoHang[k].TienChietKhau = 0;
                                lstCTHD_afterKM[i].DM_LoHang[k].DVTinhGiam = '%';
                                lstCTHD_afterKM[i].DM_LoHang[k].ThanhTien = lstCTHD_afterKM[i].DM_LoHang[k].GiaBan * lstCTHD_afterKM[i].DM_LoHang[k].SoLuong;
                            }
                            for (let k = 0; k < lstCTHD_afterKM[i].HangCungLoais.length; k++) {
                                lstCTHD_afterKM[i].HangCungLoais[k].PTChietKhau = 0;
                                lstCTHD_afterKM[i].HangCungLoais[k].TienChietKhau = 0;
                                lstCTHD_afterKM[i].HangCungLoais[k].DVTinhGiam = '%';
                                lstCTHD_afterKM[i].HangCungLoais[k].ThanhTien = lstCTHD_afterKM[i].HangCungLoais[k].GiaBan * lstCTHD_afterKM[i].HangCungLoais[k].SoLuong;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD_afterKM));
        }
    }
    // use when change NCC, BangGia, NVien
    function ResetKM_HangHoa_byIDRandomHD(idRandomHD) {
        self.HH_KhuyenMai(undefined);
        var ctHD = [];
        var lstCTHD_afterKM = localStorage.getItem(lcListCTHD);
        if (lstCTHD_afterKM !== null) {
            lstCTHD_afterKM = JSON.parse(lstCTHD_afterKM);
            // reset GiamGia, ThanhTien
            for (let i = 0; i < lstCTHD_afterKM.length; i++) {
                if (lstCTHD_afterKM[i].IDRandomHD === idRandomHD) {
                    if (lstCTHD_afterKM[i].IsOpeningKMai) {
                        lstCTHD_afterKM[i].HangHoa_KM = [];
                        lstCTHD_afterKM[i].TenKhuyenMai = '';
                        // reset giamgia = 0
                        lstCTHD_afterKM[i].PTChietKhau = 0;
                        lstCTHD_afterKM[i].TienChietKhau = 0;
                        lstCTHD_afterKM[i].DVTinhGiam = '%';
                        lstCTHD_afterKM[i].IsOpeningKMai = false;
                        lstCTHD_afterKM[i].ID_KhuyenMai = null;
                        lstCTHD_afterKM[i].DiemKhuyenMai = 0;
                        lstCTHD_afterKM[i].ThanhTien = lstCTHD_afterKM[i].GiaBan * lstCTHD_afterKM[i].SoLuong;
                        for (let k = 0; k < lstCTHD_afterKM[i].DM_LoHang.length; k++) {
                            lstCTHD_afterKM[i].DM_LoHang[k].PTChietKhau = 0;
                            lstCTHD_afterKM[i].DM_LoHang[k].TienChietKhau = 0;
                            lstCTHD_afterKM[i].DM_LoHang[k].DVTinhGiam = '%';
                            lstCTHD_afterKM[i].DM_LoHang[k].ThanhTien = lstCTHD_afterKM[i].DM_LoHang[k].GiaBan * lstCTHD_afterKM[i].DM_LoHang[k].SoLuong;
                        }
                        for (let k = 0; k < lstCTHD_afterKM[i].HangCungLoais.length; k++) {
                            lstCTHD_afterKM[i].HangCungLoais[k].PTChietKhau = 0;
                            lstCTHD_afterKM[i].HangCungLoais[k].TienChietKhau = 0;
                            lstCTHD_afterKM[i].HangCungLoais[k].DVTinhGiam = '%';
                            lstCTHD_afterKM[i].HangCungLoais[k].ThanhTien = lstCTHD_afterKM[i].HangCungLoais[k].GiaBan * lstCTHD_afterKM[i].HangCungLoais[k].SoLuong;
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD_afterKM));
        }
    }

    // reset gg KM + SP Kmai for HoaDon
    function ResetKM_HoaDon(idRandomHD) {
        // reset HD_KhuyenMai --> not chose radio
        self.HD_KhuyenMai(undefined);
        // delete productKM_HoaDon && bind again HHTang_HoaDon
        var lstProductKM_HD = localStorage.getItem(lcProductKM_HoaDon);
        if (lstProductKM_HD !== null) {
            lstProductKM_HD = JSON.parse(lstProductKM_HD);
            lstProductKM_HD = $.grep(lstProductKM_HD, function (x) {
                return x.IDRandomHD !== idRandomHD;
            });
            localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(lstProductKM_HD));
            self.HHTang_HoaDon([]);
        }
        // reset gg KM of HoaDon
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                // neu dang mo KM hoadon
                if (lstHD[i].IDRandom === idRandomHD) {
                    lstHD[i].ID_KhuyenMai = null;
                    lstHD[i].PTGiam_KM = 0;
                    lstHD[i].DiemCong = 0;
                    lstHD[i].KhuyeMai_GiamGia = 0;
                    lstHD[i].TongGiamGiaKM_HD = lstHD[i].TongGiamGia;
                    lstHD[i].IsOpeningKMaiHD = false;
                    lstHD[i].DiemKhuyenMai = 0;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }
    // neu KH oline, but update offline --> when save HD, update both infor KH
    function UpdateInforKH_toDB(idDoiTuong) {
        if (idDoiTuong !== null) {
            // check exist in cache lst ID_DoiTuong
            var lstID_DoiTuong = localStorage.getItem('lcID_DoiTuongOnline');
            if (lstID_DoiTuong !== null) {
                lstID_DoiTuong = JSON.parse(lstID_DoiTuong);
                if ($.inArray(idDoiTuong, lstID_DoiTuong) > -1) {
                    var itemDT = self.ChiTietDoiTuong();
                    if (itemDT.length > 0) {
                        var DM_DoiTuong = {
                            ID: idDoiTuong,
                            MaDoiTuong: itemDT[0].MaDoiTuong,
                            TenDoiTuong: itemDT[0].TenDoiTuong,
                            DienThoai: itemDT[0].DienThoai,
                            Email: itemDT[0].Email,
                            DiaChi: itemDT[0].DiaChi,
                            GioiTinhNam: itemDT[0].GioiTinhNam,
                            NgaySinh_NgayTLap: itemDT[0].NgaySinh_NgayTLap,
                            MaSoThue: itemDT[0].MaSoThue,
                            LoaiDoiTuong: 1,
                            GhiChu: itemDT[0].GhiChu,
                            ID_NguonKhach: itemDT[0].ID_NguonKhach,
                            ID_NguoiGioiThieu: itemDT[0].ID_NguoiGioiThieu,
                            ID_NhanVienPhuTrach: itemDT[0].ID_NhanVienPhuTrach,
                            LaCaNhan: itemDT[0].LaCaNhan,
                            ID_TinhThanh: itemDT[0].ID_TinhThanh,
                            ID_QuanHuyen: itemDT[0].ID_QuanHuyen,
                            ID_DonVi: id_DonVi,
                            NguoiTao: userLogin, // user dang nhap
                            TenDoiTuong_KhongDau: itemDT[0].TenDoiTuong_KhongDau,
                            TenDoiTuong_ChuCaiDau: itemDT[0].TenDoiTuong_ChuCaiDau,
                            DinhDang_NgaySinh: itemDT[0].DinhDang_NgaySinh,
                        };
                        var myData = {};
                        myData.id = idDoiTuong;
                        myData.objDoiTuong = DM_DoiTuong;
                        $.ajax({
                            url: DMDoiTuongUri + "PutDM_DoiTuong",
                            type: 'PUT',
                            dataType: 'json',
                            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                            data: myData,
                            success: function (item) {
                                // delete ID in cache
                                lstID_DoiTuong = $.grep(lstID_DoiTuong, function (x) {
                                    return x !== idDoiTuong;
                                });
                                localStorage.setItem('lcID_DoiTuongOnline', JSON.stringify(lstID_DoiTuong));
                            },
                            complete: function () {
                            }
                        })
                    }
                }
            }
        }
    }
    // update status for HDDatHang
    function UpdateStatus_HDDatHang() {
        db.HDDatHang_UpdateStatus.each(function (x, cur) {
            // assign status, id --> update DB
            self.ID_HoaDonUpdate(x.ID);
            self.StatusHD(x.Status);
            UpdateStatudHD();
            // and remove from cache local DB
            db.HDDatHang_UpdateStatus.delete(x.ID);
        });
    }

    function PostHD_SoQuy_DongBo(myData) {
        console.log('dongbo_myData ', myData);
        var urlPost = BHHoaDonUri + "SP_PostBH_HoaDon";
        var objHDAdd = myData.objHoaDon;
        switch (objHDAdd.LoaiHoaDon) {
            case 1:
                myData.objHoaDon.ChiPhi = objHDAdd.TongChiPhi;// chi phi cửa hàng chịu
                myData.objHoaDon.TongChiPhi = 0;
                if (objHDAdd.CreateTime !== 0) {
                    var objTime = GetGioVaoRa_ofHD(objHDAdd);
                    objHDAdd.GioVao = objTime.GioVao;
                    objHDAdd.GioRa = objTime.GioRa;
                    myData.objHoaDon.YeuCau = '1';
                }
                break;
            case 19:
                myData.objHoaDon.ChiPhi = objHDAdd.TongChiPhi;
                myData.objHoaDon.TongChiPhi = 0;

                let ngayapdung = myData.objHoaDon.NgayApDungGoiDV;
                let handung = myData.objHoaDon.HanSuDungGoiDV;
                if (!commonStatisJs.CheckNull(ngayapdung)) {
                    if (handung !== '' && handung !== null) {
                        handung = moment(handung, 'DD/MM/YYYY').format('YYYY-MM-DD');
                    }
                    ngayapdung = moment(ngayapdung, 'DD/MM/YYYY').format('YYYY-MM-DD');
                }
                myData.objHoaDon.NgayApDungGoiDV = ngayapdung;
                myData.objHoaDon.HanSuDungGoiDV = handung;
                break;
        }
        $.ajax({
            data: myData,
            url: urlPost,
            type: 'POST',
            async: false, // khong luu dong thoi
            dataType: 'json',
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            success: function (obj) {
                if (obj.res === true) {
                    let itemDB = obj.data;
                    ShowMessage_Success('Thanh toán hóa đơn thành công');
                    // push DM_nguonKhach after add (todo)
                    objHDAdd.MaHoaDon = itemDB.MaHoaDon;
                    objHDAdd.ID = itemDB.ID;

                    GetQuyHoaDonfromHD_andInsert(objHDAdd);
                    Insert_NhatKyThaoTac(objHDAdd, myData.objCTHoaDon, 1, 1);
                    // Dat hang --> khong cap nhat gia von
                    if (objHDAdd.LoaiHoaDon !== 3) {
                        UpdateDiemKH_toDB(objHDAdd.ID_DoiTuong);
                        UpdateNhomKH_DB(objHDAdd.ID_DoiTuong);
                    }
                    // update status for HD DatHang in list indexDb local (HDDatHang_UpdateStatus)
                    UpdateStatus_HDDatHang();
                    RemoveKHoffline_afterSave();
                    vmThemMoiKhach.NangNhomKhachHang(objHDAdd.ID_DoiTuong);
                    Post_BHChiTiet_DinhDanh(objHDAdd.ID, objHDAdd.LoaiHoaDon);
                }
                else {
                    ShowMessage_Danger(obj.mes);
                }
                $('.divDongBoHoa').gridLoader({ show: false });
                $('#btnDongBoHoa').removeAttr('disabled');
                $('#getoffline').modal('hide');
            },
            complete: function () {
                // must load before Hub
                SaveHD_RemoveDisable();
                $('.divDongBoHoa').gridLoader({ show: false });
                $('#btnDongBoHoa').removeAttr('disabled');
                $('#getoffline').modal('hide');
                $('#ptGiam').text(0);
                if (objHDAdd.LoaiHoaDon === 1) {
                    //HUbChat.server.loadHoaDon();
                }
                else if (objHDAdd.LoaiHoaDon === 3) {
                    //HUbChat.server.loadDatHang();
                }
            }
        })
        UpdateInforKH_toDB(objHDAdd.ID_DoiTuong);
    }

    function SaveDiary_WhenTimeOut(hd, txt = '') {
        let diary = {
            ID_DonVi: id_DonVi,
            ID_NhanVien: _idNhanVien,
            LoaiNhatKy: 3,
            ChucNang: 'Bán hàng',
            NoiDung: 'Timeout ' + txt,
            NoiDungChiTiet: 'Tài khoản đăng nhập: '.concat(userLogin,
                '<br /> ID_DoiTuong: ', hd.ID_DoiTuong,
                '<br /> Ngày lập: ', hd.NgayLapHoaDon,
                '<br /> Tổng tiền hàng: ', hd.TongTienHang,
                '<br /> Tổng thanh toán: ', hd.TongThanhToan,
                '<br /> Tổng thuế khách hàng: ', hd.TongTienThue,
                '<br /> Tổng giảm giá: ', hd.TongGiamGia,
                '<br /> Ngày lập: ', hd.NgayLapHoaDon,
                '<br /> Ngày tạo: ', new Date(),
            ),
        }
        Insert_NhatKyThaoTac_1Param(diary);
    }

    function DeleteHoaDon_WasSaved_WhenTimeout(objHoaDon) {
        var ngaylapHD = GetNgayLapHD_whenSave(objHoaDon.NgayLapHoaDon);
        var idChiNhanh = objHoaDon.ID_DonVi;
        //var userLogin = userLogin;
        var loaiHD = objHoaDon.LoaiHoaDon;
        ajaxHelper(BHHoaDonUri + 'DeleteBH_HoaDon_ByNgayLapHD?ngayLapHD=' + ngaylapHD + '&idChiNhanh=' + idChiNhanh
            + '&loaiHoaDon=' + loaiHD + '&userLogin=' + userLogin, 'DELETE').done(function (x) {
                SaveDiary_WhenTimeOut(objHoaDon, 'deleteHD')
            })
    }
    // if save 2 time, ngaylapHD have format 'DD/MM/YYY', so nedd formet again
    function GetNgayLapHD_whenSave(ngaylapHD) {
        if (ngaylapHD === null || ngaylapHD === undefined) {
            ngaylapHD = moment(new Date()).format('YYYY-MM-DD HH:mm');
        }
        else {
            var ddMMyyyy = ngaylapHD.split('/');
            if (ddMMyyyy.length > 1) {
                ngaylapHD = moment(ngaylapHD, 'DD/MM/YYYY HH:mm').format('YYYY-MM-DD HH:mm');
            }
            // else keep value YYYY-MM-DD
        }
        return ngaylapHD;
    }
    function GetGioVaoRa_ofHD(objHDAdd) {
        var ngaylapHD = objHDAdd.NgayLapHoaDon;
        if (ngaylapHD === null || ngaylapHD === undefined) {
            ngaylapHD = moment(new Date()).format('YYYY-MM-DD');
        }
        else {
            var ddMMyyyy = ngaylapHD.split('/');
            if (ddMMyyyy.length > 1) {
                ngaylapHD = moment(ngaylapHD, 'DD/MM/YYYY HH:mm').format('YYYY-MM-DD');
            }
            else {
                ngaylapHD = moment(ngaylapHD, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD');
            }
        }
        // gio vao
        var giovao = ConvertTimeFrom12To24(objHDAdd.CreateTime);
        var ngaygioVao = ngaylapHD.concat(' ', giovao);
        var dateVao = new Date(ngaygioVao);
        // giora = giovao + thoigianThucHien
        var thoigianThucHien = objHDAdd.ThoiGianThucHien;
        if (thoigianThucHien !== 0) {// neu dichvu khong cai dat sophut thuchien: chi cai dat tren tong hoa don
            dateVao.setMinutes(dateVao.getMinutes() + thoigianThucHien);
        }
        else {
            dateVao = new Date();
        }
        var ngaygioRa = moment(dateVao).format('YYYY-MM-DD HH:mm');
        ngaygioRa = ngaygioRa === 'Invalid date' ? null : ngaygioRa;
        return {
            GioVao: ngaygioVao,
            GioRa: ngaygioRa,
        }
    }

    function Post_BHChiTiet_DinhDanh(idHoaDon, loaiHD) {
        // hd le, baohanh, hotro
        if (loaiHD === 1 || loaiHD === 2 || loaiHD === 36) {
            ajaxHelper(BHHoaDonUri + 'Post_BHChiTiet_DinhDanh?idHoaDon=' + idHoaDon).done(function (x) {
            })
        }
    }

    function PostHD_TamLuu(myData) {
        var objHDAdd = myData.objHoaDon;
        var idRandomHD = objHDAdd.IDRandom;
        // remove HD_ChiTiet in objHoaDon
        delete myData.objHoaDon["BH_HoaDon_ChiTiet"];
        let ngayapdung = myData.objHoaDon.NgayApDungGoiDV;
        let handung = myData.objHoaDon.HanSuDungGoiDV;
        if (ngayapdung !== null) {
            if (handung !== '' && handung !== null) {
                handung = moment(handung, 'DD/MM/YYYY').format('YYYY-MM-DD');
            }
        }

        myData.objHoaDon.ChiPhi = objHDAdd.TongChiPhi;
        myData.objHoaDon.TongChiPhi = 0;
        myData.objHoaDon.NgayApDungGoiDV = ngayapdung;
        myData.objHoaDon.HanSuDungGoiDV = handung;
        myData.objHoaDon.ChoThanhToan = true;
        myData.objHoaDon.YeuCau = 2;// tamluu
        myData.objHoaDon.DiemGiaoDich = 0;
        myData.objHoaDon.PhaiThanhToan = formatNumberToFloat(objHDAdd.TongTienHang) - formatNumberToFloat(objHDAdd.TongGiamGiaKM_HD) + formatNumberToFloat(objHDAdd.TongTienThue);
        myData.objHoaDon.TongThanhToan = myData.objHoaDon.PhaiThanhToan;

        console.log('myData ', myData)
        ajaxHelper(BHHoaDonUri + 'PostBH_HoaDon_SoQuy_Spa_NKySuDung', 'POST', myData).done(function (obj) {
            if (obj.res === true) {
                // remove cache hdTamLuu
                var lstHD = localStorage.getItem(lcListHD);
                if (lstHD !== null) {
                    lstHD = JSON.parse(lstHD);
                    lstHD = $.grep(lstHD, function (x) {
                        return x.IDRandom !== idRandomHD;
                    });
                    localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                }
                var cthd = localStorage.getItem(lcListCTHD);
                if (cthd !== null) {
                    cthd = JSON.parse(cthd);
                    cthd = $.grep(cthd, function (item) {
                        return item.IDRandomHD !== idRandomHD;
                    });
                    localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
                }
                ShowMessage_Success('Lưu tạm hóa đơn thành công');
                BindHD_CTHDafterSave();
                Call_6Func()
            }
            else {
                ShowMessage_Danger('Lưu tạm hóa đơn không thành công');
            }
        }).always(function () {
            SaveHD_RemoveDisable();
            $('#getoffline').modal('hide');
            $('#ptGiam').text(0);
        });
    }
    // if change HD DatHang dang xuly (updateHDDatHang = true) --> not print
    function PostHD_SoQuy_SaveHD(myData, updateHDDatHang) {
        console.log('myData', myData)
        var objHDAdd = myData.objHoaDon;
        var idRandomHD = objHDAdd.IDRandom;

        myData.objHoaDon.ChiPhi = objHDAdd.TongChiPhi;// chi phi cửa hàng chịu
        myData.objHoaDon.TongChiPhi = 0;
        myData.objHoaDon.ChoThanhToan = false;
        myData.objHoaDon.YeuCau = '1';
        myData.objHoaDon.NguoiTao = userLogin;// update again NguoiTao if HDTamLuu
        myData.objHoaDon.PhaiThanhToan = formatNumberToFloat(objHDAdd.TongTienHang) - formatNumberToFloat(objHDAdd.TongGiamGiaKM_HD)
            + formatNumberToFloat(objHDAdd.TongTienThue);
        myData.objHoaDon.TongThanhToan = myData.objHoaDon.PhaiThanhToan;
        myData.objHoaDon.TongThueKhachHang = objHDAdd.TongTienThue;

        switch (objHDAdd.LoaiHoaDon) {
            case 1:
                if (objHDAdd.StatusOffline === false) {
                    // update TonKho if HD mua and not offline
                    UpdateTonKho_forListHangHoa_andCTHD(myData.objCTHoaDon, false);
                    // update SoLanMua theo HangHoa cua KhachHang (KH of NgocAnh chi su dung KM/1 hoadon)
                    //Update_SoLanMua_byIDQuiDoi(objHDAdd, myData.objCTHoaDon, false);
                    // update again warning CTHD, CTHD_DoiTra
                    UpdateWarning_CTHD_afterSave();
                }
                // save GioVao, GioRa
                if (objHDAdd.CreateTime !== 0) {
                    var objTime = GetGioVaoRa_ofHD(objHDAdd);
                    objHDAdd.GioVao = objTime.GioVao;
                    objHDAdd.GioRa = objTime.GioRa;
                }
                break;
            case 3:
                break;
        }
        var notSaleOffline = self.ThietLap() !== null && self.ThietLap().BanHangOffline === false;
        var urlPost = BHHoaDonUri + "PostBH_HoaDon_SoQuy_Spa_NKySuDung";
        if (objHDAdd.TrangThaiHD === 8) {
            urlPost = BHHoaDonUri + "UpdateHoaDon_OpenFromList";
            // if update again hoadon, but soquy = 0: remove nvth theo thucthu
            if (objHDAdd.TienMat + objHDAdd.TienGui + objHDAdd.TienATM <= 0) {
                myData.objHoaDon.BH_NhanVienThucHiens = objHDAdd.BH_NhanVienThucHiens.filter(x => parseInt(x.TinhChietKhauTheo) !== 1);
            }
        }
        $.ajax({
            data: myData,
            url: urlPost + '?idNhanVien=' + _idNhanVien,
            type: 'POST',
            async: true, // true: is default, dont' wait
            dataType: 'json',
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        }).done(function (objDB) {
            console.log('objDB ', objDB, urlPost);
            if (objDB.res === true) {
                var itemDB = objDB.data;
                $('.bgwhite').hide();
                objHDAdd.MaHoaDon = itemDB.MaHoaDon;
                objHDAdd.ID = itemDB.ID;
                objHDAdd.NgayLapHoaDon = itemDB.NgayLapHoaDon;

                let diary = {
                    LoaiNhatKy: objHDAdd.TrangThaiHD === 8 ? 2 : 1,
                    ID_DonVi: id_DonVi,
                    ID_NhanVien: _idNhanVien,
                    ChucNang: 'Bán hàng',
                    NoiDung: 'Theo dõi IP',
                    NoiDungChiTiet: 'Tạo hóa đơn: '.concat(objHDAdd.MaHoaDon, ' (id: ', objHDAdd.ID, ') ',
                        ' <br /> - Người tạo: ', userLogin,
                        ' <br /> - IP: ', getDeviceId())
                }
                Insert_NhatKyThaoTac_1Param(diary);

                GetQuyHoaDonfromHD_andInsert(objHDAdd);

                switch (objHDAdd.LoaiHoaDon) {
                    case 1:
                    case 2:
                        UpdateDiemKH_toDB(objHDAdd.ID_DoiTuong);
                        UpdateNhomKH_DB(objHDAdd.ID_DoiTuong);
                        vmApDungNhomHoTro.CreatePhieuXuat_NguyenVatLieu(objHDAdd.ID);
                        vmApDungNhomHoTro.CreatePhieuXuat_FromHoaDon(objHDAdd.ID, objHDAdd.LoaiHoaDon);
                        Post_BHChiTiet_DinhDanh(objHDAdd.ID, objHDAdd.LoaiHoaDon);
                        break;
                    case 19:
                    case 6:
                        UpdateDiemKH_toDB(objHDAdd.ID_DoiTuong);
                        UpdateNhomKH_DB(objHDAdd.ID_DoiTuong);
                        break;
                }

                // get maHDDatHang -> delete in cacheDatHang after save
                var maHDDatHang = myData.objHoaDon.MaHoaDonTraHang;
                if (commonStatisJs.CheckNull(maHDDatHang) && objHDAdd.LoaiHoaDon === 3 && !isInsert) {
                    maHDDatHang = objHDAdd.MaHoaDon;// nếu xử lý báo giá, nhưng không lưu hóa đơn mà lại cập nhật báo giá
                }
                // if updateHDDatHang --> don't remove (HD DatHang  + HD new create)
                var lstHDafter = [];
                if (updateHDDatHang === false) {
                    lstHDafter = localStorage.getItem(lcListHD);
                    lstHDafter = JSON.parse(lstHDafter);
                    // remove HD after save
                    lstHDafter = RemoveHD_byMaHoaDon(_maHoaDon, lstHDafter);
                    // remove hd DatHang (if HD was creat from DatHang)
                    lstHDafter = $.grep(lstHDafter, function (x) {
                        return x.MaHoaDon !== maHDDatHang;
                    });
                    // remove hd dang xuly (if HD was creat from DatHang)
                    let arrIDRandom_ofHDdangXuLy = $.grep(lstHDafter, function (x) {
                        return x.MaHoaDonTraHang === maHDDatHang;
                    }).map((o) => {
                        return o.IDRandom;
                    });
                    lstHDafter = $.grep(lstHDafter, function (x) {
                        return x.MaHoaDonTraHang !== maHDDatHang;
                    });
                    localStorage.setItem(lcListHD, JSON.stringify(lstHDafter));
                    // remove CTHoaDon in Cache
                    var lstCTHD = localStorage.getItem(lcListCTHD);
                    if (lstCTHD !== null) {
                        lstCTHD = JSON.parse(lstCTHD);
                        lstCTHD = $.grep(lstCTHD, function (item) {
                            return item.IDRandomHD !== idRandomHD;
                        });
                        // remove cthd DatHang (if HD was creat from DatHang)
                        lstCTHD = $.grep(lstCTHD, function (x) {
                            return x.MaHoaDon !== maHDDatHang;
                        });
                        // remove cthd of hd dang xuly from baogia (if HD was creat from DatHang)
                        lstCTHD = $.grep(lstCTHD, function (x) {
                            return $.inArray(x.IDRandomHD, arrIDRandom_ofHDdangXuLy) === -1;
                        });
                        localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                    }
                    // remove CTHD_Muamoi
                    var cacheCTHD_MH = localStorage.getItem(lcListCTHD_DoiTra);
                    if (cacheCTHD_MH !== null) {
                        cacheCTHD_MH = JSON.parse(cacheCTHD_MH);
                        cacheCTHD_MH = $.grep(cacheCTHD_MH, function (item) {
                            return item.IDRandomHD !== idRandomHD;
                        });
                        localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cacheCTHD_MH));
                    }
                    // start print (khong in hoa don neu update HD DatHang dang xu ly)
                    myData.objHoaDon.MaHoaDon = itemDB.MaHoaDon;
                    var diemGD = myData.objHoaDon.DiemGiaoDich - myData.objHoaDon.DiemQuyDoi;
                    if (diemGD < 0) {
                        diemGD = myData.objHoaDon.DiemGiaoDich;
                    }
                    myData.objHoaDon.DiemGiaoDich = diemGD;
                    myData.objHoaDon = GetInforHDPrint(myData.objHoaDon);
                    self.InforHDprintf(myData.objHoaDon);
                    let ctHDprint = GetCTHDPrint_Format(myData.objCTHoaDon);
                    self.CTHoaDonPrint(ctHDprint);
                    switch (objHDAdd.LoaiHoaDon) {
                        case 1:
                            self.InHoaDon("HDBL", false);
                            break;
                        case 3:
                            self.InHoaDon("DH", false);
                            break;
                        case 6:
                            self.InHoaDon("TH", false);
                            break;
                    }
                    // end Print
                }
                else {
                    Update_IDChiTietHD_toCTHD(objHDAdd.IDRandom, itemDB.BH_HoaDon_ChiTiet);
                    Update_StatusXuLy_ofHDDatHang(objHDAdd.IDRandom, false);
                    UpdateDH_RemoveAdd_TPCombo(objHDAdd.IDRandom);
                    UpdateCache_XuLyDonHang();
                    Update_IDChiTietHD_toCacheDH(itemDB.BH_HoaDon_ChiTiet);
                    let idHDNew = CreateHD_fromHDDatHang();
                    UpdateSoThuTu_CTHD(false, idHDNew);
                }
                // remove cache KH offline (remove after get inforHDPrint)
                RemoveKHoffline_afterSave();

                // update Status HD DatHang if XuLi het Don Hang
                CheckXuLyHet_DonDatHang(objHDAdd.LoaiHoaDon, objHDAdd.ID, objHDAdd.ID_HoaDon);

                if (objHDAdd.LoaiHoaDon === 1) {
                    Insert_ThongBaoHetTonKho(myData.objCTHoaDon);
                }
                // remove cache DatHang 
                var lcXuLiDonHang = localStorage.getItem(lcXuLiDonHang_Const);
                if (lcXuLiDonHang !== null) {
                    lcXuLiDonHang = JSON.parse(lcXuLiDonHang);
                    lcXuLiDonHang = $.grep(lcXuLiDonHang, function (itemXL) {
                        return itemXL.MaHoaDon !== maHDDatHang;
                    });
                    localStorage.setItem(lcXuLiDonHang_Const, JSON.stringify(lcXuLiDonHang));
                    var lcCTDatHang = localStorage.getItem('lcCTDatHang');
                    if (lcCTDatHang !== null) {
                        lcCTDatHang = JSON.parse(lcCTDatHang);
                        lcCTDatHang = $.grep(lcCTDatHang, function (itemXL) {
                            return itemXL.MaHoaDon !== maHDDatHang;
                        });
                        localStorage.setItem('lcCTDatHang', JSON.stringify(lcCTDatHang));
                    }
                }

                // remove hang khuyen mai of HoaDon
                var arrproductKM = localStorage.getItem(lcProductKM_HoaDon);
                if (arrproductKM !== null) {
                    arrproductKM = JSON.parse(arrproductKM);
                    arrproductKM = $.grep(arrproductKM, function (item) {
                        return item.IDRandomHD !== idRandomHD;
                    });
                    localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(arrproductKM));
                    self.HHTang_HoaDon(arrproductKM);
                }
                // update status for HDDatHang
                UpdateStatus_HDDatHang();
                Call_6Func();
                ShowMessage_Success('Thanh toán hóa đơn thành công');

                vmThemMoiKhach.NangNhomKhachHang(objHDAdd.ID_DoiTuong);

                vmUpAnhHoaDon.InvoiceChosing = objHDAdd;
                vmUpAnhHoaDon.SaveImage();
                BindHD_CTHDafterSave();
            }
            else {
                SaveDiary_WhenTimeOut(myData.objHoaDon, 'network limit');
                SaveHD_RemoveDisable();
                if (objDB.mes.indexOf('0x80131904') > -1) {
                    if (notSaleOffline) {
                        ShowMessage_Danger('Kết nối mạng không ổn định. Thao tác thất bại');
                        return false;
                    }
                    SaveHDOffline();
                    if (updateHDDatHang === false) {
                        objHDAdd.MaHoaDon = _maHoaDon;
                        let objHDPrint = GetInforHDPrint(objHDAdd);
                        self.InforHDprintf(objHDPrint);
                        objCTAdd = GetCTHDPrint_Format(myData.objCTHoaDon);
                        self.CTHoaDonPrint(objCTAdd);
                        if (objHDAdd.LoaiHoaDon === 1) {
                            self.InHoaDon("HDBL", false);
                        }
                        else {
                            self.InHoaDon("DH", false);
                        }
                    }
                    BindHD_CTHDafterSave();
                    ShowMessage_Success('Không có kết nối Internet. Giao dịch đã được lưu tạm trên máy');
                    SaveHD_RemoveDisable();
                    Call_6Func();
                    DeleteHoaDon_WasSaved_WhenTimeout(myData.objHoaDon);
                }
            }
        })
            .fail(function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR)
                SaveDiary_WhenTimeOut(myData.objHoaDon, ' fail ' + jqXHR);
                SaveHD_RemoveDisable();
                if (notSaleOffline) {
                    ShowMessage_Danger('Kết nối mạng không ổn định. Thao tác thất bại');
                    return false;
                }
                SaveHDOffline();
                if (updateHDDatHang === false) {
                    objHDAdd.MaHoaDon = _maHoaDon;
                    let objHDPrint = GetInforHDPrint(objHDAdd);
                    self.InforHDprintf(objHDPrint);
                    objCTAdd = GetCTHDPrint_Format(myData.objCTHoaDon);
                    self.CTHoaDonPrint(objCTAdd);
                    if (objHDAdd.LoaiHoaDon === 1) {
                        self.InHoaDon("HDBL", false);
                    }
                    else {
                        self.InHoaDon("DH", false);
                    }
                }
                BindHD_CTHDafterSave();
                ShowMessage_Success('Không có kết nối Internet. Giao dịch đã được lưu tạm trên máy');
                Call_6Func();
            })
            .always(function (jqXHR, textStatus, errorThrown) {
                // must load before Hub
                SaveHD_RemoveDisable();
                $('#getoffline').modal('hide');
                $('#ptGiam').text(0);
                self.HoaDonTHs([]);
            });
        // if KH was update when offline --> update infor KH to DB
        UpdateInforKH_toDB(objHDAdd.ID_DoiTuong);
    }

    self.width_btnLuuBG = ko.observable('100%');
    self.width_btnTaoHD = ko.observable('0%');
    self.width_btnThanhToan = ko.observable('100%');
    self.width_btnInNhap = ko.observable('0%');

    ko.setWidthBtn = ko.computed(function () {
        switch (self.HoaDons().LoaiHoaDon()) {
            case 1:
            case 6:
            case 19:
                if (self.setPrintDraft()) {
                    self.width_btnThanhToan('70%');
                    self.width_btnInNhap('30%');
                }
                else {
                    self.width_btnThanhToan('100%');
                    self.width_btnInNhap('0%');
                }
                break;
            case 3:
                if (self.setPrintDraft()) {
                    self.width_btnInNhap('30%');

                    if (!commonStatisJs.CheckNull(self.HoaDons().ID()) && self.HoaDons().ID() !== const_GuidEmpty) {
                        if (self.HoaDons().TrangThaiHD() === 6) {// xulybg
                            self.width_btnLuuBG('30%');
                            self.width_btnTaoHD('40%');
                        }
                        else {
                            self.width_btnLuuBG('70%');
                            self.width_btnTaoHD('0%');
                        }
                    }
                    else {
                        self.width_btnLuuBG('70%');
                        self.width_btnTaoHD('0%');
                    }
                }
                else {
                    self.width_btnInNhap('0%');
                    if (!commonStatisJs.CheckNull(self.HoaDons().ID()) && self.HoaDons().ID() !== const_GuidEmpty) {
                        if (self.HoaDons().TrangThaiHD() === 6) {// xulybg
                            self.width_btnLuuBG('30%');
                            self.width_btnTaoHD('70%');
                        }
                        else {
                            self.width_btnLuuBG('100%');
                            self.width_btnTaoHD('0%');
                        }
                    }
                    else {
                        self.width_btnLuuBG('100%');
                        self.width_btnTaoHD('0%');
                    }
                }
                break;
        }
    })

    function CreateHD_fromGDV(hd) {
        let param = {
            IDCustomers: [hd.ID_DoiTuong],
            TextSearch: hd.MaHoaDon,
        }
        console.log('param ', param)
        ajaxHelper('/api/DanhMuc/DM_DoiTuongAPI/' + 'GetDSGoiDichVu_ofKhachHang', 'POST', param).done(function (x) {
            let gdvDoing = [];
            if (x.res) {
                gdvDoing = $.grep(x.dataSoure, function (o) {
                    return o.ID_GoiDV === hd.ID;
                });
            }
            if (gdvDoing.length === 0) {
                BindCTHD_byIDRandomHD(self.HoaDons().IDRandom());
                return;
            }
            console.log(33, gdvDoing[0].lstDetail)
            for (let i = 0; i < gdvDoing[0].lstDetail.length; i++) {
                let itFor = gdvDoing[0].lstDetail[i];
                for (let k = 0; k < itFor.ComBo.length; k++) {
                    let for3 = itFor.ComBo[k];
                    if (for3.ID_ChiTietGoiDV !== for3.ID_ParentCombo) {
                        self.Chose_Service(for3, 1, true);
                    }
                }
            }
            GetCurrentPage_byMaHoaDon(_maHoaDon);
            BindCTHD_byIDRandomHD(self.HoaDons().IDRandom());
            vmNKGoiBaoDuong.GetGoiDichVu_ofKhachHang(hd.ID_DoiTuong);
        });
    }

    function PostHD_HoaDon_DichVu(myData, saveAndUse = false) {
        var objHDAdd = myData.objHoaDon;
        var idRandomHD = objHDAdd.IDRandom;
        myData.objHoaDon.ChiPhi = objHDAdd.TongChiPhi;// chi phi cửa hàng chịu
        myData.objHoaDon.TongChiPhi = 0;
        myData.objHoaDon.PhaiThanhToan = formatNumberToFloat(objHDAdd.TongTienHang) - formatNumberToFloat(objHDAdd.TongGiamGiaKM_HD)
            + formatNumberToFloat(objHDAdd.TongTienThue);
        myData.objHoaDon.TongThanhToan = myData.objHoaDon.PhaiThanhToan;
        myData.objHoaDon.TongThueKhachHang = objHDAdd.TongTienThue;

        let ngayapdung = myData.objHoaDon.NgayApDungGoiDV;
        if (ngayapdung === '' || ngayapdung === null) {
            ngayapdung = null;
        }
        else {
            ngayapdung = moment(ngayapdung, 'DD/MM/YYYY').format('YYYY-MM-DD');
        }
        let handung = myData.objHoaDon.HanSuDungGoiDV;
        if (handung === '' || handung === null) {
            handung = null;
        }
        else {
            handung = moment(handung, 'DD/MM/YYYY').format('YYYY-MM-DD');
        }
        myData.objHoaDon.NgayApDungGoiDV = ngayapdung;
        myData.objHoaDon.HanSuDungGoiDV = handung;
        // Mua goi DV: update GiaVon CTHD = 0, ID_ChiTietGoiDV: null, ChatLieu = empty
        for (let i = 0; i < myData.objCTHoaDon.length; i++) {
            myData.objCTHoaDon[i].GiaVon = 0;
            myData.objCTHoaDon[i].ID_ChiTietGoiDV = null;
            myData.objCTHoaDon[i].ChatLieu = '';
        }

        var notSaleOffline = self.ThietLap() !== null && self.ThietLap().BanHangOffline === false;
        console.log('myData', myData)
        var urlPost = BHHoaDonUri + "PostBH_HoaDon_SoQuy_Spa_NKySuDung";
        if (objHDAdd.TrangThaiHD === 8) {
            urlPost = BHHoaDonUri + "UpdateHoaDon_OpenFromList";
        }
        $.ajax({
            data: myData,
            url: urlPost + '?idNhanVien=' + _idNhanVien,
            type: 'POST',
            async: true,
            dataType: 'json',
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        }).done(function (objDB) {
            console.log(11, objDB)
            if (objDB.res === true) {
                var itemDB = objDB.data;
                $('.bgwhite').hide();
                objHDAdd.MaHoaDon = itemDB.MaHoaDon;
                objHDAdd.ID = itemDB.ID;
                objHDAdd.NgayLapHoaDon = itemDB.NgayLapHoaDon;
                myData.objHoaDon.MaHoaDon = itemDB.MaHoaDon;

                let diary = {
                    LoaiNhatKy: objHDAdd.TrangThaiHD === 8 ? 2 : 1,
                    ID_DonVi: id_DonVi,
                    ID_NhanVien: _idNhanVien,
                    ChucNang: 'Gói dịch vụ',
                    NoiDung: 'Theo dõi IP',
                    NoiDungChiTiet: 'Tạo gói dịch vụ: '.concat(objHDAdd.MaHoaDon, ' (id: ', objHDAdd.ID, ') ',
                        ' <br /> - Người tạo: ', userLogin,
                        ' <br /> - IP: ', getDeviceId())
                }
                Insert_NhatKyThaoTac_1Param(diary);

                GetQuyHoaDonfromHD_andInsert(objHDAdd);
                UpdateDiemKH_toDB(objHDAdd.ID_DoiTuong);
                UpdateNhomKH_DB(objHDAdd.ID_DoiTuong);

                // remove cache hd+ cthd
                let lstHDafter = localStorage.getItem(lcListHD);
                lstHDafter = JSON.parse(lstHDafter);
                lstHDafter = RemoveHD_byMaHoaDon(_maHoaDon, lstHDafter);
                localStorage.setItem(lcListHD, JSON.stringify(lstHDafter));

                let lstCTHD = localStorage.getItem(lcListCTHD);
                if (lstCTHD !== null) {
                    lstCTHD = JSON.parse(lstCTHD);
                    lstCTHD = $.grep(lstCTHD, function (item) {
                        return item.IDRandomHD !== idRandomHD;
                    });
                    localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                }

                // remove hang khuyen mai of HoaDon
                let arrproductKM = localStorage.getItem(lcProductKM_HoaDon);
                if (arrproductKM !== null) {
                    arrproductKM = JSON.parse(arrproductKM);
                    arrproductKM = $.grep(arrproductKM, function (item) {
                        return item.IDRandomHD !== idRandomHD;
                    });
                    localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(arrproductKM));
                    self.HHTang_HoaDon(arrproductKM);
                }

                if (saveAndUse) {
                    CreateHD_fromGDV(objHDAdd);
                }
                else {
                    let diemGD = myData.objHoaDon.DiemGiaoDich - myData.objHoaDon.DiemQuyDoi;
                    if (diemGD < 0) {
                        diemGD = myData.objHoaDon.DiemGiaoDich;
                    }
                    myData.objHoaDon.DiemGiaoDich = diemGD;
                    myData.objHoaDon = GetInforHDPrint(myData.objHoaDon);
                    self.InforHDprintf(myData.objHoaDon);
                    let ctHDprint = GetCTHDPrint_Format(myData.objCTHoaDon);
                    self.CTHoaDonPrint(ctHDprint);
                    switch (objHDAdd.LoaiHoaDon) {
                        case 19:
                            self.InHoaDon("GDV", false);
                            break;
                    }

                    BindHD_CTHDafterSave();
                    Call_6Func();
                }
                ShowMessage_Success('Thanh toán hóa đơn thành công');
                vmThemMoiKhach.NangNhomKhachHang(objHDAdd.ID_DoiTuong);
            }
            else {
                if (objDB.mes.indexOf('0x80131904') > -1) {
                    if (notSaleOffline) {
                        ShowMessage_Danger('Kết nối mạng không ổn định. Thao tác thất bại');
                        SaveHD_RemoveDisable();
                        return false;
                    }
                    SaveHDOffline();
                    objHDAdd.MaHoaDon = _maHoaDon;
                    var objHDPrint = GetInforHDPrint(objHDAdd);
                    self.InforHDprintf(objHDPrint);
                    objCTAdd = GetCTHDPrint_Format(myData.objCTHoaDon);
                    self.CTHoaDonPrint(objCTAdd);
                    self.InHoaDon("GDV", false);
                    BindHD_CTHDafterSave();
                    SaveHD_RemoveDisable();
                    Call_6Func();
                    ShowMessage_Success('Không có kết nối Internet. Giao dịch đã được lưu tạm trên máy');
                }
            }
        }).fail(function () {
            if (notSaleOffline) {
                ShowMessage_Danger('Kết nối mạng không ổn định. Thao tác thất bại');
                SaveHD_RemoveDisable();
                return false;
            }
            SaveHDOffline();
            objHDAdd.MaHoaDon = _maHoaDon;
            var objHDPrint = GetInforHDPrint(objHDAdd);
            self.InforHDprintf(objHDPrint);
            objCTAdd = GetCTHDPrint_Format(myData.objCTHoaDon);
            self.CTHoaDonPrint(objCTAdd);
            self.InHoaDon("GDV", false);
            BindHD_CTHDafterSave();
            SaveHD_RemoveDisable();
            Call_6Func();
            ShowMessage_Success('Không có kết nối Internet. Giao dịch đã được lưu tạm trên máy');
        }).always(function () {
            SaveHD_RemoveDisable();
            $('#getoffline').modal('hide');
            $('#ptGiam').text(0);
            self.HoaDonTHs([]);
        })
    }

    function PostNhanVienThucHien(itemHD, idQuyHoaDon = null) {
        for (let i = 0; i < itemHD.BH_NhanVienThucHiens.length; i++) {
            itemHD.BH_NhanVienThucHiens[i].ID_QuyHoaDon = idQuyHoaDon;
            itemHD.BH_NhanVienThucHiens[i].ID_HoaDon = itemHD.ID;
        }

        let myData = {
            lstObj: itemHD.BH_NhanVienThucHiens
        }
        ajaxHelper('/api/DanhMuc/BH_HoaDonAPI/' + 'Post_BHNhanVienThucHien', 'POST', myData).done(function (x) {
            if (x.res == false) {
                console.log(x.mes);
            }
        })
    }

    function HDTraHang_InsertTPDinhLuong(idHoaDon) {
        ajaxHelper(BHHoaDonUri + 'HDTraHang_InsertTPDinhLuong?idHoaDonTra=' + idHoaDon, 'GET').done(function (x) {
        });
    }

    function CheckXuLyHet_DonDatHang(loaiHoaDon, idHoaDon, idDatHang) {
        if (loaiHoaDon === 1 && idDatHang !== null && idDatHang !== const_GuidEmpty) {
            ajaxHelper(BHHoaDonUri + 'CheckXuLyHet_DonDathang?idHoaDon=' + idHoaDon + '&idDatHang=' + idDatHang, 'GET').done(function (x) {
                if (x === true) {
                    self.StatusHD(3);
                    self.ID_HoaDonUpdate(idDatHang);
                    UpdateStatudHD();
                }
                else {
                    self.ID_HoaDonUpdate(idDatHang);
                    $('#modalpopup_endDonDH').modal('show');
                }
            });
        }
    }

    self.SetNhanVien = function (idNhanVien) {
        var itemNV = $.grep(self.NhanViens(), function (item) {
            return item.ID === idNhanVien;
        });
        if (itemNV.length > 0) {
            self.NhanVien0(itemNV);
        }
        else {
            if (self.NhanViens().length > 0) {
                self.NhanVien0([self.NhanViens()[0]]);
            }
        }
        self.selectedNVien(idNhanVien);

        $('.select-user1').css('display', 'none');
        $('#lstNVien span').each(function () {
            $(this).empty();
        });
        $(function () {
            $('span[id=spanCheckNV_' + idNhanVien + ']').append(element_appendCheck);
        });
    }

    self.SetBangGia = function (idBangGia) {
        var itemBG = $.grep(self.AllBangGia(), function (item) {
            return item.ID === idBangGia;
        });
        if (itemBG.length > 0) {
            self.GiaBan0(itemBG);
        }
        else {
            self.GiaBan0([{ ID: idBangGia, TenGiaBan: 'Bảng giá chuẩn' }]);
        }
        self.selectedGiaBan(idBangGia);

        $('.select-user2').css('display', 'none');
        $('#lstBangGia span').each(function () {
            $(this).empty();
        });
        $(function () {
            $('span[id=spanCheck_' + idBangGia + ']').append(element_appendCheck);
        });
    }

    self.SetChiNhanh = function (idDonVi) {
        var itemCN = $.grep(self.ChiNhanhs(), function (item) {
            return item.ID === idDonVi;
        });
        if (itemCN.length > 0) {
            self.ChiNhanh0(itemCN[0]);
        }
        else {
            if (self.ChiNhanhs().length > 0) {
                self.ChiNhanh0(self.ChiNhanhs()[0]);
            }
            else {
                // get from DB (first load)
                $.getJSON('/api/DanhMuc/DM_DonViAPI/GetListDonViByID/' + idDonVi, function (data) {
                    if (data !== null && data.length > 0) {
                        self.ChiNhanh0(data[0]);
                    }
                });
            }
        }
        self.selectedChiNhanh(idDonVi);

        $('.select-usercn').css('display', 'none');
        $('#lstChiNhanh span').each(function () {
            $(this).empty();
        });
        $(function () {
            $('span[id=spanCheckChiNhanh_' + idDonVi + ']').append(element_appendCheck);
        });
    }

    self.ChangeChiNhanh = function (item) {
        id_DonVi = item.ID;
        self.SetChiNhanh(id_DonVi);
        console.log('2 ', id_DonVi)
        localStorage.setItem('IdDonVi', id_DonVi);

        vmThemMoiKhach.inforLogin.ID_DonVi = id_DonVi;
        vmUpAnhHoaDon.inforLogin.ID_DonVi = id_DonVi;

        // update ID_DonVi in cache HoaDon
        var lstHDTemp = localStorage.getItem(lcListHD);
        if (lstHDTemp !== null) {
            lstHDTemp = JSON.parse(lstHDTemp);
            for (let i = 0; i < lstHDTemp.length; i++) {
                if (lstHDTemp[i].NguoiTao === userLogin && lstHDTemp[i].StatusOffline === false) {
                    lstHDTemp[i].ID_DonVi = id_DonVi;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHDTemp));
        }

        var rememberme = localStorage.chkbx;
        $.ajax({
            url: '/api/DanhMuc/HT_ThietLapAPI/' + 'GetCauHinhHeThong?id=' + id_DonVi,
            success: function (item) {
                self.ThietLap(item);
                vmThanhToan.ThietLapCuaHang = [item];
            }
        });
        $.ajax({
            url: '/Home/KeepSession?id=' + id_DonVi + '&checkremember=' + rememberme,
            success: function () {
                //chat.server.send();
                ShowMessage_Success("Bạn vừa chuyển sang chi nhánh " + item.TenDonVi);
                // becuase get user from cookie --> so must get after update "Account" in API
                GetHT_Quyen_ByNguoiDung();
            }
        });

        getAllDMHangHoas();
        GetListIDNhanVien_byUserLogin('KhachHang'); // load list KH after load all NhanVien lien quan
        GetAllMauIn_byChiNhanh();
        GetDataChotSo();
        GetKM_CTKhuyenMai();
        GetHT_TichDiem();
        GetDM_TaiKhoanNganHang();
        GetNhanVien_NguoiDung();
        GetDMGiaBan_GBApDung();
        GetNhomDoiTuong_DonVi();
        vmThanhPhanDinhLuong.ID_DonVi = id_DonVi;
        vmThanhPhanDinhLuong.GetAllDinhLuongDV();
    }

    function newHoaDon(maHD, loaiHoaDon = null) {
        var ngaylapHD = moment(new Date()).format("YYYY-MM-DD HH:mm");
        ngaylapHD = null;

        if (commonStatisJs.CheckNull(loaiHoaDon)) {
            loaiHoaDon = 1;
            if (maHD !== undefined && maHD !== null) {
                if (maHD.indexOf('Đ') > -1) {
                    loaiHoaDon = 3;
                }
                if (maHD.indexOf('T') > -1) {
                    return obj = newHoaDonTraHang(null, maHD);
                }
                if (maHD.indexOf(nameHD_AddGoiDV) > -1) {
                    loaiHoaDon = 19;
                }
            }
        }


        var ngaysudungGoiDV = null;
        var ngayhethanGoiDV = null;
        if (loaiHoaDon === 19) {
            ngaysudungGoiDV = moment(new Date()).format('DD/MM/YYYY');
            var nextYear = now.getFullYear() + 1;
            // default: het han sau 1 nam
            ngayhethanGoiDV = null;
        }
        var idRandom = CreateIDRandom('HD_');
        return obj = {
            ID: const_GuidEmpty,
            LoaiHoaDon: loaiHoaDon, // HD ban le
            IDRandom: idRandom,
            MaHoaDon: maHD,
            MaHoaDonDB: null,
            ID_HoaDon: null,
            ID_DoiTuong: null,
            ID_ViTri: null,
            NguoiTao: userLogin,
            ID_BangGia: const_GuidEmpty,
            ID_NhanVien: _idNhanVien,
            ID_DonVi: id_DonVi,
            NgayLapHoaDon: ngaylapHD,
            DienGiai: '',
            DVTinhGiam: '%',
            ChoThanhToan: false,
            KhuyenMai_GhiChu: '',
            NgayApDungGoiDV: ngaysudungGoiDV,
            HanSuDungGoiDV: ngayhethanGoiDV,
            DiemGiaoDich: 0,

            TongTienHang: 0,
            PhaiThanhToan: 0,
            TongChietKhau: 0,
            TongGiamGia: 0,
            DaThanhToan: 0,
            KhachDaTra: 0, // tienkhachtra truoc
            PTThueHoaDon: 0,
            TongTienThue: 0,
            PTGiam_KM: 0,
            KhuyeMai_GiamGia: 0,
            TongGiamGiaKM_HD: 0,

            TongTienTra: 0,
            TongTienMua: 0,
            TongGiaGocHangTra: 0,
            TongChiPhi: 0,
            TongChiPhiHangTra: 0,
            HoanTraThuKhac: 0,
            PhaiThanhToanDB: 0,// use at TraHang (if < 0: savePhieuThu hdGoc, if > 0: save phieuchi HDTra)
            PTGiamDB: 0,
            TongGiamGiaDB: 0,
            TongThueDB: 0,
            PTThueDB: 0,
            HoanTraTamUng: 0,  // when tongtra > tongmua
            DaTraKhach: 0,
            PhaiTraKhach: 0,
            GiaoHang: false,

            Status: 1, // open(1) - close(0) : use HDOffline
            StatusOffline: false,
            TienMat: 0,
            TienATM: 0, // quyet the ATM
            TienGui: 0, // chuyen khoan Ngan hang
            TienTheGiaTri: 0,// TT qua thegiatri
            TTBangDiem: 0, // tien KH thanh toan = diem --> save in Quy_HoaDon_ChiTiet
            DiemQuyDoi: 0, // so diem quy doi tu tien --> save in Quy_HoaDon_ChiTiet
            TienThua: 0,
            ID_TaiKhoanPos: null, // in DM_TaiKhoanNganHang
            ID_TaiKhoanChuyenKhoan: null,
            BH_NhanVienThucHiens: [],
            ID_NhomDTApplySale: null,  // giam gia HD theo nhom

            TrangThaiHD: 1, // 1.New, 3.TamLuu, 4.DaThanhToan xong, 6.HDDatHang DH00, 7.HDTam Da dc xoa, 8. capnhat CTHD
            IsActive: '',
            YeuCau: "1", // 1.Tam, 2.Dang giao, 3.HThanh, 4.Huy
            IsKhuyenMaiHD: false,
            IsOpeningKMaiHD: false,
            DiemKhuyenMai: 0,

            DiemHienTai: 0, // = diem hien tai of KH - DiemQuyDoi --> save in DM_DoiTuong
            DiemCong: 0,   // use when KM_Cong diem
            DiemGiaoDichDB: 0, // updateHD: tru diem giaodich HD cu

            CreateTime: 0, // bắt đầu chọn bàn (phòng) lúc HH:mm
            ThoiGianThucHien: 0,// = total time doing service 
            TenViTriHD: '',
            TenNhanVien: self.titleNhanvien(),// send to Pos_display
            TenGiaBan: 'Bảng giá chuẩn',
            TenDonVi: 'Bảng giá chuẩn',

            PTChietKhauHH: 0,
            TongGiamGiaHang: 0,
            TongTienHangChuaCK: 0,
            TongTienKhuyenMai_CT: 0,
            TongGiamGiaKhuyenMai_CT: 0,
            ListTKPos: [],
            ListTKChuyenKhoan: [],
            NoHDCu: 0,
            IsTraGDV: false,
        }
    }
    function newHoaDonTraHang(item, maHDTra) {
        var ngaylapHD = moment(new Date()).format("YYYY-MM-DD HH:mm");
        ngaylapHD = null;
        var idRandom = CreateIDRandom('HD_');
        if (item === null) {
            return obj = {
                LoaiHoaDon: 6,
                IDRandom: idRandom,
                MaHoaDon: maHDTra,
                MaHoaDonDB: null,
                MaHoaDonTraHang: '',
                ID: const_GuidEmpty,
                ID_HoaDon: null, // ID hoa don tra
                ID_DoiTuong: null,
                ID_BangGia: const_GuidEmpty,
                NguoiTao: userLogin,
                ID_DonVi: id_DonVi,
                ID_NhanVien: _idNhanVien,
                NgayLapHoaDon: ngaylapHD,
                TongTienHang: 0,
                PhaiThanhToan: 0,
                TongGiamGia: 0,
                DaThanhToan: 0,
                PTThueHoaDon: 0,
                TongTienThue: 0,
                ChoThanhToan: false,
                DienGiai: '',
                DVTinhGiam: '%',
                TongChietKhau: 0,
                Status: 1, // open(1) - close(0) : use HDOffline
                StatusOffline: false,
                TienMat: 0,
                TienATM: 0,
                TienGui: 0,
                TienTheGiaTri: 0,
                TienThua: 0,
                ID_TaiKhoanPos: null,
                ID_TaiKhoanChuyenKhoan: null,
                BH_NhanVienThucHiens: [],
                ID_NhomDTApplySale: null, // giam gia HD theo nhom
                // Tra Hang
                PhaiThanhToanDB: 0,// use at TraHang (if < 0: savePhieuThu hdGoc, if > 0: save phieuchi HDTra)
                TongGiaGocHangTra: 0,
                TongChiPhiHangTra: 0,
                TongChiPhi: 0,
                HoanTraThuKhac: 0,
                TongTienTra: 0,
                PhaiTraKhach: 0,
                DaTraKhach: 0,
                GiaoHang: false,
                MaHoaDonTH_NVien: nameHD_TraHang,
                TongGiamGiaDB: 0,
                PTGiamDB: 0,
                TongThueDB: 0,
                PTThueDB: 0,
                TongTienMua: 0, // = TongTienHang - GiamGia (HD Tra_MuaMoi)
                TrangThaiHD: 1,
                IsActive: '',
                KhachDaTra: 0,
                HoanTraTamUng: 0,
                IsKhuyenMaiHD: false, // co khuyen mai hay khong
                IsOpeningKMaiHD: false, // KM da duoc mo
                PTGiam_KM: 0,
                KhuyeMai_GiamGia: 0,
                TongGiamGiaKM_HD: 0,
                KhuyenMai_GhiChu: '',
                FromHDTichDiem: false, // tra tu HD co diem giao dich > 0
                DiemKhuyenMai: 0,
                // TichDiem
                DiemGiaoDich: 0, // save in HoaDon
                TTBangDiem: 0, // tien KH thanh toan = diem --> save in Quy_HoaDon_ChiTiet
                DiemQuyDoi: 0, // so diem quy doi tu tien --> save in Quy_HoaDon_ChiTiet
                DiemHienTai: 0, // = diem hien tai of KH - DiemQuyDoi --> save in DM_DoiTuong
                DiemCong: 0,  // use when KM_Cong diem
                DiemGiaoDichDB: 0,
                // Goi dich vu
                NgayApDungGoiDV: null,
                HanSuDungGoiDV: null,
                CreateTime: 0, // bắt đầu chọn bàn, phòng lúc HH:mm
                ID_ViTri: null,
                ThoiGianThucHien: 0,
                TenViTriHD: '',
                TenNhanVien: self.titleNhanvien(),

                PTChietKhauHH: 0,
                TongGiamGiaHang: 0,
                TongTienHangChuaCK: 0,
                TongTienKhuyenMai_CT: 0,
                TongGiamGiaKhuyenMai_CT: 0,
                NoHDCu: 0,
                IsTraGDV: false,
            }
        }
        else {
            var fromHDTichDiem = false;
            if (item.DiemGiaoDich !== null && item.DiemGiaoDich > 0) {
                fromHDTichDiem = true;
            }
            // neu tra goi DV
            var sNameMaHD = nameHD_TraHang;
            var ngaysudungGoiDV = null;
            var ngayhethanGoiDV = null;
            if (maHDTra.indexOf('DV') > -1) {
                sNameMaHD = ' Trả ';
                ngaysudungGoiDV = moment(new Date()).format('DD/MM/YYYY');
                var nextYear = now.getFullYear() + 1;
                ngayhethanGoiDV = null;
            }
            // use tinh PTThue HD
            var phaiTT = item.TongTienHang - item.TongGiamGia - item.KhuyeMai_GiamGia;
            return obj = {
                LoaiHoaDon: 6,
                IDRandom: idRandom,
                MaHoaDon: maHDTra,
                MaHoaDonDB: null,
                MaHoaDonTraHang: item.MaHoaDon,
                ID: const_GuidEmpty,
                ID_HoaDon: item.ID, // ID hoa don tra
                ID_DoiTuong: item.ID_DoiTuong,
                ID_BangGia: item.ID_BangGia,
                ID_NhanVien: item.ID_NhanVien,
                ID_DonVi: item.ID_DonVi,
                NguoiTao: userLogin,
                NgayLapHoaDon: ngaylapHD,
                NgayLapHD_ofHDGoc: moment(item.NgayLapHoaDon).format("YYYY-MM-DD HH:mm"), // used to compare (NgayTra, NgayMua)
                TongTienHang: 0,
                PhaiThanhToan: 0,
                TongGiamGia: 0,
                DaThanhToan: 0,
                PTThueHoaDon: 0,
                TongTienThue: 0,
                ChoThanhToan: false,
                DienGiai: item.DienGiai,
                DVTinhGiam: '%',
                TongChietKhau: 0, // PTGiam
                Status: 1,
                StatusOffline: false,
                TienMat: 0,
                TienATM: 0,
                TienGui: 0,
                TienThua: 0,
                ID_TaiKhoanPos: null,
                ID_TaiKhoanChuyenKhoan: null,
                BH_NhanVienThucHiens: [],
                ID_NhomDTApplySale: null, // giam gia HD theo nhom
                // Tra Hang
                PhaiThanhToanDB: 0,
                TongGiaGocHangTra: 0,
                TongChiPhiHangTra: 0,
                TongChiPhi: 0,
                HoanTraThuKhac: 0,
                TongTienTra: 0,
                PhaiTraKhach: 0,
                DaTraKhach: 0,
                GiaoHang: false,
                MaHoaDonTH_NVien: sNameMaHD + item.MaHoaDon + ' - ' + item.TenNhanVien,
                TongGiamGiaDB: 0,
                PTGiamDB: item.TongGiamGia / (item.TongTienHang - item.TongTienThue) * 100,
                PTThueDB: item.TongTienThue / item.TongTienHang * 100,
                PTThueBaoHiem: 0,
                TongTienThueBaoHiem: 0,
                TongThueDB: 0,
                TrangThaiHD: 1,
                IsActive: '',
                KhachDaTra: 0, // display when click XuLiDonHang
                HoanTraTamUng: 0,
                IsKhuyenMaiHD: false,
                IsOpeningKMaiHD: false, // KM da duoc mo
                PTGiam_KM: 0,
                KhuyeMai_GiamGia: 0,
                TongGiamGiaKM_HD: 0,
                KhuyenMai_GhiChu: '',
                FromHDTichDiem: fromHDTichDiem, // tra tu HD co diem giao dich > 0
                // TichDiem
                DiemGiaoDich: 0, // save in HoaDon
                TTBangDiem: 0, // tien KH thanh toan = diem --> save in Quy_HoaDon_ChiTiet
                DiemQuyDoi: 0, // so diem quy doi tu tien --> save in Quy_HoaDon_ChiTiet
                DiemHienTai: 0, // = diem hien tai of KH - DiemQuyDoi --> save in DM_DoiTuong
                DiemCong: 0,// use when KM_Cong diem  = diemHD + diemHH
                DiemKhuyenMai: 0,
                DiemGiaoDichDB: item.DiemGiaoDich,
                // Goi dich vu
                NgayApDungGoiDV: ngaysudungGoiDV,
                HanSuDungGoiDV: ngayhethanGoiDV,
                CreateTime: 0, // bắt đầu chọn bàn, phòng lúc HH:mm
                ID_ViTri: item.ID_ViTri,
                TienTheGiaTri: 0,
                ThoiGianThucHien: 0,
                TenViTriHD: '',
                TenNhanVien: item.TenNhanVien,

                PTChietKhauHH: 0,
                TongGiamGiaHang: 0,
                TongTienHangChuaCK: 0,
                TongTienKhuyenMai_CT: 0,
                TongGiamGiaKhuyenMai_CT: 0,
                NoHDCu: item.ConNo,
                IsTraGDV: false,
            }
        }
    }
    // co nhieu chi nhanh nhung chi co mot cty
    function GetInforCongTy() {
        ajaxHelper('/api/DanhMuc/HT_API/' + 'GetHT_CongTy', 'GET').done(function (data) {
            if (data !== null) {
                self.CongTy(data);
                localStorage.setItem('lcCongTy', JSON.stringify(data));
            }
        });
    }
    self.arrFilterGiaBan = ko.computed(function () {
        var _filter = self.filterGiaBan();
        return arrFilter = ko.utils.arrayFilter(self.GiaBans(), function (prod) {
            var chon = true;
            var arr = locdau(prod.TenGiaBan).split(/\s+/);
            var sSearch = '';
            for (let i = 0; i < arr.length; i++) {
                sSearch += arr[i].toString().split('')[0];
            }
            if (chon && _filter) {
                chon = (locdau(prod.TenGiaBan).indexOf(locdau(_filter)) > -1 ||
                    sSearch.indexOf(locdau(_filter).toLowerCase()) > -1
                );
            }
            return chon;
        });
    });
    self.arrFilterNhanVien = ko.computed(function () {
        var _filter = self.filterNVien();
        return arrFilter = ko.utils.arrayFilter(self.NhanViens(), function (prod) {
            var chon = true;
            var arr = locdau(prod.TenNhanVien).split(/\s+/);
            var sSearch = '';
            for (let i = 0; i < arr.length; i++) {
                sSearch += arr[i].toString().split('')[0];
            }
            if (chon && _filter) {
                chon = (locdau(prod.TenNhanVien).indexOf(locdau(_filter)) > -1 ||
                    sSearch.indexOf(locdau(_filter)) > -1
                );
            }
            return chon;
        });
    });
    // KhachHang
    self.ValidateEmail = function (item) {
        if (item.Email() !== '' && item.Email() !== undefined && item.Email() !== null) {
            var re = /^(([^<>()[\]\\.,;:\s@#ẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴ"]+(\.[^<>()[\]\\.,;:\s@#ẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴ"]+)*)|(".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/i;
            var valReturn = re.test(item.Email().trim());
            if (valReturn === false) {
                ShowMessage_Danger('Email không hợp lệ');
                self.checkEmail(false);
            }
            else {
                self.checkEmail(true);
            }
        }
    }

    self.editTenThayThe = function (item, isDoiTra = false) {
        var $this = $(event.currentTarget);
        var txt = Remove_LastComma($this.val());
        if (txt === '') {
            txt = item.TenHangHoa;
        }

        var idRandom = item.IDRandom;
        var quanLiTheoLo = item.QuanLyTheoLoHang;
        var concungloai = item.LaConCungLoai;

        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }

        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            if (quanLiTheoLo) {
                if (item.LotParent) {
                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandom === idRandom) {
                            cthd[i].TenHangHoaThayThe = txt;
                            for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                                cthd[i].DM_LoHang[j].TenHangHoaThayThe = txt;
                            }
                            break;
                        }
                    }
                }
                else {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                                cthd[i].DM_LoHang[j].TenHangHoaThayThe = txt;
                                break;
                            }
                        }
                    }
                }
            }
            else {
                if (concungloai) {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                            if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                                cthd[i].HangCungLoais[j].TenHangHoaThayThe = txt;
                                break;
                            }
                        }
                    }
                }
                else {
                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandom === idRandom) {
                            cthd[i].TenHangHoaThayThe = txt;
                            break;
                        }
                    }
                }
            }
        }
        localStorage.setItem(cacheName, JSON.stringify(cthd));

        Enter_SoLuongPriceCTHD(item, event, 'ten_', 2);
    }

    self.editSoluong = function (item) {
        // assign MaHoaDon --> update cache HD
        _maHoaDon = item.MaHoaDon;
        var idRandomHD = item.IDRandomHD;
        var rowID = item.ID_DonViQuiDoi;
        var idRandom = item.IDRandom;
        var thisObj = $(event.currentTarget);;
        formatNumberObj(thisObj); // 000,000
        var objThanhTien = $('#sum-f_' + idRandom);
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);

        var loaiHD = 1;
        var thanhtien = 0;
        var priceAfterSale = 0;
        var ctDoing = FindCTHD_isDoing(item, false);
        if (ctDoing !== null) {
            loaiHD = ctDoing.LoaiHoaDon;
            priceAfterSale = ctDoing.GiaBan;

            // get ID_KhuyenMai from CTHD
            var lstCTHD = localStorage.getItem(lcListCTHD);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                var thisItem = $.grep(lstCTHD, function (x) {
                    return x.IDRandom === item.IDRandom;
                });
                if (thisItem.length > 0) {
                    if (thisItem[0].ID_KhuyenMai !== null && thisItem[0].ID_KhuyenMai !== undefined) {
                        // neu truoc do co khuyen mai, reset TienChietKhau = 0
                        ctDoing.TienChietKhau = 0;
                        $('#btn_sale_' + idRandom).text(0)
                    }
                }
            }
            priceAfterSale = ctDoing.GiaBan - ctDoing.TienChietKhau;
            // if clear soluong --> default = 0
            var newNumber = formatNumberToFloat(thisObj.val());
            var sluongOld = newNumber;
            var keyCode = event.keyCode || event.which;
            // press up
            if (keyCode === 38) {
                newNumber = sluongOld + 1;
                thisObj.val(formatNumber3Digit(newNumber));
            }
            // press down
            if (keyCode === 40) {
                if (sluongOld > 1) {
                    newNumber = sluongOld - 1;
                }
                thisObj.val(formatNumber3Digit(newNumber));
            }
            // check so luong dich vu > so luong con lai trong goi
            var check = Check_Enought_SoLuongConLai_ServicePackage(item, newNumber);
            if (check !== '') {
                thisObj.val(item.SoLuongConLai);
                ShowMessage_Danger(check);
                return false;
            }
            //get itemHD --> check LoaiHoaDon
            if (loaiHD === 6 && self.HoaDons().ID_HoaDon() !== null) {
                // trahang tu HDMua --> chi nhap toida = soluongmua
                if (newNumber > this.SoLuongDaMua) {
                    thisObj.val(this.SoLuongDaMua);
                    newNumber = this.SoLuongDaMua;
                }
            }
            thanhtien = priceAfterSale * newNumber;
            ctDoing.ThanhToan = (priceAfterSale + ctDoing.TienThue) * newNumber;
            ctDoing.ThanhTien = thanhtien;
            ctDoing.SoLuong = newNumber;

            // not bind ThanhTien if use GoiDV
            if (item.ChatLieu !== '4' || loaiHD === 6) {
                objThanhTien.val(formatNumber3Digit(thanhtien));
                objThanhTien.text(formatNumber3Digit(thanhtien)); // use for lable
                $('#lblckTong_' + idRandom).text(formatNumber3Digit(ctDoing.SoLuong * ctDoing.TienChietKhau));
            }
            // update ds cache cthoadon
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updateCTHDLe(cthd, ctDoing);
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            }
            UpdateWarning_forCTHD_byIDQuiDoi(rowID, idRandomHD);
            ChangeSoLuong_UpdateSLQuyCach(item, false, item.QuyCach, newNumber);
            UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, newNumber, false);
            UpdateChietKhauNV_inCTHD(idRandom, false, ctDoing);
            //CaculatorTimeDoingService(item.LaHangHoa, idRandomHD, false);
            // show/hide warning (after update warning)
            ShowHideWarning_forCTHD_byIDQuiDoi(idRandomHD, rowID, idRandom);
            if (loaiHD === 6) {
                if (item.ThanhPhanComBo.length > 0) {
                    ChangeSoLuongParent_UpdateCombo(idRandom, ctDoing.SoLuong, false, 1);
                }
                UpdateHD_TraHang(idRandomHD);
                Update_TienThue_forCTHDTraHang(idRandomHD);
            }
            else {
                ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(rowID, item.ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(rowID, idRandomHD);
                // update status change = true for HDDatHang dang XuLy
                if (loaiHD === 3) {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }
                if (item.ThanhPhanComBo.length > 0) {
                    ChangeSoLuongParent_UpdateCombo(idRandom, newNumber, false, 1);
                }
                // show/hide KhuyenMai
                $('span[id^=promotion_]').css('display', 'none');
                $('div[id^=kmHH_]').css('display', 'none');
                $('div[id^=noteKM_]').text('');
                $('span[id^=gg_]').css('display', 'none');
                var ctAfterKM = JSON.parse(localStorage.getItem(lcListCTHD));
                for (let i = 0; i < ctAfterKM.length; i++) {
                    if (ctAfterKM[i].IDRandomHD === idRandomHD) {
                        // if has KM -> show Icon KM
                        if (ctAfterKM[i].IsKhuyenMai) {
                            $('#promotion_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        // if has HangTang -> show HangTang
                        if (ctAfterKM[i].HangHoa_KM.length > 0) {
                            $('#kmHH_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        $('#noteKM_' + ctAfterKM[i].ID_DonViQuiDoi).text(ctAfterKM[i].TenKhuyenMai);
                    }
                }
                SendDataBanHangToPos_byUser(idRandomHD, 1);
            }
            BindHD_byIDRandom(idRandomHD);
            Caculator_AmountProduct();
            // bind soluongQuyCach
            var objQC = $('#quycach_' + idRandom);
            if (parseFloat(objQC.text()) !== 0) {
                var soluongQuyCach = item.QuyCach * newNumber;
                objQC.text(formatNumber3Digit(soluongQuyCach));
            }
            Enter_SoLuongPriceCTHD(item, event, 'munber_', 1);
            Shift_SoLuongPriceCTHD(item, event, 'munber_', 1, 16);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
        }
    }
    self.editSale = function (item, e) {
        var thisObj = $(event.currentTarget);

        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var rowID = item.ID_DonViQuiDoi;
        var priceOld = item.GiaBan;

        var sumTemp = 0;
        var priceNew = 0;
        var soluong = 1;
        var tienGiam = 0;
        var ptGiam = 0;
        var ctDoing = FindCTHD_isDoing(item, false);
        if (ctDoing !== null) {
            priceOld = ctDoing.GiaBan;
            ptGiam = ctDoing.PTChietKhau;
            tienGiam = ctDoing.TienChietKhau;
            soluong = ctDoing.SoLuong;

            if (!commonStatisJs.CheckNull(ctDoing.ID_ChiTietGoiDV) && parseInt(ctDoing.ChatLieu) === 4) {
                ShowMessage_Danger('Dịch vụ thuộc gói đã mua. Không thay đổi chiết khấu');
                if (ptGiam > 0) {
                    thisObj.val(ptGiam);
                }
                else {
                    thisObj.val(formatNumber3Digit(tienGiam));
                }
                return;
            }

            // neu gia cu = 0 => khong cho phep nhap giam gia
            if (priceOld === 0) {
                thisObj.val(0);
            }
            else {
                // format 000,000,000
                formatNumberObj(thisObj);
                var valThis = thisObj.val();
                if (valThis === '') {
                    valThis = 0;
                }
                if ($('#vnd_' + idRandom).hasClass('active-re')) {
                    // neu giam gia > 100 %
                    if (formatNumberToFloat(valThis) > 100) {
                        thisObj.val(100);
                        valThis = 100;
                    }
                    tienGiam = priceOld * parseFloat(valThis) / 100;
                    ptGiam = parseFloat(valThis);
                }
                else {
                    // neu giam gia > gia cu
                    if (formatNumberToFloat(valThis) > priceOld) {
                        thisObj.val(formatNumber3Digit(priceOld));
                        valThis = priceOld;
                    }
                    tienGiam = formatNumberToFloat(valThis);
                    dvtGiam = 'VND';
                }
                var giasauCK = priceOld - tienGiam;
                if (ctDoing.PTThue > 0) {
                    ctDoing.TienThue = ctDoing.PTThue * giasauCK / 100;
                }
                priceNew = priceOld - tienGiam;
                sumTemp = priceNew * soluong;
            }

            ctDoing.PTChietKhau = ptGiam;
            ctDoing.TienChietKhau = tienGiam;
            ctDoing.ThanhTien = sumTemp;
            ctDoing.ThanhToan = (giasauCK + ctDoing.TienThue) * soluong;

            $('#sum-f_' + idRandom).val(formatNumber3Digit(sumTemp));
            $('button[id ^=btn_sale_' + idRandom).text(formatNumber3Digit(tienGiam)); // button bind giam gia
            $('#lblckTong_' + idRandom).text(formatNumber3Digit(ctDoing.SoLuong * ctDoing.TienChietKhau));
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd === null) {
                cthd = [];
            }
            else {
                cthd = JSON.parse(cthd);
            }
            cthd = updateCTHDLe(cthd, ctDoing);
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));

            UpdateChietKhauNV_inCTHD(idRandom, false, ctDoing);
            if (this.MaHoaDon.indexOf('Trả') > -1) {
                UpdateHD_TraHang(idRandomHD);
                Update_TienThue_forCTHDTraHang(idRandomHD);
            }
            else {
                // reset KhuyenMai HangHoa, not bind CTHD
                ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(rowID, item.ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                UpdateCacheHDLe(idRandomHD, false, 3);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(rowID, idRandomHD);
                // update status change = true for HDDatHang dang XuLy
                if (item.LoaiHoaDon === 3) {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }
                // show/hide KhuyenMai
                $('span[id^=promotion_]').css('display', 'none');
                $('div[id^=kmHH_]').css('display', 'none');
                $('div[id^=noteKM_]').text('');
                $('span[id^=gg]').css('display', 'none');
                var ctAfterKM = JSON.parse(localStorage.getItem(lcListCTHD));
                for (let i = 0; i < ctAfterKM.length; i++) {
                    if (ctAfterKM[i].IDRandomHD === idRandomHD) {
                        // if has KM -> show Icon KM
                        if (ctAfterKM[i].IsKhuyenMai) {
                            $('#promotion_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        // if has HangTang -> show HangTang
                        if (ctAfterKM[i].HangHoa_KM.length > 0) {
                            $('#kmHH_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        $('#noteKM_' + ctAfterKM[i].ID_DonViQuiDoi).text(ctAfterKM[i].TenKhuyenMai);
                    }
                }
                SendDataBanHangToPos_byUser(idRandomHD, 1);
            }
            BindHD_byIDRandom(idRandomHD);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
            // hide div giam gia && focus text ThanhToan
            var key = e.keyCode || e.which;
            if (key === 13 || key === 27) {
                $('#callprice_' + idRandom).toggle();
                if ($('.cantrakhach').css('display') === "none") {
                    $('#txtDaThanhToan').select();
                }
                else {
                    $('#txtDaTraKhach').select();
                }
            }
        }
    }

    self.editPrice = function (item) {
        var idRandom = item.IDRandom;
        var sum_f = $('#sum-f_' + idRandom);
        var objGiam = $('#btn_sale_' + idRandom);
        var thisObj = $(event.currentTarget);

        var objVal = formatNumberObj(thisObj);
        var price = formatNumberToFloat(objVal);
        var priceNew = price;

        var idRandomHD = item.IDRandomHD;
        var objID = item.ID_DonViQuiDoi;

        var sum = 0;
        var priceAfterSale = 0; // use caculator sum
        var soluong = 1;
        var giam = 0;
        var ptGiam = 0;

        // get infor from CTHD old
        var ctDoing = FindCTHD_isDoing(item, false);
        if (ctDoing !== null) {
            ptGiam = ctDoing.PTChietKhau;
            giam = ctDoing.TienChietKhau;
            soluong = ctDoing.SoLuong;

            if (!commonStatisJs.CheckNull(ctDoing.ID_ChiTietGoiDV) && parseInt(ctDoing.ChatLieu) === 4) {
                ShowMessage_Danger('Dịch vụ thuộc gói đã mua. Không thay đổi đơn giá');
                thisObj.val(formatNumber3Digit(ctDoing.GiaBan));
                return;
            }

            // is clear price
            var valThis = thisObj.val();
            if (valThis === '') {
                valThis = 0;
            }
            // caculator again tienGiam, newPrice
            if (ptGiam > 0) {
                giam = ptGiam * priceNew / 100;
            }
            priceAfterSale = priceNew - giam;
            sum = parseFloat(soluong) * priceAfterSale;
            objGiam.text(formatNumber3Digit(giam));
            sum_f.val(formatNumber3Digit(sum));

            let tienThue = ctDoing.TienThue;
            if (ctDoing.PTThue > 0) {
                tienThue = ctDoing.PTThue * (priceNew - giam) / 100;
            }

            ctDoing.DonGia = priceNew;
            ctDoing.GiaBan = priceNew;
            ctDoing.TienChietKhau = giam;
            ctDoing.ThanhTien = sum;
            ctDoing.ThanhToan = soluong * (priceNew - giam + tienThue);
            ctDoing.TienThue = tienThue;

            $('#noteKM_' + objID).text('');
            $('#kmHH_' + objID).css('display', 'none');
            // update ds cache cthoadon
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updateCTHDLe(cthd, ctDoing);
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            }
            UpdateChietKhauNV_inCTHD(idRandom, false, ctDoing);
            if (this.MaHoaDon.indexOf('Trả') > -1) {
                UpdateHD_TraHang(idRandomHD);
            }
            else {
                // reset KM of HangHoa, but not bind CTHD
                ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(objID, item.ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(objID, idRandomHD);
                // update status change = true for HDDatHang dang XuLy
                if (item.LoaiHoaDon === 3) {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }
                // show/hide KhuyenMai
                $('span[id^=promotion_]').css('display', 'none');
                $('div[id^=kmHH_]').css('display', 'none');
                $('div[id^=noteKM_]').text('');
                $('span[id^=gg_]').css('display', 'none');
                var ctAfterKM = JSON.parse(localStorage.getItem(lcListCTHD));
                for (let i = 0; i < ctAfterKM.length; i++) {
                    if (ctAfterKM[i].IDRandomHD === idRandomHD) {
                        // if has KM -> show Icon KM
                        if (ctAfterKM[i].IsKhuyenMai) {
                            $('#promotion_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        // if has HangTang -> show HangTang
                        if (ctAfterKM[i].HangHoa_KM.length > 0) {
                            $('#kmHH_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        $('#noteKM_' + ctAfterKM[i].ID_DonViQuiDoi).text(ctAfterKM[i].TenKhuyenMai);
                    }
                }
                SendDataBanHangToPos_byUser(idRandomHD, 1);
            }
            BindHD_byIDRandom(idRandomHD);
            Enter_SoLuongPriceCTHD(item, event, '', 2);
            Shift_SoLuongPriceCTHD(item, event, '', 2, 16);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
        }
    }

    function ResetPTChietKhauHH_PTThue(idRandomHD) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRandomHD) {
                    lstHD[i].PTChietKhauHH = 0;
                    lstHD[i].PTThueHoaDon = 0;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }

    self.editSumPrice = function (item) {
        var idRandom = item.IDRandom;
        var thisObj = $(event.currentTarget);
        var objPrice = $('input[id =' + idRandom + ']');

        var objVal = formatNumberObj(thisObj);
        var sumPrice = formatNumberToFloat(objVal);

        var idRandomHD = item.IDRandomHD;
        var objID = item.ID_DonViQuiDoi;

        var priceNew = 0;
        var soluong = 1;
        var priceOld = 0;
        var ctDoing = FindCTHD_isDoing(item, false);
        if (ctDoing !== null) {
            priceOld = ctDoing.GiaBan;
            soluong = ctDoing.SoLuong;

            if (!commonStatisJs.CheckNull(ctDoing.ID_ChiTietGoiDV) && parseInt(ctDoing.ChatLieu) === 4) {
                ShowMessage_Danger('Dịch vụ thuộc gói đã mua. Không sửa thành tiền');
                thisObj.val(formatNumber3Digit(ctDoing.ThanhTien));
                return false;
            }

            // is clear price
            var valThis = thisObj.val();
            if (valThis === '') {
                valThis = 0;
            }
            if (soluong === 0) {
                // keep GiaBan, caculator again SoLuong
                soluong = sumPrice / priceOld;
                priceNew = priceOld;
                $('#munber_' + idRandom).val(formatNumber3Digit(soluong));
            }
            else {
                priceNew = Caculator_Price_byTienGiam(0, soluong, sumPrice);
                objPrice.val(formatNumber3Digit(priceNew));
                objPrice.val(formatNumber3Digit(priceNew));
                $('#btn_sale_' + idRandom).text(0);
            }
            // reset chietkhau, thue
            ctDoing.SoLuong = soluong;
            ctDoing.GiaBan = priceNew;
            ctDoing.DonGia = priceNew;
            ctDoing.TienChietKhau = 0;
            ctDoing.PTChietKhau = 0;
            ctDoing.ThanhTien = sumPrice;
            ctDoing.ThanhToan = sumPrice;
            // update ds cache cthoadon
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updateCTHDLe(cthd, ctDoing);
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            }
            UpdateChietKhauNV_inCTHD(idRandom, false, ctDoing);

            if (this.MaHoaDon.indexOf('Trả') > -1) {
                UpdateHD_TraHang(idRandomHD);
            }
            else {
                ResetPTChietKhauHH_PTThue(idRandomHD);

                // reset KM of HangHoa, but not bind CTHD
                ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(objID, item.ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                UpdateCacheHDLe(idRandomHD, false, 3);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(objID, idRandomHD);
                if (item.LoaiHoaDon === 3) {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }
                // show/hide KhuyenMai
                $('span[id^=promotion_]').css('display', 'none');
                $('div[id^=kmHH_]').css('display', 'none');
                $('div[id^=noteKM_]').text('');
                $('span[id^=gg_]').css('display', 'none');
                var ctAfterKM = JSON.parse(localStorage.getItem(lcListCTHD));
                for (let i = 0; i < ctAfterKM.length; i++) {
                    if (ctAfterKM[i].IDRandomHD === idRandomHD) {
                        // if has KM -> show Icon KM
                        if (ctAfterKM[i].IsKhuyenMai) {
                            $('#promotion_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        // if has HangTang -> show HangTang
                        if (ctAfterKM[i].HangHoa_KM.length > 0) {
                            $('#kmHH_' + ctAfterKM[i].ID_DonViQuiDoi).css('display', '');
                        }
                        $('#noteKM_' + ctAfterKM[i].ID_DonViQuiDoi).text(ctAfterKM[i].TenKhuyenMai);
                    }
                }
                SendDataBanHangToPos_byUser(idRandomHD, 1);
            }
            BindHD_byIDRandom(idRandomHD);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
        }
    }
    // focus tien phai tra when enter (shift) SoLuong|DonGia CTHDDoiTra
    function FocusTienThanhToan_WhenEnterCTHDDoiTra(idRandomHD) {
        // tra khach
        if ($('.khachcantra').css('display') === 'none') {
            var lstCTDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
            if (lstCTDoiTra !== null) {
                lstCTDoiTra = JSON.parse(lstCTDoiTra);
                var lstCTHD_opening = $.grep(lstCTDoiTra, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });
                if (lstCTHD_opening.length > 0) {
                    // co doi tra
                    $('#txtDaTraKhach').focus().select();
                }
                else {
                    // khong doi tra
                    $('#txtDaTraKhach_KM').focus().select();
                }
            }
            else {
                // khong doi tra
                $('#txtDaTraKhach_KM').focus().select();
            }
        }
        else {
            // khach tra   
            $('#txtDaThanhToan').focus().select();
        }
    }
    function FocusTienThanhToan_WhenShiftCTHD(loaiHD, idRandomHD) {
        if (loaiHD === 6) {
            FocusTienThanhToan_WhenEnterCTHDDoiTra(idRandomHD);
        }
        else {
            // khach tra
            $('#txtDaThanhToan').focus().select();
        }
    }

    function Huongha_Enter_SoLuongPriceCTHD(itemCT, e, charStart, type) {
        var key = e.keyCode || e.which;
        if (key === 13) {
            var lstCTHD = JSON.parse(localStorage.getItem(lcListCTHD));
            // get all CTHD of HD opening
            var idRandomHD = itemCT.IDRandomHD;
            var lstCTHD_opening = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            var lstCTDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
            if (lstCTDoiTra !== null) {
                lstCTDoiTra = JSON.parse(lstCTDoiTra);
            }
            else {
                lstCTDoiTra = [];
            }
            var idRandomFocus = null;
            for (let i = 0; i < lstCTHD_opening.length; i++) {
                let itFor = lstCTHD_opening[i];
                if (itFor.IDRandom === itemCT.IDRandom) {
                    if (i < lstCTHD_opening.length - 1) {
                        if (itFor.HangCungLoais.length > 0) {
                            // focus HangCungLoai first
                            idRandomFocus = itFor.HangCungLoais[0].IDRandom;
                        }
                        else {
                            if (itFor.ThanhPhanComBo.length > 0) {
                                // focus HangCungLoai first
                                idRandomFocus = itFor.ThanhPhanComBo[0].IDRandom;
                            }
                            else {
                                // focus in next Lot
                                idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                            }
                        }
                    }
                    else {
                        // find in HangCungLoai
                        if (itFor.HangCungLoais.length > 0) {
                            let obj = Return_RandomFocus(lstCTHD_opening, i, itemCT, lstCTDoiTra, charStart, idRandomHD, false, type);
                            idRandomFocus = obj.IDRandom;
                            charStart = obj.CharStart;
                        }
                        else {
                            // focus in next Lot
                            idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                        }
                    }
                }
                if (idRandomFocus !== null) {
                    $('input[id=' + charStart + idRandomFocus + ']').focus().select();
                }
            }
        }
    }

    // type: 1.soluong, 2.price, 3 giaBH
    function Enter_SoLuongPriceCTHD(itemCT, e, charStart, type) {
        if (self.SubDomain() === '') {
            Huongha_Enter_SoLuongPriceCTHD(itemCT, e, charStart, type)
        }
        else {
            var key = e.keyCode || e.which;
            if (key === 13) {
                var lstCTHD = JSON.parse(localStorage.getItem(lcListCTHD));
                // get all CTHD of HD opening
                var idRandomHD = itemCT.IDRandomHD;
                var lstCTHD_opening = $.grep(lstCTHD, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });
                var lstCTDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                if (lstCTDoiTra !== null) {
                    lstCTDoiTra = JSON.parse(lstCTDoiTra);
                }
                else {
                    lstCTDoiTra = [];
                }
                var idRandomFocus = null;
                for (let i = 0; i < lstCTHD_opening.length; i++) {
                    let itFor = lstCTHD_opening[i];
                    if (itFor.ID_DonViQuiDoi === itemCT.ID_DonViQuiDoi) {
                        if (itFor.DM_LoHang.length > 0) {
                            if (itFor.IDRandom === itemCT.IDRandom) {
                                if (itFor.DM_LoHang.length > 1) {
                                    idRandomFocus = itFor.DM_LoHang[1].IDRandom;
                                }
                                else {
                                    if (i < lstCTHD_opening.length - 1) {
                                        idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                    }
                                    else {
                                        // find in doitra
                                        let obj = Find_RandomFocus_CTDoiTra(itemCT.LoaiHoaDon, idRandomHD, lstCTDoiTra, type);
                                        idRandomFocus = obj.IDRandom;
                                        charStart = obj.CharStart;
                                    }
                                }
                            }
                            else {
                                // find LoHang
                                for (let j = 0; j < itFor.DM_LoHang.length; j++) {
                                    if (itFor.DM_LoHang[j].IDRandom === itemCT.IDRandom) {
                                        if (j < itFor.DM_LoHang.length - 1) {
                                            // focus in next Lot
                                            idRandomFocus = itFor.DM_LoHang[j + 1].IDRandom;
                                        }
                                        else {
                                            // find li next
                                            if (i < lstCTHD_opening.length - 1) {
                                                // focus in next Lot
                                                idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                            }
                                            else {
                                                // find CTDoiTra
                                                let obj = Find_RandomFocus_CTDoiTra(itemCT.LoaiHoaDon, idRandomHD, lstCTDoiTra, type);
                                                idRandomFocus = obj.IDRandom;
                                                charStart = obj.CharStart;
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            // find li next
                            if (i < lstCTHD_opening.length - 1) {
                                if (itFor.IDRandom === itemCT.IDRandom) {
                                    // find in HangCungLoai
                                    if (itFor.HangCungLoais.length > 0) {
                                        // focus HangCungLoai first
                                        idRandomFocus = itFor.HangCungLoais[0].IDRandom;
                                    }
                                    else {
                                        if (itFor.ThanhPhanComBo.length > 0) {
                                            // focus HangCungLoai first
                                            idRandomFocus = itFor.ThanhPhanComBo[0].IDRandom;
                                        }
                                        else {
                                            // focus in next Lot
                                            idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                        }
                                    }
                                }
                                else {
                                    // find in HangCungLoai
                                    if (itFor.HangCungLoais.length > 0) {
                                        let obj = Return_RandomFocus(lstCTHD_opening, i, itemCT, lstCTDoiTra, charStart, idRandomHD, false, type);
                                        idRandomFocus = obj.IDRandom;
                                        charStart = obj.CharStart;
                                    }
                                    else {
                                        // focus in next Lot
                                        idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                    }
                                }
                            }
                            else {
                                // find HangCungLoai
                                if (itFor.HangCungLoais.length > 0) {
                                    if (itFor.IDRandom === itemCT.IDRandom) {
                                        idRandomFocus = itFor.HangCungLoais[0].IDRandom;
                                    }
                                    else {
                                        let obj = Return_RandomFocus(lstCTHD_opening, i, itemCT, lstCTDoiTra, charStart, idRandomHD, false, type);
                                        idRandomFocus = obj.IDRandom;
                                        charStart = obj.CharStart;
                                    }
                                }
                                else {
                                    if (itFor.ThanhPhanComBo.length > 0) {
                                        if (itFor.IDRandom === itemCT.IDRandom) {
                                            idRandomFocus = itFor.ThanhPhanComBo[0].IDRandom;
                                        }
                                    }
                                    else {
                                        // find CTDoiTra
                                        let obj = Find_RandomFocus_CTDoiTra(itemCT.LoaiHoaDon, lstCTHD_opening[0].LoaiHoaDon, idRandomHD, lstCTDoiTra, type);
                                        idRandomFocus = obj.IDRandom;
                                        charStart = obj.CharStart;
                                    }
                                }
                            }
                        }
                        break;
                    }
                }
                if (idRandomFocus !== null) {
                    $('input[id=' + charStart + idRandomFocus + ']').focus().select();
                }
            }
        }
    }
    function Shift_SoLuongPriceCTHD(itemCT, e, charStart, type, keyCode) {
        var key = e.keyCode || e.which;
        // 16.shift
        if (key === keyCode) {
            var lstCTHD = JSON.parse(localStorage.getItem(lcListCTHD));
            var idRandomHD = itemCT.IDRandomHD;
            // get all CTHD of HD opening
            var lstCTHD_opening = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            var idRandomFocus = null;
            for (let i = 0; i < lstCTHD_opening.length; i++) {
                if (lstCTHD_opening[i].ID_DonViQuiDoi === itemCT.ID_DonViQuiDoi) {
                    if (lstCTHD_opening[i].DM_LoHang.length > 0) {
                        if (lstCTHD_opening[i].IDRandom === itemCT.IDRandom) {
                            idRandomFocus = GetIDRandom_ofLiPev_ctMua(i, lstCTHD_opening, itemCT.LoaiHoaDon, idRandomHD, idRandomFocus);
                        }
                        else {
                            // find LoHang
                            for (let j = 1; j < lstCTHD_opening[i].DM_LoHang.length; j++) {
                                if (lstCTHD_opening[i].DM_LoHang[j].IDRandom === itemCT.IDRandom) {
                                    if (j - 1 === 0) {
                                        idRandomFocus = lstCTHD_opening[i].IDRandom;
                                    }
                                    else {
                                        idRandomFocus = lstCTHD_opening[i].DM_LoHang[j - 1].IDRandom;
                                    }
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        if (lstCTHD_opening[i].HangCungLoais.length > 0) {
                            // find hangcungloai
                            if (lstCTHD_opening[i].IDRandom === itemCT.IDRandom) {
                                idRandomFocus = GetIDRandom_ofLiPev_ctMua(i, lstCTHD_opening, itemCT.LoaiHoaDon, idRandomHD, idRandomFocus);
                            }
                            else {
                                for (let j = 0; j < lstCTHD_opening[i].HangCungLoais.length; j++) {
                                    if (lstCTHD_opening[i].HangCungLoais[j].IDRandom === itemCT.IDRandom) {
                                        if (j - 1 >= 0) {
                                            idRandomFocus = lstCTHD_opening[i].HangCungLoais[j - 1].IDRandom;
                                        }
                                        else {
                                            idRandomFocus = lstCTHD_opening[i].IDRandom;
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            idRandomFocus = GetIDRandom_ofLiPev_ctMua(i, lstCTHD_opening, itemCT.LoaiHoaDon, idRandomHD, idRandomFocus);
                        }
                    }
                    break;
                }
            }
            if (idRandomFocus !== null) {
                if (type === 3) {
                    $('#' + charStart + idRandomFocus).focus().select();
                }
                else {
                    $('input[id=' + charStart + idRandomFocus + ']').focus().select();
                }
            }
        }
    }
    function Find_RandomFocus_CTDoiTra(loaiHD, idRandomHD, lstCTDoiTra, type) {
        lstCTDoiTra = $.grep(lstCTDoiTra, function (x) {
            return x.IDRandomHD === idRandomHD;
        });
        if (lstCTDoiTra.length > 0) {
            return {
                IDRandom: lstCTDoiTra[0].IDRandom,
                CharStart: type === 1 ? 'numberTH_' : 'priceTH_',
            }
        }
        else {
            // focus txtThanhToan
            FocusTienThanhToan_WhenShiftCTHD(loaiHD, idRandomHD);
            return {
                IDRandom: null,
                CharStart: '',
            }
        }
    }
    function Return_RandomFocus(lstCTHD_opening, i, itemCT, lstCTDoiTra, charStart, idRandomHD, isDoiTra, type) {
        let idRandomFocus = '';
        for (let j = 0; j < lstCTHD_opening[i].HangCungLoais.length; j++) {
            if (lstCTHD_opening[i].HangCungLoais[j].IDRandom === itemCT.IDRandom) {
                if (j < lstCTHD_opening[i].HangCungLoais.length - 1) {
                    // focus in next Lot
                    idRandomFocus = lstCTHD_opening[i].HangCungLoais[j + 1].IDRandom;
                }
                else {
                    // find li next
                    if (i < lstCTHD_opening.length - 1) {
                        // focus in next Lot
                        idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                    }
                    else {
                        if (isDoiTra === false) {
                            let obj = Find_RandomFocus_CTDoiTra(itemCT.LoaHoaDon, idRandomHD, lstCTDoiTra, type);
                            idRandomFocus = obj.IDRandom;
                            charStart = obj.CharStart;
                        }
                        else {
                            idRandomFocus = null;
                            FocusTienThanhToan_WhenEnterCTHDDoiTra(idRandomHD);
                        }
                    }
                }
                break;
            }
        }
        return {
            IDRandom: idRandomFocus,
            CharStart: charStart,
        }
    }

    function Combo_FocusLiNext(ctDoing, idRandom, charStart, isDoiTra) {
        let idFocus = null;
        for (let i = 0; i < ctDoing.ThanhPhanComBo.length; i++) {
            let itFor = ctDoing.ThanhPhanComBo[i];
            if (itFor.IDRandom === idRandom) {
                if (i < ctDoing.ThanhPhanComBo.length - 1) {
                    idFocus = ctDoing.ThanhPhanComBo[i + 1].IDRandom;
                }
                else {
                    idFocus = Combo_FindLiNext(ctDoing.IDRandom, isDoiTra)
                }
            }
        }
        if (idFocus !== null) {
            $('input[id=' + charStart + idFocus + ']').focus().select();
        }
    }

    function Combo_FindLiNext(idPrev, isDoiTra) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                let itFor = cthd[i];
                if (itFor.IDRandom === idPrev) {
                    if (i < cthd.length - 1) {
                        return cthd[i + 1].IDRandom;
                    }
                }
            }
        }
        return null;
    }

    function GetIDRandom_ofLiPev_ctMua(i, lstCTHD_opening, loaiHD, idRandomHD, idRandomFocus) {
        if (i - 1 >= 0) {
            let lstLoHang = lstCTHD_opening[i - 1].DM_LoHang;
            if (lstLoHang.length > 0) {
                // focus LoHang last
                idRandomFocus = lstLoHang[lstLoHang.length - 1].IDRandom;
            }
            else {
                // focus in prev li
                lstLoHang = lstCTHD_opening[i - 1].HangCungLoais;
                if (lstLoHang.length > 0) {
                    idRandomFocus = lstLoHang[lstLoHang.length - 1].IDRandom;
                }
                else {
                    idRandomFocus = lstCTHD_opening[i - 1].IDRandom;
                }
            }
        }
        else {
            FocusTienThanhToan_WhenShiftCTHD(loaiHD, idRandomHD);
            idRandomFocus = null;
        }
        return idRandomFocus;
    }
    function GetIDRandom_ofLiPev_ctDoiTra(i, lstCTHD_opening, loaiHD, idRandomHD, idRandomFocus, charStart, type) {
        if (i - 1 >= 0) {
            let lstLoHang = lstCTHD_opening[i - 1].DM_LoHang;
            if (lstLoHang.length > 0) {
                // focus LoHang last
                idRandomFocus = lstLoHang[lstLoHang.length - 1].IDRandom;
            }
            else {
                // focus in prev li
                lstLoHang = lstCTHD_opening[i - 1].HangCungLoais;
                if (lstLoHang.length > 0) {
                    idRandomFocus = lstLoHang[lstLoHang.length - 1].IDRandom;
                }
                else {
                    idRandomFocus = lstCTHD_opening[i - 1].IDRandom;
                }
            }
        }
        else {
            // find in cthd Tra
            let ctTra = localStorage.getItem(lcListCTHD);
            if (ctTra !== null) {
                ctTra = JSON.parse(ctTra);
                ctTra = $.grep(ctTra, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });
                if (ctTra.length > 0) {
                    switch (type) {
                        case 1:
                            charStart = 'munber_';
                            break;
                        case 2:
                            charStart = '';
                            break;
                        case 3:
                            charStart = 'sum-f_';
                            break;
                    }
                    let ctLast = ctTra[ctTra.length - 1];// get ctTra last
                    let lenAr = ctLast.DM_LoHang.length;
                    if (lenAr > 0) {
                        if (lenAr === 1) {
                            idRandomFocus = ctLast.IDRandom;
                        }
                        else {
                            idRandomFocus = ctLast.DM_LoHang[lenAr - 1].IDRandom;
                        }
                    }
                    else {
                        lenAr = ctLast.HangCungLoais.length;
                        if (lenAr > 0) {
                            idRandomFocus = ctLast.HangCungLoais[lenAr - 1].IDRandom;
                        }
                        else {
                            idRandomFocus = ctLast.IDRandom;
                        }
                    }
                }
                else {
                    FocusTienThanhToan_WhenShiftCTHD(loaiHD, idRandomHD);
                }
            }
            else {
                FocusTienThanhToan_WhenShiftCTHD(loaiHD, idRandomHD);
            }
        }
        return {
            IDRandom: idRandomFocus,
            CharStart: charStart,
        }
    };
    function Enter_DoiTra(itemCT, e, charStart, type) {
        var key = e.keyCode || e.which;
        if (key === 13) {
            var lstCTDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
            if (lstCTDoiTra !== null) {
                lstCTDoiTra = JSON.parse(lstCTDoiTra);
                var idRandomHD = itemCT.IDRandomHD;
                // get all CTHD of HD opening
                var lstCTHD_opening = $.grep(lstCTDoiTra, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });
                var idRandomFocus = null;
                for (let i = 0; i < lstCTHD_opening.length; i++) {
                    let itFor = lstCTHD_opening[i];
                    if (itFor.ID_DonViQuiDoi === itemCT.ID_DonViQuiDoi) {
                        if (itFor.DM_LoHang.length > 0) {
                            if (itFor.IDRandom === itemCT.IDRandom) {
                                if (itFor.DM_LoHang.length > 1) {
                                    idRandomFocus = itFor.DM_LoHang[1].IDRandom;
                                }
                                else {
                                    if (i < lstCTHD_opening.length - 1) {
                                        idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                    }
                                    else {
                                        FocusTienThanhToan_WhenEnterCTHDDoiTra(idRandomHD);
                                    }
                                }
                            }
                            else {
                                // find LoHang
                                for (let j = 0; j < itFor.DM_LoHang.length; j++) {
                                    if (itFor.DM_LoHang[j].IDRandom === itemCT.IDRandom) {
                                        if (j < itFor.DM_LoHang.length - 1) {
                                            // focus in next Lot
                                            idRandomFocus = itFor.DM_LoHang[j + 1].IDRandom;
                                        }
                                        else {
                                            // find li next
                                            if (i < lstCTHD_opening.length - 1) {
                                                // focus in next Lot
                                                idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                            }
                                            else {
                                                FocusTienThanhToan_WhenEnterCTHDDoiTra(idRandomHD);
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            // find li next
                            if (i < lstCTHD_opening.length - 1) {
                                if (itFor.IDRandom === itemCT.IDRandom) {
                                    // find in HangCungLoai
                                    if (itFor.HangCungLoais.length > 0) {
                                        // focus HangCungLoai first
                                        idRandomFocus = itFor.HangCungLoais[0].IDRandom;
                                    }
                                    else {
                                        if (itFor.ThanhPhanComBo.length > 0) {
                                            idRandomFocus = itFor.ThanhPhanComBo[0].IDRandom;
                                        }
                                        else {
                                            // focus in next Lot
                                            idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                        }
                                    }
                                }
                                else {
                                    // find in HangCungLoai
                                    if (itFor.HangCungLoais.length > 0) {
                                        let obj = Return_RandomFocus(lstCTHD_opening, i, itemCT, lstCTDoiTra, charStart, idRandomHD, true, type);
                                        idRandomFocus = obj.IDRandom;
                                        charStart = obj.CharStart;
                                    }
                                    else {
                                        // focus in next Lot
                                        idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
                                    }
                                }
                            }
                            else {
                                // find HangCungLoai
                                if (itFor.HangCungLoais.length > 0) {
                                    if (itFor.IDRandom === itemCT.IDRandom) {
                                        idRandomFocus = itFor.HangCungLoais[0].IDRandom;
                                    }
                                    else {
                                        let obj = Return_RandomFocus(lstCTHD_opening, i, itemCT, lstCTDoiTra, charStart, idRandomHD, true, type);
                                        idRandomFocus = obj.IDRandom;
                                        charStart = obj.CharStart;
                                    }
                                }
                                else {
                                    if (itFor.ThanhPhanComBo.length > 0) {
                                        if (itFor.IDRandom === itemCT.IDRandom) {
                                            idRandomFocus = itFor.ThanhPhanComBo[0].IDRandom;
                                        }
                                    }
                                    else {
                                        // find CTDoiTra
                                        FocusTienThanhToan_WhenEnterCTHDDoiTra(idRandomHD);
                                        idRandomFocus = null;
                                    }
                                }
                            }
                        }
                        break;
                    }
                }
                if (idRandomFocus !== null) {
                    $('input[id=' + charStart + idRandomFocus + ']').focus().select();
                }
            }
        }
    }
    function Shift_DoiTra(itemCT, e, charStart, type, keyCode) {
        var key = e.keyCode || e.which;
        // 16.shift
        if (key === keyCode) {
            var lstCTHD = JSON.parse(localStorage.getItem(lcListCTHD_DoiTra)); // ct mua moi
            var idRandomHD = itemCT.IDRandomHD;
            // get all CTHD of HD opening
            var lstCTHD_opening = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD;
            })
            var idRandomFocus = null;
            for (let i = 0; i < lstCTHD_opening.length; i++) {
                if (lstCTHD_opening[i].ID_DonViQuiDoi === itemCT.ID_DonViQuiDoi) {
                    if (lstCTHD_opening[i].DM_LoHang.length > 0) {
                        if (lstCTHD_opening[i].IDRandom === itemCT.IDRandom) {
                            let obj = GetIDRandom_ofLiPev_ctDoiTra(i, lstCTHD_opening, itemCT.LoaiHoaDon, idRandomHD, idRandomFocus, charStart, type);
                            idRandomFocus = obj.IDRandom;
                            charStart = obj.CharStart;
                        }
                        else {
                            // find LoHang
                            for (let j = 1; j < lstCTHD_opening[i].DM_LoHang.length; j++) {
                                if (lstCTHD_opening[i].DM_LoHang[j].IDRandom === itemCT.IDRandom) {
                                    if (j - 1 === 0) {
                                        idRandomFocus = lstCTHD_opening[i].IDRandom;
                                    }
                                    else {
                                        idRandomFocus = lstCTHD_opening[i].DM_LoHang[j - 1].IDRandom;
                                    }
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        if (lstCTHD_opening[i].HangCungLoais.length > 0) {
                            // find hangcungloai
                            if (lstCTHD_opening[i].IDRandom === itemCT.IDRandom) {
                                let obj = GetIDRandom_ofLiPev_ctDoiTra(i, lstCTHD_opening, itemCT.LoaiHoaDon, idRandomHD, idRandomFocus, charStart, type);
                                idRandomFocus = obj.IDRandom;
                                charStart = obj.CharStart;
                            }
                            else {
                                for (let j = 0; j < lstCTHD_opening[i].HangCungLoais.length; j++) {
                                    if (lstCTHD_opening[i].HangCungLoais[j].IDRandom === itemCT.IDRandom) {
                                        if (j - 1 >= 0) {
                                            idRandomFocus = lstCTHD_opening[i].HangCungLoais[j - 1].IDRandom;
                                        }
                                        else {
                                            idRandomFocus = lstCTHD_opening[i].IDRandom;
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            let obj = GetIDRandom_ofLiPev_ctDoiTra(i, lstCTHD_opening, itemCT.LoaiHoaDon, idRandomHD, idRandomFocus, charStart, type);
                            idRandomFocus = obj.IDRandom;
                            charStart = obj.CharStart;
                        }
                    }
                    break;
                }
            }
            if (idRandomFocus !== null) {
                if (type === 3) {
                    $('#' + charStart + idRandomFocus).focus().select();
                }
                else {
                    $('input[id=' + charStart + idRandomFocus + ']').focus().select();
                }
            }
        }
    }

    self.CTHD_Chosing = ko.observable();
    self.IsCTHD_DoiTra = ko.observable(false);
    self.showPopChietKhauTong_CTHD = function (item, isDoiTra = false) {
        const elm = $(event.currentTarget);
        self.CTHD_Chosing(item);
        self.IsCTHD_DoiTra(isDoiTra);
        ctDoing = FindCTHD_isDoing(item, isDoiTra);
        if (ctDoing !== null) {
            $('#ckTongCTHD').find('input').val(formatNumber3Digit(ctDoing.SoLuong * ctDoing.TienChietKhau));
            $(document).ready(function () {
                $('#ckTongCTHD').find('input').focus().select();
            })
        }
        $('#ckTongCTHD').show();
        $('#ckTongCTHD').css('top', (elm.offset().top + 22) + 'px');
        $('#ckTongCTHD').css('left', (elm.offset().left - 220) + 'px');
    }

    self.editChietKhauTong_CTHD = function () {
        const elm = $(event.currentTarget);
        let thisVal = elm.val();
        const idRandomHD = self.HoaDons().IDRandom();
        const loaiHD = self.HoaDons().LoaiHoaDon();
        const isDoiTra = self.IsCTHD_DoiTra();
        const cacheName = isDoiTra ? lcListCTHD_DoiTra : lcListCTHD;

        let ctDoing = FindCTHD_isDoing(self.CTHD_Chosing(), isDoiTra);
        if (ctDoing !== null) {
            let idRandom = ctDoing.IDRandom;
            let cthd = localStorage.getItem(cacheName);
            cthd = JSON.parse(cthd);

            thisVal = formatNumberToFloat(thisVal);

            const thanhtienTruoCK = ctDoing.SoLuong * ctDoing.DonGia;
            ctDoing.ThanhTien = thanhtienTruoCK - thisVal;
            ctDoing.ThanhToan = ctDoing.ThanhTien;
            ctDoing.TienChietKhau = thisVal / ctDoing.SoLuong;
            ctDoing.PTChietKhau = 0;
            cthd = updateCTHDLe(cthd, ctDoing);
            localStorage.setItem(cacheName, JSON.stringify(cthd));

            if (loaiHD == 6) {
                UpdateHD_TraHang(idRandomHD);
                if (isDoiTra) {
                    UpdateCacheHDLe(idRandomHD, isDoiTra, 3);
                }
            }
            else {
                UpdateChietKhauNV_inCTHD(idRandom, isDoiTra, ctDoing);
                ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(self.CTHD_Chosing().ID_DonViQuiDoi, self.CTHD_Chosing().ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                UpdateCacheHDLe(idRandomHD, isDoiTra, 3);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(self.CTHD_Chosing().ID_DonViQuiDoi, idRandomHD);
                // update status change = true for HDDatHang dang XuLy
                if (loaiHD === 3) {
                    Update_StatusXuLy_ofHDDatHang(idRandomHD);
                }
            }

            BindHD_byIDRandom(idRandomHD);

            elm.val(formatNumber3Digit(thisVal));
            $('#lblckTong_' + idRandom).text(formatNumber3Digit(thisVal));
            if (isDoiTra) {
                $('button[id ^=btn_saleDT_' + idRandom).text(formatNumber3Digit(ctDoing.TienChietKhau));
                $('#sumTH_' + idRandom).val(formatNumber3Digit(ctDoing.ThanhToan));
            }
            else {
                $('#sum-f_' + idRandom).val(formatNumber3Digit(ctDoing.ThanhToan));
                $('button[id ^=btn_sale_' + idRandom).text(formatNumber3Digit(ctDoing.TienChietKhau));
            }
        }
    }
    self.showDivSale_CTHD = function (item) {
        var role = GetRoleChangeDiscountProduct(item);
        if (role === false) {
            ShowMessage_Danger('Không có quyền thay đổi chiết khấu hàng hóa');
            return false;
        }
        var idRandom = item.IDRandom;
        var quanLiTheoLo = item.QuanLyTheoLoHang;
        quanLiTheoLo = (quanLiTheoLo === null ? false : quanLiTheoLo);
        var $this = $('#btn_sale_' + idRandom);
        var ipGiam = $('#pri-g_' + idRandom);
        var iconGiam = $('#vnd_' + idRandom); // vnd or %
        var ptGiam = 0;
        var tienGiam = 0;
        var itemCTHD = FindCTHD_isDoing(item, false);
        if (itemCTHD !== null) {
            ptGiam = itemCTHD.PTChietKhau;
            tienGiam = itemCTHD.TienChietKhau;
        }
        if (ptGiam > 0 || tienGiam === 0) {
            ipGiam.val(formatNumber3Digit(ptGiam));
            iconGiam.addClass('active-re');
        }
        else {
            ipGiam.val(formatNumber3Digit(tienGiam));
            iconGiam.removeClass('active-re');
        }
        ipGiam.focus().select();
        $this.next(".callprice").toggle();
        $this.next(".callprice").find('input').focus();
    }
    function GetRoleChangeSaleHD() {
        var loaihd = GetLoaiHoaDon_ofHDopening();
        var role = false;
        switch (loaihd) {
            case 1:
                role = self.roleChangeSale_Invoice();
                break;
            case 2:
                role = self.roleChangeSale_Invoice();
                break;
            case 3:
                role = self.roleChangeSale_Order();
                break;
            case 6:
                role = self.roleChangeSale_Return();
                break;
            case 19:
                role = self.roleChangeSale_ServicePackage();
                break;
        }
        return role;
    }

    // giamgia
    function HD_UpdatePtramCK() {
        var lcHD = localStorage.getItem(lcListHD);
        if (lcHD !== null) {
            lcHD = JSON.parse(lcHD);
            for (let i = 0; i < lcHD.length; i++) {
                if (lcHD[i].IDRandom === self.HoaDons().IDRandom()) {
                    lcHD[i].TongChietKhau = self.HoaDons().TongChietKhau();
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lcHD));
        }
    }

    function HD_UpdatePtramChietKhauHhangHoa() {
        var lcHD = localStorage.getItem(lcListHD);
        if (lcHD !== null) {
            lcHD = JSON.parse(lcHD);
            for (let i = 0; i < lcHD.length; i++) {
                if (lcHD[i].IDRandom === self.HoaDons().IDRandom()) {
                    lcHD[i].PTChietKhauHH = self.HoaDons().PTChietKhauHH();
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lcHD));
        }
    }

    // chiet khau hanghoa 
    self.ShowDiv_ChietKhauHangHoa = function () {
        const obj = {
            LoaiHoaDon: self.HoaDons().LoaiHoaDon(),
            MaHoaDon: self.HoaDons().MaHoaDon(),
        }
        var role = GetRoleChangeDiscountProduct(obj);
        if (role === false) {
            return false;
        }
        var $thisNext = $(event.currentTarget).next();
        $thisNext.show();
        $thisNext.find('.gb').removeClass('gb');
        if (self.HoaDons().PTChietKhauHH() > 0 || self.HoaDons().TongGiamGiaHang() === 0) {
            $thisNext.find('.senter1').addClass("gb");
        }
        else {
            $thisNext.find('.vnd1').addClass("gb");
        }
        $(function () {
            $thisNext.children().eq(0).find('input').select().focus();
        })
    }

    self.ChietKhauHangHoa_ClickTaxVND = function () {
        var $this = $(event.currentTarget);
        $this.next().removeClass('gb');

        if (!$this.hasClass('gb')) {
            $this.addClass("gb");
        }
        if (self.HoaDons().TongGiamGiaHang() > 0) {
            if (self.HoaDons().PTChietKhauHH() > 0) {
                self.HoaDons().PTChietKhauHH(0);
            }
            HD_UpdatePtramChietKhauHhangHoa();
        }
        $(function () {
            $this.closest('div').find('input').select().focus();
        })
    }

    self.ChietKhauHangHoa_ClickTaxPtram = function () {
        var $this = $(event.currentTarget);
        $this.prev().removeClass('gb');
        if (!$this.hasClass('gb')) {
            $this.addClass("gb");
        }
        if (self.HoaDons().TongGiamGiaHang() > 0) {
            let ptCK = self.HoaDons().TongGiamGiaHang() / self.HoaDons().TongTienHangChuaCK() * 100;
            self.HoaDons().PTChietKhauHH(ptCK);
            HD_UpdatePtramChietKhauHhangHoa();
        }
        $(function () {
            $this.closest('div').find('input').select().focus();
        })
    }

    self.ChietKhauHangHoa_Edit = function () {
        var $this = $(event.currentTarget);
        var ptCK = self.HoaDons().PTChietKhauHH(); // HH00948
        var tongCKHang = 0;

        if ($this.val() === '') {
            ptCK = tongCKHang = 0;
        }
        else {
            if ($('#ckHang_Ptram').hasClass('gb')) {
                // %
                if (formatNumberToFloat($this.val()) > 100) {
                    ptCK = 100;
                    $this.val(100);
                }
                else {
                    ptCK = formatNumberToFloat($this.val());
                }
                tongCKHang = ptCK * self.HoaDons().TongTienHangChuaCK() / 100;
            }
            else {
                // vnd
                formatNumberObj($this);
                tongCKHang = formatNumberToFloat($this.val());
            }
        }
        self.HoaDons().TongGiamGiaHang(tongCKHang);
        self.HoaDons().PTChietKhauHH(ptCK);

        var idRandomHD = self.HoaDons().IDRandom();
        var lcHD = localStorage.getItem(lcListHD);
        if (lcHD !== null) {
            lcHD = JSON.parse(lcHD);
            for (let i = 0; i < lcHD.length; i++) {
                if (lcHD[i].IDRandom === idRandomHD) {
                    lcHD[i].PTChietKhauHH = ptCK;
                    lcHD[i].TongGiamGiaHang = tongCKHang;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lcHD));
        }
        var isDoiTra = self.HoaDons().LoaiHoaDon() === 6;
        Update_ChietKhau_forCTHD(idRandomHD, isDoiTra);
        UpdateCacheHDLe(idRandomHD, isDoiTra, 1);
        Update_StatusXuLy_ofHDDatHang(idRandomHD);
        BindHD_byIDRandom(idRandomHD);
        BindCTHD_byIDRandomHD(idRandomHD);
    }

    // only hide .arrow-left when click out
    $(document).mouseup(function () {
        $('.arrow-left').mouseup(function () {
            return false;// don't hide
        });
        $('.arrow-left').hide();
    });

    self.ShowDivSale_HD = function () {
        var role = GetRoleChangeSaleHD();
        if (role === false) {
            return false;
        }
        var $thisNext = $(event.currentTarget).next();
        $thisNext.show();
        $thisNext.find('.gb').removeClass('gb');
        if (self.HoaDons().TongChietKhau() > 0 || (self.HoaDons().TongChietKhau() === 0 && self.HoaDons().TongGiamGia() === 0)) {
            $thisNext.find('.senter1').addClass("gb");
        }
        else {
            $thisNext.find('.vnd1').addClass("gb");
        }
        $(function () {
            $thisNext.children().eq(0).find('input').select().focus();
        })
        self.GetlistGroupSale();
    }
    self.editSalePr = function () {
        var $this = $(event.currentTarget);
        var ptCK = self.HoaDons().TongChietKhau();
        var tongGiam = self.HoaDons().TongGiamGiaKM_HD();

        if ($this.val() === '') {
            ptCK = tongGiam = 0;
        }
        else {
            if ($('#hd_CKPtram').hasClass('gb')) {
                // %
                if (formatNumberToFloat($this.val()) > 100) {
                    ptCK = 100;
                    $this.val(100);
                }
                else {
                    ptCK = formatNumberToFloat($this.val());
                }
                tongGiam = ptCK * (formatNumberToFloat(self.HoaDons().TongTienHang()) + formatNumberToFloat(self.HoaDons().TongTienThue())) / 100;
            }
            else {
                // vnd
                ptCK = 0;
                formatNumberObj($this);
                tongGiam = formatNumberToFloat($this.val());
            }
        }
        self.HoaDons().TongGiamGia(tongGiam);
        self.HoaDons().TongGiamGiaKM_HD(tongGiam);
        self.HoaDons().TongChietKhau(ptCK);

        // update GiamGia for HD
        var idRandomHD = self.HoaDons().IDRandom();
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === self.HoaDons().IDRandom()) {
                    lstHD[i].TongGiamGia = tongGiam;
                    lstHD[i].TongGiamGiaKM_HD = tongGiam;
                    lstHD[i].TongChietKhau = ptCK;

                    // alway reset khuyenmai if nhap giamgia hoadon
                    lstHD[i].ID_KhuyenMai = null;
                    lstHD[i].PTGiam_KM = 0;
                    lstHD[i].DiemCong = 0;
                    lstHD[i].KhuyeMai_GiamGia = 0;
                    lstHD[i].IsOpeningKMaiHD = false;
                    lstHD[i].KhuyenMai_GhiChu = "";
                    itemHD = lstHD[i];
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD))
        }
        UpdateHD_aferGiamGia(idRandomHD);

        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        UpdateChietKhauHD_NhanVien(idRandomHD);
        BindHD_byIDRandom(idRandomHD);
        Update_StatusXuLy_ofHDDatHang(idRandomHD);
        SendDataBanHangToPos_byUser(idRandomHD, 1);
    }
    self.clickVNDPr = function () {
        var $this = $(event.currentTarget);
        $this.next().removeClass('gb');

        if (!$this.hasClass('gb')) {
            $this.addClass("gb");
        }
        if (self.HoaDons().TongTienHang() > 0) {
            if (self.HoaDons().TongChietKhau() > 0) {
                self.HoaDons().TongChietKhau(0);
            }
            HD_UpdatePtramCK();
        }
        $(function () {
            $this.closest('.arrow-left').find('input').select().focus();
        })
    }
    self.clickNoVNDPr = function () {
        var $this = $(event.currentTarget);
        $this.prev().removeClass('gb');

        if (!$this.hasClass('gb')) {
            $this.addClass("gb");
        }
        if (self.HoaDons().TongTienHang() > 0) {
            let ptCK = self.HoaDons().TongGiamGia() / self.HoaDons().TongTienHang() * 100;
            self.HoaDons().TongChietKhau(ptCK);
            HD_UpdatePtramCK();
        }
        $(function () {
            $this.closest('.arrow-left').find('input').select().focus();
        })
    }
    // VAT
    self.ShowDivTax_HD = function () {
        var $thisNext = $(event.currentTarget).next();
        $thisNext.show();
        $thisNext.find('.gb').removeClass('gb')
        if (self.HoaDons().PTThueHoaDon() > 0 || (self.HoaDons().PTThueHoaDon() === 0 && self.HoaDons().TongTienThue() === 0)) {
            $thisNext.find('.senter1').addClass("gb")
        }
        else {
            $thisNext.find('.vnd1').addClass("gb")
        }
        $(function () {
            $thisNext.find('input').select().focus();
        })
    }
    // VAT
    function HD_UpdatePtramThue() {
        var lcHD = localStorage.getItem(lcListHD);
        if (lcHD !== null) {
            lcHD = JSON.parse(lcHD);
            for (let i = 0; i < lcHD.length; i++) {
                if (lcHD[i].IDRandom === self.HoaDons().IDRandom()) {
                    lcHD[i].PTThueHoaDon = self.HoaDons().PTThueHoaDon();
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lcHD));
        }
    }
    self.clickNoVNDTax = function () {
        var $this = $(event.currentTarget);
        $this.prev().removeClass('gb');
        if (!$this.hasClass('gb')) {
            $this.addClass("gb");
        }
        if (self.HoaDons().TongTienHang() > 0) {
            let ptThue = self.HoaDons().TongTienThue() / (self.HoaDons().TongTienHang()) * 100;
            self.HoaDons().PTThueHoaDon(ptThue);
            HD_UpdatePtramThue();
        }
        $(function () {
            $this.closest('div').find('input').select().focus();
        })
    }
    self.clickVNDTax = function () {
        var $this = $(event.currentTarget);
        $this.next().removeClass('gb');

        if (!$this.hasClass('gb')) {
            $this.addClass("gb");
        }
        if (self.HoaDons().TongTienHang() > 0) {
            if (self.HoaDons().PTThueHoaDon() > 0) {
                self.HoaDons().PTThueHoaDon(0);
            }
            HD_UpdatePtramThue();
        }
        $(function () {
            $this.closest('div').find('input').select().focus();
        })
    }
    function Update_ChietKhau_forCTHD(idRandomHD, isDoiTra) {
        var cacheCTHD = lcListCTHD;
        if (isDoiTra) {
            cacheCTHD = lcListCTHD_DoiTra;
        }
        var ptCK = self.HoaDons().TongGiamGiaHang() / self.HoaDons().TongTienHangChuaCK() * 100;
        var ptCKHH = self.HoaDons().PTChietKhauHH();
        ptCKHH = ptCKHH > 0 ? ptCKHH : 0;
        var cthd = localStorage.getItem(cacheCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandomHD) {
                    if (cthd[i].ChatLieu !== '4') {
                        cthd[i].PTChietKhau = ptCKHH;
                        cthd[i].TienChietKhau = ptCK * cthd[i].GiaBan / 100;
                        if (cthd[i].PTThue > 0) {
                            cthd[i].TienThue = cthd[i].PTThue * (cthd[i].DonGia - cthd[i].TienChietKhau) / 100;
                        }
                        cthd[i].ThanhTien = cthd[i].SoLuong * (cthd[i].GiaBan - cthd[i].TienChietKhau);
                        cthd[i].ThanhToan = cthd[i].SoLuong * (cthd[i].GiaBan - cthd[i].TienChietKhau + cthd[i].TienThue);

                        // phidichvu: tinh theo thanhtien
                        if (cthd[i].LaPTPhiDichVu) {
                            cthd[i].TongPhiDichVu = Math.round(cthd[i].PhiDichVu * formatNumberToFloat(cthd[i].GiaBan) * cthd[i].SoLuong / 100);
                        }
                        else {
                            cthd[i].TongPhiDichVu = cthd[i].PhiDichVu * cthd[i].SoLuong;
                        }
                    }

                    for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                        if (cthd[i].DM_LoHang[j].ChatLieu !== '4') {
                            cthd[i].DM_LoHang[j].PTChietKhau = ptCKHH;
                            cthd[i].DM_LoHang[j].TienChietKhau = ptCK * cthd[i].DM_LoHang[j].GiaBan / 100;
                            if (cthd[i].DM_LoHang[j].PTThue > 0) {
                                cthd[i].DM_LoHang[j].TienThue = cthd[i].DM_LoHang[j].PTThue
                                    * (cthd[i].DM_LoHang[j].DonGia - cthd[i].DM_LoHang[j].TienChietKhau) / 100;
                            }
                            cthd[i].DM_LoHang[j].ThanhTien = cthd[i].DM_LoHang[j].SoLuong *
                                (cthd[i].DM_LoHang[j].GiaBan - cthd[i].DM_LoHang[j].TienChietKhau);
                            cthd[i].DM_LoHang[j].ThanhToan = cthd[i].DM_LoHang[j].SoLuong *
                                (cthd[i].DM_LoHang[j].GiaBan - cthd[i].DM_LoHang[j].TienChietKhau + cthd[i].DM_LoHang[j].TienThue);

                            if (cthd[i].DM_LoHang[j].LaPTPhiDichVu) {
                                cthd[i].DM_LoHang[j].TongPhiDichVu = Math.round(cthd[i].DM_LoHang[j].PhiDichVu * cthd[i].DM_LoHang[j].GiaBan * cthd[i].DM_LoHang[j].SoLuong / 100);
                            }
                            else {
                                cthd[i].DM_LoHang[j].TongPhiDichVu = cthd[i].DM_LoHang[j].PhiDichVu * cthd[i].DM_LoHang[j].SoLuong;
                            }
                        }
                    }
                    for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                        if (cthd[i].HangCungLoais[j].ChatLieu !== '4') {
                            cthd[i].HangCungLoais[j].PTChietKhau = ptCKHH;
                            cthd[i].HangCungLoais[j].TienChietKhau = ptCK * cthd[i].HangCungLoais[j].GiaBan / 100;
                            if (cthd[i].HangCungLoais[j].PTThue > 0) {
                                cthd[i].HangCungLoais[j].TienThue = cthd[i].HangCungLoais[j].PTThue
                                    * (cthd[i].HangCungLoais[j].DonGia - cthd[i].HangCungLoais[j].TienChietKhau) / 100;
                            }
                            cthd[i].HangCungLoais[j].ThanhTien = cthd[i].HangCungLoais[j].SoLuong
                                * (cthd[i].HangCungLoais[j].GiaBan - cthd[i].HangCungLoais[j].TienChietKhau);
                            cthd[i].HangCungLoais[j].ThanhToan = cthd[i].HangCungLoais[j].SoLuong
                                * (cthd[i].HangCungLoais[j].GiaBan - cthd[i].HangCungLoais[j].TienChietKhau + cthd[i].HangCungLoais[j].TienThue);

                            if (cthd[i].HangCungLoais[j].LaPTPhiDichVu) {
                                cthd[i].HangCungLoais[j].TongPhiDichVu = Math.round(cthd[i].HangCungLoais[j].PhiDichVu * cthd[i].HangCungLoais[j].GiaBan * cthd[i].HangCungLoais[j].SoLuong / 100);
                            }
                            else {
                                cthd[i].HangCungLoais[j].TongPhiDichVu = cthd[i].HangCungLoais[j].PhiDichVu * cthd[i].HangCungLoais[j].SoLuong;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(cacheCTHD, JSON.stringify(cthd));

            // update again cknhanvien 
            for (var i = 0; i < cthd.length; i++) {
                let itFor = cthd[i];
                UpdateChietKhauNV_inCTHD(itFor.IDRandom, isDoiTra, itFor);

                for (let j = 0; j < itFor.DM_LoHang.length; j++) {
                    let forIn = itFor.DM_LoHang[j];
                    UpdateChietKhauNV_inCTHD(forIn.IDRandom, isDoiTra, forIn);
                }
                for (let j = 0; j < itFor.HangCungLoais.length; j++) {
                    let forIn = itFor.HangCungLoais[j];
                    UpdateChietKhauNV_inCTHD(forIn.IDRandom, isDoiTra, forIn);
                }

                for (let k = 0; k < cthd[i].ThanhPhanComBo.length; k++) {
                    Combo_UpdateChietKhauNV(itFor.IDRandom, cthd[i].ThanhPhanComBo[k].IDRandom, isDoiTra);
                }
            }
        }
    }

    self.editTax = function () {
        var $this = $(event.currentTarget);
        var ptThue = self.HoaDons().PTThueHoaDon();
        var tienThue = self.HoaDons().TongTienThue();
        var tiensauCK = self.HoaDons().TongTienHang();

        if ($this.val() === '') {
            ptThue = tienThue = 0;
        }
        else {
            if ($('#hd_TaxPtram').hasClass('gb')) {
                // %
                if (formatNumberToFloat($this.val()) > 100) {
                    ptThue = 100;
                    $this.val(100);
                }
                else {
                    ptThue = formatNumberToFloat($this.val());
                }
                tienThue = ptThue * tiensauCK / 100;
            }
            else {
                // vnd
                formatNumberObj($this);
                tienThue = formatNumberToFloat($this.val());
            }
        }
        self.HoaDons().TongTienThue(tienThue);
        self.HoaDons().PTThueHoaDon(ptThue);

        var idRandomHD = self.HoaDons().IDRandom();
        var lcHD = localStorage.getItem(lcListHD);
        if (lcHD !== null) {
            lcHD = JSON.parse(lcHD);
            for (let i = 0; i < lcHD.length; i++) {
                if (lcHD[i].IDRandom === idRandomHD) {
                    lcHD[i].PTThueHoaDon = ptThue;
                    lcHD[i].TongTienThue = tienThue;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lcHD));
        }
        var isDoiTra = self.HoaDons().LoaiHoaDon() === 6;
        UpdateCacheHDLe(idRandomHD, isDoiTra, 2);
        Update_TienThue_forCTHD(idRandomHD, self.NewProducts().length > 0)
        BindHD_byIDRandom(idRandomHD);
        SendDataBanHangToPos_byUser(idRandomHD, 1);
    }

    self.editTongChiPhi = function () {
        var $this = $(event.currentTarget);
        formatNumberObj($this);

        var idRandomHD = self.HoaDons().IDRandom();
        var lcHD = localStorage.getItem(lcListHD);
        if (lcHD !== null) {
            lcHD = JSON.parse(lcHD);
            for (let i = 0; i < lcHD.length; i++) {
                if (lcHD[i].IDRandom === idRandomHD) {
                    lcHD[i].TongChiPhi = formatNumberToFloat($this.val());
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lcHD));
        }

        UpdateCacheHDLe(idRandomHD, self.HoaDons().LoaiHoaDon() === 6);
        BindHD_byIDRandom(idRandomHD);
        SendDataBanHangToPos_byUser(idRandomHD, 1);
    }
    // end VAT
    self.editDaTra = function () {
        let $this = $(event.currentTarget);
        formatNumberObj($this);
        let gtri = formatNumberToFloat($this.val());

        let idRandom = self.HoaDons().IDRandom();
        var hd = localStorage.getItem(lcListHD);
        if (hd !== null) {
            hd = JSON.parse(hd);
            for (let i = 0; i < hd.length; i++) {
                if (hd[i].IDRandom === idRandom) {
                    let cantra = 0;
                    if (hd[i].LoaiHoaDon === 6) {
                        if (hd[i].TongTienMua === 0) {
                            // thanhtoan no HDCu
                            cantra = Math.abs(formatNumberToFloat(hd[i].PhaiThanhToanDB));
                        }
                        else {
                            // thanhtoan  noHDcu + hdmoi
                            cantra = formatNumberToFloat(hd[i].PhaiThanhToan);
                        }
                    }
                    else {
                        cantra = formatNumberToFloat(hd[i].PhaiThanhToan);
                    }
                    if (gtri > cantra) {
                        ShowMessage_Danger('Vui lòng không nhập quá số tiền cần thanh toán');
                        $this.val(formatNumber(cantra));
                        gtri = cantra;
                    }

                    hd[i].DaThanhToan = gtri;
                    hd[i].TienMat = gtri;
                    hd[i].TienGui = 0;
                    hd[i].TienATM = 0;
                    hd[i].TienThua = gtri - cantra;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(hd));
            $('#lblTienMat').text('(Tiền mặt)');
            UpdateChietKhauHD_NhanVien(idRandom);
            BindHD_byIDRandom(idRandom);
            SendDataBanHangToPos_byUser(idRandom, 1);
        }
        Update_StatusXuLy_ofHDDatHang(idRandom);
    }

    self.editHoanTraTamUng = function () {
        var hoantraObj = formatNumberObj($('#txtHoanTraTamUng'));
        var hoantra = formatNumberToFloat(hoantraObj);
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].MaHoaDon === _maHoaDon && (lstHD[i].NguoiTao === userLogin || lstHD[i].TrangThaiHD === 3)) {
                    lstHD[i].HoanTraTamUng = hoantra;
                    lstHD[i].DaTraKhach = hoantra;
                    lstHD[i].TienMat = hoantra; // hoantra = tienmat
                    lstHD[i].TienATM = 0;
                    lstHD[i].TienGui = 0;
                    lstHD[i].TienTheGiaTri = 0;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }

    // bind infor HoaDon knockout by IDRandom
    function BindHD_byIDRandom(idRandom) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemHD = $.grep(lstHD, function (x) {
                return x.IDRandom === idRandom;
            })
            if (itemHD.length > 0) {
                if (itemHD[0].TienGui === 0 && itemHD[0].TienMat === 0
                    && itemHD[0].TienATM === 0 && itemHD[0].TienTheGiaTri === 0) {
                    itemHD[0].TienMat = itemHD[0].LoaiHoaDon === 3 ? 0 : itemHD[0].PhaiThanhToan;
                }
                // Nếu còn số dư trong thẻ, và trước đó chưa agree
                self.HoaDons().SetData(itemHD[0]);
                if (itemHD[0].StatusOffline) {
                    $('input, select').attr('disabled', 'disabled');
                }
                else {
                    $('input, select').removeAttr('disabled');
                }
            }
            else {
                self.HoaDons(new FormModel_NewHoaDon());
                $('input, select').removeAttr('disabled');
            }
        } else {
            $('input, select').removeAttr('disabled');
        }
        Enable_DisableNgayLapHD();
    }
    shortcut.add("F1", function () {
        var tabSoDo = $('#tabSoDo')
        if (tabSoDo.css('display') !== 'none') {
            $('#banhangsodo, #banhanghanghoa').removeClass('active');
            $('#tabSoDo li').removeClass('active');
            $('#tabSoDo li:eq(0)').addClass('active');
            $('#banhangsodo').addClass('active');
            $('#banhangsodo').show();
            $('#divListHD').hide();
            self.ClickTab_PhongBan(false)// bind infor time in list PhongBan
        }
    });
    shortcut.add("F2", function () {
        var tabSoDo = $('#tabSoDo')
        if (tabSoDo.css('display') !== 'none') {
            $('#banhangsodo, #banhanghanghoa').removeClass('active');
            $('#tabSoDo li').removeClass('active');
            $('#tabSoDo li:eq(1)').addClass('active');
            $('#banhanghanghoa').addClass('active');
            $('#banhangsodo').hide();
            $('#divListHD').show();
        }
    });
    shortcut.add("F3", function () {
        $('#txtSearchHH').focus();
    });
    shortcut.add("F4", function () {
        $('#txtSearchKH').focus();
    });
    shortcut.add("F7", function () {
        self.ShowDivTax_HD();
    });
    shortcut.add('F8', function () {
        self.ShowDivSale_HD();
    });
    function Reset_SettingPrint() {
        self.setPrintDraft(false);
        self.setPrintPay(true);
        self.setPrintTicket(false);
        self.setLuuTam(false);
        self.numberOfPrint(1);
    }
    function Check_PrintTicket(itemHD) {
        self.setPrintTicket(false);
        // neu HD tao tu HD dat hang --> printTichet= false
        //if (itemHD.TrangThaiHD === 2) {
        if (itemHD.ID_HoaDon !== null) {
            self.setPrintTicket(false);
        }
        else {
            var lcSetPrint = localStorage.getItem(lcSetPrintConst);
            if (lcSetPrint !== null) {
                lcSetPrint = JSON.parse(lcSetPrint);
                for (let i = 0; i < lcSetPrint.length; i++) {
                    var itemSet = lcSetPrint[i];
                    if (itemSet.LoaiHoaDon === itemHD.LoaiHoaDon && itemSet.ID_DonVi === id_DonVi) {
                        self.setPrintTicket(itemSet.PrintTicket);
                        break;
                    }
                }
            }
        }
        return self.setPrintTicket();
    }
    // maChungTu (DM_LoaiChungTu)
    self.InHoaDon = function (maChungTu, isPrintDraft) {
        var idDiv = '';
        var loaiHoaDon = 1;
        switch (maChungTu) {
            case 'HDBL':
                idDiv = '#content-print-BanLe';
                break;
            case 'DH':
                idDiv = '#content-print-DatHang';
                loaiHoaDon = 3;
                break;
            case 'TH':
                idDiv = '#content-print-TraHang';
                loaiHoaDon = 6;
                break;
            case 'DTH':
                idDiv = '#content-print-DoiTraHang';
                loaiHoaDon = 17;
                break;
            case 'SQPT':
                idDiv = '#content-print-PhieuThu';
                loaiHoaDon = 12;
                break;
            case 'GDV':
                idDiv = '#content-print-GoiDV';
                loaiHoaDon = 19;
                break;
        }
        // if not reset, get value old
        Reset_SettingPrint();
        var idTemPrint = $('#ddlTempPrint').val();
        // if set print when pay --> print
        var lcSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lcSetPrint !== null) {
            lcSetPrint = JSON.parse(lcSetPrint);
            for (let i = 0; i < lcSetPrint.length; i++) {
                var itemSet = lcSetPrint[i];
                if (itemSet.LoaiHoaDon === loaiHoaDon && itemSet.ID_DonVi === id_DonVi) {
                    self.setPrintDraft(itemSet.PrintDraft);
                    self.setPrintPay(itemSet.PrintPay);
                    self.setPrintTicket(itemSet.PrintTicket);
                    self.numberOfPrint(formatNumberToFloat(itemSet.NumberOfPrint));
                    idTemPrint = itemSet.TempPrint;
                    break;
                }
            }
        }

        var print = false;
        // if is PrintDraft --> cho phep in
        if (isPrintDraft === true || loaiHoaDon === 12) {
            print = true;
        }
        else {
            if (self.setPrintTicket() === true) {
                print = true;
            }
            else {
                print = self.setPrintPay();
            }
        }
        if (print) {
            var itemMauIn = [];
            if (commonStatisJs.CheckNull(idTemPrint) || idTemPrint === 0) {
                // neu chua cai dat mau in --> get mau mac dinh
                itemMauIn = $.grep(self.DM_MauIn(), function (x) {
                    return x.MaLoaiChungTu === maChungTu && x.LaMacDinh;
                });
            }
            else {
                // get temp by ID is selected
                itemMauIn = $.grep(self.DM_MauIn(), function (x) {
                    return x.ID === idTemPrint && x.MaLoaiChungTu === maChungTu;
                });
                // Vì khi load lần đầu, đã load mẫu mặc định của hóa đơn,
                // nên bị lấy lại id mẫu in cũ của hóa đơn
                // vì vậy phải check lại id mẫu in và mã chứng từ
                if (itemMauIn.length === 0) {
                    itemMauIn = $.grep(self.DM_MauIn(), function (x) {
                        return x.MaLoaiChungTu === maChungTu && x.LaMacDinh;
                    });
                }
            }

            HDPrint_SumDichVuHangHoa(self.CTHoaDonPrint());

            var url = '';
            if (itemMauIn.length > 0) {
                url = '/api/DanhMuc/ThietLapApi/GetContentFIlePrint?idMauIn=' + itemMauIn[0].ID;
            }
            else {
                url = '/api/DanhMuc/ThietLapApi/GetContentFIlePrintTypeChungTu?maChungTu=' + maChungTu + '&idDonVi=' + id_DonVi;
            }
            ajaxHelper(url, 'GET').done(function (result) {
                let temp = result;
                temp = temp.replace("{GiaBan}", "<span data-bind=\"text: formatNumber3Digit(GiaBan)\"></span>");
                let data = ''.concat('<script src="/Scripts/knockout-3.4.2.js"></script>');
                data = data.concat("<script > var item1= ", JSON.stringify(self.CTHoaDonPrint()), ';',
                    " var item2= ", JSON.stringify(self.CTHoaDonPrintMH()), ' ;',
                    " var item3= ", JSON.stringify(self.InforHDprintf()), ' ;',
                    " var item4= [] ;",
                    " var item5= [] ;",
                    " </script>");
                data = data.concat(" <script type='text/javascript' src='/Scripts/Thietlap/MauInTeamplate.js'></script>");
                PrintExtraReport(temp, data, self.numberOfPrint());
            }).fail(function () {
                if (itemMauIn.length > 0) {
                    var dulieuMauIn = ReplaceString_toData(itemMauIn[0].DuLieuMauIn);
                    var dulieuMauIn1 = ''.concat('<script src="/Scripts/knockout-3.4.2.js"></script>');
                    dulieuMauIn1 = dulieuMauIn1.concat("<script > var item1=" + JSON.stringify(self.CTHoaDonPrint())
                        + "; var item2=" + JSON.stringify(self.CTHoaDonPrintMH())
                        + "; var item3=" + JSON.stringify(self.InforHDprintf()) + "; </script>");
                    dulieuMauIn1 = dulieuMauIn1.concat('<script type="text/javascript"> ',
                        "function ConvertMinutes_ToHourMinutes(sophut) { ",
                        " sophut = parseFloat(sophut); ",
                        " sophut = Math.round(sophut * Math.pow(10, 2)) / Math.pow(10, 2); ",
                        " var lastone = sophut.toString().split('').pop(); ",
                        " if (lastone !== '.') {",
                        " sophut = parseFloat(sophut);",
                        " }",
                        " var div = sophut / 60;",
                        " var hours = Math.floor(div);",
                        " var minutes = parseFloat((div - hours) * 60);",
                        " if (hours > 0) {",
                        " return hours.toString().concat(' giờ ', minutes, ' phút');",
                        " }",
                        " return minutes.toString().concat(' phút'); } </script>"
                    );
                    // tránh lỗi chưa load được file MauInTeamplate.js từ server (declare at here)
                    dulieuMauIn1 = dulieuMauIn1.concat('<script type="text/javascript"> var dataMauIn = function () {' +
                        'var self = this;' +
                        'self.CTHoaDonPrint = ko.observableArray(item1);' +
                        'self.CTHoaDonPrintMH = ko.observableArray(item2);' +
                        'self.InforHDprintf = ko.observable(item3);' +
                        '};' +
                        'ko.applyBindings(new dataMauIn()) </script> ');
                    PrintExtraReport(dulieuMauIn, dulieuMauIn1, self.numberOfPrint());
                }
                else {
                    self.InHoaDon_TextFile(idDiv);
                }
            })
        }
    }

    function HDPrint_SumDichVuHangHoa(cthd) {
        var arrHH = cthd.filter(x => x.LaHangHoa);
        var arrDV = cthd.filter(x => x.LaHangHoa === false);

        var tongDV = 0, tongDV_truocVAT = 0, tongDV_truocCK = 0;
        var tongHH = 0, tongHH_truocVAT = 0, tongHH_truocCK = 0;
        var DV_tongthue = 0, DV_tongCK = 0, DV_tongSL = 0;
        var HH_tongthue = 0, HH_tongCK = 0, HH_tongSL = 0;
        for (let k = 0; k < arrHH.length; k++) {
            let itFor = arrHH[k];
            let soluong = formatNumberToFloat(itFor.SoLuong);
            HH_tongSL += soluong;
            tongHH += formatNumberToFloat(itFor.ThanhToan);
            tongHH_truocVAT += formatNumberToFloat(itFor.ThanhTien);
            tongHH_truocCK += soluong * formatNumberToFloat(itFor.DonGia);
            HH_tongthue += soluong * formatNumberToFloat(itFor.TienThue);
            HH_tongCK += soluong * formatNumberToFloat(itFor.TienChietKhau);
        }
        for (let k = 0; k < arrDV.length; k++) {
            let itFor = arrDV[k];
            let soluong = formatNumberToFloat(itFor.SoLuong);
            DV_tongSL += soluong;
            tongDV += formatNumberToFloat(itFor.ThanhToan);
            tongDV_truocVAT += formatNumberToFloat(itFor.ThanhTien);
            tongDV_truocCK += soluong * formatNumberToFloat(itFor.DonGia);
            DV_tongthue += soluong * formatNumberToFloat(itFor.TienThue);
            DV_tongCK += soluong * formatNumberToFloat(itFor.TienChietKhau);
        }

        self.InforHDprintf().TongSL_PhuTung = HH_tongSL;
        self.InforHDprintf().TongTienPhuTung = formatNumber3Digit(tongHH);
        self.InforHDprintf().TongThue_PhuTung = formatNumber3Digit(HH_tongthue);
        self.InforHDprintf().TongCK_PhuTung = formatNumber3Digit(HH_tongCK);
        self.InforHDprintf().TongTienPhuTung_TruocVAT = formatNumber3Digit(tongHH_truocVAT);
        self.InforHDprintf().TongTienPhuTung_TruocCK = formatNumber3Digit(tongHH_truocCK);

        self.InforHDprintf().TongSL_DichVu = DV_tongSL;
        self.InforHDprintf().TongTienDichVu = formatNumber3Digit(tongDV);
        self.InforHDprintf().TongThue_DichVu = formatNumber3Digit(DV_tongthue);
        self.InforHDprintf().TongCK_DichVu = formatNumber3Digit(DV_tongCK);
        self.InforHDprintf().TongTienDichVu_TruocVAT = formatNumber3Digit(tongDV_truocVAT);
        self.InforHDprintf().TongTienDichVu_TruocCK = formatNumber3Digit(tongDV_truocCK);
    }

    self.showpopuptrahangHD = function () {
        vmTraHang.ID_DonVi = id_DonVi;
        vmTraHang.LoaiNganhNghe = self.LoaiNganhNghe();
        if (!commonStatisJs.CheckNull(self.HoaDons().MaHoaDon()) && self.HoaDons().MaHoaDon().indexOf('DV') > -1) {
            vmTraHang.LoaiHoaDon = 19;
        }
        else {
            vmTraHang.LoaiHoaDon = 1;
        }
        let cus = self.ChiTietDoiTuong();
        let tenDoiTuong = '';
        if (cus !== null && cus.length > 0) {
            tenDoiTuong = cus[0].TenDoiTuong;
        }
        vmTraHang.showModal(tenDoiTuong);
    }
    self.showPopupBaoHanh = function () {
        let cus = self.ChiTietDoiTuong();
        let obj = {};
        if (cus !== null && cus.length > 0) {
            obj = {
                ID: cus[0].ID,
                MaDoiTuong: cus[0].MaDoiTuong,
                TenDoiTuong: cus[0].TenDoiTuong,
                DienThoai: cus[0].DienThoai,
            };
        }
        vmNhatKyGiaoDichChiTiet.showModal(obj);
    }

    self.showModalAnhKH = function () {
        if (self.HangHoaAfterAdds().length > 0) {
            vmUpAnhHoaDon.showModalInsert();
        }
        else {
            ShowMessage_Danger("Không thể chọn ảnh khi không có chi tiết hóa đơn. Vui lòng thử lại.");
        }
    }

    self.HideShow_ListBangGia = function () {
        // hide lst NhanVien if is opening
        $(".select-user1").hide();
        var $this = $('#divBangGia');
        var thisChild = $this.find(".select-user2");
        // show Lst BangGia if not HD offline or TraHang from HD
        var check = CheckHDOffline_orTraHangfromHD();
        if (check === 0) {
            if (thisChild.css('display') === 'none') {
                thisChild.show();
            }
            else {
                thisChild.hide();
            }
            $this.find("font i").toggle();
        }
    }
    // use when click show list BangGia, NhanVien, ChiNhanh
    function CheckHDOffline_orTraHangfromHD() {
        var lstHD = localStorage.getItem(lcListHD);
        // 1.HD offline, 2.TraHang from HD
        // 0.Cac truong hop con lai
        var check = 0;
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            if (_maHoaDon === '') {
                _maHoaDon = $('.bill-bxslide li.using font').text();
            }
            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            // if HD offline OR TraHang from HD
            if (itemHD.length > 0) {
                if (itemHD[0].StatusOffline) {
                    check = 1;
                }
                else {
                    if (itemHD[0].LoaiHoaDon === 6 && itemHD[0].ID_HoaDon !== null) {
                        check = 2;
                    }
                }
            }
        }
        return check;
    }
    $('#vmTraHang').on('hidden.bs.modal', function () {
        if (vmTraHang.saveOK) {
            if (vmTraHang.isTraNhanh) {
                newModelBanLe.TraNhanh();
            }
            else {
                newModelBanLe.clickChonTraHang();
            }
        }
    })

    $('#vmNhatKyGiaoDichChiTiet').on('hidden.bs.modal', function () {
        if (vmNhatKyGiaoDichChiTiet.saveOK) {
            let hd = localStorage.getItem(lcListHD);
            if (hd !== null) {
                hd = JSON.parse(hd);
            }
            else {
                hd = [];
            }
            let cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
            }
            else {
                cthd = [];
            }
            // find hoadon baohanh by iddoituong
            let itemEx = $.grep(hd, function (x) {
                return x.LoaiHoaDon === 2 && x.ID_DoiTuong === vmNhatKyGiaoDichChiTiet.cusChosing.ID;
            });

            let idRandomHD = '';
            if (itemEx.length === 0) {
                let max = GetMax_MaHoaDon(2, hd);
                _maHoaDon = nameHD_BaoHanh + (max + 1);
                let newObj = newHoaDon(_maHoaDon, 2);
                newObj.ID_DoiTuong = vmNhatKyGiaoDichChiTiet.cusChosing.ID;
                hd.push(newObj);
                localStorage.setItem(lcListHD, JSON.stringify(hd));
                idRandomHD = newObj.IDRandom;
                itemEx = newObj;
            }
            else {
                idRandomHD = itemEx[0].IDRandom;
                itemEx = itemEx[0];
                _maHoaDon = itemEx.MaHoaDon;
            }

            GetInforKhachHangFromDB_ByID(itemEx.ID_DoiTuong);

            for (let i = 0; i < vmNhatKyGiaoDichChiTiet.ListItemChosed.length; i++) {
                let itFor = vmNhatKyGiaoDichChiTiet.ListItemChosed[i];
                itFor.LoaiBaoHanh = itFor.LoaiThoiGianBH;
                itFor.SoLuong = itFor.SoLuongMua;
                itFor.GiaBan = 0;
                itFor.DonGia = 0;
                itFor.PTChietKhau = 0;
                itFor.TienChietKhau = 0;
                itFor.PTThue = 0;
                itFor.TienThue = 0;
                itFor.ThanhTien = 0;
                itFor.ThanhToan = 0;
                let obj = newHangHoa(itFor, itemEx);
                cthd.push(obj);
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));

            UpdateSoThuTu_CTHD_DichVu(false, idRandomHD);
            Caculator_AmountProduct();
            UpdateAgain_ListDVT_forCTHD(false, idRandomHD);

            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandomHD) {
                    UpdateChietKhauNV_inCTHD(cthd[i].IDRandom, false, cthd[i]);
                    if (cthd[i].ThanhPhanComBo.length > 0) {
                        ChangeSoLuongParent_UpdateCombo(cthd[i].IDRandom, cthd[i].SoLuong, false);
                    }
                    UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, cthd[i].IDRandom, cthd[i].SoLuong, false);
                }
            }

            UpdateCacheHDLe(idRandomHD, false);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            BindHD_byIDRandom(idRandomHD);
            BindCTHD_byIDRandomHD(idRandomHD);
            GetCurrentPage_byMaHoaDon(_maHoaDon);// used to bind tab list hoadon
        }
    })

    self.clickChonTraHang = function () {
        ClearTextSearch();

        let item = {};
        if (vmTraHang.ListItemChosed.length > 0) {
            item = vmTraHang.ListItemChosed[0];
        }
        // check Thoi gian tra hang sau khi mua hang
        if (self.ThietLap().GioiHanThoiGianTraHang) {
            if (self.ThietLap_TraHang().length > 0) {
                var soNgay = self.ThietLap_TraHang()[0].SoNgayGioiHan;
                var dtNow = new Date(moment(new Date()).format('YYYY-MM-DD'));
                var dtNgayLapHDGoc = new Date(moment(item.NgayLapHoaDon).format('YYYY-MM-DD'));
                // get milliseconds betwwen 2 days
                var diff = new Date(dtNow - dtNgayLapHDGoc);
                // get days
                var days = diff / 1000 / 60 / 60 / 24;
                // nếu trả hàng quá số ngày cho phép
                if (soNgay < days) {
                    if (self.ThietLap_TraHang().ChoPhepTraHang) {
                        // show warning, but vẫn cho trả hàng
                        ShowMessage_Danger('Hóa đơn đã quá thời gian trả hàng, nhưng vẫn cho phép trả nếu bạn muốn');
                    }
                    else {
                        // không cho trả
                        ShowMessage_Danger('Hóa đơn chỉ được đổi trả trong vòng ' + soNgay + ' ngày');
                        return;
                    }
                }
            }
        }
        $('input, select').removeAttr('disabled');
        self.DateHDDefault(moment(serverTime).format('DD/MM/YYYY'));
        self.TimeHDDefault(moment(serverTime).format('HH:mm'));
        // if is opening TraHang of HD --> not add
        var isOpening = false;
        for (let i = 0; i < self.PhongBanSelected().length; i++) {
            if (self.PhongBanSelected()[i].LoaiHoaDon === 6) {
                let itemFor = self.PhongBanSelected()[i];
                if (itemFor.MaHoaDonTraHang === item.MaHoaDon) {
                    _maHoaDon = itemFor.MaHoaDon;
                    isOpening = true;
                    break;
                }
            }
        }
        var nameMaHD = nameHD_TraHang;
        var isTraGoiDV = false;
        if (item.LoaiHoaDon === 19) {
            nameMaHD = 'Trả gói DV ';
            isTraGoiDV = true;
        }
        if (!isOpening) {
            var lstHDLe = localStorage.getItem(lcListHD);
            if (lstHDLe !== null) {
                lstHDLe = JSON.parse(lstHDLe);
                max = GetMax_MaHoaDon(6, lstHDLe);
            }
            else {
                lstHDLe = [];
                var newObjFirst = newHoaDon(nameHD_InsertBH + '1');
                lstHDLe.push(newObjFirst);
                max = 0;
            }
            _maHoaDon = nameMaHD + (max + 1);
            localStorage.setItem(lcMaHD, _maHoaDon);
            if (item.ID_BangGia === null) {
                item.ID_BangGia = const_GuidEmpty;
            }
            var objNew = newHoaDonTraHang(item, nameMaHD + (max + 1));
            objNew.IsTraGDV = isTraGoiDV;
            lstHDLe.push(objNew);
            localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));
            GetCurrentPage_byMaHoaDon(_maHoaDon)
            // add in cache CTHD
            var lstCTHD = localStorage.getItem(lcListCTHD);
            if (lstCTHD === null || lstCTHD.length === 0) {
                lstCTHD = [];
            }
            else {
                lstCTHD = JSON.parse(lstCTHD);
            }

            // order by SoThuTu ASC --> group Hang Hoa by LoHang
            var cthdDB = vmTraHang.ListItemChosed.sort(function (a, b) {
                var x = a.SoThuTu,
                    y = b.SoThuTu;
                return x < y ? -1 : x > y ? 1 : 0;
            });

            // neu combo --> chi get TP con (bo)
            //var cthd = [];
            //for (let i = 0; i < cthdDB.length; i++) {
            //    if (cthdDB[i].ID === cthdDB[i].ID_ParentCombo) {
            //        for (let j = 0; j < cthdDB[i].ThanhPhanComBo.length; j++) {
            //            cthd.push(cthdDB[i].ThanhPhanComBo[j]);
            //        }
            //    }
            //    else {
            //        cthd.push(cthdDB[i]);
            //    }
            //}

            var arrIDQuiDoi = [];
            var cthdLoHang = [];
            // get chi tiet HoaDon with MHD = Hoa don tra hang
            for (let i = 0; i < cthdDB.length; i++) {
                let cthd = $.extend({}, true, cthdDB[i]);
                cthd.ID_HoaDon = item.ID;
                cthd.MaHoaDon = _maHoaDon;
                cthd.IDRandomHD = objNew.IDRandom;
                cthd.LoaiHoaDon = 6;
                cthd.SoLuongDaMua = cthd.SoLuongConLai;
                cthd.SoLuong = 0;
                cthd.ThanhTien = 0;
                cthd.DVTinhGiam = "%";
                cthd.PTChietKhau = 0;
                cthd.TienChietKhau = 0;
                cthd.GiaBan = cthd.DonGia - cthd.GiamGia;
                cthd.DonGia = cthd.GiaBan; // change DonGia = GiaBan
                cthd.CssWarning = true;
                cthd.ThanhPhan_DinhLuong = [];

                let quanlytheolo = cthd.QuanLyTheoLoHang;
                cthd.QuanLyTheoLoHang = quanlytheolo;
                cthd.DM_LoHang = [];
                cthd.LotParent = quanlytheolo;
                //cthd.ID_ChiTietGoiDV = cthd.ID_ChiTietGoiDV; // luu de khong tinh TonKho khi TraGoi (phan biet qua ID_ChiTietGoiDV)
                cthd.ChatLieu = '1';// tra HD
                if (isTraGoiDV) {
                    cthd.ChatLieu = '2'; // tra goidv
                }

                let lotSX = GetNgaySX_NgayHH(cthd);
                cthd.NgaySanXuat = lotSX.NgaySanXuat;
                cthd.NgayHetHan = lotSX.NgayHetHan;

                cthd = SetDefaultPropertierCTHD(cthd);
                cthd = AssignThanhPhanComBo_toCTHD(cthd);

                // delete key ID, ID_HoaDon ==> save not error
                cthd['ID'];

                // find in cthdLoHang with same ID_QuiDoi, TangKem !== this TagKem 
                var itemCT_before = $.grep(cthdLoHang, function (x) {
                    return x.ID_DonViQuiDoi === cthd.ID_DonViQuiDoi && x.TangKem !== cthd.TangKem;
                })
                // check exist in cthdLoHang
                // if HangTang: add into CTHD 1 row
                if ($.inArray(cthd.ID_DonViQuiDoi, arrIDQuiDoi) === -1 || itemCT_before.length > 0) {
                    arrIDQuiDoi.unshift(cthd.ID_DonViQuiDoi);
                    cthd.SoThuTu = arrIDQuiDoi.length;
                    cthd.IDRandom = CreateIDRandom('RandomCTHD_');

                    if (quanlytheolo) {
                        let objLot = $.extend({}, cthd);
                        objLot.HangCungLoais = [];
                        objLot.DM_LoHang = [];
                        cthd.DM_LoHang.push(objLot);
                    }
                    cthdLoHang.unshift(cthd);
                }
                else {
                    // find in cthdLoHang with same ID_QuiDoi
                    for (let j = 0; j < cthdLoHang.length; j++) {
                        if (cthdLoHang[j].ID_DonViQuiDoi === cthd.ID_DonViQuiDoi) {
                            if (quanlytheolo) {
                                let objLot = $.extend({}, cthd);
                                objLot.IDRandom = CreateIDRandom('RandomCT_');
                                objLot.HangCungLoais = [];
                                objLot.DM_LoHang = [];
                                objLot.LotParent = false;
                                cthdLoHang[j].DM_LoHang.push(objLot);
                            }
                            else {
                                cthd.IDRandom = CreateIDRandom('RandomCT_');
                                cthd.LaConCungLoai = true;
                                cthdLoHang[j].HangCungLoais.push(cthd);
                            }
                            break;
                        }
                    }
                }
            }
            // push in cache CTHD (xu li nhieu CT cung luc)
            for (let i = 0; i < cthdLoHang.length; i++) {
                lstCTHD.push(cthdLoHang[i]);
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
            // set cache CTTraHang --> check when add HangHoa
            var cacheCTTH = localStorage.getItem(lcCTHDTraHang_fromHD);
            if (cacheCTTH !== null) {
                cacheCTTH = JSON.parse(cacheCTTH);
                for (let i = 0; i < cthdLoHang.length; i++) {
                    cacheCTTH.push(cthdLoHang[i]);
                }
            }
            else {
                // because item.BH_HoaDon_ChiTiet is a array
                cacheCTTH = cthdLoHang;
            }
            localStorage.setItem(lcCTHDTraHang_fromHD, JSON.stringify(cacheCTTH));
            var arrCTHD = $.grep(lstCTHD, function (item) {
                return item.IDRandomHD === objNew.IDRandom;
            });
            self.HangHoaAfterAdds(arrCTHD);
            self.NewProducts([]);
            GetInForCustomer_byID(item.ID_DoiTuong);
            self.SetNhanVien(item.ID_NhanVien);
            self.SetBangGia(item.ID_BangGia);
            self.SetChiNhanh(item.ID_DonVi);
            self.HoaDons().SetData(objNew);
            self.PhongBanSelected.push(objNew);
            ShowTraHang();
            HideMuaHang();
        }
        else {
            // Find HD Tra Hang and active
            ShowTraHang();
            let hd = localStorage.getItem(lcListHD);
            hd = JSON.parse(hd);
            let itemChose = GetHDOpening_byMaHoaDon(_maHoaDon, hd);
            GetInForCustomer_byID(itemChose[0].ID_DoiTuong);
            self.SetNhanVien(itemChose[0].ID_NhanVien);
            self.SetChiNhanh(itemChose[0].ID_DonVi);
            self.SetBangGia(itemChose[0].ID_BangGia);
            BindCTHD_byIDRandomHD(itemChose[0].IDRandom);
            self.HoaDons().SetData(itemChose[0]);

            var arrCTHD_TH = [];
            var lstCTHD_TraHang = localStorage.getItem(lcListCTHD_DoiTra);
            if (lstCTHD_TraHang !== null) {
                lstCTHD_TraHang = JSON.parse(lstCTHD_TraHang);
                arrCTHD_TH = $.grep(lstCTHD_TraHang, function (item) {
                    return item.IDRandomHD === itemChose[0].IDRandom;
                });
                if (arrCTHD_TH.length > 0) {
                    ShowMuaHang();
                }
                else {
                    HideMuaHang();
                }
            }
            else {
                HideMuaHang();
            }
            GetCurrentPage_byMaHoaDon(_maHoaDon);
        }

        Call_6Func();
        ActiveTab_SoDoPhong(false);
        SetBorder_LotEnd_CTHD();
        DemSoLanDoiTra_byID();
        // nếu HDMua TT= thẻ gtrị, get số tiền còn lại sau khi trả từ thẻ gtrị
        $('#lblTienMat_THKM').text('(Tiền mặt)');
        $('#lblTienMat_TH').text('(Tiền mặt)');
    }
    shortcut.add('ESC', function (item) {
        $('#txtDaThanhToan').select();
    });

    $('#btnDongBoHoa').click(function () {
        self.DongBoHoa();
    });
    function ShowTraHang() {
        $("#showHH_m").hide();
        $("#showTH_m").show();
        $("#CTHDView").removeClass("height99");
        $(".btn-customer-fucntion").addClass("pos-top5");
        $('#divTraHang').show();
    }
    function HideTraHang() {
        $("#showHH_m").show();
        $("#showTH_m").hide();
        $(".btn-customer-fucntion").removeClass("pos-top5");
        /*sửa lỗi z-index( co giãn view trả hàng  và mua hàng*/
        if ($('#HangHoaView').hasClass("sli-gos")) {
            $("#CTHDView").addClass("height99");
        } else {
            $("#CTHDView").removeClass("height99");
        }
        //$("#CTHDView").removeClass("bill-listchoose");
        $('#divTraHang').hide();
        $('.delivery').css('display', 'none');
    }
    function ShowMuaHang() {
        /*sửa lỗi z-index( co giãn view trả hàng  và mua hàng*/
        if ($('#HangHoaView').hasClass("sli-gos")) {
            $("#CTHDView").addClass("height99");
        } else {
            $("#CTHDView").removeClass("height99");
        }
        $(".slider").show();
        $('#HangHoaView').show();
        $('#divMuaHang').show();
    }
    function HideMuaHang() {
        $(".slider").hide();
        $('#HangHoaView').hide();
        $('#divMuaHang').hide();
    }

    function ShowDivDefault() {
        $('#CTHDView').show();
        $('#divGhiChu,#divMenuRight').show();// khong can show divListHD, vi neu view Sodo Phong, thi div nay se bi hien thi
    }

    // get list chi nhanh
    function GetInforChiNhanh() {
        ajaxHelper('/api/DM_DonViAPI/' + 'GetListDonVi1', 'GET').done(function (data) {
            if (data !== null) {
                self.ChiNhanhs(data);
                $('#divChiNhanh0').show();
                vmThemMoiNhomKhach.listData.ChiNhanhs = data;
                vmThanhToan.listData.ChiNhanhs = data;
                WriteData_Dexie(db.DM_DonVi, data);
            }
        });
    }
    // Tra Hang
    function UpdateHD_TraHang(idRandomHD) {
        var lstHD = localStorage.getItem(lcListHD);
        lstHD = JSON.parse(lstHD);
        // caculator TongTien at CTHD
        var cthd = localStorage.getItem(lcListCTHD);
        cthd = JSON.parse(cthd);
        var sumTH = 0, thueCT = 0;
        for (let i = 0; i < cthd.length; i++) {
            if (cthd[i].IDRandomHD === idRandomHD) {
                sumTH += cthd[i].ThanhTien;
                thueCT += cthd[i].TienThue * cthd[i].SoLuong;

                // sum DM_Lo
                for (let j = 1; j < cthd[i].DM_LoHang.length; j++) {
                    sumTH += cthd[i].DM_LoHang[j].ThanhTien;
                    thueCT += cthd[i].TienThue * cthd[i].SoLuong;
                }
                // sum HangCungLoai
                for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                    sumTH += cthd[i].HangCungLoais[j].ThanhTien;
                    thueCT += cthd[i].HangCungLoais[j].TienThue * cthd[i].HangCungLoais[j].SoLuong;
                }
            }
        }
        for (let i = 0; i < lstHD.length; i++) {
            if (lstHD[i].IDRandom === idRandomHD) {
                // trahang
                lstHD[i].TongGiaGocHangTra = sumTH;
                if (lstHD[i].PTGiamDB > 0) {
                    lstHD[i].TongGiamGiaDB = lstHD[i].PTGiamDB * sumTH / 100;
                }
                if (lstHD[i].PTThueDB > 0) {
                    lstHD[i].TongThueDB = lstHD[i].PTThueDB * sumTH / 100;
                }
                if (isNaN(lstHD[i].TongThueDB)) {
                    lstHD[i].TongThueDB = 0;
                }
                let tongtra = sumTH - lstHD[i].TongChiPhiHangTra - lstHD[i].TongGiamGiaDB + lstHD[i].TongThueDB;
                tongtra = tongtra < 0 ? 0 : tongtra;
                lstHD[i].TongTienTra = tongtra;

                // muahang
                let tongmua = lstHD[i].TongTienHang - formatNumberToFloat(lstHD[i].TongGiamGiaKM_HD)
                    + formatNumberToFloat(lstHD[i].TongTienThue);
                tongmua = tongmua < 0 ? 0 : tongmua;
                lstHD[i].TongTienMua = tongmua;

                let noHDCu = lstHD[i].NoHDCu;
                if (commonStatisJs.CheckNull(noHDCu)) {
                    noHDCu = 0;
                }
                let butruHDGoc = tongtra - noHDCu; // tra > nocu (butru > 0) : phaitrakhach
                let phaiTT = tongmua - butruHDGoc - lstHD[i].KhachDaTra;
                if (phaiTT < 0) {
                    lstHD[i].HoanTraTamUng = Math.abs(phaiTT);
                    lstHD[i].DaTraKhach = lstHD[i].HoanTraTamUng;
                    lstHD[i].TienMat = lstHD[i].HoanTraTamUng;
                    lstHD[i].PhaiThanhToan = 0;
                    lstHD[i].DaThanhToan = 0;
                    lstHD[i].TongThanhToan = 0;
                }
                else {
                    lstHD[i].PhaiThanhToan = phaiTT;
                    lstHD[i].DaThanhToan = phaiTT;
                    lstHD[i].TongThanhToan = phaiTT;
                    lstHD[i].TienMat = phaiTT;
                    lstHD[i].HoanTraTamUng = 0;
                    lstHD[i].DaTraKhach = 0;
                }
                lstHD[i].TienGui = 0;
                lstHD[i].PhaiThanhToanDB = butruHDGoc;
                lstHD[i].TienATM = 0;
                lstHD[i].TienTheGiaTri = 0;
                lstHD[i].TienThua = 0;
                break;
            }
        }
        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
    }
    function CaculatorTongTien_fromHDMua_LoHang(idRandomHD) {
        var sum = 0;
        var arr = localStorage.getItem(lcListCTHD);
        if (arr !== null) {
            arr = JSON.parse(arr);
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].IDRandomHD === idRandomHD) {
                    sum += parseFloat(arr[i].ThanhTien);
                    // sum Hang KhuyenMai
                    for (let k = 0; k < arr[i].HangHoa_KM.length; k++) {
                        sum += parseFloat(arr[i].HangHoa_KM[k].ThanhTien);
                    }
                    // for from j =1, because DM_LoHang[0] = CTHD parent
                    for (let j = 1; j < arr[i].DM_LoHang.length; j++) {
                        sum += parseFloat(arr[i].DM_LoHang[j].ThanhTien);
                    }
                    // sum hangcungloai
                    for (let j = 0; j < arr[i].HangCungLoais.length; j++) {
                        sum += parseFloat(arr[i].HangCungLoais[j].ThanhTien);
                    }
                }
            }
        }
        // sum hang KM HoaDon(HD - giam gia hang)
        var producKM_HD = localStorage.getItem(lcProductKM_HoaDon);
        if (producKM_HD !== null) {
            producKM_HD = JSON.parse(producKM_HD);
            for (let i = 0; i < producKM_HD.length; i++) {
                if (producKM_HD[i].IDRandomHD === idRandomHD) {
                    sum += parseFloat(producKM_HD[i].ThanhTien);
                }
            }
        }
        return sum;
    }

    function CaculatorTongTien_fromHDDoiTra(idRandomHD) {
        var sum = 0;
        var ctDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
        if (ctDoiTra !== null) {
            ctDoiTra = JSON.parse(ctDoiTra);
            for (let i = 0; i < ctDoiTra.length; i++) {
                if (ctDoiTra[i].IDRandomHD === idRandomHD) {
                    sum += ctDoiTra[i].ThanhTien;
                    for (let j = 1; j < ctDoiTra[i].DM_LoHang.length; j++) {
                        sum += parseFloat(ctDoiTra[i].DM_LoHang[j].ThanhTien);
                    }
                    for (let j = 0; j < ctDoiTra[i].HangCungLoais.length; j++) {
                        sum += parseFloat(ctDoiTra[i].HangCungLoais[j].ThanhTien);
                    }
                }
            }
        }
        return sum;
    }

    self.addLot_DoiTra = function (item) {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var idQuiDoi = item.ID_DonViQuiDoi;
        var cthd = localStorage.getItem(lcListCTHD_DoiTra);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
            var arrLot = $.grep(self.AllLot(), function (x) {
                return x.ID_DonViQuiDoi === idQuiDoi;
            });
            var idRandomCungLoai = '';
            if (arrLot.length === 0) {
                let cthdPr = $.grep(cthd, function (x) {
                    return x.ID_DonViQuiDoi === idQuiDoi && x.ID_ChiTietGoiDV === item.ID_ChiTietGoiDV;
                });
                if (cthdPr.length > 0) {
                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandom === cthdPr[0].IDRandom) {
                            let cungloai = $.extend({}, cthd[i]);
                            cungloai.SoLuong = 1;
                            let obj = newHangHoa(cungloai, null, true);
                            idRandomCungLoai = obj.IDRandom;
                            cthd[i].HangCungLoais.push(obj);
                            break;
                        }
                    }
                }
            }
            else {
                // add Lot    
                for (let i = 0; i < cthd.length; i++) {
                    let itFor = cthd[i];
                    if (itFor.IDRandomHD === idRandomHD && itFor.ID_DonViQuiDoi === idQuiDoi) {
                        let lohang = $.extend({}, itFor);
                        lohang.SoLuong = 1;
                        let countLot = itFor.DM_LoHang.length;
                        let idRandom = CreateIDRandom('RandomCT_');
                        lohang.SoLuong = 1;
                        let objLot = newHangHoa(lohang, null, true);
                        objLot.NgaySanXuat = itFor.NgaySanXuat;
                        objLot.NgayHetHan = itFor.NgayHetHan;
                        objLot.LotParent = false;
                        objLot.IDRandom = idRandom;
                        objLot.SoThuTu = countLot + 1;
                        objLot.DM_LoHang = [];
                        objLot.HangCungLoais = [];
                        objLot.ThanhPhan_DinhLuong = [];
                        objLot.BH_NhanVienThucHien = [];
                        cthd[i].DM_LoHang.push(objLot);
                        break;
                    }
                }
            }
            localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cthd));
            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            if (!commonStatisJs.CheckNull(idRandomCungLoai)) {
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandomCungLoai, 1, true);
            }
            BindHD_byIDRandom(idRandomHD);
            Focus_InputPhaiThanhToan();
            // hide divMuaHang if not CTHD
            var arrCTHD = $.grep(cthd, function (item) {
                return item.IDRandomHD === idRandomHD;
            });
            if (arrCTHD.length === 0) {
                $('#divMuaHang').css('display', 'none');
            }
            // bind CTHoaDOn
            self.NewProducts(arrCTHD);
            SetBorder_LotEnd_CTHD();
            HideShow_Icon_ChietKhauNV();
        }
    };
    self.RemoveLot_DoiTra = function (item) {
        var idRandomHD = item.IDRandomHD;
        // item: DM_LoHang
        var lstCTHD = localStorage.getItem(lcListCTHD_DoiTra);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0; i < lstCTHD.length; i++) {
                let itemCT = lstCTHD[i];
                if (itemCT.IDRandomHD === idRandomHD && itemCT.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                    for (let j = 0; j < itemCT.DM_LoHang.length; j++) {
                        // if same IDRandom--> remove lot
                        if (itemCT.DM_LoHang[j].IDRandom === item.IDRandom) {
                            lstCTHD[i].DM_LoHang.splice(j, 1);
                            break;
                        }
                    }
                    break;
                }
            }
            // update agin STT for DM_Lo
            for (let i = 0; i < lstCTHD.length; i++) {
                let itemCT = lstCTHD[i];
                if (itemCT.IDRandomHD === idRandomHD && itemCT.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                    for (let j = 0; j < itemCT.DM_LoHang.length; j++) {
                        lstCTHD[i].DM_LoHang[j].SoThuTu = (j + 1);
                    }
                    break;
                }
            }
            localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD));
            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            // BindHD_byIDRandom --> show infor ThanhToanThe
            BindHD_byIDRandom(idRandomHD);
            Focus_InputPhaiThanhToan();
            // hide divMuaHang if not CTHD
            var arrCTHD = $.grep(lstCTHD, function (item) {
                return item.IDRandomHD === idRandomHD;
            });
            self.NewProducts(arrCTHD);
            SetBorder_LotEnd_CTHD();
        }
        HideShow_Icon_ChietKhauNV();
    }
    self.ClickChoseLot_DoiTra = function (item) {
        var $this = event.currentTarget;
        var ngaysx = moment(item.NgaySanXuat).format('DD/MM/YYYY');
        var hethan = moment(item.NgayHetHan).format('DD/MM/YYYY');
        var idRandom = $($this.closest('.name-lot1')).find('span').eq(0).attr('id');
        if (ngaysx === 'Invalid date') {
            ngaysx = '';
        }
        if (hethan === 'Invalid date') {
            hethan = '';
        }
        var idLoHang = item.ID;
        var maLoHang = item.MaLoHang;
        // add cache CTHD
        var lstCTHD = localStorage.getItem(lcListCTHD_DoiTra);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            if (_maHoaDon === '') {
                _maHoaDon = $('.bill-bxslide li.using font').text();
            }
            var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
            for (let i = 0; i < lstCTHD.length; i++) {
                var itemCTHD = lstCTHD[i];
                if (itemCTHD.IDRandomHD === idRandomHD && itemCTHD.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                    // if change ID_LoHang --> update, not push
                    for (let j = 0; j < itemCTHD.DM_LoHang.length; j++) {
                        if (itemCTHD.DM_LoHang[j].IDRandom === idRandom) {
                            // if first DM_LoHang--> update ID_LoHang for CTHD if LotParent
                            if (j === 0) {
                                lstCTHD[i].ID_LoHang = idLoHang;
                                lstCTHD[i].MaLoHang = maLoHang; // add properties MaLoHang --> used to save LichSuThaoTac
                                lstCTHD[i].TonKho = item.TonKho;
                                lstCTHD[i].NgaySanXuat = item.NgaySanXuat;// --> used to InHoaDon
                                lstCTHD[i].NgayHetHan = item.NgayHetHan;
                                lstCTHD[i].CssWarning = (self.ThietLap().XuatAm && lstCTHD[i].TonKho < lstCTHD[i].SoLuong);
                            }
                            lstCTHD[i].DM_LoHang[j].ID_LoHang = idLoHang;
                            lstCTHD[i].DM_LoHang[j].MaLoHang = maLoHang;
                            lstCTHD[i].DM_LoHang[j].NgaySanXuat = ngaysx;
                            lstCTHD[i].DM_LoHang[j].NgayHetHan = hethan;
                            lstCTHD[i].DM_LoHang[j].TonKho = item.TonKho;
                            lstCTHD[i].DM_LoHang[j].CssWarning = (self.ThietLap().XuatAm && lstCTHD[i].DM_LoHang[j].TonKho < lstCTHD[i].DM_LoHang[j].SoLuong);
                            break;
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD));
            // bind again to do bind ID_LoHang
            var arrCTHD = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            self.NewProducts(arrCTHD);
        }
        HideShow_Icon_ChietKhauNV();
    }
    function XoaHangHoa_CheckCungLoai(cthd, lotParent, quanlytheolo, concungloai, idRandom) {
        if (lotParent || (concungloai === false && quanlytheolo === false)) {
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === idRandom) {
                    cthd.splice(i, 1);
                    break;
                }
            }
        }
        else {
            if (quanlytheolo) {
                for (let i = 0; i < cthd.length; i++) {
                    for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                        if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                            cthd[i].DM_LoHang.splice(j, 1);
                            i = cthd.length;  // esc for loop
                            break;
                        }
                    }
                }
            }
            else {
                for (let i = 0; i < cthd.length; i++) {
                    for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                        if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                            cthd[i].HangCungLoais.splice(j, 1);
                            i = cthd.length;
                            break;
                        }
                    }
                }
            }
        }
        return cthd;
    }
    self.xoaHangHoa_DoiTra = function (item) {
        _maHoaDon = item.MaHoaDon;
        var isOffline = CheckHoaDonOffline_byMaHoaDon(_maHoaDon);
        if (isOffline === false) {
            return false;
        }
        var idRandomHD = item.IDRandomHD;
        // xoa in CTHD_TraHang
        var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
        lstCTHD_TH = JSON.parse(lstCTHD_TH);
        lstCTHD_TH = XoaHangHoa_CheckCungLoai(lstCTHD_TH, item.LotParent, item.QuanLyTheoLoHang, item.LaConCungLoai, item.IDRandom);
        localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD_TH));
        UpdateCacheHDLe(idRandomHD, true);
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        UpdateSoThuTu_CTHD(true, idRandomHD);
        // reset GiamGia, Thue if delete all HangHoa of HoaDon
        var lstCTHD_ofThisHD = $.grep(lstCTHD_TH, function (x) {
            return x.IDRandomHD === idRandomHD;
        });
        if (lstCTHD_ofThisHD.length === 0) {
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].IDRandom === idRandomHD) {
                        lstHD[i].TongChietKhau = 0
                        lstHD[i].TongGiamGia = 0;
                        lstHD[i].PTThueHoaDon = 0;
                        lstHD[i].TongTienThue = 0;
                        lstHD[i].PTChietKhauHH = 0;
                        lstHD[i].TongGiamGiaHang = 0;
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
            }
        }
        self.NewProducts(lstCTHD_ofThisHD);
        BindHD_byIDRandom(idRandomHD);
        Focus_InputPhaiThanhToan();
        SetBorder_LotEnd_CTHD();
        HideShow_Icon_ChietKhauNV();
    }
    self.tangSolLuong_DoiTra = function (item) {
        $('.tongTienMua').show();
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var idQuiDoi = item.ID_DonViQuiDoi;
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);
        var objNumberTH = $('#numberTH_' + idRandom);
        var newSoLuong = parseFloat(objNumberTH.val()) + 1;
        _maHoaDon = item.MaHoaDon;
        // find & update ctdoitra
        var cthdDoing = FindCTHD_isDoing(item, true);
        if (cthdDoing !== null) {
            cthdDoing.SoLuong = newSoLuong;
            cthdDoing.ThanhToan = newSoLuong * (cthdDoing.GiaBan - cthdDoing.TienChietKhau + cthdDoing.TienThue);
            cthdDoing.ThanhTien = newSoLuong * (cthdDoing.DonGia - cthdDoing.TienChietKhau);

            var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
            lstCTHD_TH = JSON.parse(lstCTHD_TH);
            lstCTHD_TH = updateCTHDLe(lstCTHD_TH, cthdDoing);
            localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD_TH));

            UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
            ChangeSoLuong_UpdateSLQuyCach(item, true, item.QuyCach, newSoLuong);
            UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, newSoLuong, true);
            UpdateChietKhauNV_inCTHD(idRandom, true, cthdDoing);
            if (item.ThanhPhanComBo.length > 0) {
                ChangeSoLuongParent_UpdateCombo(idRandom, cthdDoing.SoLuong, true);
            }
            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            BindHD_byIDRandom(idRandomHD);
            Focus_InputPhaiThanhToan();
            Bind_CTHĐoiTra_afterHideColumn();
            HideShow_Icon_ChietKhauNV();
        }
    }
    self.giamSolLuong_DoiTra = function (item) {
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        var idQuiDoi = item.ID_DonViQuiDoi;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);
        var objNumberTH = $('#numberTH_' + idRandom);
        var numberTH = parseFloat(objNumberTH.val());
        if (numberTH >= 1) {
            numberTH = numberTH - 1;
            objNumberTH.val(numberTH);
        }
        _maHoaDon = item.MaHoaDon;
        var cthdDoing = FindCTHD_isDoing(item, true);
        cthdDoing.SoLuong = numberTH;
        cthdDoing.ThanhTien = numberTH * (cthdDoing.GiaBan - cthdDoing.TienChietKhau);
        cthdDoing.ThanhToan = numberTH * (cthdDoing.GiaBan - cthdDoing.TienChietKhau + cthdDoing.TienThue);

        var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
        lstCTHD_TH = JSON.parse(lstCTHD_TH);
        lstCTHD_TH = updateCTHDLe(lstCTHD_TH, cthdDoing);
        localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD_TH));

        UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
        ChangeSoLuong_UpdateSLQuyCach(item, true, item.QuyCach, numberTH);
        UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, numberTH, true);
        UpdateChietKhauNV_inCTHD(idRandom, true, cthdDoing);
        if (item.ThanhPhanComBo.length > 0) {
            ChangeSoLuongParent_UpdateCombo(idRandom, cthdDoing.SoLuong, true);
        }
        UpdateCacheHDLe(idRandomHD, true);
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        //CaculatorTimeDoingService(item.LaHangHoa, idRandomHD, true);
        BindHD_byIDRandom(idRandomHD);
        Focus_InputPhaiThanhToan();
        Bind_CTHĐoiTra_afterHideColumn();
        HideShow_Icon_ChietKhauNV();
    }
    self.editPhiTraHang = function () {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var $this = $(event.currentTarget);
        formatNumberObj($this);
        var valThis = formatNumberToFloat($this.val());
        var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
        // update TongTienTra
        var lstHDLe = localStorage.getItem(lcListHD);
        if (lstHDLe !== null) {
            lstHDLe = JSON.parse(lstHDLe);
            for (let i = 0; i < lstHDLe.length; i++) {
                if (lstHDLe[i].IDRandom === idRandomHD) {
                    lstHDLe[i].TongChiPhiHangTra = valThis;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));
            UpdateCacheHDLe(idRandomHD, true);
            BindHD_byIDRandom(idRandomHD);
        }
    }
    self.editSoLuong_DoiTra = function (item) {
        var role = GetRoleChangePrice(item.LoaiHoaDon);
        if (role === false) {
            return false;
        }
        $('.tongTienMua').show();
        var rowID = item.ID_DonViQuiDoi;
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);
        var thisObj = $(event.currentTarget);
        formatNumberObj(thisObj); // 000,000
        var objThanhTien = $('#sumTH_' + idRandom);

        var ctDoing = FindCTHD_isDoing(item, true);
        if (ctDoing !== null) {
            var thanhtien = 0;
            var newNumber = formatNumberToFloat(thisObj.val());
            if (isNaN(newNumber)) {
                newNumber = 0;
            }
            var sluongOld = newNumber;
            var keyCode = event.keyCode || event.which;
            // press up
            if (keyCode === 38) {
                newNumber = sluongOld + 1;
                thisObj.val(formatNumber3Digit(newNumber));
            }
            // press down
            if (keyCode === 40) {
                if (sluongOld > 1) {
                    newNumber = sluongOld - 1;
                    thisObj.val(formatNumber3Digit(newNumber));
                }
            }
            thanhtien = (ctDoing.DonGia - ctDoing.TienChietKhau + ctDoing.TienThue) * newNumber;
            ctDoing.SoLuong = newNumber;
            ctDoing.ThanhToan = thanhtien;
            ctDoing.ThanhTien = (ctDoing.DonGia - ctDoing.TienChietKhau) * newNumber;

            objThanhTien.val(formatNumber3Digit(thanhtien));
            objThanhTien.text(formatNumber3Digit(thanhtien)); // use for lable
            $('#lblckTong_' + idRandom).text(formatNumber3Digit(ctDoing.SoLuong * ctDoing.TienChietKhau));

            var cthd = localStorage.getItem(lcListCTHD_DoiTra);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updateCTHDLe(cthd, ctDoing);
                localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cthd));
            }

            UpdateWarning_forCTHD_byIDQuiDoi(rowID, idRandomHD);
            ChangeSoLuong_UpdateSLQuyCach(item, true, item.QuyCach, newNumber);
            UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, newNumber, true);
            UpdateChietKhauNV_inCTHD(idRandom, true, ctDoing);
            if (item.ThanhPhanComBo.length > 0) {
                ChangeSoLuongParent_UpdateCombo(idRandom, ctDoing.SoLuong, true, 1);
            }
            //CaculatorTimeDoingService(item.LaHangHoa, idRandomHD, true);
            ShowHideWarning_forCTHD_byIDQuiDoi(idRandomHD, rowID, idRandom);
            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            HideShow_Icon_ChietKhauNV();
            BindHD_byIDRandom(idRandomHD);
            var objQC = $('#quycach_' + idRandom);
            if (parseFloat(objQC.text()) !== 0) {
                var soluongQuyCach = item.QuyCach * newNumber;
                objQC.text(formatNumber3Digit(soluongQuyCach));
            }
            Enter_DoiTra(item, event, 'numberTH_', 1);
            Shift_DoiTra(item, event, 'numberTH_', 1, 16);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
        }
    }
    self.clickVND_DoiTra = function (item) {
        _maHoaDon = item.MaHoaDon;
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var $this = $('#vndTH_' + idRandom);
        if ($this.hasClass('active-re')) {
            $this.removeClass('active-re');
        }
        else {
            $this.addClass('active-re');
        }
        var objSale = $('#pri-gTH_' + idRandom); // input giam gia
        var tienGiam = 0;
        var ptGiam = 0;
        var priceOld = 0;
        var dvtGiam = '%';
        // get infor from CTHD old
        var itemCTHD = FindCTHD_isDoing(item, true);
        if (itemCTHD !== null) {
            priceOld = itemCTHD.GiaBan;
            ptGiam = itemCTHD.PTChietKhau;
            tienGiam = itemCTHD.TienChietKhau;
            dvtGiam = itemCTHD.DVTinhGiam;

            // if priceOld =0 (chua nhap gia von ban dau o hang hoa)
            if (priceOld !== 0) {
                if ($this.hasClass('active-re')) {
                    // caculator again %
                    ptGiam = tienGiam / priceOld * 100;
                    objSale.val(formatNumber3Digit(ptGiam));
                    dvtGiam = '%';
                }
                else {
                    objSale.val(formatNumber3Digit(tienGiam));
                    dvtGiam = 'VND';
                    ptGiam = 0;
                }
            }
            var cthd = localStorage.getItem(lcListCTHD_DoiTra);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updatePTVND(cthd, itemCTHD, 1, ptGiam, dvtGiam);
                localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cthd));
            }
            if (tienGiam > 0) {
                // reset ptckHangHoa at hoadon
                var hd = localStorage.getItem(lcListHD);
                if (hd !== null) {
                    hd = JSON.parse(hd);
                    for (let i = 0; i < hd.length; i++) {
                        if (hd[i].IDRandom === ctDoing.IDRandomHD) {
                            hd[i].PTChietKhauHH = 0;
                            break;
                        }
                    }
                    localStorage.setItem(lcListHD, JSON.stringify(hd));
                }
            }
            UpdateCacheHDLe(idRandomHD, true);
            BindHD_byIDRandom(idRandomHD);
            Focus_InputPhaiThanhToan();
        }
    }
    self.editPrice_DoiTra = function (item, e) {
        var objID = item.ID_DonViQuiDoi;
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var thisObj = $('#priceTH_' + idRandom);
        var objVal = formatNumberObj(thisObj);
        var price = formatNumberToFloat(objVal);
        var sumTemp = 0;
        var sum_f = $('#sumTH_' + idRandom);
        var objGiam = $('#btn_saleDT_' + idRandom);

        var priceNew = price;
        var tienGiam = 0;
        var tienThue = 0, ptThue = 0;

        // get infor from CTHD old
        var ctDoing = FindCTHD_isDoing(item, true);
        if (ctDoing !== null) {
            tienGiam = ctDoing.TienChietKhau;
            tienThue = ctDoing.TienThue;

            // if clear price
            if (thisObj.val() === '') {
                priceNew = 0;
                tienGiam = 0;
                tienThue = 0;
                ctDoing.PTChietKhau = self.HoaDons().PTChietKhauHH();
                ptThue = self.HoaDons().PTThueHoaDon();
            }
            // assign again sale
            if (ctDoing.PTChietKhau > 0) {
                tienGiam = ctDoing.PTChietKhau * priceNew / 100;
            }
            if (ctDoing.PTThue > 0) {
                ptThue = self.HoaDons().PTThueHoaDon();
                tienThue = ptThue * (priceNew - tienGiam) / 100;
            }
            sumTemp = parseFloat(ctDoing.SoLuong) * (priceNew - tienGiam + tienThue);
            ctDoing.TienChietKhau = tienGiam;
            ctDoing.PTThue = ptThue;
            ctDoing.TienThue = tienThue;
            ctDoing.ThanhTien = (priceNew - tienGiam) * ctDoing.SoLuong;
            ctDoing.ThanhToan = sumTemp;
            ctDoing.DonGia = priceNew;
            ctDoing.GiaBan = priceNew;

            sum_f.val(formatNumber3Digit(sumTemp));
            objGiam.text(formatNumber3Digit(tienGiam));

            // update ds cache cthoadon
            var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
            if (lstCTHD_TH !== null) {
                lstCTHD_TH = JSON.parse(lstCTHD_TH);
                lstCTHD_TH = updateCTHDLe(lstCTHD_TH, ctDoing);
                localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD_TH));
            }

            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            BindHD_byIDRandom(idRandomHD);
            UpdateChietKhauNV_inCTHD(idRandom, true, ctDoing);
            Enter_DoiTra(item, event, 'priceTH_', 2);
            Shift_DoiTra(item, event, 'priceTH_', 2, 16);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
        }
    }
    self.editSale_DoiTra = function (item, e) {
        var sumTemp = 0;
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var rowID = item.ID_DonViQuiDoi;
        var thisObj = $(event.currentTarget);

        var priceOld = 0;
        var priceNew = 0;
        var tienGiam = 0;
        var tienThue = 0;

        var ctDoing = FindCTHD_isDoing(item, true);
        if (ctDoing !== null) {
            priceOld = ctDoing.GiaBan;
            tienGiam = ctDoing.TienChietKhau;
            tienThue = ctDoing.TienThue;

            // neu gia cu = 0 => khong cho phep nhap giam gia
            if (priceOld === 0) {
                thisObj.val(0);
            }
            else {
                // format 000,000,000
                formatNumberObj(thisObj);
                // neu clear giamgia ='';
                var valThis = thisObj.val();
                if (valThis === '') {
                    valThis = 0;
                }
                if ($('#vndTH_' + idRandom).hasClass('active-re')) {
                    // neu giam gia > 100 %
                    if (formatNumberToFloat(valThis) > 100) {
                        thisObj.val(100);
                        valThis = 100;
                    }
                    tienGiam = priceOld * parseFloat(valThis) / 100;
                    ptGiam = parseFloat(valThis);
                }
                else {
                    tienGiam = formatNumberToFloat(valThis);
                }
                priceNew = priceOld - tienGiam; // use to caculator ThanhTien
                if (ctDoing.PTThue > 0) {
                    tienThue = ctDoing.PTThue * priceNew / 100;
                }
                sumTemp = (priceNew - tienThue) * ctDoing.SoLuong;
                ctDoing.TienChietKhau = tienGiam;
                ctDoing.TienThue = tienThue;
                ctDoing.ThanhTien = priceNew * ctDoing.SoLuong;
                ctDoing.ThanhToan = sumTemp;
                $('#lblckTong_' + idRandom).text(formatNumber3Digit(ctDoing.SoLuong * ctDoing.TienChietKhau));
            }
            // set value new GiamGia, ThanhTien
            $('button[id=btn_saleDT_' + idRandom + ']').text(formatNumber3Digit(tienGiam));
            $('#sumTH_' + idRandom).val(formatNumber3Digit(sumTemp));
            var cthd = localStorage.getItem(lcListCTHD_DoiTra);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updateCTHDLe(cthd, ctDoing);
                localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cthd));
            }
            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            BindHD_byIDRandom(idRandomHD);
            UpdateChietKhauNV_inCTHD(idRandom, true, ctDoing);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
        }
    }
    self.editSumPrice_DoiTra = function (item) {
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var objID = item.ID_DonViQuiDoi;
        var thisObj = $(event.currentTarget);
        var objVal = formatNumberObj(thisObj);
        var objPrice = $('#priceTH_' + idRandom);
        var sumPrice = formatNumberToFloat(objVal);

        var priceNew = 0;
        var soluong = 1;
        var tienGiam = 0;
        var ptGiam = 0;

        // use when SoLuong = 0 (caculator again SoLuong)
        var priceOld = 0;
        var ctDoing = FindCTHD_isDoing(item, true);
        if (ctDoing !== null) {
            priceOld = ctDoing.priceOld;
            ptGiam = ctDoing.PTChietKhau;
            tienGiam = ctDoing.TienChietKhau;
            soluong = ctDoing.SoLuong;

            // is clear price
            var valThis = thisObj.val();
            if (valThis === '') {
                valThis = 0;
            }
            if (soluong === 0) {
                // keep GiaBan, caculator again SoLuong
                soluong = sumPrice / (priceOld - tienGiam);
                priceNew = priceOld;
                // assign SoLuong for input
                $('#numberTH_' + idRandom).val(formatNumber3Digit(soluong));
            }
            else {
                // caculator again tienGiam
                if (ptGiam > 0) {
                    priceNew = Caculator_Price(ptGiam, soluong, sumPrice);
                    tienGiam = ptGiam * priceNew / 100;
                }
                else {
                    priceNew = Caculator_Price_byTienGiam(tienGiam, soluong, sumPrice);
                }
                // assign DonGia,TienGiam for input
                objPrice.val(formatNumber3Digit(priceNew));
                $('#btn_saleDT_' + idRandom).text(formatNumber3Digit(tienGiam));
            }

            ctDoing.PTChietKhau = ptGiam;
            ctDoing.TienThue = 0;
            ctDoing.PTThue = 0;
            ctDoing.DonGia = priceNew;
            ctDoing.GiaBan = priceNew;
            ctDoing.SoLuong = soluong;
            ctDoing.TienChietKhau = tienGiam;
            ctDoing.ThanhTien = sumPrice;
            ctDoing.ThanhToan = sumPrice;

            // update ds cache cthoadon
            var cthd = localStorage.getItem(lcListCTHD_DoiTra);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = updateCTHDLe(cthd, ctDoing);
                localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cthd));
            }

            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            UpdateChietKhauNV_inCTHD(idRandom, true, ctDoing);
            BindHD_byIDRandom(idRandomHD);
            ArrowRight_CTHD(item, event);
            ArrowLeft_CTHD(item, event);
        }
    }
    self.showDivSale_CTHD_DoiTra = function (item) {
        var role = GetRoleChangeDiscountProduct(item);
        if (role === false) {
            ShowMessage_Danger('Không có quyền thay đổi chiết khấu hàng hóa');
            return false;
        }

        var idRandom = item.IDRandom;
        var $this = $('#btn_saleDT_' + idRandom);
        var ipGiam = $('#pri-gTH_' + idRandom);
        var iconGiam = $('#vndTH_' + idRandom); // vnd or %
        var ptGiam = 0;
        var tienGiam = 0;
        var itemCTHD = FindCTHD_isDoing(item, true);
        if (itemCTHD !== null) {
            ptGiam = itemCTHD.PTChietKhau;
            tienGiam = itemCTHD.TienChietKhau;
        }
        if (ptGiam > 0 || tienGiam === 0) {
            ipGiam.val(formatNumber3Digit(ptGiam));
            iconGiam.addClass('active-re');
        }
        else {
            ipGiam.val(formatNumber3Digit(tienGiam));
            iconGiam.removeClass('active-re');
        }
        ipGiam.focus().select();
        $this.next(".callprice").toggle();
        $this.next(".callprice").find('input').focus();
    }
    // bắt buộc phải trả đúng số tiền cần trả (không thừa - không thiếu)
    // disable: editDaTraKhach
    self.editDaTraKhach = function () {
        var $this = $(event.currentTarget);
        formatNumberObj($this);
        var datra = formatNumberToFloat($this.val());
        var idRandomHD = '';
        // update DaThanhToan, TienMat 
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].MaHoaDon === _maHoaDon && (lstHD[i].NguoiTao === userLogin || lstHD[i].TrangThaiHD === 3)) {
                    //if (datra > lstHD[i].PhaiThanhToanDB) {
                    //    ShowMessage_Danger('Vui lòng không nhập quá số tiền cần thanh toán');
                    //    $this.val(formatNumber(lstHD[i].PhaiThanhToanDB));
                    //    datra = lstHD[i].PhaiThanhToanDB;
                    //}
                    //else {
                    //    if (datra < lstHD[i].PhaiThanhToanDB) {
                    //        ShowMessage_Danger('Vui lòng trả đủ tiền cho khách');
                    //        $this.val(formatNumber(lstHD[i].PhaiThanhToanDB));
                    //        datra = lstHD[i].PhaiThanhToanDB;
                    //    }
                    //}
                    lstHD[i].DaTraKhach = datra;
                    lstHD[i].TienMat = datra;
                    idRandomHD = lstHD[i].IDRandom;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
        BindHD_byIDRandom(idRandomHD);
    }
    // not use
    self.editDaTraKhach_DoiTra = function () {
        var datraObj = formatNumberObj($('#txtDaTraKhach'));
        var datra = formatNumberToFloat(datraObj);
        var idRandomHD = '';
        $('#txtDaTraKhach').val(formatNumber3Digit(datra));
        // update DaThanhToan, TienMat 
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].MaHoaDon === _maHoaDon && (lstHD[i].NguoiTao === userLogin || lstHD[i].TrangThaiHD === 3)) {
                    lstHD[i].DaTraKhach = datra;
                    lstHD[i].TienMat = datra;
                    idRandomHD = lstHD[i].IDRandom;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
        BindHD_byIDRandom(idRandomHD);
    }

    shortcut.add('F9', function () {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            if (itemHD.length > 0) {
                if (formatNumberToFloat(itemHD[0].PhaiTraKhach) > 0) {
                    if (formatNumberToFloat(itemHD[0].TongTienHang) > 0) {
                        self.ThanhToanThe(2);  // co mua moi
                    }
                    else {
                        self.ThanhToanThe(1);// chi tra hang
                    }
                }
                else {
                    if (formatNumberToFloat(itemHD[0].PhaiThanhToan) > 0) {
                        self.ThanhToanThe(3);
                    }
                }

            }
        }
    })
    self.TraNhanh = function () {
        ShowDivDefault();
        $('#txtSearchHH').focus();
        $('.hasGiamGia').css('display', 'none');
        $('input, select').removeAttr('disabled');
        // TraHang: get all HangHoa
        //LoadAgain_ListHangHoa_IfNotXuatAm(6);
        self.DateHDDefault(moment(serverTime).format('DD/MM/YYYY'));
        self.TimeHDDefault(moment(serverTime).format('HH:mm'));
        var lstHDLe = localStorage.getItem(lcListHD);
        if (lstHDLe !== null && lstHDLe.indexOf('[]' > -1)) {
            lstHDLe = JSON.parse(lstHDLe);
            // get all HoaDon with MaHoaDon !='HDO' and !='Hóa'
            var arrHD = $.grep(lstHDLe, function (item) {
                //return item.MaHoaDon.indexOf('O') === -1 && item.MaHoaDon.indexOf('Hóa') === -1;
                return item.StatusOffline === false && item.LoaiHoaDon !== 1 && item.LoaiHoaDon !== 3;
            });
            if (arrHD.length === 0) {
                max = 0;
            }
            else {
                max = Math.max.apply(Math, arrHD.map(function (item) {
                    return item.MaHoaDon.match(/\d+/);
                }));
            }
        }
        else {
            lstHDLe = [];
            var newObjFirst = newHoaDon(nameHD_InsertBH + '1');
            lstHDLe.push(newObjFirst);
            max = 0;
        }
        _maHoaDon = 'Trả hàng ' + (max + 1);
        localStorage.setItem(lcMaHD, _maHoaDon);
        var objNew = newHoaDonTraHang(null, 'Trả hàng ' + (max + 1));
        lstHDLe.push(objNew);
        localStorage.setItem(lcListHD, JSON.stringify(lstHDLe));
        self.PhongBanSelected.push(objNew);
        GetCurrentPage_byMaHoaDon(_maHoaDon);
        self.resetInforHD_CTHD();
        self.HangHoaAfterAdds([]);
        ShowTraHang();
        HideMuaHang();
        Caculator_AmountProduct();
        NhapThuong_HideShow_txtDonGia();
        Enable_DisableNgayLapHD();
        SetPageSize_FullProduct(false);
    }
    self.selectLoaiChungTu.subscribe(function (newVal) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var lstHDoffline = [];
            if (newVal === 0) {
                lstHDoffline = $.grep(lstHD, function (item) {
                    return item.StatusOffline === true && item.NguoiTao === userLogin && item.ID_DonVi === id_DonVi;
                });
            }
            else {
                lstHDoffline = $.grep(lstHD, function (item) {
                    return item.StatusOffline === true && item.LoaiHoaDon === newVal && item.NguoiTao === userLogin
                        && item.ID_DonVi === id_DonVi;
                });
            }
            self.HoaDonOffline(lstHDoffline);
        }
    })
    // Phan trang DS HoaDon
    function GetCurrentPage_byMaHoaDon(maHoaDon) {
        var beforeIndex = self.indexOfMaHD();
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var lstHDisOpening = $.grep(lstHD, function (item) {
                return item.Status === 1 && (item.NguoiTao === userLogin || item.TrangThaiHD === 3);
            });
            for (let i = 0; i < lstHDisOpening.length; i++) {
                if (lstHDisOpening[i].MaHoaDon === maHoaDon) {
                    self.indexOfMaHD(i);
                    break;
                }
            }
        }
        // change indexOfMaHD when indexOfMaHD not change ==> change result_HoaDon (!important)
        if (beforeIndex === self.indexOfMaHD()) {
            self.indexOfMaHD(beforeIndex - 1);
            self.indexOfMaHD(beforeIndex);
        }
    }
    self.result_HoaDon = ko.computed(function () {
        var arrPage = [];
        var currentIndex = self.indexOfMaHD();
        var lstHDisOpening = GetListHD_Opening();
        var lenArr = lstHDisOpening.length;
        // currentIndex = undefined when close HDOffline, and refresh
        if (currentIndex === undefined || isNaN(currentIndex) || currentIndex < self.pageSizeHD()) {
            if (lenArr > 0) {
                for (let i = 0; i < lenArr; i++) {
                    if (arrPage.length < self.pageSizeHD()) {
                        arrPage.push(lstHDisOpening[i]);
                    }
                }
            }
            else {
                var maHDNew = '';
                if (_maHoaDon !== '') {
                    maHDNew = _maHoaDon;
                }
                var objEmpty = newHoaDon(maHDNew);
                arrPage.push(objEmpty);
                _maHoaDon = maHDNew;
            }
        }
        else {
            // currentIndex > pageSizeHD 
            if (self.pageSizeHD() === 1 && currentIndex === lenArr) {
                arrPage.push(lstHDisOpening[lenArr - 1]);
            }
            else {
                for (let i = currentIndex - (self.pageSizeHD() - 1); i < lenArr; i++) {
                    if (arrPage.length < self.pageSizeHD()) {
                        arrPage.push(lstHDisOpening[i]);
                    }
                }
            }
        }
        self.PhongBanSelected(arrPage);
        for (let i = 0; i < arrPage.length; i++) {
            arrPage[i].IsActive = '';
            if (arrPage[i].MaHoaDon === _maHoaDon && (arrPage[i].NguoiTao === userLogin || arrPage[i].TrangThaiHD === 3)) {
                arrPage[i].IsActive = 'using';
                break;
            }
        }
        return arrPage;
    });
    self.hasPrevHD = ko.computed(function () {
        if (self.PhongBanSelected().length > 0) {
            var maHDFirst = self.PhongBanSelected()[0].MaHoaDon;
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                var lstHDisOpening = GetListHD_Opening();
                if (lstHDisOpening.length > 0) {
                    if (maHDFirst === lstHDisOpening[0].MaHoaDon) {
                        return false;
                    }
                    else {
                        return true;
                    }
                }
                else {
                    return false;
                }
            }
            else {
                return false;
            }
        }
        else {
            return false;
        }
    });
    self.hasNextHD = ko.computed(function () {
        // if load first: self.PhongBanSelected().length === 0
        if (self.PhongBanSelected().length > 0) {
            var maHDLast = self.PhongBanSelected()[self.PhongBanSelected().length - 1].MaHoaDon;
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                var lstHDisOpening = GetListHD_Opening();
                if (lstHDisOpening.length > 0) {
                    if (maHDLast === lstHDisOpening[lstHDisOpening.length - 1].MaHoaDon) {
                        return false;
                    }
                    else {
                        return true;
                    }
                }
                else {
                    return false;
                }
            }
            else {
                return false;
            }
        }
    });
    self.nextHoaDon = function () {
        var indexCurrent = self.indexOfMaHD();
        var maHDLast = self.PhongBanSelected()[self.PhongBanSelected().length - 1].MaHoaDon;
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            // only get hdopening
            let hdOpening = $.grep(lstHD, function (x) {
                return x.Status === 1;
            });
            // find index MaHDLast
            for (let i = 0; i < hdOpening.length; i++) {
                if (hdOpening[i].MaHoaDon === maHDLast) {
                    indexCurrent = i;
                    break;
                }
            }
        }
        _maHoaDon = localStorage.getItem(lcMaHD)
        self.indexOfMaHD(indexCurrent + 1);
    }
    self.prevHoaDon = function () {
        self.indexOfMaHD(self.indexOfMaHD() - 1);
    }
    self.ShowinforTon_Dat = function (item) {
        $(".content-warning").hide();
        $('#wr_' + item.IDRandom).show();
        $(".content-warning").mouseup(function () {
            return false;
        });
        $(".main-warning").mouseup(function () {
            return false;
        });
        $(document).mouseup(function () {
            $(".content-warning").hide();
        });
    }
    self.clickHoaDon = function () {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        var isOffline = CheckHoaDonOffline_byMaHoaDon(_maHoaDon);
        if (isOffline === false) {
            return false;
        }
        var loaiHDCurrent = self.HoaDons().LoaiHoaDon();
        if (loaiHDCurrent === loaiHD) {
            return;
        }
        $('#txtSearchHH').focus();

        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var loaiHD = self.HoaDons().LoaiHoaDon();
            // check if click douple this tab
            if (loaiHD === 1 || loaiHD === 25) {
                return;
            }
            // count HoaDon with loaiHoaDon = 1 (HDon not offline)
            var countHD = GetMax_MaHoaDon(1, lstHD) + 1;
            var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRandomHD) {
                    lstHD[i].MaHoaDon = nameHD_InsertBH + countHD;
                    lstHD[i].LoaiHoaDon = 1;
                    lstHD[i].NgayApDungGoiDV = null;
                    lstHD[i].HanSuDungGoiDV = null;
                    lstHD[i].ID_HoaDon = null;// chuyen tu HDBaoHanh --> hoadon thuong
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandomHD === idRandomHD) {
                        cthd[i].LoaiHoaDon = 1;
                        cthd[i].MaHoaDon = nameHD_InsertBH + countHD;
                        cthd[i].BH_NhanVienThucHien = [];
                        cthd[i].GhiChu_NVThucHien = '';
                        cthd[i].GhiChu_NVTuVan = '';
                        cthd[i].GhiChu_NVThucHienPrint = '';
                        cthd[i].GhiChu_NVTuVanPrint = '';
                        cthd[i].ThoiGianThucHien = 0;
                        cthd[i].ID_ViTri = null;
                        cthd[i].TenViTri = '';
                        cthd[i].ID_ChiTietGoiDV = null;// chuyen tu HDBaoHanh --> hoadon thuong
                        if (self.ThietLap().XuatAm === false) {
                            if (cthd[i].QuanLyTheoLoHang === false) {
                                if (cthd[i].LaHangHoa) {
                                    cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                                }
                            }
                            else {
                                if (cthd[i].LaHangHoa) {
                                    cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                                    for (let j = 1; j < cthd[i].DM_LoHang.length; j++) {
                                        cthd[i].DM_LoHang[j].CssWarning = (cthd[i].DM_LoHang[j].SoLuong > cthd[i].DM_LoHang[j].TonKho);
                                    }
                                }
                            }
                        }
                        else {
                            cthd[i].CssWarning = false;
                            for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                                cthd[i].DM_LoHang[j].CssWarning = false;
                            }
                        }
                        // update MaHoaDon fror DM_Lo
                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            cthd[i].DM_LoHang[j].MaHoaDon = cthd[i].MaHoaDon;
                            cthd[i].DM_LoHang[j].LoaiHoaDon = 1;
                            cthd[i].DM_LoHang[j].ID_ChiTietGoiDV = null;// chuyen tu HDBaoHanh --> hoadon thuong
                        }
                        for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                            cthd[i].HangCungLoais[j].MaHoaDon = cthd[i].MaHoaDon;
                            cthd[i].HangCungLoais[j].LoaiHoaDon = 1;
                            cthd[i].HangCungLoais[j].ID_ChiTietGoiDV = null;// chuyen tu HDBaoHanh --> hoadon thuong
                        }
                        for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                            cthd[i].ThanhPhanComBo[j].MaHoaDon = cthd[i].MaHoaDon;
                            cthd[i].ThanhPhanComBo[j].LoaiHoaDon = 1;
                            cthd[i].ThanhPhanComBo[j].ID_ChiTietGoiDV = null;
                        }
                        // update again PhiDichVu
                        var itemHH = $.grep(self.HangHoaAll(), function (x) {
                            return x.ID_DonViQuiDoi === cthd[i].ID_DonViQuiDoi;
                        });
                        if (itemHH.length > 0) {
                            cthd[i].LaPTPhiDichVu = itemHH[0].LaPTPhiDichVu;
                            cthd[i].PhiDichVu = itemHH[0].PhiDichVu;
                            cthd[i].ThoiGianThucHien = itemHH[0].SoPhutThucHien === null ? 0 : itemHH[0].SoPhutThucHien;
                            if (itemHH[0].LaPTPhiDichVu) {
                                cthd[i].TongPhiDichVu = Math.round(itemHH[0].PhiDichVu * cthd[i].GiaBan * cthd[i].SoLuong / 100);
                            }
                            else {
                                cthd[i].TongPhiDichVu = cthd[i].PhiDichVu * cthd[i].SoLuong;
                            }
                        }
                    }
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            }
            _maHoaDon = nameHD_InsertBH + countHD;
            localStorage.setItem(lcMaHD, _maHoaDon);
        }
        self.KM_KMApDung([]);
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        UpdateKhuyenMai_CTHD(null, idRandomHD);
        BindHD_CTHDafterSave();
        Call_6Func();
        ActiveTab_SoDoPhong();
    }

    function ChangeLoaiHD_ResetHD(hd, maHDNew, loaiHD) {
        var idRandomHD = self.HoaDons().IDRandom();
        for (let i = 0; i < hd.length; i++) {
            if (hd[i].IDRandom === idRandomHD) {
                hd[i].MaHoaDon = maHDNew;
                hd[i].LoaiHoaDon = loaiHD;
                hd[i].YeuCau = 1;
                hd[i].ID_KhuyenMai = null;
                hd[i].IsKhuyenMaiHD = false;
                hd[i].KhuyenMai_GhiChu = '';
                hd[i].KhuyeMai_GiamGia = 0;
                hd[i].DiemGiaoDich = 0;
                hd[i].DiemHienTai = 0;
                hd[i].TTBangDiem = 0;
                hd[i].ID_ViTri = null;
                hd[i].TenViTriHD = '';
                hd[i].CreateTime = 0;
                hd[i].ThoiGianThucHien = '';
                hd[i].BH_NhanVienThucHiens = [];
                hd[i].PTChietKhauHH = 0;
                hd[i].PTThueHoaDon = 0;

                if (loaiHD === 19) {
                    let ngaysudungGoiDV = moment(new Date()).format('DD/MM/YYYY');
                    let nextYear = now.getFullYear() + 1;
                    let ngayhethanGoiDV = moment(new Date()).format('DD/MM') + '/' + nextYear;
                    hd[i].NgayApDungGoiDV = ngaysudungGoiDV;
                    hd[i].HanSuDungGoiDV = null;
                }
                else {
                    hd[i].NgayApDungGoiDV = null;
                    hd[i].HanSuDungGoiDV = null;
                }
                break;
            }
        }
        return hd;
    }

    function ChangeLoaiHD_CTHD(cthd, maHDNew, loaiHD) {
        var idRandomHD = self.HoaDons().IDRandom();
        for (let i = 0; i < cthd.length; i++) {
            if (cthd[i].IDRandomHD === idRandomHD) {
                cthd[i].LoaiHoaDon = loaiHD;
                cthd[i].MaHoaDon = maHDNew;
                cthd[i].BH_NhanVienThucHien = [];
                cthd[i].GhiChu_NVThucHien = '';
                cthd[i].GhiChu_NVTuVan = '';
                cthd[i].GhiChu_NVThucHienPrint = '';
                cthd[i].GhiChu_NVTuVanPrint = '';
                cthd[i].ThoiGianThucHien = 0;
                cthd[i].PhiDichVu = 0;
                cthd[i].TongPhiDichVu = 0;
                cthd[i].ID_ViTri = null;
                cthd[i].TenViTri = '';

                cthd[i].ChatLieu = '';
                cthd[i].ID_ChiTietGoiDV = null;
                cthd[i].ID_ChiTietDinhLuong = null;
                cthd[i].PTChietKhau = 0;
                cthd[i].TienChietKhau = 0;
                cthd[i].PTThue = 0;
                cthd[i].TienThue = 0;
                cthd[i].ID_KhuyenMai = null;
                cthd[i].IsKhuyenMai = false;
                cthd[i].TenKhuyenMai = '';
                cthd[i].HangHoa_KM = [];
                cthd[i].TangKem = false;
                if (loaiHD === 2) {
                    cthd[i].DonGia = 0;
                    cthd[i].GiaBan = 0;
                }
                cthd[i].DonGia = cthd[i].GiaBan;
                cthd[i].ThanhTien = cthd[i].GiaBan * cthd[i].SoLuong;
                cthd[i].ThanhToan = cthd[i].ThanhTien;

                if (self.ThietLap().DatHangXuatAm === false) {
                    if (cthd[i].QuanLyTheoLoHang === false) {
                        if (cthd[i].LaHangHoa) {
                            cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                        }
                    }
                    else {
                        if (cthd[i].LaHangHoa) {
                            cthd[i].CssWarning = (cthd[i].SoLuong > cthd[i].TonKho);
                            for (let j = 1; j < cthd[i].DM_LoHang.length; j++) {
                                cthd[i].DM_LoHang[j].CssWarning = (cthd[i].DM_LoHang[j].SoLuong > cthd[i].DM_LoHang[j].TonKho);
                            }
                        }
                    }
                }
                else {
                    cthd[i].CssWarning = false;
                    for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                        cthd[i].DM_LoHang[j].CssWarning = false;
                    }
                }

                for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                    cthd[i].DM_LoHang[j].MaHoaDon = maHDNew;
                    cthd[i].DM_LoHang[j].LoaiHoaDon = loaiHD;
                    cthd[i].DM_LoHang[j].ID_ViTri = null;
                    cthd[i].DM_LoHang[j].TenViTri = '';
                    cthd[i].DM_LoHang[j].ChatLieu = '';
                    cthd[i].DM_LoHang[j].ID_ChiTietGoiDV = null;
                    cthd[i].DM_LoHang[j].ID_ChiTietDinhLuong = null;
                    cthd[i].DM_LoHang[j].PTChietKhau = 0;
                    cthd[i].DM_LoHang[j].TienChietKhau = 0;
                    cthd[i].DM_LoHang[j].PhiDichVu = 0;
                    cthd[i].DM_LoHang[j].TongPhiDichVu = 0;
                    cthd[i].DM_LoHang[j].PTThue = 0;
                    cthd[i].DM_LoHang[j].TienThue = 0;
                    if (loaiHD === 2) {
                        cthd[i].DM_LoHang[j].DonGia = 0;
                        cthd[i].DM_LoHang[j].GiaBan = 0;
                    }
                    cthd[i].DM_LoHang[j].DonGia = cthd[i].DM_LoHang[j].GiaBan;
                    cthd[i].DM_LoHang[j].ThanhTien = cthd[i].DM_LoHang[j].GiaBan * cthd[i].DM_LoHang[j].SoLuong;
                    cthd[i].DM_LoHang[j].ThanhToan = cthd[i].DM_LoHang[j].ThanhTien;
                }
                for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                    cthd[i].HangCungLoais[j].MaHoaDon = maHDNew;
                    cthd[i].HangCungLoais[j].LoaiHoaDon = loaiHD;
                    cthd[i].HangCungLoais[j].ID_ViTri = null;
                    cthd[i].HangCungLoais[j].TenViTri = '';
                    cthd[i].HangCungLoais[j].ChatLieu = '';
                    cthd[i].HangCungLoais[j].ID_ChiTietGoiDV = null;
                    cthd[i].HangCungLoais[j].ID_ChiTietDinhLuong = null;
                    cthd[i].HangCungLoais[j].PTChietKhau = 0;
                    cthd[i].HangCungLoais[j].TienChietKhau = 0;
                    cthd[i].HangCungLoais[j].PhiDichVu = 0;
                    cthd[i].HangCungLoais[j].TongPhiDichVu = 0;
                    cthd[i].HangCungLoais[j].PTThue = 0;
                    cthd[i].HangCungLoais[j].TienThue = 0;
                    if (loaiHD === 2) {
                        cthd[i].HangCungLoais[j].DonGia = 0;
                        cthd[i].HangCungLoais[j].GiaBan = 0;
                    }
                    cthd[i].HangCungLoais[j].DonGia = cthd[i].HangCungLoais[j].GiaBan;
                    cthd[i].HangCungLoais[j].ThanhTien = cthd[i].HangCungLoais[j].GiaBan * cthd[i].HangCungLoais[j].SoLuong;
                    cthd[i].HangCungLoais[j].ThanhToan = cthd[i].HangCungLoais[j].ThanhTien;
                }
                for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                    cthd[i].ThanhPhanComBo[j].MaHoaDon = maHDNew;
                    cthd[i].ThanhPhanComBo[j].LoaiHoaDon = loaiHD;
                }
            }
        }
        return cthd;
    }

    function ChangeLoaiHD_CheckHasKhuyenMai_orUsingService(loaiHD) {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }

        var loaiHDCurrent = self.HoaDons().LoaiHoaDon();
        var maHDOld = _maHoaDon;
        var idRandomHD = self.HoaDons().IDRandom();
        if (loaiHDCurrent === loaiHD) {
            return;
        }

        var countHD = 1;
        let maHDNew = '', mes = '';
        var hd = localStorage.getItem(lcListHD);
        if (hd !== null) {
            hd = JSON.parse(hd);
        }
        else {
            hd = [];
        }
        countHD = GetMax_MaHoaDon(loaiHD, hd) + 1;
        switch (loaiHD) {
            case 3:
                maHDNew = nameHD_InsertDH + countHD;
                mes = 'báo giá';
                break;
            case 19:
                maHDNew = nameHD_AddGoiDV + countHD;
                mes = 'mua gói dịch vụ mới';
                break;
            case 2:
                maHDNew = nameHD_BaoHanh + countHD;
                mes = 'Hóa đơn bảo hành';
                break;
        }

        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
        }
        else {
            cthd = [];
        }

        var haveKhuyenMai = false;
        var hdCurrent = GetHDOpening_byIDRandom(idRandomHD, hd);
        if (hdCurrent.length > 0) {
            haveKhuyenMai = hdCurrent[0].ID_KhuyenMai != null && hdCurrent[0].ID_KhuyenMai !== undefined;

            if (haveKhuyenMai === false) {
                let ctKM = $.grep(cthd, function (x) {
                    return x.IDRandomHD === idRandomHD && x.ID_KhuyenMai !== null && x.ID_KhuyenMai !== undefined;
                });
                if (ctKM.length > 0) {
                    haveKhuyenMai = true;
                }
            }

            if (haveKhuyenMai) {
                dialogConfirm_OKCancel('Xác nhận', 'Hóa đơn đang có chương trình khuyến mại được áp dụng. Bạn có chắc chắn chuyển sang <b>' + mes + ' </b> không?', function () {
                    hd = ChangeLoaiHD_ResetHD(hd, maHDNew, loaiHD);
                    cthd = ChangeLoaiHD_CTHD(cthd, maHDNew, loaiHD);
                    localStorage.setItem(lcListHD, JSON.stringify(hd));
                    localStorage.setItem(lcListCTHD, JSON.stringify(cthd));

                    // remove KM of HoaDon
                    let lstKM_HD = localStorage.getItem(lcProductKM_HoaDon);
                    if (lstKM_HD !== null) {
                        lstKM_HD = JSON.parse(lstKM_HD);
                        lstKM_HD = $.grep(lstKM_HD, function (x) {
                            return x.IDRandomHD !== idRandomHD;
                        });
                        localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(lstKM_HD));
                    }
                    localStorage.setItem(lcMaHD, maHDNew);

                    BindHD_CTHDafterSave();
                    UpdateCacheHDLe(idRandomHD, false);
                    Call_6Func();
                    ActiveTab_SoDoPhong();
                }, function () {
                    $('#modalPopuplgDelete').modal("hide");
                    _maHoaDon = maHDOld;
                    localStorage.setItem(lcMaHD, _maHoaDon);
                    self.HoaDons().LoaiHoaDon(loaiHDCurrent);

                    Call_6Func();
                    ActiveTab_SoDoPhong();
                });
            }
            else {
                let usingService = false;
                let useGDV = $.grep(cthd, function (x) {
                    return x.IDRandomHD === idRandomHD && x.ChatLieu === '4';
                });
                if (useGDV.length > 0) {
                    usingService = true;
                }
                if (usingService) {
                    dialogConfirm_OKCancel('Xác nhận', 'Hóa đơn đang sử dụng <b> gói dịch vụ </b>. Bạn có chắc chắn chuyển sang <b>' + mes + ' </b> không?', function () {
                        hd = ChangeLoaiHD_ResetHD(hd, maHDNew, loaiHD);
                        cthd = ChangeLoaiHD_CTHD(cthd, maHDNew, loaiHD);
                        localStorage.setItem(lcListHD, JSON.stringify(hd));
                        localStorage.setItem(lcListCTHD, JSON.stringify(cthd));

                        localStorage.setItem(lcMaHD, maHDNew);
                        BindHD_CTHDafterSave();
                        UpdateCacheHDLe(idRandomHD, false);
                        Call_6Func();
                        ActiveTab_SoDoPhong();
                    }, function () {
                        $('#modalPopuplgDelete').modal("hide");
                        _maHoaDon = maHDOld;
                        localStorage.setItem(lcMaHD, _maHoaDon);
                        self.HoaDons().LoaiHoaDon(loaiHDCurrent);
                        Call_6Func();
                        ActiveTab_SoDoPhong();
                    });
                }
                else {
                    for (let i = 0; i < hd.length; i++) {
                        if (hd[i].IDRandom === idRandomHD) {
                            hd[i].MaHoaDon = maHDNew;
                            hd[i].LoaiHoaDon = loaiHD;
                            hd[i].DiemQuyDoi = 0;
                            hd[i].TTBangDiem = 0;

                            if (loaiHD === 19) {
                                let ngaysudungGoiDV = moment(new Date()).format('DD/MM/YYYY');
                                let nextYear = now.getFullYear() + 1;
                                let ngayhethanGoiDV = moment(new Date()).format('DD/MM') + '/' + nextYear;
                                hd[i].NgayApDungGoiDV = ngaysudungGoiDV;
                                hd[i].HanSuDungGoiDV = null;
                            }
                            else {
                                hd[i].NgayApDungGoiDV = null;
                                hd[i].HanSuDungGoiDV = null;
                                hd[i].DiemGiaoDich = 0;
                            }
                            break;
                        }
                    }

                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandomHD === idRandomHD) {
                            cthd[i].LoaiHoaDon = loaiHD;
                            cthd[i].MaHoaDon = maHDNew;

                            for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                                cthd[i].DM_LoHang[j].MaHoaDon = maHDNew;
                                cthd[i].DM_LoHang[j].LoaiHoaDon = loaiHD;
                            }
                            for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                                cthd[i].HangCungLoais[j].MaHoaDon = maHDNew;
                                cthd[i].HangCungLoais[j].LoaiHoaDon = loaiHD;
                            }
                            for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                                cthd[i].ThanhPhanComBo[j].MaHoaDon = maHDNew;
                                cthd[i].ThanhPhanComBo[j].LoaiHoaDon = loaiHD;
                            }
                        }
                    }
                    if (loaiHD === 2) {
                        for (let i = 0; i < cthd.length; i++) {
                            if (cthd[i].IDRandomHD === idRandomHD) {
                                cthd[i].DonGia = 0;
                                cthd[i].GiaBan = 0;
                                cthd[i].PTChietKhau = 0;
                                cthd[i].TienChietKhau = 0;
                                cthd[i].PTThue = 0;
                                cthd[i].TienThue = 0;
                                cthd[i].ThanhTien = 0;
                                cthd[i].ThanhToan = 0;

                                for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                                    cthd[i].DM_LoHang[j].DonGia = 0;
                                    cthd[i].DM_LoHang[j].GiaBan = 0;
                                    cthd[i].DM_LoHang[j].PTChietKhau = 0;
                                    cthd[i].DM_LoHang[j].TienChietKhau = 0;
                                    cthd[i].DM_LoHang[j].PTThue = 0;
                                    cthd[i].DM_LoHang[j].TienThue = 0;
                                    cthd[i].DM_LoHang[j].ThanhTien = 0;
                                    cthd[i].DM_LoHang[j].ThanhToan = 0;
                                }
                                for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                                    cthd[i].HangCungLoais[j].DonGia = 0;
                                    cthd[i].HangCungLoais[j].GiaBan = 0;
                                    cthd[i].HangCungLoais[j].PTChietKhau = 0;
                                    cthd[i].HangCungLoais[j].TienChietKhau = 0;
                                    cthd[i].HangCungLoais[j].PTThue = 0;
                                    cthd[i].HangCungLoais[j].TienThue = 0;
                                    cthd[i].HangCungLoais[j].ThanhTien = 0;
                                    cthd[i].HangCungLoais[j].ThanhToan = 0;
                                }
                                for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                                    cthd[i].ThanhPhanComBo[j].DonGia = 0;
                                    cthd[i].ThanhPhanComBo[j].GiaBan = 0;
                                    cthd[i].ThanhPhanComBo[j].PTChietKhau = 0;
                                    cthd[i].ThanhPhanComBo[j].TienChietKhau = 0;
                                    cthd[i].ThanhPhanComBo[j].PTThue = 0;
                                    cthd[i].ThanhPhanComBo[j].TienThue = 0;
                                    cthd[i].ThanhPhanComBo[j].ThanhTien = 0;
                                    cthd[i].ThanhPhanComBo[j].ThanhToan = 0;
                                }
                            }
                        }
                    }
                    localStorage.setItem(lcListHD, JSON.stringify(hd));
                    localStorage.setItem(lcListCTHD, JSON.stringify(cthd));

                    UpdateCacheHDLe(idRandomHD, false);

                    localStorage.setItem(lcMaHD, maHDNew);
                    BindHD_CTHDafterSave();
                    Call_6Func();
                }
            }
        }
        else {
            let objHDNew = newHoaDon(maHDNew, loaiHD);
            hd.push(objHDNew);
            localStorage.setItem(lcListHD, JSON.stringify(hd));
            _maHoaDon = objHDNew.MaHoaDon;
            localStorage.setItem(lcMaHD, objHDNew.MaHoaDon);
            BindHD_CTHDafterSave();
            Call_6Func();
            ActiveTab_SoDoPhong();
        }
    }

    self.Click_tabBaoHanh = function () {
        ChangeLoaiHD_CheckHasKhuyenMai_orUsingService(2);
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
    }

    self.clickDatHang = function () {
        ChangeLoaiHD_CheckHasKhuyenMai_orUsingService(3);
    }
    self.saveDatHang = function (updateHDDatHang) {
        var lstHDTemp = localStorage.getItem(lcListHD);
        var objAdd = [];
        if (lstHDTemp !== null) {
            lstHDTemp = JSON.parse(lstHDTemp);
            objAdd = GetHDOpening_byMaHoaDon(_maHoaDon, lstHDTemp);

            UpdateInforKH_inLstDoiTuongs(objAdd[0], false);

            if (commonStatisJs.CheckNull(objAdd[0].ID_DoiTuong) || objAdd[0].ID_DoiTuong === const_GuidEmpty) {
                ShowMessage_Danger('Vui lòng chọn khách hàng khi đặt hàng');
                SaveHD_RemoveDisable();
                return false;
            }

            var objCTAdd = [];
            var listAllCTHD = localStorage.getItem(lcListCTHD);
            if (listAllCTHD !== null) {
                listAllCTHD = JSON.parse(listAllCTHD);
                objCTAdd = GetCTHoaDon_FromArr(listAllCTHD, objAdd[0].IDRandom);
            }
            if (objCTAdd.length === 0) {
                ShowMessage_Danger('Vui lòng nhập chi tiết hóa đơn');
                SaveHD_RemoveDisable();
                return false;
            }
            var msgErr = "";
            if (self.ThietLap().DatHangXuatAm === false) {
                // check if SoLuong > TonKho
                for (let i = 0; i < objCTAdd.length; i++) {
                    if (objCTAdd[i].LaHangHoa && objCTAdd[i].SoLuong > objCTAdd[i].TonKho) {
                        msgErr += objCTAdd[i].TenHangHoa + ", ";
                    }
                }
                if (msgErr !== "") {
                    msgErr = Remove_LastComma(msgErr);
                    ShowMessage_Danger('Không đủ số lượng tồn kho cho sản phẩm ' + msgErr);
                    SaveHD_RemoveDisable();
                    return false;
                }
            }
            for (let i = 0; i < objCTAdd.length; i++) {
                if (objCTAdd[i].QuanLyTheoLoHang) {
                    if (objCTAdd[i].ID_LoHang === null || objCTAdd[i].ID_LoHang === undefined) {
                        ShowMessage_Danger('Vui lòng nhập đầy đủ thông tin lô cho hàng hóa');
                        SaveHD_RemoveDisable();
                        return;
                    }
                }
            }

            // reset DatHang: ID_ChiTietGoiDV: null, ChatLieu = empty
            for (let i = 0; i < objCTAdd.length; i++) {
                objCTAdd[i].DonGia = objCTAdd[i].GiaBan;
                objCTAdd[i].ID_ChiTietGoiDV = null;
                objCTAdd[i].ChatLieu = '';
            }
            // remove CTHD with QuanLyTheoLo, but ID_Lo== null
            objCTAdd = GetArrCTHD_withIDLoHangOtherNull(objCTAdd);
            var myData = {};
            let maHoaDon = objAdd[0].MaHoaDon;
            if (objAdd[0].StatusOffline === true || maHoaDon.indexOf('Copy') > -1 || objAdd[0].ID !== const_GuidEmpty) {
                objAdd[0].MaHoaDon = maHoaDon;
            }
            else {
                objAdd[0].MaHoaDon = null;
            }
            // ID_DonVi
            if (objAdd[0].ID_DonVi === undefined || objAdd[0].ID_DonVi === null || objAdd[0].ID_DonVi === '') {
                objAdd[0].ID_DonVi = id_DonVi;
            }
            delete objAdd[0]["ID_HoaDon"];

            var ngaylapHD = GetNgayLapHD_whenSave(objAdd[0].NgayLapHoaDon);
            var phaiTTNew = formatNumberToFloat(objAdd[0].TongTienHang) - objAdd[0].TongGiamGiaKM_HD + formatNumberToFloat(objAdd[0].TongTienThue);
            objAdd[0].NgayLapHoaDon = ngaylapHD;
            objAdd[0].PhaiThanhToan = phaiTTNew;
            myData.objHoaDon = objAdd[0];
            myData.objCTHoaDon = objCTAdd;
            myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
            var lstDoiTuong = localStorage.getItem(lcDM_DoiTuong)
            var itemDoiTuong = [];
            if (lstDoiTuong !== null) {
                var lstDoiTuong1 = JSON.parse(lstDoiTuong);
                itemDoiTuong = $.grep(lstDoiTuong1, function (item) {
                    return item.ID === objAdd[0].ID_DoiTuong;
                });
            }
            if (itemDoiTuong.length > 0) {
                // 1.add DoiTuong, HoaDon
                AddKhachHang_HoaDon(itemDoiTuong[0], myData, false, updateHDDatHang);
            }
            else {
                PostHD_SoQuy_SaveHD(myData, updateHDDatHang);
            }
        }
        else {
            ShowMessage_Danger('Vui lòng nhập thông tin hóa đơn');
            SaveHD_RemoveDisable();
            return;
        }
    }

    function Update_StatusXuLy_ofHDDatHang(idRandomHD, isChangeHDXuLy = true) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            // find DH000
            var hdXuLy = $.grep(lstHD, function (x) {
                return x.LoaiHoaDon === 3 && x.IDRandom === idRandomHD && x.ID !== const_GuidEmpty;
            });
            // update Status change = true
            if (hdXuLy.length > 0) {
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].ID === hdXuLy[0].ID) {
                        lstHD[i].IsChangeHDXuLy = isChangeHDXuLy;
                        break;
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
            }
        }
    }

    // create HDBan and return IDRandomHD --> used to check KMai HoaDon
    function Update_IDChiTietHD_toCTHD(idRandomHD, cthdDB) {
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthdDB.length; i++) {
                for (let j = 0; j < cthd.length; j++) {
                    if (cthd[j].IDRandomHD === idRandomHD) {
                        for (let k = 0; k < cthd[j].ThanhPhanComBo.length; k++) {
                            let forCb1 = cthd[j].ThanhPhanComBo[k];
                            if (!commonStatisJs.CheckNull(cthdDB[i].ThanhPhanComBo)) {
                                for (let m = 0; m < cthdDB[i].ThanhPhanComBo.length; m++) {
                                    let forCb2 = cthdDB[i].ThanhPhanComBo[m];
                                    if (forCb1.ID_DonViQuiDoi === forCb2.ID_DonViQuiDoi) {
                                        cthd[j].ThanhPhanComBo[k].ID = forCb2.ID;
                                    }
                                }
                            }
                        }

                        if (cthd[j].ID_DonViQuiDoi === cthdDB[i].ID_DonViQuiDoi
                            && cthd[j].ID_LoHang === cthdDB[i].ID_LoHang) {
                            cthd[j].ID = cthdDB[i].ID;
                            break;
                        }
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
        }
    }
    function CreateHD_fromHDDatHang() {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var max = GetMax_MaHoaDon(1, lstHD);
            var itemHD = $.grep(lstHD, function (item) {
                return item.MaHoaDonTraHang === _maHoaDon && item.StatusOffline === false && item.NguoiTao === userLogin;
            });
            var lcXuLiDonHang = localStorage.getItem(lcXuLiDonHang_Const);
            var itemHDGoc = [];
            if (lcXuLiDonHang !== null) {
                lcXuLiDonHang = JSON.parse(lcXuLiDonHang);
                itemHDGoc = $.grep(lcXuLiDonHang, function (itemXL) {
                    return itemXL.MaHoaDon === _maHoaDon;// _maHoaDon = BG000...
                });
            }
            var idRandomHD = '';
            if (itemHD.length > 0) {
                // Da tao HD from this HD DH000
                _maHoaDon = itemHD[0].MaHoaDon;
                idRandomHD = itemHD[0].IDRandom;
                localStorage.setItem(lcMaHD, _maHoaDon);
            }
            else {
                if (itemHDGoc.length > 0) {
                    var maHDNew = nameHD_InsertBH + (max + 1);
                    var khachDaTra = 0;
                    var tongGiamGia = itemHDGoc[0].TongGiamGia;
                    // Yeu Cau = 1: PhieuTam
                    if (itemHDGoc[0].YeuCau === "1") {
                        // neu HD DatHang chua duoc xu li lan nao --> giu nguyen KhachDaTra
                        khachDaTra = itemHDGoc[0].KhachDaTra;
                    }
                    else {
                        // neu XuLyHD nhung khong HoanTraTamUng (todo)
                        // nguoc lai, gan KhachDaTra = 0  (vi da duoc hoan tra tam ung khi xu li lan 1)
                        khachDaTra = 0;
                        // neu HD dat hang co giam gia la VND --> gan tonggiam gia =0 (vi da giam gia het khi xu li don hang lan 1)
                        if (itemHDGoc[0].TongChietKhau === 0) {
                            // neu thay đổi giảm giá (VND): tongGG = tongGGnew - tongGGold
                            tongGiamGia = itemHDGoc[0].TongGiamGia - itemHDGoc[0].TongGiamGiaDB;
                            tongGiamGia = tongGiamGia < 0 ? 0 : tongGiamGia;
                        }
                    }
                    idRandomHD = CreateIDRandom('HD_');
                    var objHDNew = {
                        ID: const_GuidEmpty,
                        IDRandom: idRandomHD,
                        LoaiHoaDon: 1,
                        MaHoaDon: maHDNew,
                        MaHoaDonDB: null,
                        MaHoaDonTraHang: itemHDGoc[0].MaHoaDon,
                        ID_HoaDon: itemHDGoc[0].ID,
                        ID_DoiTuong: itemHDGoc[0].ID_DoiTuong,
                        ID_BangGia: itemHDGoc[0].ID_BangGia,
                        ID_NhanVien: itemHDGoc[0].ID_NhanVien,
                        ID_DonVi: itemHDGoc[0].ID_DonVi,
                        NguoiTao: userLogin,
                        NgayLapHoaDon: null,
                        TongTienHang: itemHDGoc[0].TongTienHang,
                        PhaiThanhToan: itemHDGoc[0].PhaiThanhToan,
                        TongGiamGia: tongGiamGia,
                        DaThanhToan: itemHDGoc[0].DaThanhToan,
                        PTThueHoaDon: itemHDGoc[0].PTThueHoaDon,
                        TongTienThue: itemHDGoc[0].TongTienThue,
                        ChoThanhToan: false,
                        DienGiai: itemHDGoc[0].DienGiai,
                        DVTinhGiam: itemHDGoc[0].DVTinhGiam,
                        TongChietKhau: itemHDGoc[0].TongChietKhau, // PTGiam
                        Status: 1, // open(1) - close(0) : use HDOffline
                        StatusOffline: false,
                        TienMat: itemHDGoc[0].TienMat,
                        TienGui: itemHDGoc[0].TienGui,
                        TienThua: 0,
                        // Tra Hang
                        PhaiThanhToanDB: 0,
                        TongGiaGocHangTra: 0,
                        TongChiPhiHangTra: 0,
                        TongChiPhi: 0,
                        HoanTraThuKhac: 0,
                        TongTienTra: 0,
                        PhaiTraKhach: 0,
                        DaTraKhach: 0,
                        GiaoHang: false,
                        MaHoaDonTH_NVien: '',
                        TongGiamGiaDB: 0,
                        PTGiamDB: 0,
                        TongThueDB: 0,
                        PTThueDB: 0,
                        TrangThaiHD: 1,// HD xuly tuDH
                        IsActive: '',
                        KhachDaTra: khachDaTra,
                        KhuyeMai_GiamGia: itemHDGoc[0].KhuyeMai_GiamGia,
                        DiemGiaoDich: 0,
                        TTBangDiem: 0,
                        DiemQuyDoi: 0,
                        DiemHienTai: 0,
                        DiemGiaoDichDB: 0,
                        DiemCong: 0, // use when KM_Cong diem

                        // Goi dich vu
                        NgayApDungGoiDV: null,
                        HanSuDungGoiDV: null,
                        IsChangeHDXuLy: false,
                        BH_NhanVienThucHiens: [],
                        TienTheGiaTri: 0,
                        ThoiGianThucHien: 0,
                        CreateTime: 0,
                        TenViTriHD: '',
                        ID_ViTri: null,
                        TenNhanVien: itemHDGoc[0].TenNhanVien,

                        PTChietKhauHH: itemHDGoc[0].PTChietKhauHH,
                        TongGiamGiaHang: itemHDGoc[0].TongGiamGiaHang,
                        TongTienHangChuaCK: itemHDGoc[0].TongTienHangChuaCK,
                        TongTienKhuyenMai_CT: 0,
                        TongGiamGiaKhuyenMai_CT: 0,
                    }
                    lstHD.push(objHDNew);
                    localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                    // find CTHD with maHD & push
                    var lstCTHD = localStorage.getItem(lcListCTHD);
                    if (lstCTHD !== null) {
                        lstCTHD = JSON.parse(lstCTHD);
                        var ctDatHangCopy = localStorage.getItem(lcCTDatHang_Const);
                        if (ctDatHangCopy !== null) {
                            ctDatHangCopy = JSON.parse(ctDatHangCopy);
                            for (let i = 0; i < ctDatHangCopy.length; i++) {
                                if (ctDatHangCopy[i].MaHoaDon === _maHoaDon) {
                                    ctDatHangCopy[i].IDRandom = CreateIDRandom('RandomCTHD_');
                                    ctDatHangCopy[i].IDRandomHD = idRandomHD;
                                    ctDatHangCopy[i].MaHoaDon = maHDNew;
                                    ctDatHangCopy[i].LoaiHoaDon = 1;
                                    ctDatHangCopy[i].ID_ChiTietGoiDV = ctDatHangCopy[i].ID;
                                    if (ctDatHangCopy[i].QuanLyTheoLoHang === false) {
                                        let itemHH = $.grep(self.HangHoaAll(), function (x) {
                                            return x.ID_DonViQuiDoi === ctDatHangCopy[i].ID_DonViQuiDoi;
                                        });
                                        if (itemHH.length > 0) {
                                            ctDatHangCopy[i].TonKho = itemHH[0].TonKho;
                                            ctDatHangCopy[i].LaHangHoa = itemHH[0].LaHangHoa;
                                            ctDatHangCopy[i].GiaVon = itemHH[0].GiaVon;
                                            ctDatHangCopy[i].ThoiGianThucHien = itemHH[0].SoPhutThucHien === null ? 0 : itemHH[0].SoPhutThucHien;
                                        }
                                        // show warning if TonKho < SoLuong
                                        if (self.ThietLap().XuatAm === false && ctDatHangCopy[i].LaHangHoa && ctDatHangCopy[i].TonKho < ctDatHangCopy[i].SoLuong) {
                                            ctDatHangCopy[i].CssWarning = true;
                                        }
                                        else {
                                            ctDatHangCopy[i].CssWarning = false;
                                        }
                                        // soluong parent = 0
                                        if (ctDatHangCopy[i].SoLuongConLai === 0) {
                                            // find HangCungLoais with SoLuongConlai > 0
                                            let itemSL_otherZero = $.grep(ctDatHangCopy[i].HangCungLoais, function (x) {
                                                return x.SoLuongConLai > 0;
                                            });
                                            if (itemSL_otherZero.length > 0) {
                                                let min = Math.min.apply(Math, itemSL_otherZero.map(function (x) {
                                                    return x.SoThuTu.toString().match(/\d+/);
                                                }));
                                                // assign HangCungLoai with stt min for CTDatHang
                                                for (let k = 0; k < ctDatHangCopy[i].HangCungLoais.length; k++) {
                                                    let minSTT = ctDatHangCopy[i].HangCungLoais[k];
                                                    if (minSTT.SoThuTu === min) {
                                                        ctDatHangCopy[i].ID_ChiTietGoiDV = minSTT.ID;
                                                        ctDatHangCopy[i].SoLuongConLai = minSTT.SoLuongConLai;
                                                        ctDatHangCopy[i].SoLuongDaMua = minSTT.SoLuongConLai;
                                                        ctDatHangCopy[i].SoLuong = minSTT.SoLuongConLai;
                                                        ctDatHangCopy[i].DonGia = minSTT.DonGia;
                                                        ctDatHangCopy[i].GiaBan = minSTT.GiaBan;
                                                        ctDatHangCopy[i].PTThue = minSTT.PTThue;
                                                        ctDatHangCopy[i].TienThue = minSTT.TienThue;
                                                        ctDatHangCopy[i].TienChietKhau = minSTT.TienChietKhau;
                                                        ctDatHangCopy[i].PTChietKhau = minSTT.PTChietKhau;
                                                        ctDatHangCopy[i].DVTinhGiam = minSTT.PTChietKhau > 0 || minSTT.TienChietKhau === 0 ? '%' : 'VND';
                                                        ctDatHangCopy[i].ThanhTien = minSTT.SoLuongConLai * (minSTT.GiaBan - minSTT.TienChietKhau);
                                                        ctDatHangCopy[i].ThanhToan = minSTT.SoLuongConLai * (minSTT.GiaBan - minSTT.TienChietKhau + minSTT.TienThue);
                                                        break;
                                                    }
                                                }
                                                // remove HangCungLoais with SoLuongConLai = 0 or STT min  (because HangCungLoai min are now parent)
                                                ctDatHangCopy[i].HangCungLoais = $.grep(ctDatHangCopy[i].HangCungLoais, function (x) {
                                                    return x.SoLuongConLai > 0 && x.SoThuTu !== min;
                                                });
                                            }
                                        }
                                        else { // soluong parent !=0 
                                            // remove lot with SoLuongConLai = 0
                                            ctDatHangCopy[i].HangCungLoais = $.grep(ctDatHangCopy[i].HangCungLoais, function (x) {
                                                return x.SoLuongConLai > 0;
                                            });
                                            ctDatHangCopy[i].SoLuongDaMua = ctDatHangCopy[i].SoLuongConLai;
                                            ctDatHangCopy[i].SoLuong = ctDatHangCopy[i].SoLuongConLai;
                                            ctDatHangCopy[i].ThanhTien = ctDatHangCopy[i].SoLuongConLai * (ctDatHangCopy[i].GiaBan - ctDatHangCopy[i].TienChietKhau);
                                            ctDatHangCopy[i].ThanhToan = ctDatHangCopy[i].SoLuongConLai
                                                * (ctDatHangCopy[i].GiaBan - ctDatHangCopy[i].TienChietKhau + ctDatHangCopy[i].TienThue)
                                        }
                                    }
                                    else { // quanlytheolo
                                        if (ctDatHangCopy[i].SoLuongConLai === 0) {
                                            // find DM_LoHang with SoLuongConlai > 0
                                            let itemSL_otherZero = $.grep(ctDatHangCopy[i].DM_LoHang, function (x) {
                                                return x.SoLuongConLai > 0;
                                            });
                                            if (itemSL_otherZero.length > 0) {
                                                let min = Math.min.apply(Math, itemSL_otherZero.map(function (x) {
                                                    return x.SoThuTu.toString().match(/\d+/);
                                                }));
                                                // assign LoHang min for CTDatHang
                                                for (let k = 0; k < ctDatHangCopy[i].DM_LoHang.length; k++) {
                                                    let minSTT = ctDatHangCopy[i].DM_LoHang[k];
                                                    if (minSTT.SoThuTu === min) {
                                                        ctDatHangCopy[i].DM_LoHang[k].LoaiHoaDon = 1;
                                                        ctDatHangCopy[i].DM_LoHang[k].LotParent = true;
                                                        ctDatHangCopy[i].DM_LoHang[k].IDRandom = ctDatHangCopy[i].IDRandom;
                                                        ctDatHangCopy[i].DM_LoHang[k].IDRandomHD = idRandomHD;
                                                        ctDatHangCopy[i].ID_ChiTietGoiDV = minSTT.ID;
                                                        ctDatHangCopy[i].SoLuongConLai = minSTT.SoLuongConLai;
                                                        ctDatHangCopy[i].SoLuongDaMua = minSTT.SoLuongConLai;
                                                        ctDatHangCopy[i].SoLuong = minSTT.SoLuongConLai;
                                                        ctDatHangCopy[i].DonGia = minSTT.DonGia;
                                                        ctDatHangCopy[i].GiaBan = minSTT.GiaBan;
                                                        ctDatHangCopy[i].TienChietKhau = minSTT.TienChietKhau;
                                                        ctDatHangCopy[i].PTChietKhau = minSTT.PTChietKhau;
                                                        ctDatHangCopy[i].PTThue = minSTT.PTThue;
                                                        ctDatHangCopy[i].TienThue = minSTT.TienThue;
                                                        ctDatHangCopy[i].DVTinhGiam = minSTT.PTChietKhau > 0 || minSTT.TienChietKhau === 0 ? '%' : 'VND';
                                                        ctDatHangCopy[i].ThanhTien = minSTT.SoLuongConLai * (minSTT.GiaBan - minSTT.TienChietKhau);
                                                        ctDatHangCopy[i].ThanhToan = minSTT.SoLuongConLai * (minSTT.GiaBan - minSTT.TienChietKhau + minSTT.TienThue);
                                                        // assign again ID_lohang for CTHDDathang (because CTDatHangold have ID_Lohang old)
                                                        ctDatHangCopy[i].ID_LoHang = minSTT.ID_LoHang;
                                                        break;
                                                    }
                                                }
                                                // remove DM_LoHang with SoLuongConLai = 0
                                                ctDatHangCopy[i].DM_LoHang = $.grep(ctDatHangCopy[i].DM_LoHang, function (x) {
                                                    return x.SoLuongConLai > 0;
                                                });
                                            }
                                        }
                                        else { // soluong parent !=0 
                                            // remove lot with SoLuongConLai = 0
                                            ctDatHangCopy[i].DM_LoHang = $.grep(ctDatHangCopy[i].DM_LoHang, function (x) {
                                                return x.SoLuongConLai > 0;
                                            });
                                            ctDatHangCopy[i].SoLuongDaMua = ctDatHangCopy[i].SoLuongConLai;
                                            ctDatHangCopy[i].SoLuong = ctDatHangCopy[i].SoLuongConLai;
                                            ctDatHangCopy[i].ThanhTien = ctDatHangCopy[i].SoLuongConLai * (ctDatHangCopy[i].GiaBan - ctDatHangCopy[i].TienChietKhau);
                                            ctDatHangCopy[i].ThanhToan = ctDatHangCopy[i].SoLuongConLai
                                                * (ctDatHangCopy[i].GiaBan - ctDatHangCopy[i].TienChietKhau + ctDatHangCopy[i].TienThue);
                                        }
                                    }// end else quanlytheolo
                                    // update infor MaHoaDon, IDRandom, IDRandomHD into DM_LoHang, HangcungLoais after remove 
                                    if (ctDatHangCopy[i].SoLuongConLai > 0) {
                                        if (ctDatHangCopy[i].LaPTPhiDichVu) {
                                            ctDatHangCopy[i].TongPhiDichVu = RoundDecimal(ctDatHangCopy[i].PhiDichVu * ctDatHangCopy[i].DonGia * ctDatHangCopy[i].SoLuong / 100);
                                        }
                                        else {
                                            ctDatHangCopy[i].TongPhiDichVu = ctDatHangCopy[i].PhiDichVu * ctDatHangCopy[i].SoLuong;
                                        }
                                        for (let k = 1; k < ctDatHangCopy[i].DM_LoHang.length; k++) {
                                            let forIn = ctDatHangCopy[i].DM_LoHang[k];
                                            // assign TonKho
                                            let itemLot = $.grep(self.AllLot(), function (x) {
                                                return x.ID_LoHang === ctDatHangCopy[i].DM_LoHang[k].ID_LoHang
                                                    && x.ID_DonViQuiDoi === ctDatHangCopy[i].DM_LoHang[k].ID_DonViQuiDoi;
                                            });
                                            if (itemLot.length > 0) {
                                                ctDatHangCopy[i].DM_LoHang[k].TonKho = itemLot[0].TonKho;
                                            }
                                            ctDatHangCopy[i].DM_LoHang[k].IDRandom = CreateIDRandom('RandomCT_');
                                            ctDatHangCopy[i].DM_LoHang[k].IDRandomHD = idRandomHD
                                            ctDatHangCopy[i].DM_LoHang[k].MaHoaDon = maHDNew;
                                            ctDatHangCopy[i].DM_LoHang[k].LoaiHoaDon = objHDNew.LoaiHoaDon;
                                            ctDatHangCopy[i].DM_LoHang[k].ID_ChiTietGoiDV = forIn.ID;
                                            ctDatHangCopy[i].DM_LoHang[k].SoLuongDaMua = forIn.SoLuongConLai;
                                            ctDatHangCopy[i].DM_LoHang[k].SoLuong = forIn.SoLuongConLai;
                                            ctDatHangCopy[i].DM_LoHang[k].ThanhTien = forIn.SoLuongConLai
                                                * (forIn.GiaBan - forIn.TienChietKhau);
                                            ctDatHangCopy[i].DM_LoHang[k].ThanhToan = forIn.SoLuongConLai
                                                * (forIn.GiaBan - forIn.TienChietKhau + forIn.TienThue);
                                        }
                                        for (let k = 0; k < ctDatHangCopy[i].HangCungLoais.length; k++) {
                                            let forIn = ctDatHangCopy[i].HangCungLoais[k];
                                            ctDatHangCopy[i].HangCungLoais[k].IDRandom = CreateIDRandom('RandomCT_');
                                            ctDatHangCopy[i].HangCungLoais[k].IDRandomHD = idRandomHD;
                                            ctDatHangCopy[i].HangCungLoais[k].MaHoaDon = maHDNew;
                                            ctDatHangCopy[i].HangCungLoais[k].LoaiHoaDon = objHDNew.LoaiHoaDon;
                                            ctDatHangCopy[i].HangCungLoais[k].ID_ChiTietGoiDV = forIn.ID;
                                            ctDatHangCopy[i].HangCungLoais[k].SoLuongDaMua = forIn.SoLuongConLai;
                                            ctDatHangCopy[i].HangCungLoais[k].SoLuong = forIn.SoLuongConLai;
                                            ctDatHangCopy[i].HangCungLoais[k].ThanhTien = forIn.SoLuongConLai * (forIn.GiaBan - forIn.TienChietKhau);
                                            ctDatHangCopy[i].HangCungLoais[k].ThanhToan = forIn.SoLuongConLai * (forIn.GiaBan - forIn.TienChietKhau + forIn.TienThue);
                                            for (let m = 0; m < forIn.ThanhPhan_DinhLuong.length; m++) {
                                                forIn.ThanhPhan_DinhLuong[m].SoLuong = forIn.ThanhPhan_DinhLuong[m].SoLuongMacDinh * forIn.SoLuongConLai;
                                            }
                                            if (ctDatHangCopy[i].LaPTPhiDichVu) {
                                                ctDatHangCopy[i].HangCungLoais[k].TongPhiDichVu = RoundDecimal(ctDatHangCopy[i].PhiDichVu * forIn.GiaBan * forIn.SoLuong / 100);
                                            }
                                            else {
                                                ctDatHangCopy[i].HangCungLoais[k].TongPhiDichVu = ctDatHangCopy[i].PhiDichVu * forIn.SoLuong;
                                            }
                                        }

                                        for (let k = 0; k < ctDatHangCopy[i].ThanhPhanComBo.length; k++) {
                                            let forIn = ctDatHangCopy[i].ThanhPhanComBo[k];
                                            ctDatHangCopy[i].ThanhPhanComBo[k].IDRandom = CreateIDRandom('RandomCT_');
                                            ctDatHangCopy[i].ThanhPhanComBo[k].IDRandomHD = idRandomHD;
                                            ctDatHangCopy[i].ThanhPhanComBo[k].MaHoaDon = maHDNew;
                                            ctDatHangCopy[i].ThanhPhanComBo[k].LoaiHoaDon = objHDNew.LoaiHoaDon;
                                            ctDatHangCopy[i].ThanhPhanComBo[k].ID_ChiTietGoiDV = forIn.ID;
                                            ctDatHangCopy[i].ThanhPhanComBo[k].SoLuongDaMua = forIn.SoLuongConLai;
                                            ctDatHangCopy[i].ThanhPhanComBo[k].SoLuong = forIn.SoLuongConLai;
                                            ctDatHangCopy[i].ThanhPhanComBo[k].ThanhTien = forIn.SoLuongConLai * (forIn.GiaBan - forIn.TienChietKhau);
                                            ctDatHangCopy[i].ThanhPhanComBo[k].ThanhToan = forIn.SoLuongConLai * (forIn.GiaBan - forIn.TienChietKhau + forIn.TienThue);
                                            for (let m = 0; m < forIn.ThanhPhan_DinhLuong.length; m++) {
                                                forIn.ThanhPhan_DinhLuong[m].SoLuong = forIn.ThanhPhan_DinhLuong[m].SoLuongMacDinh * forIn.SoLuongConLai;
                                            }
                                            if (forIn.LaPTPhiDichVu) {
                                                ctDatHangCopy[i].ThanhPhanComBo[k].TongPhiDichVu = forIn.PhiDichVu * forIn.GiaBan * forIn.SoLuong / 100;
                                            }
                                            else {
                                                ctDatHangCopy[i].ThanhPhanComBo[k].TongPhiDichVu = forIn.PhiDichVu * forIn.SoLuong;
                                            }
                                        }
                                        lstCTHD.push(ctDatHangCopy[i]);
                                    }
                                }// end if _maHoaDon
                            }// end for ctDatHang
                            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                        }
                        _maHoaDon = maHDNew;
                        localStorage.setItem(lcMaHD, maHDNew);
                        UpdateAgain_ListDVT_forCTHD(false, idRandomHD);
                        UpdateCacheHDLe(idRandomHD, false);
                        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                    }
                }
            }
            return idRandomHD;
        }
    }
    function Update_IDChiTietHD_toCacheDH(cthdDB) {
        var lcCTDatHang = localStorage.getItem(lcCTDatHang_Const);
        if (lcCTDatHang !== null) {
            lcCTDatHang = JSON.parse(lcCTDatHang);
            for (let i = 0; i < cthdDB.length; i++) {
                for (let j = 0; j < lcCTDatHang.length; j++) {
                    if (lcCTDatHang[j].ID_DonViQuiDoi === cthdDB[i].ID_DonViQuiDoi) {

                        for (let k = 0; k < lcCTDatHang[j].ThanhPhanComBo.length; k++) {
                            let forCb1 = lcCTDatHang[j].ThanhPhanComBo[k];
                            if (!commonStatisJs.CheckNull(cthdDB[i].ThanhPhanComBo)) {
                                for (let m = 0; m < cthdDB[i].ThanhPhanComBo.length; m++) {
                                    let forCb2 = cthdDB[i].ThanhPhanComBo[m];
                                    if (forCb1.ID_DonViQuiDoi === forCb2.ID_DonViQuiDoi) {
                                        lcCTDatHang[j].ThanhPhanComBo[k].ID = forCb2.ID;
                                    }
                                }
                            }
                        }

                        if (lcCTDatHang[j].ThanhTien === cthdDB[i].ThanhTien) {
                            lcCTDatHang[j].ID = cthdDB[i].ID;
                            break;
                        }
                        else {
                            for (let k = 1; k < lcCTDatHang[j].DM_LoHang.length; k++) {
                                if (lcCTDatHang[j].DM_LoHang[k].ThanhTien === cthdDB[i].ThanhTien) {
                                    lcCTDatHang[j].DM_LoHang[k].ID = cthdDB[i].ID;
                                    j = lcCTDatHang.length; // esc loop lcCTDatHang
                                    break;
                                }
                            }
                            if (j < lcCTDatHang.length) {
                                for (let k = 0; k < lcCTDatHang[j].HangCungLoais.length; k++) {
                                    if (lcCTDatHang[j].HangCungLoais[k].ThanhTien === cthdDB[i].ThanhTien) {
                                        lcCTDatHang[j].HangCungLoais[k].ID = cthdDB[i].ID;
                                        j = lcCTDatHang.length; // esc loop lcCTDatHang
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            localStorage.setItem(lcCTDatHang_Const, JSON.stringify(lcCTDatHang));
        }
    }
    function UpdateCache_XuLyDonHang() {
        // update cache ctDH
        var lcCTDatHang = localStorage.getItem(lcCTDatHang_Const);
        if (lcCTDatHang !== null) {
            lcCTDatHang = JSON.parse(lcCTDatHang);
            var lstCTHD = localStorage.getItem(lcListCTHD);
            lstCTHD = JSON.parse(lstCTHD);
            var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
            // find cthd with idRandomHD 
            var cthdNew = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            var arrIDQuiDoiEx = [];
            for (let i = 0; i < lcCTDatHang.length; i++) {
                let cacheDH = lcCTDatHang[i];
                for (let j = 0; j < cthdNew.length; j++) {
                    let cthd = cthdNew[j];
                    if (cthd.ID_DonViQuiDoi === cacheDH.ID_DonViQuiDoi) {
                        arrIDQuiDoiEx.push(cacheDH.ID_DonViQuiDoi);
                        if (cthd.QuanLyTheoLoHang) {

                            if (cthd.ID_LoHang === cacheDH.ID_LoHang) {
                                lcCTDatHang[i].SoLuongConLai = parseFloat(cthd.SoLuong) - cacheDH.SoLuong + cacheDH.SoLuongConLai;
                                lcCTDatHang[i].DonGia = parseFloat(cthd.DonGia);
                                lcCTDatHang[i].GiaBan = parseFloat(cthd.GiaBan);
                                lcCTDatHang[i].TienChietKhau = parseFloat(cthd.TienChietKhau);
                                lcCTDatHang[i].PTChietKhau = parseFloat(cthd.PTChietKhau);
                                lcCTDatHang[i].PTThue = parseFloat(cthd.PTThue);
                                lcCTDatHang[i].TienThue = parseFloat(cthd.TienThue);
                                lcCTDatHang[i].ThanhTien = parseFloat(cthd.ThanhTien);
                                lcCTDatHang[i].ThanhToan = parseFloat(cthd.ThanhToan);
                            }
                        }
                        else {
                            lcCTDatHang[i].SoLuongConLai = parseFloat(cthd.SoLuong) - cacheDH.SoLuong + cacheDH.SoLuongConLai;
                            lcCTDatHang[i].DonGia = parseFloat(cthd.DonGia);
                            lcCTDatHang[i].GiaBan = parseFloat(cthd.GiaBan);
                            lcCTDatHang[i].TienChietKhau = parseFloat(cthd.TienChietKhau);
                            lcCTDatHang[i].PTChietKhau = parseFloat(cthd.PTChietKhau);
                            lcCTDatHang[i].PTThue = parseFloat(cthd.PTThue);
                            lcCTDatHang[i].TienThue = parseFloat(cthd.TienThue);
                            lcCTDatHang[i].ThanhTien = parseFloat(cthd.ThanhTien);
                            lcCTDatHang[i].ThanhToan = parseFloat(cthd.ThanhToan);
                        }

                        for (let k = 0; k < cacheDH.DM_LoHang.length; k++) {
                            for (let m = 0; m < cthd.DM_LoHang.length; m++) {
                                if (cacheDH.DM_LoHang[k].IDRandom === cthd.DM_LoHang[m].IDRandom) {
                                    lcCTDatHang[i].DM_LoHang[k].SoLuongConLai = parseFloat(cthd.DM_LoHang[m].SoLuong) - cacheDH.DM_LoHang[k].SoLuong + cacheDH.DM_LoHang[k].SoLuongConLai;
                                    lcCTDatHang[i].DM_LoHang[k].DonGia = parseFloat(cthd.DM_LoHang[m].DonGia);
                                    lcCTDatHang[i].DM_LoHang[k].GiaBan = parseFloat(cthd.DM_LoHang[m].GiaBan);
                                    lcCTDatHang[i].DM_LoHang[k].TienChietKhau = parseFloat(cthd.DM_LoHang[m].TienChietKhau);
                                    lcCTDatHang[i].DM_LoHang[k].PTChietKhau = parseFloat(cthd.DM_LoHang[m].PTChietKhau);
                                    lcCTDatHang[i].DM_LoHang[k].ThanhTien = parseFloat(cthd.DM_LoHang[m].ThanhTien);
                                    break;
                                }
                            }
                        }
                        for (let k = 0; k < cacheDH.HangCungLoais.length; k++) {
                            for (let m = 0; m < cthd.HangCungLoais.length; m++) {
                                if (cacheDH.HangCungLoais[k].IDRandom === cthd.HangCungLoais[m].IDRandom) {
                                    lcCTDatHang[i].HangCungLoais[k].SoLuongConLai = parseFloat(cthd.HangCungLoais[m].SoLuong) - cacheDH.HangCungLoais[k].SoLuong + cacheDH.HangCungLoais[k].SoLuongConLai;
                                    lcCTDatHang[i].HangCungLoais[k].DonGia = parseFloat(cthd.HangCungLoais[m].DonGia);
                                    lcCTDatHang[i].HangCungLoais[k].GiaBan = parseFloat(cthd.HangCungLoais[m].GiaBan);
                                    lcCTDatHang[i].HangCungLoais[k].TienChietKhau = parseFloat(cthd.HangCungLoais[m].TienChietKhau);
                                    lcCTDatHang[i].HangCungLoais[k].PTChietKhau = parseFloat(cthd.HangCungLoais[m].PTChietKhau);
                                    lcCTDatHang[i].HangCungLoais[k].ThanhTien = parseFloat(cthd.HangCungLoais[m].ThanhTien);
                                    break;
                                }
                            }
                        }

                        for (let k = 0; k < cacheDH.ThanhPhanComBo.length; k++) {
                            for (let m = 0; m < cthd.ThanhPhanComBo.length; m++) {
                                if (cacheDH.ThanhPhanComBo[k].IDRandom === cthd.ThanhPhanComBo[m].IDRandom) {
                                    lcCTDatHang[i].ThanhPhanComBo[k].SoLuongConLai = cthd.ThanhPhanComBo[m].SoLuong - cacheDH.ThanhPhanComBo[k].SoLuong + cacheDH.ThanhPhanComBo[k].SoLuongConLai;
                                    lcCTDatHang[i].ThanhPhanComBo[k].DonGia = parseFloat(cthd.ThanhPhanComBo[m].DonGia);
                                    lcCTDatHang[i].ThanhPhanComBo[k].GiaBan = parseFloat(cthd.ThanhPhanComBo[m].GiaBan);
                                    lcCTDatHang[i].ThanhPhanComBo[k].TienChietKhau = parseFloat(cthd.ThanhPhanComBo[m].TienChietKhau);
                                    lcCTDatHang[i].ThanhPhanComBo[k].PTChietKhau = parseFloat(cthd.ThanhPhanComBo[m].PTChietKhau);
                                    lcCTDatHang[i].ThanhPhanComBo[k].ThanhTien = parseFloat(cthd.ThanhPhanComBo[m].ThanhTien);
                                    break;
                                }
                            }
                        }
                        break;
                    }
                }
            }
            // push CTHD not exist in cache XuLy (only have in CTHD)
            var arrIDQuiDoi_NotExistDH = []
            for (let i = 0; i < lstCTHD.length; i++) {
                var itemFor = lstCTHD[i];
                if (lstCTHD[i].IDRandomHD === idRandomHD) {
                    if ($.inArray(itemFor.ID_DonViQuiDoi, arrIDQuiDoiEx) === -1) {
                        itemFor.SoLuongConLai = itemFor.SoLuong;
                        for (let j = 0; j < itemFor.DM_LoHang.length; j++) {
                            itemFor.DM_LoHang[j].SoLuongConLai = itemFor.DM_LoHang[j].SoLuong;
                        }
                        for (let j = 0; j < itemFor.HangCungLoais.length; j++) {
                            itemFor.HangCungLoais[j].SoLuongConLai = itemFor.HangCungLoais[j].SoLuong;
                        }
                        for (let j = 0; j < itemFor.ThanhPhanComBo.length; j++) {
                            itemFor.ThanhPhanComBo[j].SoLuongConLai = itemFor.ThanhPhanComBo[j].SoLuong;
                        }
                        lcCTDatHang.push(itemFor);
                    }
                    arrIDQuiDoi_NotExistDH.push(itemFor.ID_DonViQuiDoi);
                }
            }
            // remove cacheXuLy if notexist in CTHD
            lcCTDatHang = $.grep(lcCTDatHang, function (x) {
                return $.inArray(x.ID_DonViQuiDoi, arrIDQuiDoi_NotExistDH) > -1;
            })
            localStorage.setItem(lcCTDatHang_Const, JSON.stringify(lcCTDatHang));
            // update cache xulyDH
            var lcHDXuLy = localStorage.getItem(lcXuLiDonHang_Const);
            lcHDXuLy = JSON.parse(lcHDXuLy);
            var lstHD = localStorage.getItem(lcListHD);
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lcHDXuLy.length; i++) {
                if (lcHDXuLy[i].MaHoaDon === _maHoaDon) {
                    for (let j = 0; j < lstHD.length; j++) {
                        if (lstHD[j].MaHoaDon === lcHDXuLy[i].MaHoaDon) {
                            lcHDXuLy[i].ID_DoiTuong = lstHD[j].ID_DoiTuong;
                            lcHDXuLy[i].ID_NhanVien = lstHD[j].ID_NhanVien;
                            lcHDXuLy[i].ID_BangGia = lstHD[j].ID_BangGia;
                            lcHDXuLy[i].ID_DonVi = lstHD[j].ID_DonVi;
                            lcHDXuLy[i].DienGiai = self.HoaDons().DienGiai();
                            lcHDXuLy[i].TongTienHang = lstHD[j].TongTienHang;
                            lcHDXuLy[i].PhaiThanhToan = lstHD[j].KhachDaTra + lstHD[j].DaThanhToan - lstHD[j].HoanTraTamUng;
                            lcHDXuLy[i].TongGiamGia = lstHD[j].TongGiamGia;
                            lcHDXuLy[i].TongGiamGiaKM_HD = lstHD[j].TongGiamGiaKM_HD;
                            lcHDXuLy[i].TongChietKhau = lstHD[j].TongChietKhau;
                            lcHDXuLy[i].TienMat = lstHD[j].TongTienHang;
                            lcHDXuLy[i].TienGui = 0;
                            lcHDXuLy[i].KhachDaTra = lcHDXuLy[i].PhaiThanhToan;
                            break;
                        }
                    }
                }
            }
            localStorage.setItem(lcXuLiDonHang_Const, JSON.stringify(lcHDXuLy));
        }
    }

    function UpdateDH_RemoveAdd_TPCombo(idRandomHD) {
        var ctDatHang = localStorage.getItem(lcCTDatHang_Const);
        if (ctDatHang !== null) {
            ctDatHang = JSON.parse(ctDatHang);

            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                for (let i = 0; i < cthd.length; i++) {
                    let forCT = cthd[i];
                    if (forCT.IDRandomHD === idRandomHD) {
                        for (let m = 0; m < ctDatHang.length; m++) {
                            let forDH = ctDatHang[m];
                            if (forCT.ID_DonViQuiDoi === forDH.ID_DonViQuiDoi) {
                                if (forCT.ThanhPhanComBo.length === 0) {
                                    ctDatHang[m].ThanhPhanComBo = [];
                                }
                                else {
                                    let qdCTHD = $.map(forCT.ThanhPhanComBo, function (o) {
                                        return o.ID_DonViQuiDoi;
                                    })
                                    let qdDH = $.map(forDH.ThanhPhanComBo, function (o) {
                                        return o.ID_DonViQuiDoi;
                                    });

                                    let DHnotEx_CTHD = $.grep(forDH.ThanhPhanComBo, function (o) {
                                        return $.inArray(o.ID_DonViQuiDoi, qdCTHD) === -1;
                                    });
                                    let cthd_notExDH = $.grep(forCT.ThanhPhanComBo, function (o) {
                                        return $.inArray(o.ID_DonViQuiDoi, qdDH) === -1;
                                    })

                                    let idRemove = $.map(DHnotEx_CTHD, function (o) {
                                        return o.ID_DonViQuiDoi;
                                    })
                                    ctDatHang[m].ThanhPhanComBo = $.grep(ctDatHang[m].ThanhPhanComBo, function (o) {
                                        return $.inArray(o.ID_DonViQuiDoi, idRemove) === -1;
                                    })

                                    // add if cthd not exist in cacheDH
                                    for (let k = 0; k < cthd_notExDH.length; k++) {
                                        cthd_notExDH[k].SoLuongConLai = cthd_notExDH[k].SoLuong;
                                        ctDatHang[m].ThanhPhanComBo.push(cthd_notExDH[k]);
                                    }
                                }

                                if (forCT.HangCungLoais.length === 0) {
                                    ctDatHang[m].HangCungLoais = [];
                                }
                                else {
                                    // add if not exist
                                    if (forCT.HangCungLoais.length !== forDH.HangCungLoais.length) {
                                        let arrIDRandomCTOld = $.map(forDH.HangCungLoais, function (o) {
                                            return o.IDRandom;
                                        })
                                        let arrIDRandomCTNew = $.map(forCT.HangCungLoais, function (o) {
                                            return o.IDRandom;
                                        })
                                        // add new if not exists in cache old
                                        for (let k = 0; k < forCT.HangCungLoais.length; k++) {
                                            if ($.inArray(forCT.HangCungLoais[k].IDRandom, arrIDRandomCTOld) === -1) {
                                                forCT.HangCungLoais[k].SoLuongConLai = forCT.HangCungLoais[k].SoLuong;
                                                ctDatHang[m].HangCungLoais.push(forCT.HangCungLoais[k]);
                                                arrIDRandomCTOld.push(forCT.HangCungLoais[k].IDRandom);
                                            }
                                        }

                                        // remove if not exists in cthd
                                        ctDatHang[m].HangCungLoais = $.grep(ctDatHang[m].HangCungLoais, function (o) {
                                            return $.inArray(o.IDRandom, arrIDRandomCTNew) > -1
                                                && $.inArray(o.IDRandom, arrIDRandomCTOld) > - 1;
                                        })
                                    }
                                }

                                if (forCT.QuanLyTheoLoHang) {

                                    let loCTHD = $.map(forCT.DM_LoHang, function (o) {
                                        return o.ID_LoHang;
                                    })
                                    let loDH = $.map(forDH.DM_LoHang, function (o) {
                                        return o.ID_LoHang;
                                    });

                                    let DHnotEx_CTHD = $.grep(forDH.DM_LoHang, function (o) {
                                        return $.inArray(o.ID_LoHang, loCTHD) === -1;
                                    });
                                    let cthd_notExDH = $.grep(forCT.DM_LoHang, function (o) {
                                        return $.inArray(o.ID_LoHang, loDH) === -1;
                                    })

                                    let arrIDRemove = $.map(DHnotEx_CTHD, function (o) {
                                        return o.ID_LoHang;
                                    })

                                    ctDatHang[m].DM_LoHang = $.grep(ctDatHang[m].DM_LoHang, function (o) {
                                        return $.inArray(o.ID_LoHang, arrIDRemove) === -1;
                                    })

                                    // if delete Lot parent: assign parent = lot{0}
                                    if ($.inArray(forDH.ID_LoHang, arrIDRemove) > -1 && ctDatHang[m].DM_LoHang.length > 0) {
                                        let lot0 = ctDatHang[m].DM_LoHang[0];
                                        ctDatHang[m].ID_LoHang = lot0.ID_LoHang;
                                        ctDatHang[m].MaLoHang = lot0.MaLoHang;
                                        ctDatHang[m].SoLuong = lot0.SoLuong;
                                        ctDatHang[m].SoLuongConLai = lot0.SoLuongConLai;
                                        ctDatHang[m].DonGia = lot0.DonGia;
                                        ctDatHang[m].GiaBan = lot0.GiaBan;
                                        ctDatHang[m].TienChietKhau = parseFloat(lot0.TienChietKhau);
                                        ctDatHang[m].PTChietKhau = parseFloat(lot0.PTChietKhau);
                                        ctDatHang[m].PTThue = parseFloat(lot0.PTThue);
                                        ctDatHang[m].TienThue = parseFloat(lot0.TienThue);
                                        ctDatHang[m].ThanhTien = parseFloat(lot0.ThanhTien);
                                        ctDatHang[m].ThanhToan = parseFloat(lot0.ThanhToan);
                                    }

                                    // if change all lot 
                                    if (ctDatHang[m].DM_LoHang.length === 0 && cthd_notExDH.length > 0) {
                                        let lot0 = cthd_notExDH;
                                        ctDatHang[m].ID_LoHang = lot0.ID_LoHang;
                                        ctDatHang[m].MaLoHang = lot0.MaLoHang;
                                        ctDatHang[m].SoLuong = lot0.SoLuong;
                                        ctDatHang[m].SoLuongConLai = lot0.SoLuongConLai;
                                        ctDatHang[m].DonGia = lot0.DonGia;
                                        ctDatHang[m].GiaBan = lot0.GiaBan;
                                        ctDatHang[m].TienChietKhau = parseFloat(lot0.TienChietKhau);
                                        ctDatHang[m].PTChietKhau = parseFloat(lot0.PTChietKhau);
                                        ctDatHang[m].PTThue = parseFloat(lot0.PTThue);
                                        ctDatHang[m].TienThue = parseFloat(lot0.TienThue);
                                        ctDatHang[m].ThanhTien = parseFloat(lot0.ThanhTien);
                                        ctDatHang[m].ThanhToan = parseFloat(lot0.ThanhToan);
                                    }

                                    // add if cthd not exist in cacheDH
                                    for (let k = 0; k < cthd_notExDH.length; k++) {
                                        cthd_notExDH[k].SoLuongConLai = cthd_notExDH[k].SoLuong;
                                        ctDatHang[m].DM_LoHang.push(cthd_notExDH[k]);
                                    }
                                }
                                break;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(lcCTDatHang_Const, JSON.stringify(ctDatHang));
        }
    }
    self.TaoHDDatHang = function () {
        var lstHD = localStorage.getItem(lcListHD);
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var lcXuLiDonHang = localStorage.getItem(lcXuLiDonHang_Const);
            if (lcXuLiDonHang !== null) {
                lcXuLiDonHang = JSON.parse(lcXuLiDonHang);
            }
            var hdDatHangXuLy = $.grep(lstHD, function (x) {
                return (x.IsChangeHDXuLy !== undefined && x.IsChangeHDXuLy === true)
                    && x.NguoiTao === userLogin && x.MaHoaDon === _maHoaDon;
            });
            if (hdDatHangXuLy.length > 0) {
                // if was create HD from this HD DatHang --> not show dialog
                var itemHD = $.grep(lstHD, function (item) {
                    return item.MaHoaDonTraHang === _maHoaDon && item.StatusOffline === false && item.NguoiTao === userLogin;
                });
                if (itemHD.length === 0) {
                    dialogConfirm_OKCancel("Lưu đơn hàng", "Bạn có muốn lưu phiếu đặt hàng trước khi tạo hóa đơn không?", function (x1) {
                        self.saveDatHang(true);
                    }, function () {
                        $('#modalPopuplgDelete').modal('hide');
                        let idRandomHD = CreateHD_fromHDDatHang();
                        UpdateKhuyenMai_CTHD(null, idRandomHD);
                        UpdateSoThuTu_CTHD(false, idRandomHD);
                        BindHD_CTHDafterSave();
                    })
                }
                else {
                    let idRandomHD = CreateHD_fromHDDatHang();
                    UpdateKhuyenMai_CTHD(null, idRandomHD);
                    UpdateSoThuTu_CTHD(false, idRandomHD);
                    BindHD_CTHDafterSave();
                }
            }
            else {
                let idRandomHD = CreateHD_fromHDDatHang();
                UpdateKhuyenMai_CTHD(null, idRandomHD);
                UpdateSoThuTu_CTHD(false, idRandomHD);
                BindHD_CTHDafterSave();
            }
        }
        Call_6Func();
    }
    self.EndInvoice = function () {
        $('#modalpopup_endDonDH').modal('hide');
        self.StatusHD(3);
        UpdateStatudHD();
    }
    self.NotEndInvoice = function () {
        $('#modalpopup_endDonDH').modal('hide');
        self.StatusHD(2); // dang giao hang
        UpdateStatudHD();
    }
    $('#modalpopup_endDonDH').on('hidden.bs.modal', function () {
        // Nếu chưa chọn kết thúc/ hoặc không kết thúc xử lý đơn hàng, nhưng modal lại bị ẩn đi, thì update Sattus = 2 (Đang giao hàng)
        if (self.StatusHD() === undefined) {
            self.NotEndInvoice();
        }
    });
    function UpdateStatudHD() {
        if (self.ID_HoaDonUpdate() !== undefined) {
            ajaxHelper(BHHoaDonUri + 'Update_StatusHD?id=' + self.ID_HoaDonUpdate() + '&Status=' + self.StatusHD(), 'POST').done(function (data) {
                if (data === '') {
                    //ShowMessage_Success('Cập nhật hóa đơn thành công');
                }
            });
        }
    }
    function GetCauHinhHeThong() {
        ajaxHelper('/api/DanhMuc/HT_ThietLapAPI/' + "GetCauHinhHeThong/" + id_DonVi, 'GET').done(function (data) {
            if (data !== null) {
                self.ThietLap(data);
                vmThanhToan.ThietLapCuaHang = [data];
                localStorage.setItem('lcHeThong', JSON.stringify(data));
                GetNhomDoiTuong_DonVi();
            }
        });
    }
    // Phieu Thu
    self.showPopupLapPhieuThu = function () {
        vmThanhToan.showModalThanhToan(null, 2);
    }

    self.arrTraCuuHangHoa = ko.observableArray();
    self.showPopupTraCuuHH = function () {
        $('#trahanghoamodal').modal('show');
        $('#txtTraCuuHH').val("");
        self.arrTraCuuHangHoa([]);
        self.TotalRecordTK(0);
        self.PageCountTK(0);
    }
    $('#txtTraCuuHH').keypress(function (e) {
        if (e.keyCode === 13) {
            self.currentPageTK(0);
            var search = $('#txtTraCuuHH').val();
            if (search !== null) {
                searchTheKho();
            } else {
                self.arrTraCuuHangHoa([]);
            }
        }
    })
    self.pageSizesTK = [10, 20, 30];
    self.pageSizeTK = ko.observable(self.pageSizesTK[0]);
    self.currentPageTK = ko.observable(0);
    self.fromitemtk = ko.observable(1);
    self.toitemtk = ko.observable();
    self.arrPagging = ko.observableArray();
    self.PageCountTK = ko.observable();
    self.TotalRecordTK = ko.observable(0);
    var isGoToNext = false;
    function searchTheKho(isGoToNext) {
        hidewait('table_TraCuu');
        var search = $('#txtTraCuuHH').val();
        ajaxHelper('/api/DanhMuc/DM_HangHoaAPI/' + 'TraCuuHangHoa?currentPage=' + self.currentPageTK() + '&pageSize=' + self.pageSizeTK() + '&id_donvi=' + id_DonVi + '&txtSearch=' + search, 'GET').done(function (data) {
            self.arrTraCuuHangHoa(data.data.lstHH);
            self.TotalRecordTK(data.data.Rowcount);
            self.PageCountTK(data.data.pageCount);
            $('#wait').remove();
        });
    };
    self.PageList_Display_TheKho = ko.computed(function () {
        var arrPage = [];
        var allPage = self.PageCountTK();
        var currentPage = self.currentPageTK();
        if (allPage > 4) {
            var i = 0;
            if (currentPage === 0) {
                i = parseInt(self.currentPageTK()) + 1;
            }
            else {
                i = self.currentPageTK();
            }
            if (allPage >= 5 && currentPage > allPage - 5) {
                if (currentPage >= allPage - 2) {
                    // get 5 trang cuoi cung
                    for (let i = allPage - 5; i < allPage; i++) {
                        let obj = {
                            pageNumberTK: i + 1,
                        };
                        arrPage.push(obj);
                    }
                }
                else {
                    // get currentPage - 2 , currentPage, currentPage + 2
                    if (currentPage === 1) {
                        for (let j = currentPage - 1; (j <= currentPage + 3) && j < allPage; j++) {
                            let obj = {
                                pageNumberTK: j + 1,
                            };
                            arrPage.push(obj);
                        }
                    } else {
                        for (let j = currentPage - 2; (j <= currentPage + 2) && j < allPage; j++) {
                            let obj = {
                                pageNumberTK: j + 1,
                            };
                            arrPage.push(obj);
                        }
                    }
                }
            }
            else {
                // get 5 trang dau
                if (i >= 2) {
                    while (arrPage.length < 5) {
                        let obj = {
                            pageNumberTK: i - 1,
                        };
                        arrPage.push(obj);
                        i = i + 1;
                    }
                }
                else {
                    while (arrPage.length < 5) {
                        let obj = {
                            pageNumberTK: i,
                        };
                        arrPage.push(obj);
                        i = i + 1;
                    }
                }
            }
        }
        else {
            // neu chi co 1 trang --> khong hien thi DS trang
            if (allPage > 1) {
                for (let i = 0; i < allPage; i++) {
                    let obj = {
                        pageNumberTK: i + 1,
                    };
                    arrPage.push(obj);
                }
            }
        }
        return arrPage;
    });
    self.PageResultTKs = ko.computed(function () {
        if (self.arrTraCuuHangHoa() !== null) {
            self.fromitemtk((self.currentPageTK() * self.pageSizeTK()) + 1);
            if (((self.currentPageTK() + 1) * self.pageSizeTK()) > self.arrTraCuuHangHoa().length) {
                var fromItem = (self.currentPageTK() + 1) * self.pageSizeTK();
                if (fromItem < self.TotalRecordTK()) {
                    self.toitemtk((self.currentPageTK() + 1) * self.pageSizeTK());
                }
                else {
                    self.toitemtk(self.TotalRecordTK());
                }
            } else {
                self.toitemtk((self.currentPageTK() * self.pageSizeTK()) + self.pageSizeTK());
            }
        }
    });
    self.ResetCurrentPageTheKho = function () {
        self.currentPageTK(0);
        searchTheKho();
    };
    self.VisibleStartPageTheKho = ko.computed(function () {
        if (self.PageList_Display_TheKho().length > 0) {
            return self.PageList_Display_TheKho()[0].pageNumberTK !== 1;
        }
    });
    self.VisibleEndPageTheKho = ko.computed(function () {
        if (self.PageList_Display_TheKho().length > 0) {
            return self.PageList_Display_TheKho()[self.PageList_Display_TheKho().length - 1].pageNumberTK !== self.PageCountTK();
        }
    });
    self.GoToPage = function (page) {
        if (page.pageNumberTK !== '.') {
            self.currentPageTK(page.pageNumberTK - 1);
            searchTheKho();
        }
    };
    self.GetClass = function (page) {
        return ((page.pageNumberTK - 1) === self.currentPageTK()) ? "click" : "";
    };
    self.StartPageTheKho = function () {
        self.currentPageTK(0);
        searchTheKho();
    }
    self.BackPageTheKho = function () {
        if (self.currentPageTK() > 1) {
            self.currentPageTK(self.currentPageTK() - 1);
            searchTheKho();
        }
    }
    self.GoToNextPageTheKho = function () {
        if (self.currentPageTK() < self.PageCountTK() - 1) {
            self.currentPageTK(self.currentPageTK() + 1);
            searchTheKho();
        }
    }
    self.EndPageTheKho = function () {
        if (self.currentPageTK() < self.PageCountTK() - 1) {
            self.currentPageTK(self.PageCountTK() - 1);
            searchTheKho();
        }
    }

    // thứ tự ưu tiên: điểm, thẻ giá trị, pos, chuyển khoản
    function shareMoney_QuyHD(phaiTT, tienDiem, tienmat, tienPOS, chuyenkhoan, thegiatri) {
        if (tienDiem >= phaiTT) {
            return {
                TTBangDiem: phaiTT,
                TienMat: 0,
                TienPOS: 0,
                TienChuyenKhoan: 0,
                TienTheGiaTri: 0,
            }
        }
        else {
            phaiTT = phaiTT - tienDiem;
            if (thegiatri >= phaiTT) {
                return {
                    TTBangDiem: tienDiem,
                    TienMat: 0,
                    TienPOS: 0,
                    TienChuyenKhoan: 0,
                    TienTheGiaTri: Math.abs(phaiTT),
                }
            }
            else {
                phaiTT = phaiTT - thegiatri;
                if (tienPOS >= phaiTT) {
                    return {
                        TTBangDiem: tienDiem,
                        TienMat: 0,
                        TienPOS: Math.abs(phaiTT),
                        TienChuyenKhoan: 0,
                        TienTheGiaTri: thegiatri,
                    }
                }
                else {
                    phaiTT = phaiTT - tienPOS;
                    if (chuyenkhoan >= phaiTT) {
                        return {
                            TTBangDiem: tienDiem,
                            TienMat: 0,
                            TienPOS: tienPOS,
                            TienChuyenKhoan: Math.abs(phaiTT),
                            TienTheGiaTri: thegiatri,
                        }
                    }
                    else {
                        phaiTT = phaiTT - chuyenkhoan;
                        if (tienmat >= phaiTT) {
                            return {
                                TTBangDiem: tienDiem,
                                TienMat: Math.abs(phaiTT),
                                TienPOS: tienPOS,
                                TienChuyenKhoan: chuyenkhoan,
                                TienTheGiaTri: thegiatri,
                            }
                        }
                        else {
                            phaiTT = phaiTT - tienmat;
                            return {
                                TTBangDiem: tienDiem,
                                TienMat: tienmat,
                                TienPOS: tienPOS,
                                TienChuyenKhoan: chuyenkhoan,
                                TienTheGiaTri: thegiatri,
                            }
                        }
                    }
                }
            }
        }
    }

    // Khuyen mai
    function GetKM_CTKhuyenMai() {
        ajaxHelper('/api/DanhMuc/BH_KhuyenMaiAPI/' + 'GetKM_CTKhuyenMai?idDonVi=' + id_DonVi, 'GET').done(function (data) {
            if (data !== null) {
                self.DMKhuyenMai(data);
                WriteData_Dexie(db.DM_KhuyenMai, data);
            }
        });
    }

    function ChekKhuyenMai_ByIDQuiDoi() {
        var itemKM = $.grep(self.ListKM_ofHangHoa(), function (x) {
            return x.ID_KhuyenMai === self.ID_KhuyenMai();
        });
        var idQuyDoi = self.CTHD_ChosingKM().ID_DonViQuiDoi;
        if (itemKM.length > 0 && !commonStatisJs.CheckNull(idQuyDoi)) {
            // sum soluongmua by idnhom
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);

                var arrCT_sameQD = $.grep(cthd, function (x) {
                    return x.IDRandomHD === self.CTHD_ChosingKM().IDRandomHD
                        && x.ID_DonViQuiDoi === idQuyDoi;
                })

                var sortDESC = itemKM[0].DM_KhuyenMai_ChiTiet.sort(function (a, b) {
                    let x = a.SoLuongMua,
                        y = b.SoLuongMua;
                    return x < y ? 1 : x > y ? -1 : 0;
                });

                if (arrCT_sameQD.length > 0) {
                    for (let i = 0; i < sortDESC.length; i++) {
                        let ctKM = sortDESC[i];
                        if (ctKM.ID_DonViQuiDoiMua === idQuyDoi) {
                            // tong soluong theo idQuiDoi
                            let sumSLMua = 0;
                            for (let i = 0; i < arrCT_sameQD.length; i++) {
                                let itFor = arrCT_sameQD[i];
                                sumSLMua += parseInt(itFor.SoLuong);
                                for (let j = 1; j < itFor.DM_LoHang.length; j++) {
                                    sumSLMua += parseInt(itFor.DM_LoHang[j].SoLuong);
                                }
                                for (let j = 0; j < itFor.HangCungLoais.length; j++) {
                                    sumSLMua += parseInt(itFor.HangCungLoais[j].SoLuong);
                                }
                            }

                            if (sumSLMua >= ctKM.SoLuongMua) {
                                // if KM Nhom --> return object
                                return {
                                    ID_KhuyenMai: itemKM[0].ID_KhuyenMai,
                                    ID_ChiTietKM: ctKM.ID,
                                    ID_NhomHHMua: ctKM.ID_NhomHangHoaMua,
                                    ID_NhomHHTang: ctKM.ID_NhomHangHoa,
                                    SoLuongTang: ctKM.SoLuong,
                                    SoLuongMua: ctKM.SoLuongMua,
                                    GiaKhuyenMai: ctKM.GiaKhuyenMai,
                                    GiamGiaTheoPhanTram: ctKM.GiamGiaTheoPhanTram,
                                    GiamGia: ctKM.GiamGia,
                                    SoLuongMuaThucTe: sumSLMua,
                                };
                            }
                        }
                    }
                }
            }
        }
        return false;
    }
    function Check_KhuyenMaiNhom() {
        var itemKM = $.grep(self.ListKM_ofHangHoa(), function (x) {
            return x.ID_KhuyenMai === self.ID_KhuyenMai();
        });
        if (itemKM.length > 0 && self.CTHD_ChosingKM().ID_NhomHangHoa !== null) {
            // sum soluongmua by idnhom
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);

                var arrCT_ofHD = $.grep(cthd, function (x) {
                    return x.IDRandomHD === self.CTHD_ChosingKM().IDRandomHD;
                })

                var sortDESC = itemKM[0].DM_KhuyenMai_ChiTiet.sort(function (a, b) {
                    let x = a.SoLuongMua,
                        y = b.SoLuongMua;
                    return x < y ? 1 : x > y ? -1 : 0;
                });

                if (arrCT_ofHD.length > 0) {
                    for (let i = 0; i < sortDESC.length; i++) {
                        let ctKM = sortDESC[i];
                        let arrChilds = GetAll_IDNhomChild_ofNhomHH(ctKM.ID_NhomHangHoaMua);
                        tree2.uncheckAll();
                        if ($.inArray(self.CTHD_ChosingKM().ID_NhomHangHoa, arrChilds) > -1) {
                            // tong soluong theonhom
                            let sumSLMua = 0;
                            for (let i = 0; i < arrCT_ofHD.length; i++) {
                                let itFor = arrCT_ofHD[i];
                                if ($.inArray(itFor.ID_NhomHangHoa, arrChilds) > -1) {
                                    sumSLMua += parseInt(itFor.SoLuong);
                                    for (let j = 1; j < itFor.DM_LoHang.length; j++) {
                                        sumSLMua += parseInt(itFor.DM_LoHang[j].SoLuong);
                                    }
                                    for (let j = 0; j < itFor.HangCungLoais.length; j++) {
                                        sumSLMua += parseInt(itFor.HangCungLoais[j].SoLuong);
                                    }
                                }
                            }
                            if (sumSLMua >= ctKM.SoLuongMua) {
                                // if KM Nhom --> return object
                                return {
                                    ID_KhuyenMai: itemKM[0].ID_KhuyenMai,
                                    ID_ChiTietKM: ctKM.ID,
                                    ID_NhomHHMua: ctKM.ID_NhomHangHoaMua,
                                    ID_NhomHHTang: ctKM.ID_NhomHangHoa,
                                    SoLuongTang: ctKM.SoLuong,
                                    SoLuongMua: ctKM.SoLuongMua,
                                    GiaKhuyenMai: ctKM.GiaKhuyenMai,
                                    GiamGiaTheoPhanTram: ctKM.GiamGiaTheoPhanTram,
                                    GiamGia: ctKM.GiamGia,
                                    SoLuongMuaThucTe: sumSLMua,
                                };
                            }
                        }
                    }
                }
            }
        }
        // else return false
        return false;
    }
    // use check KhuyenMai HangHoa: - Tang Hang/Giam Gia Hang/Gia Ban Theo SL Mua
    function GetSum_SoLuongHang_SameGroup(idQuiDoi) {
        var slMua = 0;
        var arrIDQuiDoi = [];
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            var itemKM = $.grep(self.ListKM_ofHangHoa(), function (x) {
                return x.ID_KhuyenMai === self.ID_KhuyenMai();
            });
            if (itemKM.length > 0) {
                var isKMNhom = Check_KhuyenMaiNhom();
                if (isKMNhom !== false) {
                    // find in CT Khuyen Mai with ID_Nhom was return from Check_KhuyenMaiNhom
                    var arrChilds = GetAll_IDNhomChild_ofNhomHH(isKMNhom.ID_NhomHHMua);
                    tree2.uncheckAll();
                    for (let j = 0; j < lstCTHD.length; j++) {
                        if (lstCTHD[j].IDRandomHD === self.CTHD_ChosingKM().IDRandomHD) {
                            if ($.inArray(lstCTHD[j].ID_NhomHangHoa, arrChilds) > -1) {
                                slMua += parseFloat(lstCTHD[j].SoLuong);
                                // sum LoHang
                                for (let k = 1; k < lstCTHD[j].DM_LoHang.length; k++) {
                                    slMua += parseFloat(lstCTHD[j].DM_LoHang[k].SoLuong);
                                }
                                for (let k = 0; k < lstCTHD[j].HangCungLoais.length; k++) {
                                    slMua += parseFloat(lstCTHD[j].HangCungLoais[k].SoLuong);
                                }
                            }
                        }
                    }
                    // get all HangHoa thuoc Nhom
                    var arrHH_byNhom = $.grep(self.HangHoaAll(), function (x) {
                        return $.inArray(x.ID_NhomHangHoa, arrChilds) > -1;
                    });
                    // get all ID_QuiDoi from lst Hang Hoa above
                    for (let i = 0; i < arrHH_byNhom.length; i++) {
                        arrIDQuiDoi.push(arrHH_byNhom[i].ID_DonViQuiDoi);
                    }
                }
                else {
                    // when GetListKM_ofHangHoa, get IDQuiDoi using pass
                    if (idQuiDoi === null) {
                        idQuiDoi = self.CTHD_ChosingKM().ID_DonViQuiDoi;
                    }
                    arrIDQuiDoi = [idQuiDoi];
                    for (let j = 0; j < lstCTHD.length; j++) {
                        if (lstCTHD[j].IDRandomHD === self.CTHD_ChosingKM().IDRandomHD) {
                            if (lstCTHD[j].ID_DonViQuiDoi === idQuiDoi) {
                                slMua = parseFloat(lstCTHD[j].SoLuong);
                                // sum LoHang
                                for (let k = 1; k < lstCTHD[j].DM_LoHang.length; k++) {
                                    slMua += parseFloat(lstCTHD[j].DM_LoHang[k].SoLuong);
                                }
                                for (let k = 0; k < lstCTHD[j].HangCungLoais.length; k++) {
                                    slMua += parseFloat(lstCTHD[j].HangCungLoais[k].SoLuong);
                                }
                            }
                        }
                    }
                }
                var ctDoiTuong = self.ChiTietDoiTuong();
                if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
                    var itemKH_HH = $.grep(self.KhachHang_HangHoa(), function (x) {
                        return x.ID_DoiTuong === ctDoiTuong[0].ID;
                    });
                    if (itemKH_HH.length > 0) {
                        for (let i = 0; i < itemKH_HH[0].List_SoLuongMua.length; i++) {
                            if ($.inArray(itemKH_HH[0].List_SoLuongMua[i].ID_DonViQuiDoi, arrIDQuiDoi) > -1) {
                                slMua += parseFloat(itemKH_HH[0].List_SoLuongMua[i].SoLuong);
                            }
                        }
                    }
                }
            }
        }
        return slMua;
    }
    // use at func GetListKM_ofHangHoa, updateKhuyenMai_CTHD
    function CheckKhuyenMaiKH_bySumSoLuongMua(idQuiDoi, soluongMuaMoi, soluongKhuyenMai, isKMNhom, idNhomMua) {
        var soLuongDaMua = soluongMuaMoi;
        var ctDoiTuong = self.ChiTietDoiTuong();
        if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
            var arrIDQuiDoi = [];
            var itemKH_HH = self.KhachHang_HangHoa().filter(x => x.ID_DoiTuong === ctDoiTuong[0].ID);
            // khuyen mai theo nhom
            if (isKMNhom) {
                // get all Nhom (contains Nhom Childs)
                var arrNhomHHChilds = GetAll_IDNhomChild_ofNhomHH(idNhomMua);
                tree2.uncheckAll();
                // get all HangHoa thuoc Nhom
                var arrHH_byNhom = $.grep(self.HangHoaAll(), function (x) {
                    return $.inArray(x.ID_NhomHangHoa, arrNhomHHChilds) > -1;
                });
                // get all ID_QuiDoi from lst Hang Hoa above
                for (let i = 0; i < arrHH_byNhom.length; i++) {
                    arrIDQuiDoi.push(arrHH_byNhom[i].ID_DonViQuiDoi);
                }
            }
            else {
                arrIDQuiDoi.push(idQuiDoi);
            }
            // sum SoLuong da mua by Nhom/ID_quidoi
            if (itemKH_HH.length > 0) {
                for (let i = 0; i < itemKH_HH[0].List_SoLuongMua.length; i++) {
                    if ($.inArray(itemKH_HH[0].List_SoLuongMua[i].ID_DonViQuiDoi, arrIDQuiDoi) > -1) {
                        soLuongDaMua += parseFloat(itemKH_HH[0].List_SoLuongMua[i].SoLuong);
                    }
                }
            }
        }
        return soLuongDaMua >= soluongKhuyenMai;
    }
    // get list KM enough condition (fiter from list DMKhuyenMai)
    function GetList_KMApDung() {
        for (let i = 0; i < self.DMKhuyenMai().length; i++) {
            let itemKM = self.DMKhuyenMai()[i];
            let objKhuyenMai = {
                ID_KhuyenMai: null,
                TenKhuyenMai: "",
                HinhThuc: "", // 21: Mua hang giam hang; 22: mua hang tang hang; 23: mua hang tang diem; 24: gia ban theo SL Mua
                HinhThucKhuyenMai: "",
                Months: [],
                Dates: [],
                Hours: [],
                Days: [],
                ApDungNgaySinh: 0,
                ID_QuyDoiMuas: [],
                ID_QuyDoiTangs: [],
                ID_NhomHHMuas: [],
                ID_NhomHHTangs: [],
                ID_NhomKHs: [],
                ID_NhanViens: [],
                DM_KhuyenMai_ChiTiet: [],
                Note_HinhThuc: '', // ghi chu tuong ung voi tung loai hinh thuc KM
            };
            objKhuyenMai.ID_KhuyenMai = itemKM.ID;
            objKhuyenMai.TenKhuyenMai = itemKM.TenKhuyenMai;
            objKhuyenMai.HinhThucKhuyenMai = itemKM.TenHinhThucKM;
            objKhuyenMai.HinhThuc = itemKM.HinhThuc;
            objKhuyenMai.ApDungNgaySinh = itemKM.ApDungNgaySinhNhat;
            if (itemKM.ThangApDung !== '') {
                objKhuyenMai.Months = itemKM.ThangApDung.split('_');
            }
            if (itemKM.NgayApDung !== '') {
                objKhuyenMai.Dates = itemKM.NgayApDung.split('_');
            }
            if (itemKM.ThuApDung !== '') {
                objKhuyenMai.Days = itemKM.ThuApDung.split('_');
            }
            if (itemKM.GioApDung !== '') {
                objKhuyenMai.Hours = itemKM.GioApDung.split('_');
            }
            for (let j = 0; j < itemKM.DM_KhuyenMai_ApDung.length; j++) {
                var itemKM_AD = itemKM.DM_KhuyenMai_ApDung[j];
                if (itemKM_AD.ID_NhomKhachHang !== null && $.inArray(itemKM_AD.ID_NhomKhachHang, objKhuyenMai.ID_NhomKHs) === -1) {
                    objKhuyenMai.ID_NhomKHs.push(itemKM_AD.ID_NhomKhachHang);
                }
                if (itemKM_AD.ID_NhanVien !== null && $.inArray(itemKM_AD.ID_NhanVien, objKhuyenMai.ID_NhanViens) === -1) {
                    objKhuyenMai.ID_NhanViens.push(itemKM_AD.ID_NhanVien);
                }
            }
            for (let j = 0; j < itemKM.DM_KhuyenMai_ChiTiet.length; j++) {
                let itemKMCT = itemKM.DM_KhuyenMai_ChiTiet[j];
                if (itemKMCT.ID_DonViQuiDoiMua !== null && $.inArray(itemKMCT.ID_DonViQuiDoiMua, objKhuyenMai.ID_QuyDoiMuas) === -1) {
                    objKhuyenMai.ID_QuyDoiMuas.push(itemKMCT.ID_DonViQuiDoiMua);
                }
                if (itemKMCT.ID_DonViQuiDoi !== null && $.inArray(itemKMCT.ID_DonViQuiDoi, objKhuyenMai.ID_QuyDoiTangs) === -1) {
                    objKhuyenMai.ID_QuyDoiTangs.push(itemKMCT.ID_DonViQuiDoi);
                }
                if (itemKMCT.ID_NhomHangHoa !== null) {
                    let arrNhomChildTang = GetAll_IDNhomChild_ofNhomHH(itemKMCT.ID_NhomHangHoa);
                    tree2.uncheckAll();
                    if (arrNhomChildTang.length > 0) {
                        for (let k = 0; k < arrNhomChildTang.length; k++) {
                            if ($.inArray(arrNhomChildTang[k], objKhuyenMai.ID_NhomHHTangs) === -1) {
                                objKhuyenMai.ID_NhomHHTangs.push(arrNhomChildTang[k]);
                            }
                        }
                    }
                }
                if (itemKMCT.ID_NhomHangHoaMua !== null) {
                    let arrNhomChildMua = GetAll_IDNhomChild_ofNhomHH(itemKMCT.ID_NhomHangHoaMua);
                    tree2.uncheckAll();
                    if (arrNhomChildMua.length > 0) {
                        for (let k = 0; k < arrNhomChildMua.length; k++) {
                            if ($.inArray(arrNhomChildMua[k], objKhuyenMai.ID_NhomHHMuas) === -1) {
                                objKhuyenMai.ID_NhomHHMuas.push(arrNhomChildMua[k]);
                            }
                        }
                    }
                }
            }
            // sort to do check SoLuongMua tương ứng với GiaKhuyenMai
            itemKM.DM_KhuyenMai_ChiTiet = itemKM.DM_KhuyenMai_ChiTiet.sort(function (a, b) {
                var x = a.SoLuongMua,
                    y = b.SoLuongMua;
                return x < y ? -1 : x > y ? 1 : 0;
            });
            objKhuyenMai.DM_KhuyenMai_ChiTiet = itemKM.DM_KhuyenMai_ChiTiet;
            self.KM_KMApDung.push(objKhuyenMai);
        }
        // remove KMai tang diem if HeThong khong cai dat tinh nang tich diem
        if (self.ThietLap().TinhNangTichDiem === false) {
            var listKM = $.grep(self.KM_KMApDung(), function (x) {
                return x.HinhThuc !== 14 && x.HinhThuc !== 23;
            });
            self.KM_KMApDung(listKM);
        }
    }
    function UpdateKhuyenMai_CTHD(idQDoi, idRandomHD) {
        var dtNow = new Date();
        var _month = (dtNow.getMonth() + 1).toString(); // 1-12 (+1 because getMoth() return 0-11)
        var _date = (dtNow.getDate()).toString(); // 1- 31
        var _hours = (dtNow.getHours()).toString(); // 1-24
        var _day = (dtNow.getDay() + 1).toString(); // mon:2, tues:3, wed:4, thur:5, fri:6, sat: 7, sun: 8
        var _weekofMonth = Math.ceil(dtNow.getDate() / 7); // get week of Month ( 1- 5);
        // get list Km enough condition
        GetList_KMApDung();
        var idNhanVien = self.selectedNVien();
        var idNhomKH = null;
        var ngaysinhFull = 0;
        var ngaysinh = 0;
        var thangsinh = 0;
        var tuansinh = 0;
        var arrNhomKH = [];
        var ctDoiTuong = self.ChiTietDoiTuong();
        // if chose KH --> get idNhomKH + ngaysinh
        if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
            idNhomKH = ctDoiTuong[0].ID_NhomDoiTuong.toLowerCase();
            arrNhomKH = idNhomKH.split(', ');
            ngaysinhFull = ctDoiTuong[0].NgaySinh_NgayTLap;
        }
        if (ngaysinhFull !== 0 && ngaysinhFull !== null) {
            var dtNgaySinh = new Date(moment(ngaysinhFull).format('YYYY-MM-DD')); // must format 'YYYY-MM-DD'
            // get day, moth from dayFull
            ngaysinh = dtNgaySinh.getDate();
            thangsinh = (dtNgaySinh.getMonth() + 1).toString();
            tuansinh = Math.ceil(dtNgaySinh.getDate() / 7);
        }
        // get list KM by ID_DoiTuong and ID_NhanVien
        var arrKM_forDT = [];
        for (let i = 0; i < self.KM_KMApDung().length; i++) {
            // get KM apply for HangHoa
            var xItem = self.KM_KMApDung()[i];
            if (xItem.HinhThuc.toString().startsWith('2')) {
                if (xItem.ApDungNgaySinh !== 0) {
                    // if chose KH
                    if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
                        // check ID_NhanVien, ID_nhomKH
                        if ((xItem.Months.length === 0 || $.inArray(_month, xItem.Months) > -1)
                            && (xItem.Dates.length === 0 || $.inArray(_date, xItem.Dates) > -1)
                            && (xItem.Days.length === 0 || $.inArray(_day, xItem.Days) > -1)
                            && (xItem.Hours.length === 0 || $.inArray(_hours, xItem.Hours) > -1)
                            && (xItem.ID_NhanViens.length === 0 || $.inArray(idNhanVien, xItem.ID_NhanViens) > -1)
                            && (xItem.ID_NhomKHs.length === 0 || xItem.ID_NhomKHs.some(r => arrNhomKH.indexOf(r) >= 0))) {
                            switch (xItem.ApDungNgaySinh) {
                                case 1: // ap dung ngay sinh theo ngay
                                    if (ngaysinh.toString() === _date) {
                                        arrKM_forDT.push(xItem);
                                    }
                                    break;
                                case 2: // ap dung ngay sinh theo tuan
                                    if (tuansinh.toString() === _weekofMonth) {
                                        arrKM_forDT.push(xItem);
                                    }
                                    break;
                                case 3: // ap dung ngay sinh theo thang
                                    if (thangsinh.toString() === _month) {
                                        arrKM_forDT.push(xItem);// esc for KM_KMApDung
                                    }
                                    break;
                            }
                        }
                    }
                }
                else {
                    // if ApDungNgaySinh = 0
                    if ((xItem.Months.length === 0 || $.inArray(_month, xItem.Months) > -1)
                        && (xItem.Dates.length === 0 || $.inArray(_date, xItem.Dates) > -1)
                        && (xItem.Days.length === 0 || $.inArray(_day, xItem.Days) > -1)
                        && (xItem.Hours.length === 0 || $.inArray(_hours, xItem.Hours) > -1)
                        && (xItem.ID_NhanViens.length === 0 || $.inArray(idNhanVien, xItem.ID_NhanViens) > -1)
                        && (xItem.ID_NhomKHs.length === 0 || xItem.ID_NhomKHs.some(r => arrNhomKH.indexOf(r) >= 0))) {
                        arrKM_forDT.push(xItem);
                    }
                }
            }
        }
        for (let i = 0; i < arrKM_forDT.length; i++) {
            arrKM_forDT[i].DM_KhuyenMai_ChiTiet.sort(function (a, b) {
                // order by ASC
                var x = a.SoLuongMua, y = b.SoLuongMua;
                return x > y ? 1 : x < y ? -1 : 0;
            });
        }
        var lcCTHD = localStorage.getItem(lcListCTHD);
        if (lcCTHD !== null) {
            lcCTHD = JSON.parse(lcCTHD);
            // reset IsKhuyenMai for CTHD with _maHoaDon before check KhuyenMai when document is readly
            for (let i = 0; i < lcCTHD.length; i++) {
                if (lcCTHD[i].LoaiHoaDon !== 6 && lcCTHD[i].IDRandomHD === idRandomHD) {
                    if (initLoad === true) {
                        lcCTHD[i].IsKhuyenMai = false;
                    }
                }
            }
            // reset IsKhuyenMai for CTHD with _maHoaDon before check KhuyenMai
            for (let i = 0; i < lcCTHD.length; i++) {
                if (lcCTHD[i].LoaiHoaDon !== 6 && lcCTHD[i].IDRandomHD === idRandomHD) {
                    if (initLoad === true) {
                        lcCTHD[i].IsKhuyenMai = false;
                    }
                }
            }
            if (self.ThietLap().KhuyenMai === true) {
                for (let i = 0; i < lcCTHD.length; i++) {
                    // KM Hoadon/GoiDV
                    if ((lcCTHD[i].LoaiHoaDon === 1 || lcCTHD[i].LoaiHoaDon === 19)
                        && lcCTHD[i].IDRandomHD === idRandomHD) {
                        for (let j = 0; j < arrKM_forDT.length; j++) {
                            var itemAD = arrKM_forDT[j];
                            for (let k = 0; k < itemAD.DM_KhuyenMai_ChiTiet.length; k++) {
                                var itemCT = itemAD.DM_KhuyenMai_ChiTiet[k];
                                var arrNhomChilds = GetAll_IDNhomChild_ofNhomHH(itemCT.ID_NhomHangHoaMua);
                                tree2.uncheckAll();
                                // if ID_QuiDoi in ID_QuyDoiMuas OR in NhomHHMua
                                if ($.inArray(lcCTHD[i].ID_DonViQuiDoi, itemAD.ID_QuyDoiMuas) > -1
                                    || $.inArray(lcCTHD[i].ID_NhomHangHoa, arrNhomChilds) > -1) {
                                    if ($.inArray(lcCTHD[i].ID_DonViQuiDoi, itemAD.ID_QuyDoiMuas) > -1) {
                                        // if same ID_QuiDoiMua
                                        if (lcCTHD[i].ID_DonViQuiDoi === itemCT.ID_DonViQuiDoiMua) {
                                            let slMuaLoHang = parseFloat(lcCTHD[i].SoLuong);
                                            for (let l = 1; l < lcCTHD[i].DM_LoHang.length; l++) {
                                                slMuaLoHang += parseFloat(lcCTHD[i].DM_LoHang[l].SoLuong);
                                            }
                                            for (let l = 0; l < lcCTHD[i].HangCungLoais.length; l++) {
                                                slMuaLoHang += parseFloat(lcCTHD[i].HangCungLoais[l].SoLuong);
                                            }
                                            // have KM if enough SoLuongMua
                                            var enoughSumSL = CheckKhuyenMaiKH_bySumSoLuongMua(lcCTHD[i].ID_DonViQuiDoi, slMuaLoHang, itemCT.SoLuongMua, false, null);
                                            if (enoughSumSL) {
                                                lcCTHD[i].IsKhuyenMai = true;
                                                break;
                                            }
                                        }
                                    }// end if by ID_QuiDoi
                                    else {
                                        if ($.inArray(lcCTHD[i].ID_NhomHangHoa, arrNhomChilds) > -1) {
                                            let slMua = parseFloat(itemCT.SoLuongMua);
                                            let slMua_ofNhom = 0;
                                            // get all HH in CTHD same MaHoaDon + ID_NhomHH
                                            for (let m = 0; m < lcCTHD.length; m++) {
                                                if (lcCTHD[m].IDRandomHD === idRandomHD && $.inArray(lcCTHD[m].ID_NhomHangHoa, arrNhomChilds) > -1) {
                                                    slMua_ofNhom += parseFloat(lcCTHD[m].SoLuong);
                                                    // sum SoLuong in LoHang
                                                    for (let l = 1; l < lcCTHD[m].DM_LoHang.length; l++) {
                                                        slMua_ofNhom += parseFloat(lcCTHD[m].DM_LoHang[l].SoLuong);
                                                    }
                                                    for (let l = 0; l < lcCTHD[m].HangCungLoais.length; l++) {
                                                        slMua_ofNhom += parseFloat(lcCTHD[m].HangCungLoais[l].SoLuong);
                                                    }
                                                }
                                            }
                                            // if exists 1 HangHoa in NhomHH had KhuyenMai -> not set IsKhuyenMai = true for other HangHoas in same ID_nhomHH
                                            var hh_inNhomHH = $.grep(lcCTHD, function (xx) {
                                                return xx.IDRandomHD === idRandomHD && $.inArray(xx.ID_NhomHangHoa, arrNhomChilds) > -1;
                                            });
                                            // if SoThuTu of HH in NhomHH = max -> set IsKhuyenMai = true
                                            var max = Math.max.apply(Math, hh_inNhomHH.map(function (item) {
                                                return item.SoThuTu;
                                            }));
                                            var enoughSumSLNhom = CheckKhuyenMaiKH_bySumSoLuongMua(lcCTHD[i].ID_DonViQuiDoi, slMua_ofNhom, slMua, true, itemCT.ID_NhomHangHoaMua);
                                            if (enoughSumSLNhom) {
                                                if (lcCTHD[i].ID_DonViQuiDoi === idQDoi) {
                                                    // assign IsKhuyenMai = false for all HangHoa in Nhom
                                                    for (let m = 0; m < lcCTHD.length; m++) {
                                                        if (lcCTHD[m].IDRandomHD === idRandomHD && $.inArray(lcCTHD[m].ID_NhomHangHoa, arrNhomChilds) > -1) {
                                                            lcCTHD[m].IsKhuyenMai = false;
                                                        }
                                                    }
                                                    // assign IsKhuyenMai for itself is chosing
                                                    lcCTHD[i].IsKhuyenMai = true;
                                                    break;
                                                }
                                                else {
                                                    // assign IsKhuyenMai for HangHoa in Nhom have SoThuTu =max
                                                    if (lcCTHD[i].SoThuTu === max) {
                                                        lcCTHD[i].IsKhuyenMai = true;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }// else by Nhom
                                } // end check by Nhom or ID_QuiDoi
                            }// enf for Dm_KhuyenMai_ChiTiet
                        } // end for self.KM_ApDung
                    } // end check CTHD with maHoaDon
                }// end for CTHD
            } // end check ThietLap().KhuyenMai === true
            localStorage.setItem(lcListCTHD, JSON.stringify(lcCTHD));
            // caculator TongTienHang (because not yet update TongTienHang in cache lstHD)
            var _sum = 0;
            for (let i = 0; i < lcCTHD.length; i++) {
                if (lcCTHD[i].IDRandomHD === idRandomHD) {
                    _sum += lcCTHD[i].ThanhTien;
                    for (let j = 1; j < lcCTHD[i].DM_LoHang.length; j++) {
                        _sum += lcCTHD[i].DM_LoHang[j].ThanhTien;
                    }
                    for (let j = 0; j < lcCTHD[i].HangCungLoais.length; j++) {
                        _sum += lcCTHD[i].HangCungLoais[j].ThanhTien;
                    }
                }
            }
            // Update KhuyenMai for HoaDon
            if (self.ThietLap().KhuyenMai === true) {
                var lstHD = localStorage.getItem(lcListHD);
                if (lstHD !== null) {
                    lstHD = JSON.parse(lstHD);
                    for (let i = 0; i < lstHD.length; i++) {
                        if ((lstHD[i].LoaiHoaDon === 1 || lstHD[i].LoaiHoaDon === 19) && lstHD[i].IDRandom === idRandomHD) {
                            // assign again IsKhuyenMai = false (because xoa/tang/giam soluong --> change TongTienHang)
                            lstHD[i].IsKhuyenMaiHD = false;
                            for (let j = 0; j < self.KM_KMApDung().length; j++) {
                                // get KM apply for HoaDon
                                var itemKM2 = self.KM_KMApDung()[j];
                                if (itemKM2.HinhThuc.toString().startsWith('1')) {
                                    for (let k = 0; k < itemKM2.DM_KhuyenMai_ChiTiet.length; k++) {
                                        if (itemKM2.DM_KhuyenMai_ChiTiet[k].TongTienHang <= _sum) {
                                            // check ThoiGian + PhamVi Ap dung
                                            if (itemKM2.ApDungNgaySinh !== 0) {
                                                // if chose KH
                                                if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
                                                    if ((itemKM2.Months.length === 0 || $.inArray(_month, itemKM2.Months) > -1)
                                                        && (itemKM2.Dates.length === 0 || $.inArray(_date, itemKM2.Dates) > -1)
                                                        && (itemKM2.Days.length === 0 || $.inArray(_day, itemKM2.Days) > -1)
                                                        && (itemKM2.Hours.length === 0 || $.inArray(_hours, itemKM2.Hours) > -1)
                                                        && (itemKM2.ID_NhanViens.length === 0 || $.inArray(idNhanVien, itemKM2.ID_NhanViens) > -1)
                                                        && (itemKM2.ID_NhomKHs.length === 0 || itemKM2.ID_NhomKHs.some(r => arrNhomKH.indexOf(r) >= 0))) {
                                                        switch (itemKM2.ApDungNgaySinh) {
                                                            case 1: // ap dung ngay sinh theo ngay
                                                                if (ngaysinh.toString() === _date) {
                                                                    lstHD[i].IsKhuyenMaiHD = true;
                                                                    break;
                                                                }
                                                                break;
                                                            case 2: // ap dung ngay sinh theo tuan
                                                                if (tuansinh.toString() === _weekofMonth) {
                                                                    lstHD[i].IsKhuyenMaiHD = true;
                                                                    break;
                                                                }
                                                                break;
                                                            case 3: // ap dung ngay sinh theo thang
                                                                if (thangsinh.toString() === _month) {
                                                                    lstHD[i].IsKhuyenMaiHD = true;
                                                                    break;
                                                                }
                                                                break;
                                                        }
                                                    }
                                                }
                                                else {
                                                    // if not chose KH
                                                    lstHD[i].IsKhuyenMaiHD = false;
                                                    break;
                                                }
                                            }
                                            else {
                                                // if ApDungNgaySinh = 0
                                                if ((itemKM2.Months.length === 0 || $.inArray(_month, itemKM2.Months) > -1)
                                                    && (itemKM2.Dates.length === 0 || $.inArray(_date, itemKM2.Dates) > -1)
                                                    && (itemKM2.Days.length === 0 || $.inArray(_day, itemKM2.Days) > -1)
                                                    && (itemKM2.Hours.length === 0 || $.inArray(_hours, itemKM2.Hours) > -1)
                                                    && (itemKM2.ID_NhanViens.length === 0 || $.inArray(idNhanVien, itemKM2.ID_NhanViens) > -1)
                                                    && (itemKM2.ID_NhomKHs.length === 0 || xItem.ID_NhomKHs.some(r => arrNhomKH.indexOf(r) >= 0))) {
                                                    lstHD[i].IsKhuyenMaiHD = true;
                                                    break;
                                                }
                                            }
                                        }
                                    } // end for KM_ChiTiet
                                    // if IsKhuyenMaiHD =true --> ESC for loop, else -> continue
                                    if (lstHD[i].IsKhuyenMaiHD) {
                                        break;
                                    }
                                }
                            }// end for Km_ApDung
                            break;
                        }// end check _maHoaDon
                    }// end for lstHD
                    localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                }
            }
        }
    }
    self.CTHD_ChosingKM = ko.observableArray(); // used to assign IDRandomHD for HangTang (todo ) -- thay the cho self.ID_DonViQuiDoiMua, ID_NhomHHMua
    self.KhachHang_HangHoa = ko.observableArray();

    self.GetListKM_ofHangHoa = function (item) {
        var ctDoing = FindCTHD_isDoing(item, false);
        self.CTHD_ChosingKM(ctDoing);
        var idNhomHHMua = item.ID_NhomHangHoa;
        // if HD offline --> don't show modal KMai (because DHO, THO not have KMai)
        if (item.MaHoaDon.indexOf('HDO') > -1) {
            return;
        }
        $('#titleKhuyenMai').text('Khuyến mại trên ' + item.MaHangHoa + ' ' + item.TenHangHoa);
        self.ID_DonViQuiDoiMua(item.ID_DonViQuiDoi); // get to set ID_HHTang.subcrible
        self.ID_NhomHHMua(idNhomHHMua); // get to find list HangHoaTang from ID_NhomHHTang self.CTHD_ChosingKM().ID_DonViQuiDoi
        $('#promotiont').modal('show');
        // reset self.ListKM_ofHangHoa
        self.ListKM_ofHangHoa([]);
        var dtNow = new Date();
        var _month = (dtNow.getMonth() + 1).toString(); // 1-12 (+1 because getMoth() return 0-11)
        var _date = (dtNow.getDate()).toString(); // 1- 31
        var _hours = (dtNow.getHours()).toString(); // 1-24
        var _day = (dtNow.getDay() + 1).toString(); // mon:2, tues:3, wed:4, thur:5, fri:6, sat: 7, sun: 8
        var _weekofMonth = Math.ceil(dtNow.getDate() / 7); // get week of Month ( 1- 5);
        if (self.KM_KMApDung().length === 0) {
            GetList_KMApDung();
        }
        var ctDoiTuong = self.ChiTietDoiTuong();
        var itemKH_HH = [];
        var idDoiTuong = null;
        if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
            idDoiTuong = ctDoiTuong[0].ID;
            itemKH_HH = self.KhachHang_HangHoa().filter(x => x.ID_DoiTuong === ctDoiTuong[0].ID);
        }
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            var idRandomHD = item.IDRandomHD;
            // get soluongMua (sau khi tang/giam/sua soluong)
            var objSoLuong = $('#munber_' + item.IDRandom);
            // neu khong tich diem cho Hang giam gia --> chi lay hang khong co giam gia
            var tichDiemHangSale = CheckKM_TichDiem_forHangGiamGia();
            for (let i = 0; i < self.KM_KMApDung().length; i++) {
                var itemKM = self.KM_KMApDung()[i];
                if (itemKM.HinhThuc.toString().startsWith('2')) {
                    for (let j = 0; j < itemKM.DM_KhuyenMai_ChiTiet.length; j++) {
                        // mỗi lần for: phải reset lại sumSoLuong
                        var sumByNhom = 0;
                        var sumNhom_CongDiem = 0;// so luong hang thuc te duoc cong diem
                        var itemCT = itemKM.DM_KhuyenMai_ChiTiet[j];
                        var arrNhomChilds = GetAll_IDNhomChild_ofNhomHH(itemCT.ID_NhomHangHoaMua);
                        tree2.uncheckAll();
                        if (idNhomHHMua !== null && $.inArray(idNhomHHMua, arrNhomChilds) > -1) {
                            for (let k = 0; k < lstCTHD.length; k++) {
                                if (lstCTHD[k].IDRandomHD === idRandomHD) {
                                    // caculator sum SoLuong in Nhom
                                    if ($.inArray(lstCTHD[k].ID_NhomHangHoa, arrNhomChilds) > -1) {
                                        sumByNhom += parseFloat(lstCTHD[k].SoLuong);
                                        for (let m = 1; m < lstCTHD[k].DM_LoHang.length; m++) {
                                            sumByNhom += parseFloat(lstCTHD[k].DM_LoHang[m].SoLuong);
                                        }
                                        for (let m = 0; m < lstCTHD[k].HangCungLoais.length; m++) {
                                            sumByNhom += parseFloat(lstCTHD[k].HangCungLoais[m].SoLuong);
                                        }
                                        // so luong hang thuc te duoc cong diem
                                        if (!tichDiemHangSale) {
                                            if (lstCTHD[k].TienChietKhau === 0) {
                                                sumNhom_CongDiem += parseFloat(lstCTHD[k].SoLuong);
                                                for (let m = 1; m < lstCTHD[k].DM_LoHang.length; m++) {
                                                    if (lstCTHD[k].DM_LoHang[m].TienChietKhau === 0) {
                                                        sumNhom_CongDiem += parseFloat(lstCTHD[k].DM_LoHang[m].SoLuong);
                                                    }
                                                }
                                                for (let m = 0; m < lstCTHD[k].HangCungLoais.length; m++) {
                                                    if (lstCTHD[k].HangCungLoais[m].TienChietKhau === 0) {
                                                        sumNhom_CongDiem += parseFloat(lstCTHD[k].HangCungLoais[m].SoLuong);
                                                    }
                                                }
                                            }
                                        }
                                        else {
                                            sumNhom_CongDiem = sumByNhom;
                                        }
                                    }
                                }
                            }
                            // cong soluong voi nhung hang da mua truoc do
                            if (idDoiTuong !== null && itemKH_HH.length > 0) {
                                var arrIDQuiDoi2 = [];
                                var arrHH_byNhom = $.grep(self.HangHoaAll(), function (x) {
                                    return $.inArray(x.ID_NhomHangHoa, arrNhomChilds) > -1;
                                });
                                // get all ID_QuiDoi from lst Hang Hoa above
                                for (let k = 0; k < arrHH_byNhom.length; k++) {
                                    arrIDQuiDoi2.push(arrHH_byNhom[k].ID_DonViQuiDoi);
                                }
                                for (let k = 0; k < itemKH_HH[0].List_SoLuongMua.length; k++) {
                                    if ($.inArray(itemKH_HH[0].List_SoLuongMua[k].ID_DonViQuiDoi, arrIDQuiDoi2) > -1) {
                                        sumByNhom += parseFloat(itemKH_HH[0].List_SoLuongMua[k].SoLuong);
                                    }
                                }
                            }
                            var enoughSoLuong = CheckKhuyenMaiKH_bySumSoLuongMua(item.ID_DonViQuiDoi, sumByNhom, itemCT.SoLuongMua, true, itemCT.ID_NhomHangHoaMua);
                            // Nếu chưa đủ số lượng mua so với SoLuongMua trong ChiTietKhuyenMai (Giá bán theo SL mua) -> không push
                            if (enoughSoLuong) {
                                itemKM.HangHoaChoseTangs = [];
                                if (itemKM.HinhThuc === 24 || itemKM.HinhThuc === 23) {
                                    if (sumByNhom >= itemCT.SoLuongMua) {
                                        // update NoteHinhThuc
                                        if (itemKM.HinhThuc === 24) {
                                            if (itemCT.GiamGia !== null) {
                                                if (itemCT.GiamGiaTheoPhanTram) {
                                                    itemKM.Note_HinhThuc = 'Mua '.concat(itemCT.SoLuongMua, ' giảm giá ', itemCT.GiamGia, ' % mỗi sản phẩm');
                                                }
                                                else {
                                                    itemKM.Note_HinhThuc = 'Mua '.concat(itemCT.SoLuongMua, ' giảm giá ', formatNumber3Digit(itemCT.GiamGia), ' đ mỗi sản phẩm');
                                                }
                                            }
                                            else {
                                                itemKM.Note_HinhThuc = 'Mua ' + itemCT.SoLuongMua + ' giá ' + formatNumber3Digit(itemCT.GiaKhuyenMai);
                                            }
                                        }
                                        else {
                                            // diem: save in column GiamGia
                                            if (itemCT.GiamGiaTheoPhanTram) {
                                                itemKM.Note_HinhThuc = 'Tặng ' + formatNumber3Digit(itemCT.GiamGia) + " % điểm";
                                            }
                                            else {
                                                var diemCong = Math.floor(sumNhom_CongDiem / itemCT.SoLuongMua);
                                                itemKM.Note_HinhThuc = 'Tặng ' + formatNumber3Digit(itemCT.GiamGia * diemCong) + " điểm";
                                            }
                                        }
                                        self.ListKM_ofHangHoa.push(itemKM);
                                    }
                                }
                                else {
                                    self.ListKM_ofHangHoa.push(itemKM);
                                }
                            }
                        }
                        else {
                            // reset soluongMua
                            var sumSLQuiDoi = formatNumberToFloat(objSoLuong.val());
                            var sumNhom_CongDiem2 = 0;// so luong hang thuc te duoc cong diem
                            // check ID_QuiDoi Mua
                            if (itemCT.ID_DonViQuiDoiMua === item.ID_DonViQuiDoi) {
                                for (let k = 0; k < lstCTHD.length; k++) {
                                    if (lstCTHD[k].IDRandomHD === idRandomHD
                                        && lstCTHD[k].ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                                        // tinh so luong hang thu te duoc cong diem
                                        if (!tichDiemHangSale) {
                                            if (lstCTHD[k].TienChietKhau === 0) {
                                                sumNhom_CongDiem2 = sumSLQuiDoi;
                                            }
                                        }
                                        else {
                                            sumNhom_CongDiem2 = sumSLQuiDoi;
                                        }
                                        // cong so luong bao gom soluong of Lo
                                        for (let l = 1; l < lstCTHD[k].DM_LoHang.length; l++) {
                                            sumSLQuiDoi += parseFloat(lstCTHD[k].DM_LoHang[l].SoLuong);
                                            // tinh soluong Lohang duoc cong diem
                                            if (!tichDiemHangSale && lstCTHD[k].DM_LoHang[l].TienChietKhau === 0) {
                                                sumNhom_CongDiem2 += parseFloat(lstCTHD[k].DM_LoHang[l].SoLuong);
                                            }
                                        }
                                        // cong so luong bao gom soluong of Lo
                                        for (let l = 1; l < lstCTHD[k].HangCungLoais.length; l++) {
                                            sumSLQuiDoi += parseFloat(lstCTHD[k].HangCungLoais[l].SoLuong);
                                            // tinh soluong Lohang duoc cong diem
                                            if (!tichDiemHangSale && lstCTHD[k].HangCungLoais[l].TienChietKhau === 0) {
                                                sumNhom_CongDiem2 += parseFloat(lstCTHD[k].HangCungLoais[l].SoLuong);
                                            }
                                        }
                                        break;
                                    }
                                }
                                // cong soluong voi nhung hang da mua truoc do
                                if (idDoiTuong !== null && itemKH_HH.length > 0) {
                                    for (let k = 0; k < itemKH_HH[0].List_SoLuongMua.length; k++) {
                                        if (itemKH_HH[0].List_SoLuongMua[k].ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                                            sumSLQuiDoi += parseFloat(itemKH_HH[0].List_SoLuongMua[k].SoLuong);
                                            break;// because only 1 --> so break
                                        }
                                    }
                                }
                                var enoughSoLuong2 = CheckKhuyenMaiKH_bySumSoLuongMua(item.ID_DonViQuiDoi, sumSLQuiDoi, itemCT.SoLuongMua, false, null);
                                // Nếu chưa đủ số lượng mua so với SoLuongMua trong ChiTietKhuyenMai (Giá bán theo SL mua) -> không push
                                if (enoughSoLuong2) {
                                    itemKM.HangHoaChoseTangs = [];
                                    if (itemKM.HinhThuc === 24 || itemKM.HinhThuc === 23) {
                                        if (sumSLQuiDoi >= itemCT.SoLuongMua) {
                                            // update NoteHinhThuc
                                            if (itemKM.HinhThuc === 24) {
                                                if (itemCT.GiamGia !== null) {
                                                    if (itemCT.GiamGiaTheoPhanTram) {
                                                        itemKM.Note_HinhThuc = 'Mua '.concat(itemCT.SoLuongMua, ' giảm giá ', itemCT.GiamGia, ' % mỗi sản phẩm');
                                                    }
                                                    else {
                                                        itemKM.Note_HinhThuc = 'Mua '.concat(itemCT.SoLuongMua, ' giảm giá ', formatNumber3Digit(itemCT.GiamGia), ' đ mỗi sản phẩm');
                                                    }
                                                }
                                                else {
                                                    itemKM.Note_HinhThuc = 'Mua ' + itemCT.SoLuongMua + ' giá ' + formatNumber3Digit(itemCT.GiaKhuyenMai);
                                                }
                                            }
                                            else {
                                                // diem: save in column GiamGia
                                                if (itemCT.GiamGiaTheoPhanTram) {
                                                    itemKM.Note_HinhThuc = 'Tặng ' + formatNumber3Digit(itemCT.GiamGia) + " % điểm";
                                                }
                                                else {
                                                    var diemCong2 = Math.floor(sumNhom_CongDiem2 / itemCT.SoLuongMua);
                                                    itemKM.Note_HinhThuc = 'Tặng ' + formatNumber3Digit(diemCong2 * itemCT.GiamGia) + " điểm";
                                                }
                                            }
                                            self.ListKM_ofHangHoa.push(itemKM);
                                        }
                                    }
                                    else {
                                        self.ListKM_ofHangHoa.push(itemKM);
                                    }
                                }
                            }
                        }
                    }
                }
            }
            // remove KM if douple (because push from DM_KhuyenMaiChiTiet)
            var arrUnique = $.unique(self.ListKM_ofHangHoa().sort());
            self.ListKM_ofHangHoa(arrUnique);
            var arrKhuyenMai = [];
            for (let i = 0; i < lstCTHD.length; i++) {
                if (lstCTHD[i].IDRandomHD === idRandomHD && lstCTHD[i].ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                    // if HangHoa da chon KM -> load list HangTang in popup
                    if (lstCTHD[i].ID_KhuyenMai !== null && lstCTHD[i].ID_KhuyenMai !== undefined) {
                        self.HH_KhuyenMai(lstCTHD[i].ID_KhuyenMai);
                        arrKhuyenMai = lstCTHD[i].HangHoa_KM;
                    }
                }
            }
            // assign HH Khuyen Mai for self.ListKM_ofHangHoa
            if (self.HH_KhuyenMai() !== undefined) {
                for (let i = 0; i < self.ListKM_ofHangHoa().length; i++) {
                    if (self.ListKM_ofHangHoa()[i].ID_KhuyenMai === self.HH_KhuyenMai()) {
                        self.ListKM_ofHangHoa()[i].HangHoaChoseTangs = arrKhuyenMai;
                        break;
                    }
                }
            }
        }
        self.HHTang_AfterRender(self.ListKM_ofHangHoa());
        self.ListKM_ofHangHoa([]);
        for (let i = 0; i < self.HHTang_AfterRender().length; i++) {
            self.ListKM_ofHangHoa.push(self.HHTang_AfterRender()[i]);
        }
    }
    self.LoadHangHoaTang = function (item) {
        self.ID_KhuyenMai(item.ID_KhuyenMai); // assign to do add HangHoa
        var itemKM = $.grep(self.DMKhuyenMai(), function (km) {
            return km.ID === item.ID_KhuyenMai;
        });
        self.HinhThucKM(itemKM[0].HinhThuc);
        var isKMNhom = Check_KhuyenMaiNhom();
        // get IDNhomHHTang by ID_NhomHHMua
        var idNhomHHTang = [];
        var arrHHTang = [];
        var arrChildsNhomTang = [];
        if (isKMNhom !== false) {
            for (let i = 0; i < itemKM[0].DM_KhuyenMai_ChiTiet.length; i++) {
                let itemCTKM = itemKM[0].DM_KhuyenMai_ChiTiet[i];
                if (itemCTKM.ID === isKMNhom.ID_ChiTietKM) {
                    idNhomHHTang.push(itemCTKM.ID_NhomHangHoa);
                    idNhomHHTang.push(itemCTKM.ID_DonViQuiDoi);
                    self.SoLuongMua(itemCTKM.SoLuongMua);// assign SLTang, SLMua to do check Add HHTang
                    self.SoLuongTang(itemCTKM.SoLuong);
                    self.IsTangTheoNhom(true);
                    self.GiamGiaKM(itemCTKM.GiamGia);
                    self.GiamGiaTheoPhanTram(itemCTKM.GiamGiaTheoPhanTram);
                    // get Nhom Childs Tang
                    arrChildsNhomTang = GetAll_IDNhomChild_ofNhomHH(itemCTKM.ID_NhomHangHoa);
                    tree2.uncheckAll();
                    // nếu nhóm được hưởng đồng thời 2 khuyến mại trong cùng 1 chương trình KM --> load all hàng thuộc nhóm
                    // (VD: Mua 2 hàng nhóm A, được KM hàng nhóm B, hoặc nhóm C )
                    let other = $.grep(itemKM[0].DM_KhuyenMai_ChiTiet, function (x) {
                        return x.ID !== itemCTKM.ID && x.ID_NhomHangHoaMua === itemCTKM.ID_NhomHangHoaMua;
                    });
                    if (other.length > 0) {
                        for (let j = 0; j < other.length; j++) {
                            let arrIDNhom = GetAll_IDNhomChild_ofNhomHH(other[j].ID_NhomHangHoa);
                            tree2.uncheckAll();
                            for (let k = 0; k < arrIDNhom.length; k++) {
                                arrChildsNhomTang.push(arrIDNhom[k]);
                            }
                        }
                    }
                    break;
                }
            }
            // get lst HangHoa in NhomHHTang
            arrHHTang = $.grep(self.HangHoaAll(), function (x) {
                return ($.inArray(x.ID_DonViQuiDoi.toLowerCase(), idNhomHHTang) > -1) ||
                    (x.ID_NhomHangHoa !== null && $.inArray(x.ID_NhomHangHoa, arrChildsNhomTang) > -1);
            });
        }
        if (arrHHTang.length === 0) {
            // get lst HHTang by ID_QuiDoiMua
            var arrID_QuiDoiTang = [];
            var itemKMCT = [];
            for (let i = 0; i < itemKM[0].DM_KhuyenMai_ChiTiet.length; i++) {
                if (itemKM[0].DM_KhuyenMai_ChiTiet[i].ID_DonViQuiDoiMua === self.CTHD_ChosingKM().ID_DonViQuiDoi) {
                    itemKMCT = itemKM[0].DM_KhuyenMai_ChiTiet[i];
                    // get ID_QuiDoi tang + ID_NhomHH Tang
                    arrID_QuiDoiTang.push(itemKMCT.ID_DonViQuiDoi);
                    arrID_QuiDoiTang.push(itemKMCT.ID_NhomHangHoa);
                    arrChildsNhomTang = GetAll_IDNhomChild_ofNhomHH(itemKMCT.ID_NhomHangHoa);
                    tree2.uncheckAll();
                }
            }
            // remove item null in arrID_QuiDoiTang
            arrID_QuiDoiTang = $.grep(arrID_QuiDoiTang, function (x) {
                return x !== null;
            });
            // get all Hang Hoa with ID_QuiDoi OR ID_NhomHH
            arrHHTang = $.grep(self.HangHoaAll(), function (itemHH) {
                return $.inArray(itemHH.ID_DonViQuiDoi.toLowerCase(), arrID_QuiDoiTang) > -1 ||
                    (itemHH.ID_NhomHangHoa !== null && $.inArray(itemHH.ID_NhomHangHoa, arrChildsNhomTang) > -1);
            });
            arrHHTang = UpdateGiaBanHangHoa_inList(arrHHTang);
            self.SoLuongTang(itemKMCT.SoLuong);// assign SLTang to do check Add HHTang
            self.SoLuongMua(itemKMCT.SoLuongMua);
            self.GiamGiaKM(itemKMCT.GiamGia);
            self.GiamGiaTheoPhanTram(itemKMCT.GiamGiaTheoPhanTram);
            self.IsTangTheoNhom(false);
        }
        // add ID_Random for HangTang --> get ID_LoHang for HangKM (save DB)
        for (let i = 0; i < arrHHTang.length; i++) {
            var rd = Math.floor(Math.random() * 100000000 + 1);
            arrHHTang[i].KM_IDRandom = 'KM_IDRandom' + rd;
        }
        self.HangHoaTangs(arrHHTang);
    }
    self.fiterHHTang = function (item, inputString) {
        var itemSearch = locdau(item.TenHangHoa);
        var itemSearch2 = locdau(item.MaHangHoa);
        var locdauInput = locdau(inputString);
        var arr = itemSearch.split(/\s+/);
        var sThreechars = '';
        var i = 0;
        var lengthArr = arr.length;
        for (i; i < lengthArr; i++) {
            sThreechars += arr[i].toString().split('')[0];
        }
        var ss = itemSearch.indexOf(locdauInput) > -1 || itemSearch2.indexOf(locdauInput) > -1 ||
            sThreechars.indexOf(locdauInput) > -1;
        return ss;
    }
    self.ID_HHTang.subscribe(function (newID) {
        if (newID !== undefined) {
            var idKhuyenMai = self.ID_KhuyenMai();
            var itemHH = $.grep(self.HangHoaTangs(), function (item) {
                return item.KM_IDRandom === newID;
            });
            self.ID_HHTang(undefined);
            if (itemHH.length > 0) {
                $(function () {
                    // find all input with id start  'txtAuto' and not id ='txtAuto_'+ idKhuyenMai;
                    $('input[id^=txtAuto_]').not('#txtAuto_' + idKhuyenMai).val('');
                });
                var tienChietKhau = 0;
                var ptChietKhau = 0;
                var giaBan = 0;
                // caculator TienChietKhau,GiaBan by HinhThucKM
                switch (self.HinhThucKM()) {
                    case 21: // mua hang giamgia hang
                        if (self.GiamGiaTheoPhanTram()) {
                            tienChietKhau = self.GiamGiaKM() * itemHH[0].GiaBan / 100;
                            ptChietKhau = self.GiamGiaKM();
                        }
                        else {
                            tienChietKhau = self.GiamGiaKM();
                            ptChietKhau = 0;
                        }
                        break;
                    case 22: // mua hang tang hang
                        tienChietKhau = itemHH[0].GiaBan;
                        ptChietKhau = 0;
                        break;
                    case 24:
                        loaiKM_note = ' giá ';
                        break;
                }
                giaBan = itemHH[0].GiaBan - tienChietKhau;
                var quanLyTheoLo = itemHH[0].QuanLyTheoLoHang;
                quanLyTheoLo = (quanLyTheoLo === undefined || quanLyTheoLo === null ? false : quanLyTheoLo);
                var giaVon = itemHH[0].GiaVon;
                var laHangHoa = itemHH[0].LaHangHoa;
                if (!laHangHoa) {
                    giaVon = 0;
                }
                var objHH = {
                    SoThuTu: 1,
                    ID_KhuyenMai: null, // not set ID_KhuyenMai for HangTang of HangHoa
                    MaHangHoa: itemHH[0].MaHangHoa,
                    TenHangHoa: itemHH[0].TenHangHoa,
                    ID_HangHoa: itemHH[0].ID,
                    ThuocTinh_GiaTri: itemHH[0].ThuocTinh_GiaTri,
                    SoLuong: 1,
                    GiaBan: itemHH[0].GiaBan, // keep price old, only change tienchietkhau
                    DonGia: itemHH[0].GiaBan,
                    GiaVon: giaVon,
                    TienChietKhau: tienChietKhau, // Tang hang --> GiamGia = GiaBan
                    PTChietKhau: ptChietKhau, // giam gia: %
                    ThanhTien: giaBan,
                    TonKho: itemHH[0].TonKho,
                    ID_DonViQuiDoi: itemHH[0].ID_DonViQuiDoi,
                    ID_LoHang: itemHH[0].ID_LoHang, // assign ID_LoHang KM --> caculator TonKho by LoHang
                    QuanLyTheoLoHang: quanLyTheoLo,
                    TenDonViTinh: itemHH[0].TenDonViTinh,
                    ID_TangKem: self.CTHD_ChosingKM().ID_DonViQuiDoi,
                    TangKem: true,
                    GhiChu: '',
                    IDRandomHD: self.CTHD_ChosingKM().IDRandomHD,
                    ThanhToan: giaBan,
                    PTThue: 0,
                    TienThue: 0,
                    GhiChu_NVThucHien: '',
                    GhiChu_NVTuVan: '',
                    GhiChu_NVThucHienPrint: '',
                    GhiChu_NVTuVanPrint: '',
                    ThanhPhan_DinhLuong: [],
                    BH_NhanVienThucHien: [],
                    ThanhPhanComBo: [],
                    HangCungLoais: [],
                    HoaHongTruocChietKhau: 0,
                }
                var sumSL_inCTHD = GetSum_SoLuongHang_SameGroup(null);
                // tinh SLTang phu hop voi HH da mua
                // số lượng tặng: tùy thuộc vào ID_Nhom/ID_QuiDoi của hàng tặng đang chọn (todo - KM tặng hàng)
                var sluongTang_PhuHop = (sumSL_inCTHD / self.SoLuongMua()) * self.SoLuongTang();
                // caculator sum Soluong in HHTang
                var sumSL = 0;
                for (let i = 0; i < self.ListKM_ofHangHoa().length; i++) {
                    let itemKM = self.ListKM_ofHangHoa()[i];
                    if (itemKM.ID_KhuyenMai === idKhuyenMai) {
                        for (let j = 0; j < itemKM.HangHoaChoseTangs.length; j++) {
                            var itemHHTang = itemKM.HangHoaChoseTangs[j];
                            sumSL += formatNumberToFloat(itemHHTang.SoLuong);
                        }
                    }
                }
                if (sumSL < sluongTang_PhuHop) {
                    // find ListKM_ofHangHoa with ID_KhuyenMai && add objHH --> HangHoaChoseTangs
                    for (let i = 0; i < self.ListKM_ofHangHoa().length; i++) {
                        let itemKM = self.ListKM_ofHangHoa()[i];
                        if (itemKM.ID_KhuyenMai === idKhuyenMai) {
                            let sluongOld = 0;
                            for (let j = 0; j < itemKM.HangHoaChoseTangs.length; j++) {
                                if (itemKM.HangHoaChoseTangs[j].ID_DonViQuiDoi === newID) {
                                    sluongOld = itemKM.HangHoaChoseTangs[j].SoLuong;
                                    // xoa old
                                    self.ListKM_ofHangHoa()[i].HangHoaChoseTangs.splice(j, 1);
                                    break;
                                }
                            }
                            // add new
                            objHH.SoLuong = parseFloat(sluongOld) + 1;
                            objHH.ThanhTien = objHH.SoLuong * giaBan;
                            objHH.ThanhToan = objHH.ThanhTien;
                            self.ListKM_ofHangHoa()[i].HangHoaChoseTangs.unshift(objHH);
                            break;
                        }
                    }
                }
                else {
                    ShowMessage_Danger('Quá số lượng hàng tặng');
                    return;
                }
                // assign ListKM_ofHangHoa =[] , after push again
                self.HHTang_AfterRender(self.ListKM_ofHangHoa());
                self.ListKM_ofHangHoa([]);
                for (let i = 0; i < self.HHTang_AfterRender().length; i++) {
                    self.ListKM_ofHangHoa.push(self.HHTang_AfterRender()[i]);
                }
            }
        }
    });
    self.ChoseKhuyenMai = function (item) {
        self.HH_KhuyenMai(item.ID_KhuyenMai);
        self.ID_KhuyenMai(item.ID_KhuyenMai);
    }
    self.AddKhuyenMai_forHangHoa = function () {
        if (self.HH_KhuyenMai() === undefined) {
            ShowMessage_Danger('Vui lòng chọn chương trình khuyến mại');
            return;
        }
        else {
            var itemKM = $.grep(self.ListKM_ofHangHoa(), function (x) {
                return x.ID_KhuyenMai === self.HH_KhuyenMai();
            });
            if (itemKM.length > 0) {
                switch (itemKM[0].HinhThuc) {
                    case 21:
                    case 22:
                        if (itemKM[0].HangHoaChoseTangs.length === 0) {
                            ShowMessage_Danger('Vui lòng chọn hàng khuyến mại');
                            return;
                        }
                        break;
                    case 23:// tangdiem
                        if (self.ChiTietDoiTuong() === null || (self.ChiTietDoiTuong() && self.ChiTietDoiTuong().length === 0)) {
                            ShowMessage_Danger('Vui lòng chọn khách hàng áp dụng');
                            return;
                        }
                        break;
                }
                // check ID_QuiDoiMua {KM theo nhom/ KM theo ID_QuiDoi}
                var slCanMua = 0;
                var slTang = 0;
                var isTangNhom = false;
                var giaKhuyenMai = 0;
                // use with HinhThuc = 23
                var diemCong = 0;
                var congPTramDiem = true;
                // use type = 24
                var checkTangNhom = Check_KhuyenMaiNhom();
                if (checkTangNhom === false) {
                    isTangNhom = false;
                    var kmQD = ChekKhuyenMai_ByIDQuiDoi();
                    if (kmQD !== false) {
                        slCanMua = kmQD.SoLuongMua;
                        slTang = kmQD.SoLuongTang;
                        giaKhuyenMai = kmQD.GiaKhuyenMai;
                        diemCong = kmQD.GiamGia;
                        congPTramDiem = kmQD.GiamGiaTheoPhanTram;
                    }
                }
                else {
                    isTangNhom = true;
                    slCanMua = checkTangNhom.SoLuongMua;
                    slTang = checkTangNhom.SoLuongTang;
                    giaKhuyenMai = checkTangNhom.GiaKhuyenMai;
                    diemCong = checkTangNhom.GiamGia;
                    congPTramDiem = checkTangNhom.GiamGiaTheoPhanTram;
                }
                var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
                var loaiKM_note = '';

                switch (itemKM[0].HinhThuc) {
                    case 21:
                        if (self.GiamGiaTheoPhanTram()) {
                            loaiKM_note = ' giảm giá ' + self.GiamGiaKM() + '% cho ';
                        }
                        else {
                            loaiKM_note = ' giảm giá ' + self.GiamGiaKM() + ' cho '; // GG theo VND
                        }
                        break;
                    case 22:
                        loaiKM_note = ' tặng ';
                        break;
                    case 23:
                        var soluongMua_Now = 0;
                        // neu khong tich diem cho Hang giam gia --> chi lay hang khong co giam gia
                        var tichDiemHangSale = CheckKM_TichDiem_forHangGiamGia();
                        // Neu đủ số lượng, vẫn áp dụng KM
                        var lstCTHD_23 = localStorage.getItem(lcListCTHD);
                        if (lstCTHD_23 !== null) {
                            lstCTHD_23 = JSON.parse(lstCTHD_23);
                            // get CTHD by IDRandomHD
                            lstCTHD_23 = $.grep(lstCTHD_23, function (x) {
                                return x.IDRandomHD === idRandomHD;
                            });
                            if (isTangNhom) {
                                let arrChilds = GetAll_IDNhomChild_ofNhomHH(checkTangNhom.ID_NhomHHMua);
                                tree2.uncheckAll();
                                // get all cthd with IDNhom thuoc  arrChilds
                                let ctByNhom = $.grep(lstCTHD_23, function (x) {
                                    return $.inArray(x.ID_NhomHangHoa, arrChilds) > -1;
                                });
                                // count soluongmua
                                if (!tichDiemHangSale) {
                                    for (let i = 0; i < ctByNhom.length; i++) {
                                        if (ctByNhom[i].TienChietKhau === 0) {
                                            soluongMua_Now += parseFloat(ctByNhom[i].SoLuong);
                                        }
                                        for (let k = 1; k < ctByNhom[i].DM_LoHang.length; k++) {
                                            if (ctByNhom[i].DM_LoHang[k].TienChietKhau === 0) {
                                                soluongMua_Now += parseFloat(ctByNhom[i].DM_LoHang[k].SoLuong);
                                            }
                                        }
                                        for (let k = 0; k < ctByNhom[i].HangCungLoais.length; k++) {
                                            if (ctByNhom[i].HangCungLoais[k].TienChietKhau === 0) {
                                                soluongMua_Now += parseFloat(ctByNhom[i].HangCungLoais[k].SoLuong);
                                            }
                                        }
                                    }
                                }
                                else {
                                    for (let i = 0; i < ctByNhom.length; i++) {
                                        soluongMua_Now += parseFloat(ctByNhom[i].SoLuong);
                                        for (let k = 1; k < ctByNhom[i].DM_LoHang.length; k++) {
                                            soluongMua_Now += parseFloat(ctByNhom[i].DM_LoHang[k].SoLuong);
                                        }
                                        for (let k = 0; k < ctByNhom[i].HangCungLoais.length; k++) {
                                            soluongMua_Now += parseFloat(ctByNhom[i].HangCungLoais[k].SoLuong);
                                        }
                                    }
                                }
                            }
                            else {
                                for (let j = 0; j < itemKM[0].DM_KhuyenMai_ChiTiet.length; j++) {
                                    let itemCTKM = itemKM[0].DM_KhuyenMai_ChiTiet[j];
                                    // DM_KhuyenMai_ChiTiet had order by SoLuongMua ASC --> get item first if conditional = true
                                    for (let i = 0; i < lstCTHD_23.length; i++) {
                                        if (itemCTKM.ID_DonViQuiDoiMua === lstCTHD_23[i].ID_DonViQuiDoi) {
                                            if (!tichDiemHangSale) {
                                                if (lstCTHD_23[i].TienChietKhau === 0) {
                                                    soluongMua_Now = parseFloat(lstCTHD_23[i].SoLuong);
                                                }
                                                // cong so luong in DM_Lo
                                                for (let k = 1; k < lstCTHD_23[i].DM_LoHang.length; k++) {
                                                    if (lstCTHD_23[i].DM_LoHang[k].TienChietKhau === 0) {
                                                        soluongMua_Now += parseFloat(lstCTHD_23[i].DM_LoHang[k].SoLuong);
                                                    }
                                                }
                                                for (let k = 0; k < lstCTHD_23[i].HangCungLoais.length; k++) {
                                                    if (lstCTHD_23[i].HangCungLoais[k].TienChietKhau === 0) {
                                                        soluongMua_Now += parseFloat(lstCTHD_23[i].HangCungLoais[k].SoLuong);
                                                    }
                                                }
                                            }
                                            else {
                                                soluongMua_Now = parseFloat(lstCTHD_23[i].SoLuong);
                                                // cong so luong in DM_Lo
                                                for (let k = 1; k < lstCTHD_23[i].DM_LoHang.length; k++) {
                                                    soluongMua_Now += parseFloat(lstCTHD_23[i].DM_LoHang[k].SoLuong);
                                                }
                                                for (let k = 0; k < lstCTHD_23[i].HangCungLoais.length; k++) {
                                                    soluongMua_Now += parseFloat(lstCTHD_23[i].HangCungLoais[k].SoLuong);
                                                }
                                            }
                                            break;
                                        }
                                    }
                                }
                            }
                            if (congPTramDiem) {
                                loaiKM_note = ' tặng ' + diemCong + '% điểm ';
                            }
                            else {
                                // nhân theo Soluong Mua (chi tinh Soluong tai thoi diem mua hien tai)
                                diemCong = Math.floor(diemCong * Math.floor(soluongMua_Now / slCanMua));
                                loaiKM_note = ' tặng ' + diemCong + ' điểm ';
                            }
                        }
                        break;
                    case 24:
                        if (!commonStatisJs.CheckNull(diemCong)) {
                            if (congPTramDiem) {
                                loaiKM_note = ' giảm giá ' + diemCong + '% cho mỗi sản phẩm';
                            }
                            else {
                                loaiKM_note = ' giảm giá ' + diemCong + ' cho mỗi sản phẩm';
                            }
                        }
                        else {
                            loaiKM_note = ' giá ' + formatNumber3Digit(giaKhuyenMai) + ' mỗi sản phẩm';
                        }
                        break;
                }
                // remove item in HangHoaChoseTangs with SoLuong = 0 if list Hang Tang > 1
                var itemHHTang = itemKM[0].HangHoaChoseTangs;
                if (itemHHTang.length > 1) {
                    itemHHTang = $.grep(itemHHTang, function (x) {
                        return parseFloat(x.SoLuong) > 0;
                    })
                }
                // caculator SLTang cho phep, SLMua in CTHD
                var sumSL_inCTHD = GetSum_SoLuongHang_SameGroup(null);
                var spMua_note = '';
                var sumTT_Diem = 0;
                var lstCTHD = JSON.parse(localStorage.getItem(lcListCTHD));
                if (isTangNhom === true) {
                    var arrNhomChild = GetAll_IDNhomChild_ofNhomHH(checkTangNhom.ID_NhomHHMua);
                    tree2.uncheckAll();
                    // Kmai theo Nhom
                    for (let i = 0; i < lstCTHD.length; i++) {
                        let itemCTHD = lstCTHD[i];
                        // sum Soluong all HangHoa by ID_NhomHHTang
                        let sluongByIDQuiDoi = 0;
                        var sumThanhTien = 0;
                        if (itemCTHD.IDRandomHD === idRandomHD && $.inArray(itemCTHD.ID_NhomHangHoa, arrNhomChild) > -1) {
                            sluongByIDQuiDoi = parseInt(itemCTHD.SoLuong);
                            // sum Hang in LoHang
                            for (let j = 1; j < itemCTHD.DM_LoHang.length; j++) {
                                sluongByIDQuiDoi += parseInt(itemCTHD.DM_LoHang[j].SoLuong); // sum by IDQuiDoi --> assign SoLuong in Note KhuyenMai
                                sumThanhTien += parseInt(itemCTHD.DM_LoHang[j].ThanhTien);
                            }
                            for (let j = 0; j < itemCTHD.HangCungLoais.length; j++) {
                                sluongByIDQuiDoi += parseInt(itemCTHD.HangCungLoais[j].SoLuong);
                                sumThanhTien += parseInt(itemCTHD.HangCungLoais[j].ThanhTien);
                            }
                            // Neu HH tang theo nhom -> get SoLuong, MaHH all HH in NhomHH -> save loaiKM_note
                            spMua_note += sluongByIDQuiDoi + ' ' + itemCTHD.MaHangHoa + ', ';
                            // get ThanhTien of HangHoa (use CongDiem by Nhom)
                            if (itemKM[0].HinhThuc === 23) {
                                sumThanhTien += parseInt(itemCTHD.ThanhTien);
                                sumTT_Diem = sumThanhTien;
                            }
                        }
                    }
                    // remove comma 
                    spMua_note = Remove_LastComma(spMua_note);
                }
                else {
                    for (let i = 0; i < lstCTHD.length; i++) {
                        let itemCTHD = lstCTHD[i];
                        let sluongByIDQuiDoi = 0;
                        var sumThanhTien2 = 0;
                        if (itemCTHD.IDRandomHD === idRandomHD && itemCTHD.ID_DonViQuiDoi === self.CTHD_ChosingKM().ID_DonViQuiDoi) {
                            sluongByIDQuiDoi = parseInt(itemCTHD.SoLuong);
                            // sum Hang in LoHang
                            for (let j = 1; j < itemCTHD.DM_LoHang.length; j++) {
                                sluongByIDQuiDoi += parseInt(itemCTHD.DM_LoHang[j].SoLuong);
                                sumThanhTien2 += parseInt(itemCTHD.DM_LoHang[j].ThanhTien);
                            }
                            for (let j = 0; j < itemCTHD.HangCungLoais.length; j++) {
                                sluongByIDQuiDoi += parseInt(itemCTHD.HangCungLoais[j].SoLuong);
                                sumThanhTien2 += parseInt(itemCTHD.HangCungLoais[j].ThanhTien);
                            }
                            spMua_note += sluongByIDQuiDoi + ' ' + itemCTHD.MaHangHoa;
                            // get ThanhTien of HangHoa (use CongDiem by Nhom)
                            if (itemKM[0].HinhThuc === 23) {
                                sumThanhTien2 += parseInt(itemCTHD.ThanhTien);
                                sumTT_Diem = sumThanhTien2;
                            }
                            break;
                        }
                    }
                }
                // tinh SLTang phu hop voi HH da mua
                var sluongTang_PhuHop = parseInt(sumSL_inCTHD / slCanMua * slTang);
                // caculator sum Soluong in HHTang
                var sumSL = 0;
                for (let j = 0; j < itemHHTang.length; j++) {
                    sumSL += parseInt(itemHHTang[j].SoLuong);
                }
                // Nếu nhập sumSoLuong > sluongTang cho phep --> gán số lượng max cho Sp đầu tiên (OK)
                if (sumSL > sluongTang_PhuHop) {
                    itemHHTang = $.grep(itemHHTang, function (x, index) {
                        return index === 0;
                    });
                    itemHHTang[0].SoLuong = sluongTang_PhuHop;
                }
                else {
                    // neu chua du sltang --> gan sluong = max - sum (sluong) cho Sp dau tien (OK)
                    if (sumSL < sluongTang_PhuHop) {
                        var slThieu = sluongTang_PhuHop - sumSL;
                        itemHHTang[0].SoLuong = parseInt(itemHHTang[0].SoLuong) + slThieu;
                    }
                }
                // update again ThanhTien for HangTang
                for (let j = 0; j < itemHHTang.length; j++) {
                    let giaAfterSale = itemHHTang[j].GiaBan - itemHHTang[j].TienChietKhau;
                    giaAfterSale = giaAfterSale < 0 ? 0 : giaAfterSale;
                    itemHHTang[j].ThanhTien = itemHHTang[j].SoLuong * giaAfterSale;
                    itemHHTang[j].ThanhToan = itemHHTang[j].ThanhTien;
                }
                // get Ma + SoLuong hang tang
                for (let i = 0; i < itemHHTang.length; i++) {
                    loaiKM_note += itemHHTang[i].SoLuong + ' ' + itemHHTang[i].MaHangHoa + ', ';
                }
                // delete comma last
                loaiKM_note = Remove_LastComma(loaiKM_note);
                var tenKM_Note = itemKM[0].TenKhuyenMai + ': Khi mua ' + spMua_note + ' ' + loaiKM_note;
                var lenCTHD = lstCTHD.length;
                // update GiaBan, GiamGia if HinhThuc = 24 (Mua hang - gia theo SL mua)
                if (itemKM[0].HinhThuc === 24) {
                    if (isTangNhom === true) {
                        for (let i = 0; i < lenCTHD; i++) {
                            if (lstCTHD[i].IDRandomHD === idRandomHD && lstCTHD[i].ID_NhomHangHoa === self.CTHD_ChosingKM().ID_NhomHangHoa) {
                                lstCTHD[i].TenKhuyenMai = tenKM_Note;
                                lstCTHD[i].DVTinhGiam = 'VND';
                                lstCTHD[i].TangKem = true;
                                lstCTHD[i].ID_TangKem = lstCTHD[i].ID_DonViQuiDoi;
                                lstCTHD[i].IsOpeningKMai = true;
                                lstCTHD[i].ID_KhuyenMai = itemKM[0].ID_KhuyenMai;
                                // get giaban bandau
                                let itemHH = $.grep(self.HangHoaAll(), function (x) {
                                    return x.ID_DonViQuiDoi === lstCTHD[i].ID_DonViQuiDoi;
                                })
                                itemHH = UpdateGiaBanHangHoa_inList(itemHH);

                                if (itemHH.length > 0) {
                                    // khuyenmai: giaban/ 1sp
                                    let ck = itemHH[0].GiaBan - giaKhuyenMai;
                                    if (ck > 0) {
                                        lstCTHD[i].TienChietKhau = ck;
                                        lstCTHD[i].GiaBan = itemHH[0].GiaBan;
                                        lstCTHD[i].DonGia = itemHH[0].GiaBan;
                                        lstCTHD[i].ThanhTien = lstCTHD[i].SoLuong * giaKhuyenMai;
                                        lstCTHD[i].ThanhToan = lstCTHD[i].ThanhTien;
                                        // update in DM_Lo, hangcungloai
                                        for (let k = 0; k < lstCTHD[i].DM_LoHang.length; k++) {
                                            lstCTHD[i].DM_LoHang[k].TienChietKhau = ck;
                                            lstCTHD[i].DM_LoHang[k].GiaBan = itemHH[0].GiaBan;
                                            lstCTHD[i].DM_LoHang[k].DonGia = itemHH[0].GiaBan;
                                            lstCTHD[i].DM_LoHang[k].ThanhTien = lstCTHD[i].DM_LoHang[k].SoLuong * giaKhuyenMai;
                                        }
                                        for (let k = 0; k < lstCTHD[i].HangCungLoais.length; k++) {
                                            lstCTHD[i].HangCungLoais[k].TienChietKhau = ck;
                                            lstCTHD[i].HangCungLoais[k].GiaBan = itemHH[0].GiaBan;
                                            lstCTHD[i].HangCungLoais[k].DonGia = itemHH[0].GiaBan;
                                            lstCTHD[i].HangCungLoais[k].ThanhTien = lstCTHD[i].HangCungLoais[k].SoLuong * giaKhuyenMai;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    else {
                        for (let i = 0; i < lenCTHD; i++) {
                            if (lstCTHD[i].IDRandomHD === idRandomHD && lstCTHD[i].ID_DonViQuiDoi === self.CTHD_ChosingKM().ID_DonViQuiDoi) {
                                lstCTHD[i].TenKhuyenMai = tenKM_Note;
                                lstCTHD[i].DVTinhGiam = 'VND';
                                lstCTHD[i].TangKem = true;
                                lstCTHD[i].ID_TangKem = lstCTHD[i].ID_DonViQuiDoi;
                                lstCTHD[i].IsOpeningKMai = true;
                                lstCTHD[i].HangHoa_KM = [];
                                lstCTHD[i].ID_KhuyenMai = itemKM[0].ID_KhuyenMai;
                                let itemHH = $.grep(self.HangHoaAll(), function (x) {
                                    return x.ID_DonViQuiDoi === lstCTHD[i].ID_DonViQuiDoi;
                                })
                                itemHH = UpdateGiaBanHangHoa_inList(itemHH);
                                if (itemHH.length > 0) {
                                    // khuyenmai: giaban/ 1sp
                                    let ck = itemHH[0].GiaBan - giaKhuyenMai;
                                    if (ck > 0) {
                                        lstCTHD[i].TienChietKhau = ck;
                                        lstCTHD[i].GiaBan = itemHH[0].GiaBan;
                                        lstCTHD[i].DonGia = itemHH[0].GiaBan;
                                        lstCTHD[i].ThanhTien = lstCTHD[i].SoLuong * giaKhuyenMai;
                                        lstCTHD[i].ThanhToan = lstCTHD[i].ThanhTien;
                                        for (let k = 0; k < lstCTHD[i].DM_LoHang.length; k++) {
                                            lstCTHD[i].DM_LoHang[k].TienChietKhau = ck;
                                            lstCTHD[i].DM_LoHang[k].GiaBan = itemHH[0].GiaBan;
                                            lstCTHD[i].DM_LoHang[k].DonGia = itemHH[0].GiaBan;
                                            lstCTHD[i].DM_LoHang[k].ThanhTien = lstCTHD[i].DM_LoHang[k].SoLuong * giaKhuyenMai;
                                        }
                                        for (let k = 0; k < lstCTHD[i].HangCungLoais.length; k++) {
                                            lstCTHD[i].HangCungLoais[k].TienChietKhau = ck;
                                            lstCTHD[i].HangCungLoais[k].GiaBan = itemHH[0].GiaBan;
                                            lstCTHD[i].HangCungLoais[k].DonGia = itemHH[0].GiaBan;
                                            lstCTHD[i].HangCungLoais[k].ThanhTien = lstCTHD[i].HangCungLoais[k].SoLuong * giaKhuyenMai;
                                        }
                                    }
                                }
                                break;
                            }
                        }
                    }
                }
                else {
                    // HinhThuc !=24: update HangChoseTang
                    for (let i = 0; i < lenCTHD; i++) {
                        if (lstCTHD[i].IDRandomHD === idRandomHD && lstCTHD[i].ID_DonViQuiDoi === self.CTHD_ChosingKM().ID_DonViQuiDoi) {
                            lstCTHD[i].TenKhuyenMai = tenKM_Note;
                            lstCTHD[i].HangHoa_KM = itemHHTang;
                            lstCTHD[i].IsOpeningKMai = true;
                            lstCTHD[i].ID_KhuyenMai = itemKM[0].ID_KhuyenMai;
                            // not reset TienChietKhau,ThanhTien (if HinhThuc !=24)
                            //if (itemKM[0].HinhThuc !== 23) {
                            //    lstCTHD[i].TienChietKhau = 0;
                            //    lstCTHD[i].ThanhTien = lstCTHD[i].SoLuong * lstCTHD[i].GiaBan;
                            //}
                            break;
                        }
                    }
                    // if TangNhom: update ID_KhuyenMai,ID_TangKem for all HH in Nhom (Todo)
                    if (isTangNhom) {
                        for (let i = 0; i < lenCTHD; i++) {
                            if (lstCTHD[i].IDRandomHD === idRandomHD && lstCTHD[i].ID_NhomHangHoa === self.CTHD_ChosingKM().ID_NhomHangHoa) {
                                lstCTHD[i].ID_KhuyenMai = itemKM[0].ID_KhuyenMai;
                            }
                        }
                    }
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD))
                // bind again CTHD
                var arrCTHD = $.grep(lstCTHD, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });
                self.HangHoaAfterAdds(arrCTHD);
                UpdateCacheHDLe(idRandomHD, false);
                // use Km cong diem hang hoa
                if (itemKM[0].HinhThuc === 23) {
                    var quydoiDiemHH = Math.floor(sumTT_Diem / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                    if (congPTramDiem) {
                        // tinh diem
                        quydoiDiemHH = Math.floor(diemCong / 100 * quydoiDiemHH);
                    }
                    else {
                        quydoiDiemHH = diemCong;
                    }
                    // update diemcong HD after update diemkhuyenmai HH
                    UpdateDiemKhuyenMai_CTHD(quydoiDiemHH);
                    UpdateDiemCong_KMCongDiem(idRandomHD, quydoiDiemHH, false);
                }
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                // reset KMai HoaDon (phai reset sau khi chon KM hang hoa ! important)
                ResetKM_HoaDon(idRandomHD);
                // bind again infor HoaDon (bind after update KhuyenMai)
                var lstHDafter = localStorage.getItem(lcListHD);
                if (lstHDafter !== null) {
                    lstHDafter = JSON.parse(lstHDafter);
                    var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHDafter);
                    if (itemHD.length > 0) {
                        self.HoaDons().SetData(itemHD[0]);
                    }
                }
                localStorage.setItem(lcMaHD, _maHoaDon);
                $('#promotiont').modal('hide');
                Caculator_AmountProduct();
                HideShow_Icon_ChietKhauNV();
            }
        }
    }
    function CheckKM_TichDiem_forHangGiamGia() {
        // if Khong tich diem cho Sp giam gia
        var isTichDiem = true;
        if (self.ThietLap_TichDiem() !== null && self.ThietLap_TichDiem().length > 0) {
            if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                isTichDiem = false; // khong tich cho HH giam Gia
            }
        }
        return isTichDiem;
    }
    self.TangSoluongHHTang = function (item) {
        var thisObj = event.currentTarget;
        var idKhuyenMai = $(thisObj).closest('tr').find('td:eq(0) > span').attr('id');
        var itemKM = $.grep(self.ListKM_ofHangHoa(), function (km) {
            return km.ID_KhuyenMai === idKhuyenMai;
        });
        // code same AddKhuyenMai_forHangHoa
        var slCanMua = 0;
        var slTang = 0;
        var checkKMNhom = Check_KhuyenMaiNhom();
        if (checkKMNhom === false) {
            // get lst HHTang by ID_QuiDoiMua
            for (let i = 0; i < itemKM[0].DM_KhuyenMai_ChiTiet.length; i++) {
                var itemKMCT = itemKM[0].DM_KhuyenMai_ChiTiet[i];
                if (itemKMCT.ID_DonViQuiDoiMua === self.CTHD_ChosingKM().ID_DonViQuiDoi) {
                    slCanMua = itemKMCT.SoLuongMua;// assign SLTang, SLMua to do check Add HHTang
                    slTang = itemKMCT.SoLuong;
                }
            }
        }
        else {
            slCanMua = checkKMNhom.SoLuongMua;// assign SLTang, SLMua to do check Add HHTang
            slTang = checkKMNhom.SoLuongTang;
        }
        var sumSL_inCTHD = GetSum_SoLuongHang_SameGroup(null);
        // tinh SLTang phu hop voi HH da mua
        var sluongTang_PhuHop = (sumSL_inCTHD / slCanMua) * slTang;
        // caculator sum Soluong in HHTang
        var sumSL = 0;
        for (let j = 0; j < itemKM[0].HangHoaChoseTangs.length; j++) {
            sumSL += parseInt(itemKM[0].HangHoaChoseTangs[j].SoLuong);
        }
        var objNumber = $('#numberTang_' + item.ID_DonViQuiDoi);
        var newNumber = parseFloat(objNumber.val());
        if (isNaN(newNumber)) {
            newNumber = 0;
        }
        else {
            newNumber = newNumber + 1;
        }
        if (sumSL < sluongTang_PhuHop) {
            objNumber.val(newNumber);
            // find ListKM_ofHangHoa with ID_KhuyenMai && add objHH --> HangHoaChoseTangs
            for (let i = 0; i < self.ListKM_ofHangHoa().length; i++) {
                if (self.ListKM_ofHangHoa()[i].ID_KhuyenMai === idKhuyenMai) {
                    for (let j = 0; j < self.ListKM_ofHangHoa()[i].HangHoaChoseTangs.length; j++) {
                        var itemHHTang = self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j];
                        // if ID_DonViQuiDoi in HHTang = item.ID_DonViQuiDoi
                        if (itemHHTang.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                            self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j].SoLuong = newNumber;
                            self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j].ThanhTien = newNumber * itemHHTang.GiaBan;
                            break;
                        }
                    }
                    break;
                }
            }
            // assign ListKM_ofHangHoa =[] , after push again
            self.HHTang_AfterRender(self.ListKM_ofHangHoa());
            self.ListKM_ofHangHoa([]);
            for (let i = 0; i < self.HHTang_AfterRender().length; i++) {
                self.ListKM_ofHangHoa.push(self.HHTang_AfterRender()[i]);
            }
        }
        else {
            ShowMessage_Danger('Quá số lượng hàng tặng');
            return;
        }
    }
    self.GiamSoluongHHTang = function (item) {
        var thisObj = event.currentTarget;
        var idKhuyenMai = $(thisObj).closest('tr').find('td:eq(0) > span').attr('id');
        var objNumber = $('#numberTang_' + item.ID_DonViQuiDoi);
        var newNumber = parseFloat(objNumber.val());
        if (newNumber > 0) {
            newNumber = newNumber - 1;
            objNumber.val(newNumber);
        }
        for (let i = 0; i < self.ListKM_ofHangHoa().length; i++) {
            if (self.ListKM_ofHangHoa()[i].ID_KhuyenMai === idKhuyenMai) {
                for (let j = 0; j < self.ListKM_ofHangHoa()[i].HangHoaChoseTangs.length; j++) {
                    var itemHHTang = self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j];
                    if (itemHHTang.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                        self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j].SoLuong = newNumber;
                        self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j].ThanhTien = newNumber * itemHHTang.GiaBan;
                        break;
                    }
                }
                break;
            }
        }
        // assign ListKM_ofHangHoa =[] , after push again
        self.HHTang_AfterRender(self.ListKM_ofHangHoa());
        self.ListKM_ofHangHoa([]);
        for (let i = 0; i < self.HHTang_AfterRender().length; i++) {
            self.ListKM_ofHangHoa.push(self.HHTang_AfterRender()[i]);
        }
    }
    self.EditSoLuongHHTang = function (item) {
        var thisObj = event.currentTarget;
        var idKhuyenMai = $(thisObj).closest('tr').find('td:eq(0) > span').attr('id');
        var objNumber = $('#numberTang_' + item.ID_DonViQuiDoi);
        var newNumber = parseFloat(objNumber.val());
        if (isNaN(newNumber)) {
            newNumber = 0;
        }
        // find ListKM_ofHangHoa with ID_KhuyenMai && add objHH --> HangHoaChoseTangs
        for (let i = 0; i < self.ListKM_ofHangHoa().length; i++) {
            if (self.ListKM_ofHangHoa()[i].ID_KhuyenMai === idKhuyenMai) {
                for (let j = 0; j < self.ListKM_ofHangHoa()[i].HangHoaChoseTangs.length; j++) {
                    var itemHHTang = self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j];
                    // if ID_DonViQuiDoi in HHTang = item.ID_DonViQuiDoi
                    if (itemHHTang.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                        self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j].SoLuong = newNumber;
                    }
                }
                break;
            }
        }
        // caculator SLTang cho phep, SLMua in CTHD
        var itemKM = $.grep(self.ListKM_ofHangHoa(), function (km) {
            return km.ID_KhuyenMai === idKhuyenMai;
        });
        var slCanMua = 0;
        var slTang = 0;
        var checkKMNhom = Check_KhuyenMaiNhom();
        if (checkKMNhom === false) {
            // get lst HHTang by ID_QuiDoiMua
            for (let i = 0; i < itemKM[0].DM_KhuyenMai_ChiTiet.length; i++) {
                var itemKMCT = itemKM[0].DM_KhuyenMai_ChiTiet[i];
                if (itemKMCT.ID_DonViQuiDoiMua === self.CTHD_ChosingKM().ID_DonViQuiDoi) {
                    slCanMua = itemKMCT.SoLuongMua;// assign SLTang, SLMua to do check Add HHTang
                    slTang = itemKMCT.SoLuong;
                }
            }
        }
        else {
            slCanMua = checkKMNhom.SoLuongMua;// assign SLTang, SLMua to do check Add HHTang
            slTang = checkKMNhom.SoLuongTang;
        }
        var sumSL_inCTHD = GetSum_SoLuongHang_SameGroup(null);
        // tinh SLTang phu hop voi HH da mua
        var sluongTang_PhuHop = Math.floor((sumSL_inCTHD / slCanMua) * slTang);
        // caculator sum Soluong in HHTang
        var sumSL = 0;
        for (let j = 0; j < itemKM[0].HangHoaChoseTangs.length; j++) {
            sumSL += parseInt(itemKM[0].HangHoaChoseTangs[j].SoLuong);
        }
        if (sumSL > sluongTang_PhuHop) {
            ShowMessage_Danger('Chỉ được tặng tối đa ' + sluongTang_PhuHop + ' sản phẩm');
            return;
        }
    }
    self.XoaHangTang = function (item) {
        // get idKhuyenMai from tag <span> because HangKm of HangHoa have ID_KhuyenMai = null
        var thisObj = event.currentTarget;
        var idKhuyenMai = $(thisObj).closest('tr').find('td:eq(0) > span').attr('id');
        var idQuiDoi = item.ID_DonViQuiDoi;
        var hhKM = self.ListKM_ofHangHoa();
        for (let i = 0; i < self.ListKM_ofHangHoa().length; i++) {
            if (self.ListKM_ofHangHoa()[i].ID_KhuyenMai === idKhuyenMai) {
                for (let j = 0; j < self.ListKM_ofHangHoa()[i].HangHoaChoseTangs.length; j++) {
                    var itemHHTang = self.ListKM_ofHangHoa()[i].HangHoaChoseTangs[j];
                    if (itemHHTang.ID_DonViQuiDoi === idQuiDoi) {
                        self.ListKM_ofHangHoa()[i].HangHoaChoseTangs.splice(j, 1);
                    }
                }
                break;
            }
        }
        // assign ListKM_ofHangHoa =[] , after push again
        self.HHTang_AfterRender(self.ListKM_ofHangHoa());
        self.ListKM_ofHangHoa([]);
        for (let i = 0; i < self.HHTang_AfterRender().length; i++) {
            self.ListKM_ofHangHoa.push(self.HHTang_AfterRender()[i]);
        }
    }

    function CheckTonKho_SameIDHangHoa_DifferenceDVT(objCTHD) {
        var err = '';
        for (let i = 0; i < objCTHD.length; i++) {
            var itemOut = objCTHD[i];
            var cthd_saneIDHangHoa = $.grep(objCTHD, function (x) {
                return x.ID_HangHoa === itemOut.ID_HangHoa;
            });
            if (cthd_saneIDHangHoa.length > 0) {
                var sumTonThucTe = 0;
                var sumSLMua = 0;
                for (let j = 0; j < cthd_saneIDHangHoa.length; j++) {
                    sumTonThucTe = itemOut.TonKho * itemOut.TyLeChuyenDoi;
                    sumSLMua += formatNumberToFloat(itemOut.SoLuong) * itemOut.TyLeChuyenDoi;
                }
                if (sumTonThucTe < sumSLMua) {
                    err = cthd_saneIDHangHoa[0].TenHangHoa + ',';
                }
            }
        }
        return err;
    }

    function CheckTonKho_GroupIDQuyDoi(arrCTHD) {
        // group by idDonViQuyDoi, id_Lohang
        let group_arrIDQuyDoi = [], group_arrIDLoHang = [];
        let arrCTNew = [];
        for (let i = 0; i < arrCTHD.length; i++) {
            let itFor = arrCTHD[i];
            if (itFor.LoaiHangHoa === 1) {
                if ($.inArray(itFor.ID_DonViQuiDoi, group_arrIDQuyDoi) === -1) {
                    group_arrIDQuyDoi.push(itFor.ID_DonViQuiDoi);

                    if (itFor.QuanLyTheoLoHang) {
                        if ($.inArray(itFor.ID_LoHang, group_arrIDLoHang) === -1) {
                            group_arrIDLoHang.push(itFor.ID_LoHang);
                            let obj = {
                                TenHangHoa: itFor.TenHangHoa,
                                MaHangHoa: itFor.MaHangHoa,
                                MaLoHang: itFor.MaLoHang,
                                ID_DonViQuiDoi: itFor.ID_DonViQuiDoi,
                                ID_LoHang: itFor.ID_LoHang,
                                SoLuong: itFor.SoLuong,
                                QuanLyTheoLoHang: itFor.QuanLyTheoLoHang
                            }
                            arrCTNew.push(obj);
                        }
                        else {
                            // find & sum by lo
                            for (let j = 0; j < arrCTNew.length; j++) {
                                let forNew = arrCTNew[j];
                                if (forNew.ID_DonViQuiDoi === itFor.ID_DonViQuiDoi && forNew.ID_LoHang === itFor.ID_LoHang) {
                                    arrCTNew[j].SoLuong += formatNumberToFloat(itFor.SoLuong);
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        let obj = {
                            TenHangHoa: itFor.TenHangHoa,
                            MaHangHoa: itFor.MaHangHoa,
                            MaLoHang: itFor.MaLoHang,
                            ID_DonViQuiDoi: itFor.ID_DonViQuiDoi,
                            ID_LoHang: itFor.ID_LoHang,
                            SoLuong: itFor.SoLuong,
                            ID_LoHang: null,
                            QuanLyTheoLoHang: itFor.QuanLyTheoLoHang
                        }
                        arrCTNew.push(obj);
                    }
                }
                else {
                    if (itFor.QuanLyTheoLoHang) {
                        if ($.inArray(itFor.ID_LoHang, group_arrIDLoHang) === -1) {
                            group_arrIDLoHang.push(itFor.ID_LoHang);
                            let obj = {
                                TenHangHoa: itFor.TenHangHoa,
                                MaHangHoa: itFor.MaHangHoa,
                                MaLoHang: itFor.MaLoHang,
                                ID_DonViQuiDoi: itFor.ID_DonViQuiDoi,
                                ID_LoHang: itFor.ID_LoHang,
                                SoLuong: itFor.SoLuong,
                                QuanLyTheoLoHang: itFor.QuanLyTheoLoHang
                            }
                            arrCTNew.push(obj);
                        }
                        else {
                            // find & sum by lo
                            for (let j = 0; j < arrCTNew.length; j++) {
                                let forNew = arrCTNew[j];
                                if (forNew.ID_DonViQuiDoi === itFor.ID_DonViQuiDoi && forNew.ID_LoHang === itFor.ID_LoHang) {
                                    arrCTNew[j].SoLuong += formatNumberToFloat(itFor.SoLuong);
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        // find & sum by lo
                        for (let j = 0; j < arrCTNew.length; j++) {
                            let forNew = arrCTNew[j];
                            if (forNew.ID_DonViQuiDoi === itFor.ID_DonViQuiDoi) {
                                arrCTNew[j].SoLuong += formatNumberToFloat(itFor.SoLuong);
                                break;
                            }
                        }
                    }
                }
            }
        }
        return arrCTNew;
    }

    async function CheckTonKho_CTHD(arrCTHD, ngaylapHD, trangThaiHD = 1, idHoaDonUpdate = const_GuidEmpty) {

        const arrCTNew = CheckTonKho_GroupIDQuyDoi(arrCTHD);

        let arrIDQuyDoi = $.unique(arrCTNew.map(function (x) {
            return x.ID_DonViQuiDoi;
        }));
        let arrIDLoHang = arrCTNew.map(function (x) {
            return x.ID_LoHang;
        }).filter(x => x !== null);

        // neu capnhatHD: get ngaylapHD theo hoadon
        let ngayLapCompare = trangThaiHD === 8 ? moment(ngaylapHD, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD HH:mm') :
            moment(ngaylapHD, 'YYYY-MM-DD HH:mm').add(1, 'minutes').format('YYYY-MM-DD HH:mm');

        let paramCheckTon = {
            ID_ChiNhanh: id_DonVi,
            IdHoaDonUpdate: trangThaiHD === 8 ? idHoaDonUpdate : const_GuidEmpty,
            ToDate: ngayLapCompare,
            ListIDQuyDoi: arrIDQuyDoi,
            ListIDLoHang: arrIDLoHang,
        };

        // check tonko hangthuong + hang colo
        let msgErr = '';
        let dataCheck = await GetTonKho_byIDQuyDoi(paramCheckTon);
        if (commonStatisJs.CheckNull(dataCheck)) return true;
        for (let i = 0; i < arrCTNew.length; i++) {
            let forOut = arrCTNew[i];
            let dataDB = $.grep(dataCheck, function (o) {
                return o.ID_DonViQuiDoi === forOut.ID_DonViQuiDoi
                    && (!forOut.QuanLyTheoLoHang || (o.ID_LoHang === forOut.ID_LoHang))
            });
            if (dataDB.length > 0 && RoundDecimal(dataDB[0].TonKho) < RoundDecimal(formatNumberToFloat(forOut.SoLuong))) {
                msgErr += forOut.TenHangHoa.concat(' ', forOut.QuanLyTheoLoHang ? ' (' + forOut.MaLoHang + ') ' : '', ', ');
            }
        }
        if (!commonStatisJs.CheckNull(msgErr)) {
            ShowMessage_Danger('Không đủ tồn kho cho hàng hóa ' + Remove_LastComma(msgErr));
            return false;
        }
        return true;
    }

    async function TPDL_CheckTonKho(arrCTHD, ngaylapHD, trangThaiHD = 1, idHoaDonUpdate = const_GuidEmpty) {
        // get all dinhluong, tpComBo laHangHoa
        let tpdl_all = [];
        for (let i = 0; i < arrCTHD.length; i++) {
            switch (arrCTHD[i].LoaiHangHoa) {
                case 2:// dv
                    if (!commonStatisJs.CheckNull(arrCTHD[i].ThanhPhan_DinhLuong)) {
                        for (let j = 0; j < arrCTHD[i].ThanhPhan_DinhLuong.length; j++) {
                            let itFor = arrCTHD[i].ThanhPhan_DinhLuong[j];
                            if (itFor.LoaiHangHoa === 1) {
                                tpdl_all.push(itFor);
                            }
                        }
                    }
                    else {
                        // find tpdl
                    }
                    break;
                case 3:// combo, todo check tpdl of dichvu in combo
                    if (!commonStatisJs.CheckNull(arrCTHD[i].ThanhPhanComBo)) {
                        for (let j = 0; j < arrCTHD[i].ThanhPhanComBo.length; j++) {
                            let combo = arrCTHD[i].ThanhPhanComBo[j];
                            if (combo.LoaiHangHoa === 1) {
                                tpdl_all.push(combo);
                            }
                        }
                    }
                    break;
            }
        }

        const arrCheckNew = CheckTonKho_GroupIDQuyDoi(tpdl_all);

        tpdl_arrIDQuyDoi = $.unique(arrCheckNew.map(function (x) {
            return x.ID_DonViQuiDoi;
        }));
        tpdl_arrIDLohang = arrCheckNew.map(function (x) {
            return x.ID_LoHang;
        }).filter(x => x !== null);

        // neu capnhatHD: get ngaylapHD theo hoadon
        let ngayLapCompare = trangThaiHD === 8 ? moment(ngaylapHD, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD HH:mm') :
            moment(ngaylapHD, 'YYYY-MM-DD HH:mm').add(1, 'minutes').format('YYYY-MM-DD HH:mm');

        let tpdl_checkTon = {
            ID_ChiNhanh: id_DonVi,
            IdHoaDonUpdate: trangThaiHD === 8 ? idHoaDonUpdate : const_GuidEmpty,
            ToDate: ngayLapCompare,
            ListIDQuyDoi: tpdl_arrIDQuyDoi,
            ListIDLoHang: tpdl_arrIDLohang,
        };
        let msgErr = '';
        // check tonko hangthuong + hang colo
        let dataCheck = await GetTonKho_byIDQuyDoi(tpdl_checkTon);
        for (let i = 0; i < arrCheckNew.length; i++) {
            let forOut = arrCheckNew[i];
            let dataDB = $.grep(dataCheck, function (o) {
                return o.ID_DonViQuiDoi === forOut.ID_DonViQuiDoi
                    && (!forOut.QuanLyTheoLoHang || (o.ID_LoHang === forOut.ID_LoHang))
            });

            if (forOut.SoLuong > 0 && dataDB.length > 0 && RoundDecimal(dataDB[0].TonKho) < RoundDecimal(formatNumberToFloat(forOut.SoLuong))) {
                msgErr += forOut.TenHangHoa + ", ";
            }
        }
        if (!commonStatisJs.CheckNull(msgErr)) {
            ShowMessage_Danger('Không đủ tồn kho cho định lượng ' + Remove_LastComma(msgErr));
            return false;
        }
        return true;
    }

    self.saveHoaDonKhuyenMai = async function (isTamLuu) {
        var lstHDTemp = localStorage.getItem(lcListHD);
        var objAdd = [];
        if (lstHDTemp !== null) {
            lstHDTemp = JSON.parse(lstHDTemp);
            objAdd = GetHDOpening_byMaHoaDon(_maHoaDon, lstHDTemp);
            var loaiHD = objAdd[0].LoaiHoaDon;
            var idRandomHD = objAdd[0].IDRandom;
            var _idDoiTuong = objAdd[0].ID_DoiTuong;
            var ngaylapHD = GetNgayLapHD_whenSave(objAdd[0].NgayLapHoaDon);
            // get nameDT for print HoaDon
            if (commonStatisJs.CheckNull(_idDoiTuong) || _idDoiTuong === const_GuidEmpty) {
                ShowMessage_Danger('Vui lòng chọn khách hàng khi tạo hóa đơn');
                SaveHD_RemoveDisable();
                return false;
            }
            if (objAdd[0].TienThua > 0) {
                ShowMessage_Danger('Vui lòng không nhập quá số tiền cần thanh toán');
                SaveHD_RemoveDisable();
                return;
            }

            // Start: assign ID_NhanVien if objAdd[0].ID_NhanVien === null
            if (objAdd[0].ID_NhanVien === null || objAdd[0].ID_NhanVien === undefined) {
                var itemNV = $.grep(self.NhanViens(), function (x) {
                    return x.ID_NguoiDung === id_User;
                });
                var idNhanVien = null;
                if (itemNV.length > 0) {
                    idNhanVien = itemNV[0].ID;
                }
                else {
                    idNhanVien = self.NhanViens()[0].ID;
                }
                objAdd[0].ID_NhanVien = idNhanVien;
            }
            // End ID_NhanVien
            // tim CTHoaDon t/u voi HoaDon
            var objCTAdd = [];
            var listAllCTHD = localStorage.getItem(lcListCTHD);
            if (listAllCTHD !== null) {
                listAllCTHD = JSON.parse(listAllCTHD);
                objCTAdd = GetCTHoaDon_FromArr(listAllCTHD, idRandomHD);
            }
            if (objCTAdd.length === 0) {
                ShowMessage_Danger('Vui lòng nhập chi tiết hóa đơn');
                SaveHD_RemoveDisable();
                return;
            }
            else {
                var msgErr = "";
                // Khong cho phep ban hang khi het ton kho
                var xuatAm = self.ThietLap().XuatAm;
                if (loaiHD === 19) {
                    // loai 19: check dat hang het TonKho
                    xuatAm = self.ThietLap().DatHangXuatAm;
                }
                if (xuatAm === false) {
                    const checkTonKho = await CheckTonKho_CTHD(objCTAdd, ngaylapHD);
                    if (!checkTonKho) {
                        SaveHD_RemoveDisable();
                        return false;
                    }

                    if (loaiHD === 1 || loaiHD === 2) {
                        const tpdl_checkTonKho = await TPDL_CheckTonKho(objCTAdd, ngaylapHD);
                        if (!tpdl_checkTonKho) {
                            SaveHD_RemoveDisable();
                            return false;
                        }
                    }
                }

                // Nếu đặt hàng, sau đó xử lí đơn hàng, nhưng hàng đã ngừng kinh doanh --> thông báo
                if (objAdd[0].ID_HoaDon !== null && objAdd[0].ID_HoaDon !== undefined) {
                    var errNgungKinhDoanh = CheckHang_NgungKinhDoanh(objCTAdd);
                    if (errNgungKinhDoanh !== '') {
                        errNgungKinhDoanh = Remove_LastComma(errNgungKinhDoanh);
                        ShowMessage_Danger('Hàng hóa ' + errNgungKinhDoanh + ' đã ngừng kinh doanh');
                        SaveHD_RemoveDisable();
                        return;
                    }
                }

                // update DonGia= GiaBan
                for (let i = 0; i < objCTAdd.length; i++) {
                    objCTAdd[i].DonGia = objCTAdd[i].GiaBan;
                }
                // remove CTHD with QuanLyTheoLo, but ID_Lo== null
                objCTAdd = GetArrCTHD_withIDLoHangOtherNull(objCTAdd);

                var myData = {};
                let maHoaDon = objAdd[0].MaHoaDon;

                if (commonStatisJs.CheckNull(objAdd[0].MaHoaDonDB)) {
                    if (objAdd[0].StatusOffline === true || maHoaDon.indexOf('Copy') > -1 || objAdd[0].ID !== const_GuidEmpty) {
                        // HD Offline/Copy/Tamluu => giu nguyen ma
                        objAdd[0].MaHoaDon = maHoaDon;
                    }
                    else {
                        objAdd[0].MaHoaDon = null;
                    }
                }
                else {
                    maHoaDon = objAdd[0].MaHoaDonDB;
                    objAdd[0].MaHoaDon = maHoaDon;
                }

                // ID_DonVi
                if (objAdd[0].ID_DonVi === null || objAdd[0].ID_DonVi === undefined) {
                    objAdd[0].ID_DonVi = id_DonVi;
                }
                // get GhiChu_KhuyenMai = GhiChuKM_ofHH + GhiChuKM_HD
                var ghichuKMHD = '';
                for (let i = 0; i < objCTAdd.length; i++) {
                    if (objCTAdd[i].IsKhuyenMai && objCTAdd[i].TenKhuyenMai !== '') {
                        ghichuKMHD += objCTAdd[i].TenKhuyenMai + '<br /> ';
                    }
                }
                ghichuKMHD += objAdd[0].KhuyenMai_GhiChu;
                if (ghichuKMHD === undefined || ghichuKMHD.indexOf('undefined') > -1) {
                    ghichuKMHD = '';
                }
                objAdd[0].KhuyenMai_GhiChu = ghichuKMHD;
                // check NgayLapHD is null, and get

                objAdd[0].NgayLapHoaDon = ngaylapHD;
                myData.objHoaDon = objAdd[0];
                myData.objCTHoaDon = objCTAdd;
                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                var lstDoiTuong = localStorage.getItem(lcDM_DoiTuong);
                var itemDoiTuong = [];
                if (lstDoiTuong !== null) {
                    var lstDoiTuong1 = JSON.parse(lstDoiTuong);
                    itemDoiTuong = $.grep(lstDoiTuong1, function (item) {
                        return item.ID === objAdd[0].ID_DoiTuong;
                    });
                }
                if (itemDoiTuong.length > 0) {
                    // 1.add DoiTuong, HoaDon
                    AddKhachHang_HoaDon(itemDoiTuong[0], myData, false, false);
                }
                else {
                    if (isTamLuu) {
                        PostHD_TamLuu(myData);
                    }
                    else {
                        if (loaiHD === 1 || loaiHD === 2) {
                            PostHD_SoQuy_SaveHD(myData, false);
                        }
                        else {
                            PostHD_HoaDon_DichVu(myData);
                        }
                    }
                }
            }
        }
        else {
            ShowMessage_Danger('Vui lòng nhập thông tin hóa đơn');
            SaveHD_RemoveDisable();
            return;
        }
    }
    function RemoveHD_ifNotSaleOffline(lstHD, lstCTHD, idRandomHD) {
        lstHD = $.grep(lstHD, function (x) {
            return x.IDRandom !== idRandomHD
        });
        lstCTHD = $.grep(lstCTHD, function (x) {
            return x.IDRandomHD !== idRandomHD
        });
        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
    }
    function CheckHang_NgungKinhDoanh(arrCTHD) {
        var errNgungKinhDoanh = '';
        for (let i = 0; i < arrCTHD.length; i++) {
            var hhNotSale = $.grep(self.HangHoaOlds(), function (x) {
                return x.ID_DonViQuiDoi === arrCTHD[i].ID_DonViQuiDoi;
            });
            if (hhNotSale.length === 0) {
                var tenDVTinh = arrCTHD[i].TenDonViTinh;
                tenDVTinh = (tenDVTinh === null || tenDVTinh === undefined ? '' : ' (' + tenDVTinh + ')');
                errNgungKinhDoanh += arrCTHD[i].TenHangHoa + tenDVTinh + ', ';
            }
        }
        return errNgungKinhDoanh;
    }

    // Khuyen Mai HoaDon
    self.GetListKM_HoaDon = function () {
        let ctDoiTuong = self.ChiTietDoiTuong();
        let objHD = {};
        if (commonStatisJs.CheckNull(ctDoiTuong) || ctDoiTuong.length === 0) {
            //ShowMessage_Danger('Vui lòng chọn khách hàng');
            //return;
            objHD = {
                IDRandom: self.HoaDons().IDRandom(),
                LoaiHoaDon: self.HoaDons().LoaiHoaDon(),
                ID: self.HoaDons().ID(),
                ID_DonVi: self.HoaDons().ID_DonVi(),// used to save hoadon when update
                ID_DoiTuong: null,
                MaDoiTuong: '',
                TenDoiTuong: '',
                NguoiTao: userLogin,
            }
        }
        else {
            let cusCode = ctDoiTuong[0].MaDoiTuong;
            let cusName = ctDoiTuong[0].TenDoiTuong;
            objHD = {
                IDRandom: self.HoaDons().IDRandom(),
                LoaiHoaDon: self.HoaDons().LoaiHoaDon(),
                ID: self.HoaDons().ID(),
                ID_DonVi: self.HoaDons().ID_DonVi(),// used to save hoadon when update
                ID_DoiTuong: self.HoaDons().ID_DoiTuong(),
                MaDoiTuong: cusCode,
                TenDoiTuong: cusName,
                NguoiTao: userLogin,
            }
        }

        vmApDungNhomHoTro.showModal(objHD);
        return;

        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        // if HD offline --> don't show modal
        if (_maHoaDon.indexOf('HDO') > -1) {
            return;
        }
        $('#promotiont_Parent').modal('show');
        self.ListKM_ofHoaDon([]);
        var dtNow = new Date();
        var _month = (dtNow.getMonth() + 1).toString(); // 1-12 (+1 because getMoth() return 0-11)
        var _date = (dtNow.getDate()).toString(); // 1- 31
        var _hours = (dtNow.getHours()).toString(); // 1-24
        var _day = (dtNow.getDay() + 1).toString(); // mon:2, tues:3, wed:4, thur:5, fri:6, sat: 7, sun: 8
        var _weekofMonth = Math.ceil(dtNow.getDate() / 7); // get week of Month ( 1- 5);
        if (self.KM_KMApDung().length === 0) {
            GetList_KMApDung();
            // co nen sort at here ??
            for (let i = 0; i < self.KM_KMApDung().length; i++) {
                self.KM_KMApDung()[i].DM_KhuyenMai_ChiTiet.sort(function (a, b) {
                    var x = a.TongTienHang, y = b.TongTienHang;
                    return x < y ? -1 : x > y ? 1 : 0;
                })
            }
        }
        var idNhanVien = self.selectedNVien();
        var idNhomKH = null;
        var ngaysinhFull = 0;
        var ngaysinh = 0;
        var thangsinh = 0;
        var tuansinh = 0;
        var arrNhomKH = [];
        // if chose KH --> get idNhomKH + ngaysinh
        if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
            idNhomKH = ctDoiTuong[0].ID_NhomDoiTuong.toLowerCase();
            arrNhomKH = idNhomKH.split(', ');
            ngaysinhFull = ctDoiTuong[0].NgaySinh_NgayTLap;
        }
        if (ngaysinhFull !== 0 && ngaysinhFull !== null) {
            var dtNgaySinh = new Date(moment(ngaysinhFull).format('YYYY-MM-DD')); // must format 'YYYY-MM-DD'
            ngaysinh = dtNgaySinh.getDate();
            thangsinh = (dtNgaySinh.getMonth() + 1).toString();
            tuansinh = Math.ceil(dtNgaySinh.getDate() / 7);
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            for (let j = 0; j < self.KM_KMApDung().length; j++) {
                // get KM apply for HoaDon
                var itemKM2 = self.KM_KMApDung()[j];
                if (itemKM2.HinhThuc.toString().startsWith('1')) {
                    for (let k = 0; k < itemKM2.DM_KhuyenMai_ChiTiet.length; k++) {
                        if (itemKM2.DM_KhuyenMai_ChiTiet[k].TongTienHang <= itemHD[0].TongTienHang) {
                            // check ThoiGian + PhamVi Ap dung
                            if (itemKM2.ApDungNgaySinh !== 0) {
                                // if chose KH
                                if (ctDoiTuong !== null && ctDoiTuong.length > 0) {
                                    if ((itemKM2.Months.length === 0 || $.inArray(_month, itemKM2.Months) > -1)
                                        && (itemKM2.Dates.length === 0 || $.inArray(_date, itemKM2.Dates) > -1)
                                        && (itemKM2.Days.length === 0 || $.inArray(_day, itemKM2.Days) > -1)
                                        && (itemKM2.Hours.length === 0 || $.inArray(_hours, itemKM2.Hours) > -1)
                                        && (itemKM2.ID_NhanViens.length === 0 || $.inArray(idNhanVien, itemKM2.ID_NhanViens) > -1)
                                        && (itemKM2.ID_NhomKHs.length === 0 || itemKM2.ID_NhomKHs.some(r => arrNhomKH.indexOf(r) >= 0))) {
                                        switch (itemKM2.ApDungNgaySinh) {
                                            case 1: // ap dung ngay sinh theo ngay
                                                if (ngaysinh.toString() === _date) {
                                                    itemKM2.HangHoaChoseTangs = [];
                                                    self.ListKM_ofHoaDon.push(itemKM2);
                                                    break;
                                                }
                                                break;
                                            case 2: // ap dung ngay sinh theo tuan
                                                if (tuansinh.toString() === _weekofMonth) {
                                                    itemKM2.HangHoaChoseTangs = [];
                                                    self.ListKM_ofHoaDon.push(itemKM2);
                                                    break;
                                                }
                                                break;
                                            case 3: // ap dung ngay sinh theo thang
                                                if (thangsinh.toString() === _month) {
                                                    itemKM2.HangHoaChoseTangs = [];
                                                    self.ListKM_ofHoaDon.push(itemKM2);
                                                    break;
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                            else {
                                // if ApDungNgaySinh = 0
                                if ((itemKM2.Months.length === 0 || $.inArray(_month, itemKM2.Months) > -1)
                                    && (itemKM2.Dates.length === 0 || $.inArray(_date, itemKM2.Dates) > -1)
                                    && (itemKM2.Days.length === 0 || $.inArray(_day, itemKM2.Days) > -1)
                                    && (itemKM2.Hours.length === 0 || $.inArray(_hours, itemKM2.Hours) > -1)
                                    && (itemKM2.ID_NhanViens.length === 0 || $.inArray(idNhanVien, itemKM2.ID_NhanViens) > -1)
                                    && (itemKM2.ID_NhomKHs.length === 0 || itemKM2.ID_NhomKHs.some(r => arrNhomKH.indexOf(r) >= 0))) {
                                    itemKM2.HangHoaChoseTangs = [];
                                    self.ListKM_ofHoaDon.push(itemKM2);
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }
        // order by ASC TongTienHang in DM_KhuyenMai_ChiTiet of ListKM_ofHoaDon (OK)
        for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
            self.ListKM_ofHoaDon()[i].DM_KhuyenMai_ChiTiet.sort(function (a, b) {
                var x = a.TongTienHang, y = b.TongTienHang;
                return x < y ? -1 : x > y ? 1 : 0;
            })
        }
        var giamGiaHD = 0;
        var isGGPhanTram = false;
        var idKM_haveGG = null;
        // if Giam gia HoaDon --> update Note_HinhThuc for ListKM_ofHoaDon
        for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
            var itemKM3 = self.ListKM_ofHoaDon()[i];
            // 11: giam gia HD, 14: tang diem
            if (itemKM3.HinhThuc === 11 || itemKM3.HinhThuc === 14) {
                idKM_haveGG = itemKM3.ID_KhuyenMai;
                for (let j = 0; j < itemKM3.DM_KhuyenMai_ChiTiet.length; j++) {
                    // find giamgia phu hop nhat
                    if (itemKM3.DM_KhuyenMai_ChiTiet[j].TongTienHang <= itemHD[0].TongTienHang) {
                        giamGiaHD = itemKM3.DM_KhuyenMai_ChiTiet[j].GiamGia;
                        isGGPhanTram = itemKM3.DM_KhuyenMai_ChiTiet[j].GiamGiaTheoPhanTram;
                        // update Note_HinhThuc for ListKM_ofHoaDon
                        if (itemKM3.HinhThuc === 11) {
                            self.ListKM_ofHoaDon()[i].Note_HinhThuc = 'Giảm giá ' + giamGiaHD + ' ' + (isGGPhanTram === true ? '%' : 'VND');
                        }
                        else {
                            self.ListKM_ofHoaDon()[i].Note_HinhThuc = 'Tặng ' + giamGiaHD + ' ' + (isGGPhanTram === true ? '% điểm' : ' điểm');
                        }
                    }
                }
            }
        }
        // remove list KM_tang diem if Thiet lap khong tich diem cho HD giam gia
        var isTichDiemHD_GiamGia = Check_ThietLapTichDiem_GiamGiaHD;
        if (!isTichDiemHD_GiamGia) {
            if (itemHD[0].TongGiamGia > 0) {
                var arrListKM = $.grep(self.ListKM_ofHoaDon(), function (x) {
                    return x.HinhThuc !== 14;
                });
                self.ListKM_ofHoaDon(arrListKM);
            }
        }
        // check if opened KhuyenMai of HoaDon
        if (lstHD !== null) {
            var xItemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            if (xItemHD.length > 0) {
                if (xItemHD[0].IsOpeningKMaiHD) {
                    // check radio KhuyenMai
                    self.HD_KhuyenMai(xItemHD[0].ID_KhuyenMai);
                }
                // bind lstproductKM_of HoaDon
                var lstKM_HD = localStorage.getItem(lcProductKM_HoaDon);
                if (lstKM_HD !== null) {
                    lstKM_HD = JSON.parse(lstKM_HD);
                    var itemKM_HD = $.grep(lstKM_HD, function (x) {
                        return x.IDRandomHD === xItemHD[0].IDRandom;
                    });
                    //var arrKM_HD = [];
                    //if (itemKM_HD.length > 0) {
                    //    //self.HD_KhuyenMai(itemKM_HD[0].ID_KhuyenMai);
                    //    for (let i = 0; i < itemKM_HD.length; i++) {
                    //        arrKM_HD.push(itemKM_HD[i]);
                    //    }
                    //}
                    // assign HH Khuyen Mai for self.ListKM_ofHoaDon
                    if (self.HD_KhuyenMai() !== undefined) {
                        for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
                            if (self.ListKM_ofHoaDon()[i].ID_KhuyenMai === self.HD_KhuyenMai()) {
                                self.ListKM_ofHoaDon()[i].HangHoaChoseTangs = itemKM_HD;
                                break;
                            }
                        }
                    }
                }
            }
            self.HHTangHoaDon_AfterRender(self.ListKM_ofHoaDon());
            self.ListKM_ofHoaDon([]);
            for (let i = 0; i < self.HHTangHoaDon_AfterRender().length; i++) {
                self.ListKM_ofHoaDon.push(self.HHTangHoaDon_AfterRender()[i]);
            }
        }
    }
    function Check_ThietLapTichDiem_GiamGiaHD() {
        var isTichDiemHD_GiamGia = true;
        if (self.ThietLap_TichDiem() !== null && self.ThietLap_TichDiem().length > 0) {
            if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                isTichDiemHD_GiamGia = false;
            }
        }
        return isTichDiemHD_GiamGia;
    }
    self.LoadHangHoaTang_HoaDon = function (item) {
        self.ID_KhuyenMai(item.ID_KhuyenMai); // assign to do add HangHoa Tang of HoaDon
        var itemKM = $.grep(self.ListKM_ofHoaDon(), function (km) {
            return km.ID_KhuyenMai === item.ID_KhuyenMai;
        });
        var lstHD = JSON.parse(localStorage.getItem(lcListHD));
        var itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        if (itemEx.length > 0) {
            // get IDNhomHHTang by ID_NhomHHMua
            var idQuiDoiTang = null;
            var idNhomHHTang = null;
            for (let i = 0; i < itemKM[0].DM_KhuyenMai_ChiTiet.length; i++) {
                if (itemKM[0].DM_KhuyenMai_ChiTiet[i].TongTienHang <= itemEx[0].TongTienHang) {
                    // chi lay khuyen mai gan nhat (VD: co Km 2trieu + KM 1trieu: ma tong tien hang > 2trieu ==> uu tien lay ID_nhomHH, ID_QuiDoi cua Km 2 trieu)
                    idNhomHHTang = itemKM[0].DM_KhuyenMai_ChiTiet[i].ID_NhomHangHoa;
                    idQuiDoiTang = itemKM[0].DM_KhuyenMai_ChiTiet[i].ID_DonViQuiDoi;
                }
            }
            // get lst HangHoa in NhomHHTang OR ID_QuiDoiTang
            var arrHHTang = $.grep(self.HangHoaAll(), function (x) {
                return (x.ID_NhomHangHoa === idNhomHHTang && x.ID_NhomHangHoa !== null) || x.ID_DonViQuiDoi === idQuiDoiTang;
            });
            arrHHTang = UpdateGiaBanHangHoa_inList(arrHHTang);
            // add ID_Random for HangTang --> get ID_LoHang for HangKM (save DB)
            for (let i = 0; i < arrHHTang.length; i++) {
                var rd = Math.floor(Math.random() * 100000000 + 1);
                arrHHTang[i].KMHD_IDRandom = 'KMHD_IDRandom' + rd;
            }
            self.HangHoaTang_HoaDons(arrHHTang);
        }
    }
    self.ID_HHTangHoaDon.subscribe(function (newVal) {
        if (newVal !== undefined) {
            var idKhuyenMai = self.ID_KhuyenMai();
            var itemHH = $.grep(self.HangHoaTang_HoaDons(), function (item) {
                return item.KMHD_IDRandom === newVal;
            });
            self.ID_HHTangHoaDon(undefined);
            if (itemHH.length > 0) {
                $(function () {
                    // find all input with id start  'txtAuto' and not id ='txtAuto_'+ idKhuyenMai;
                    $('input[id^=txtAuto_]').not('#txtAuto_' + idKhuyenMai).val('');
                });
                var tienChietKhau = 0;
                var ptChietKhau = 0;
                var giaBan = 0;
                // caculator TienChietKhau,GiaBan by HinhThucKM
                switch (self.HinhThucKM()) {
                    case 11: // giam gia HD
                        break;
                    case 12: // mua hang tang hang
                        tienChietKhau = itemHH[0].GiaBan;
                        ptChietKhau = 0;
                        break;
                    case 13: // giam gia hag/nhomhang
                        break;
                }
                giaBan = itemHH[0].GiaBan - tienChietKhau;
                var quanLyTheoLo = itemHH[0].QuanLyTheoLoHang;
                quanLyTheoLo = (quanLyTheoLo === undefined || quanLyTheoLo === null ? false : quanLyTheoLo);
                var giaVon = itemHH[0].GiaVon;
                var laHangHoa = itemHH[0].LaHangHoa;
                if (!laHangHoa) {
                    giaVon = 0;
                }
                var objHH = {
                    SoThuTu: 1,
                    ID_KhuyenMai: idKhuyenMai, // if hang Tang of HoaDon, assign ID_KhuyenMai
                    MaHangHoa: itemHH[0].MaHangHoa,
                    TenHangHoa: itemHH[0].TenHangHoa,
                    ID_HangHoa: itemHH[0].ID,
                    ThuocTinh_GiaTri: itemHH[0].ThuocTinh_GiaTri,
                    ID_NhomHangHoa: itemHH[0].ID_NhomHangHoa,
                    TenNhomHangHoa: itemHH[0].TenNhomHangHoa,
                    SoLuong: 1,
                    GiaBan: itemHH[0].GiaBan, // not change price, only change tienchietkhau
                    DonGia: itemHH[0].GiaBan,
                    GiaVon: giaVon,
                    TienChietKhau: tienChietKhau, // Tang hang --> GiamGia = GiaBan
                    PTChietKhau: ptChietKhau, // giam gia: %
                    ThanhTien: giaBan,
                    TonKho: itemHH[0].TonKho,
                    ID_DonViQuiDoi: itemHH[0].ID_DonViQuiDoi,
                    TenDonViTinh: itemHH[0].TenDonViTinh,
                    ID_TangKem: null, // Neu la hang tang cua HoaDon thi ID_TangKem = null
                    TangKem: true,
                    QuanLyTheoLoHang: quanLyTheoLo,
                    ID_LoHang: itemHH[0].ID_LoHang,
                    GhiChu: '',
                    ThanhToan: giaBan,
                    PTThue: 0,
                    TienThue: 0,
                    GhiChu_NVThucHien: '',
                    GhiChu_NVTuVan: '',
                    GhiChu_NVThucHienPrint: '',
                    GhiChu_NVTuVanPrint: '',
                    ThanhPhan_DinhLuong: [],
                    BH_NhanVienThucHien: [],
                    ThanhPhanComBo: [],
                    HangCungLoais: [],
                }
                // get TongTienHang of HoaDon
                var lstHD = JSON.parse(localStorage.getItem(lcListHD));
                var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
                objHH.IDRandomHD = itemHD[0].IDRandom; // assign IDRandomHD for Hang KhuyenMai
                var itemKMHD = $.grep(self.ListKM_ofHoaDon(), function (x) {
                    return x.ID_KhuyenMai === idKhuyenMai;
                });
                // find SoLuongTang phu hop
                var sluongTang_PhuHop = 0;
                for (let j = 0; j < itemKMHD[0].DM_KhuyenMai_ChiTiet.length; j++) {
                    if (itemKMHD[0].DM_KhuyenMai_ChiTiet[j].TongTienHang <= itemHD[0].TongTienHang) {
                        sluongTang_PhuHop = itemKMHD[0].DM_KhuyenMai_ChiTiet[j].SoLuong;
                    }
                }
                // caculator sum Soluong in HHTang
                var sumSL = 0;
                for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
                    let itemKM = self.ListKM_ofHoaDon()[i];
                    if (itemKM.ID_KhuyenMai === idKhuyenMai) {
                        for (let j = 0; j < itemKM.HangHoaChoseTangs.length; j++) {
                            let itemHHTang = itemKM.HangHoaChoseTangs[j];
                            sumSL += formatNumberToFloat(itemHHTang.SoLuong);
                        }
                    }
                }
                if (sumSL < sluongTang_PhuHop) {
                    // find ListKM_ofHoaDon with ID_KhuyenMai && add objHH --> HangHoaChoseTangs
                    for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
                        let itemKM = self.ListKM_ofHoaDon()[i];
                        if (itemKM.ID_KhuyenMai === idKhuyenMai) {
                            var sluongOld = 0;
                            for (let j = 0; j < itemKM.HangHoaChoseTangs.length; j++) {
                                if (itemKM.HangHoaChoseTangs[j].ID_DonViQuiDoi === newVal) {
                                    sluongOld = itemKM.HangHoaChoseTangs[j].SoLuong;
                                    // xoa old
                                    self.ListKM_ofHoaDon()[i].HangHoaChoseTangs.splice(j, 1);
                                    break;
                                }
                            }
                            // ad new
                            objHH.SoLuong = parseFloat(sluongOld) + 1;
                            objHH.ThanhTien = objHH.SoLuong * objHH.GiaBan;
                            self.ListKM_ofHoaDon()[i].HangHoaChoseTangs.unshift(objHH);
                            break;
                        }
                    }
                }
                else {
                    ShowMessage_Danger('Quá số lượng hàng tặng');
                    return;
                }
                // assign ListKM_ofHoaDon =[] , after push again
                self.HHTangHoaDon_AfterRender(self.ListKM_ofHoaDon());
                self.ListKM_ofHoaDon([]);
                for (let i = 0; i < self.HHTangHoaDon_AfterRender().length; i++) {
                    self.ListKM_ofHoaDon.push(self.HHTangHoaDon_AfterRender()[i]);
                }
            }
        }
    });
    self.EditSoLuongHHTang_HoaDon = function (item) {
        var objNumber = $('#numberTangHD_' + item.ID_DonViQuiDoi);
        var newNumber = parseFloat(objNumber.val());
        if (isNaN(newNumber)) {
            newNumber = 0;
        }
        //objNumber.val(newNumber);
        // find ListKM_ofHoaDon with ID_KhuyenMai && add objHH --> HangHoaChoseTangs
        for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
            if (self.ListKM_ofHoaDon()[i].ID_KhuyenMai === item.ID_KhuyenMai) {
                for (let j = 0; j < self.ListKM_ofHoaDon()[i].HangHoaChoseTangs.length; j++) {
                    var itemHHTang = self.ListKM_ofHoaDon()[i].HangHoaChoseTangs[j];
                    // if ID_DonViQuiDoi in HHTang = item.ID_DonViQuiDoi
                    if (itemHHTang.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                        self.ListKM_ofHoaDon()[i].HangHoaChoseTangs[j].SoLuong = newNumber;
                    }
                }
                break;
            }
        }
        var lstHD = JSON.parse(localStorage.getItem(lcListHD));
        var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        var itemKMHD = $.grep(self.ListKM_ofHoaDon(), function (km) {
            return km.ID_KhuyenMai === item.ID_KhuyenMai;
        });
        // tinh SLTang phu hop voi HH da mua
        var sluongTang_PhuHop = 0;
        for (let j = 0; j < itemKMHD[0].DM_KhuyenMai_ChiTiet.length; j++) {
            if (itemKMHD[0].DM_KhuyenMai_ChiTiet[j].TongTienHang <= itemHD[0].TongTienHang) {
                sluongTang_PhuHop = itemKMHD[0].DM_KhuyenMai_ChiTiet[j].SoLuong;
            }
        }
        // caculator sum Soluong in HHTang
        var sumSL = 0;
        for (let j = 0; j < itemKMHD[0].HangHoaChoseTangs.length; j++) {
            sumSL += parseInt(itemKMHD[0].HangHoaChoseTangs[j].SoLuong);
        }
        if (sumSL > sluongTang_PhuHop) {
            ShowMessage_Danger('Chỉ được tặng tối đa ' + sluongTang_PhuHop + ' sản phẩm');
            return;
        }
    }
    self.GiamSoluongHHTang_HoaDon = function (item) {
        var objNumber = $('#numberTangHD_' + item.ID_DonViQuiDoi);
        var newNumber = parseFloat(objNumber.val());
        if (newNumber > 0) {
            newNumber = newNumber - 1;
            objNumber.val(newNumber);
        }
        for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
            if (self.ListKM_ofHoaDon()[i].ID_KhuyenMai === item.ID_KhuyenMai) {
                for (let j = 0; j < self.ListKM_ofHoaDon()[i].HangHoaChoseTangs.length; j++) {
                    var itemHHTang = self.ListKM_ofHoaDon()[i].HangHoaChoseTangs[j];
                    if (itemHHTang.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                        self.ListKM_ofHoaDon()[i].HangHoaChoseTangs[j].SoLuong = newNumber;
                        break;
                    }
                }
                break;
            }
        }
        // assign ListKM_ofHoaDon =[] , after push again
        self.HHTangHoaDon_AfterRender(self.ListKM_ofHoaDon());
        self.ListKM_ofHoaDon([]);
        for (let i = 0; i < self.HHTangHoaDon_AfterRender().length; i++) {
            self.ListKM_ofHoaDon.push(self.HHTangHoaDon_AfterRender()[i]);
        }
    }
    self.TangSoluongHHTang_HoaDon = function (item) {
        var lstHD = JSON.parse(localStorage.getItem(lcListHD));
        var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        var itemKMHD = $.grep(self.ListKM_ofHoaDon(), function (km) {
            return km.ID_KhuyenMai === item.ID_KhuyenMai;
        });
        // tinh SLTang phu hop voi HH da mua
        var sluongTang_PhuHop = 0;
        for (let j = 0; j < itemKMHD[0].DM_KhuyenMai_ChiTiet.length; j++) {
            if (itemKMHD[0].DM_KhuyenMai_ChiTiet[j].TongTienHang <= itemHD[0].TongTienHang) {
                sluongTang_PhuHop = itemKMHD[0].DM_KhuyenMai_ChiTiet[j].SoLuong;
            }
        }
        // caculator sum Soluong in HHTang
        var sumSL = 0;
        for (let j = 0; j < itemKMHD[0].HangHoaChoseTangs.length; j++) {
            sumSL += parseInt(itemKMHD[0].HangHoaChoseTangs[j].SoLuong);
        }
        var objNumber = $('#numberTangHD_' + item.ID_DonViQuiDoi);
        var newNumber = parseFloat(objNumber.val());
        if (isNaN(newNumber)) {
            newNumber = 0;
        }
        else {
            newNumber = newNumber + 1;
        }
        if (sumSL < sluongTang_PhuHop) {
            objNumber.val(newNumber);
            // find ListKM_ofHoaDon with ID_KhuyenMai && add objHH --> HangHoaChoseTangs
            for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
                if (self.ListKM_ofHoaDon()[i].ID_KhuyenMai === item.ID_KhuyenMai) {
                    for (let j = 0; j < self.ListKM_ofHoaDon()[i].HangHoaChoseTangs.length; j++) {
                        var itemHHTang = self.ListKM_ofHoaDon()[i].HangHoaChoseTangs[j];
                        // if ID_DonViQuiDoi in HHTang = item.ID_DonViQuiDoi
                        if (itemHHTang.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                            self.ListKM_ofHoaDon()[i].HangHoaChoseTangs[j].SoLuong = newNumber;
                            break;
                        }
                    }
                    break;
                }
            }
            // assign ListKM_ofHoaDon =[] , after push again
            self.HHTangHoaDon_AfterRender(self.ListKM_ofHoaDon());
            self.ListKM_ofHoaDon([]);
            for (let i = 0; i < self.HHTangHoaDon_AfterRender().length; i++) {
                self.ListKM_ofHoaDon.push(self.HHTangHoaDon_AfterRender()[i]);
            }
        }
        else {
            ShowMessage_Danger('Quá số lượng hàng tặng');
            return;
        }
    }
    self.XoaHangTang_HoaDon = function (item) {
        var idQuiDoi = item.ID_DonViQuiDoi;
        var idKhuyenMai = item.ID_KhuyenMai;
        for (let i = 0; i < self.ListKM_ofHoaDon().length; i++) {
            if (self.ListKM_ofHoaDon()[i].ID_KhuyenMai === idKhuyenMai) {
                for (let j = 0; j < self.ListKM_ofHoaDon()[i].HangHoaChoseTangs.length; j++) {
                    var itemHHTang = self.ListKM_ofHoaDon()[i].HangHoaChoseTangs[j];
                    if (itemHHTang.ID_DonViQuiDoi === idQuiDoi) {
                        self.ListKM_ofHoaDon()[i].HangHoaChoseTangs.splice(j, 1);
                    }
                }
                break;
            }
        }
        // assign ListKM_ofHoaDon =[] , after push again
        self.HHTangHoaDon_AfterRender(self.ListKM_ofHoaDon());
        self.ListKM_ofHoaDon([]);
        for (let i = 0; i < self.HHTangHoaDon_AfterRender().length; i++) {
            self.ListKM_ofHoaDon.push(self.HHTangHoaDon_AfterRender()[i]);
        }
    }
    self.ChoseKhuyenMai_HD = function (item) {
        self.HD_KhuyenMai(item.ID_KhuyenMai);
    }
    self.AddKhuyenMai_forHoaDon = function () {
        if (self.HD_KhuyenMai() === undefined) {
            ShowMessage_Danger('Vui lòng chọn chương trình khuyến mại');
            return;
        }
        else {
            var itemKM = $.grep(self.ListKM_ofHoaDon(), function (x) {
                return x.ID_KhuyenMai === self.HD_KhuyenMai();
            });
            if (itemKM.length > 0) {
                if ((itemKM[0].HinhThuc === 12 || itemKM[0].HinhThuc === 13) && itemKM[0].HangHoaChoseTangs.length === 0) {
                    ShowMessage_Danger('Vui lòng chọn hàng hóa khuyến mại');
                    return;
                }
                else {
                    // remove item in HangHoaChoseTangs with SoLuong = 0 if list HangTang > 1
                    var itemHHTang = itemKM[0].HangHoaChoseTangs;
                    if (itemHHTang.length > 1) {
                        itemHHTang = $.grep(itemHHTang, function (x) {
                            return parseFloat(x.SoLuong) > 0;
                        });
                    }
                    var lstHD = JSON.parse(localStorage.getItem(lcListHD));
                    var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
                    var idRandomHD = itemHD[0].IDRandom;
                    // tinh SLTang, GiamGia phu hop voi TongTienHang (lay KM gan nhat)
                    var sluongTang_PhuHop = 0;
                    var giamGiaHD = 0;
                    var tongtienGG = 0;
                    var isGiamGiaPT = false;
                    for (let j = 0; j < itemKM[0].DM_KhuyenMai_ChiTiet.length; j++) {
                        if (itemKM[0].DM_KhuyenMai_ChiTiet[j].TongTienHang <= itemHD[0].TongTienHang) {
                            sluongTang_PhuHop = itemKM[0].DM_KhuyenMai_ChiTiet[j].SoLuong;
                            giamGiaHD = itemKM[0].DM_KhuyenMai_ChiTiet[j].GiamGia;
                            tongtienGG = itemKM[0].DM_KhuyenMai_ChiTiet[j].TongTienHang;
                            isGiamGiaPT = itemKM[0].DM_KhuyenMai_ChiTiet[j].GiamGiaTheoPhanTram;
                        }
                    }
                    var lstKMCTHD = localStorage.getItem(lcProductKM_HoaDon);
                    if (lstKMCTHD !== null) {
                        lstKMCTHD = JSON.parse(lstKMCTHD);
                        // remove item old in KhuyenMai if same MaHoaDon && add new
                        lstKMCTHD = $.grep(lstKMCTHD, function (x) {
                            return x.IDRandomHD !== idRandomHD;
                        });
                    }
                    else {
                        lstKMCTHD = [];
                    }
                    // caculator sum Soluong in HHTang + save KhuyenMai HoaDon into cache
                    var sumSL = 0;
                    var note_KMaiHD = '';
                    var noteDetail = '';
                    switch (itemKM[0].HinhThuc) {
                        case 11: // giam gia HD --> update ChietKhau, PhaiTT
                            note_KMaiHD = itemKM[0].TenKhuyenMai + ': Tổng tiền hàng từ ' + formatNumber3Digit(tongtienGG)
                                + ' giảm giá ' + giamGiaHD + ' ' + (isGiamGiaPT ? '%' : 'Đ') + ' cho hóa đơn';
                            break;
                        case 12: // tang hang: chietkhau = giaban
                            for (let j = 0; j < itemKM[0].HangHoaChoseTangs.length; j++) {
                                let itemFor = itemKM[0].HangHoaChoseTangs[j];
                                let itemHH = $.grep(self.HangHoaAll(), function (xx) {
                                    return xx.ID_DonViQuiDoi === itemFor.ID_DonViQuiDoi;
                                });
                                itemHH = UpdateGiaBanHangHoa_inList(itemHH);
                                sumSL += parseInt(itemFor.SoLuong);
                                itemFor.MaHoaDon = _maHoaDon; // add properties MaHoaDon to do save cache KMai
                                itemFor.TienChietKhau = itemHH[0].GiaBan;
                                itemFor.GiaBan = itemHH[0].GiaBan;
                                itemFor.PTChietKhau = 0;
                                itemFor.ThanhTien = 0;
                                itemFor.ThanhToan = 0;
                                lstKMCTHD.push(itemFor);
                            }
                            break;
                        case 13: // giam gia: giaban = giaban - giamgia
                            for (let j = 0; j < itemKM[0].HangHoaChoseTangs.length; j++) {
                                let itemFor = itemKM[0].HangHoaChoseTangs[j];
                                let itemHH = $.grep(self.HangHoaAll(), function (xx) {
                                    return xx.ID_DonViQuiDoi === itemFor.ID_DonViQuiDoi;
                                });
                                itemHH = UpdateGiaBanHangHoa_inList(itemHH);
                                sumSL += parseInt(itemFor.SoLuong);
                                itemFor.MaHoaDon = _maHoaDon; // add properties MaHoaDon to do save cache KMai
                                //itemFor.ID_User = id_User;
                                itemFor.GiaBan = itemHH[0].GiaBan;
                                var tienChietKhau = giamGiaHD;
                                var ptChietKhau = 0;
                                if (isGiamGiaPT) {
                                    tienChietKhau = itemHH[0].GiaBan * giamGiaHD / 100;
                                    ptChietKhau = giamGiaHD;
                                }
                                itemFor.TienChietKhau = tienChietKhau;
                                itemFor.PTChietKhau = ptChietKhau;
                                itemFor.ThanhTien = itemFor.SoLuong * (itemFor.GiaBan - tienChietKhau);
                                itemFor.ThanhToan = itemFor.ThanhTien;
                                lstKMCTHD.push(itemFor);
                            }
                            break;
                        case 14:// tang diem
                            note_KMaiHD = itemKM[0].TenKhuyenMai + ': Tổng tiền hàng từ ' + formatNumber3Digit(tongtienGG) + ' tặng ' + giamGiaHD + ' ' + (isGiamGiaPT ? ' % điểm' : ' điểm') + ' cho hóa đơn';
                            break;
                    }
                    // Nếu nhập sumSoLuong > sluongTang cho phep --> gán số lượng max cho Sp đầu tiên & remove item con lai
                    if (itemKM[0].HinhThuc === 12 || (itemKM[0].HinhThuc === 13)) {
                        var indexMin = 0;
                        if (sumSL > sluongTang_PhuHop) {
                            for (let i = 0; i < lstKMCTHD.length; i++) {
                                if (lstKMCTHD[i].IDRandomHD === idRandomHD) {
                                    lstKMCTHD[i].SoLuong = sluongTang_PhuHop;
                                    lstKMCTHD[i].ThanhTien = (lstKMCTHD[i].GiaBan - lstKMCTHD[i].TienChietKhau) * sluongTang_PhuHop;
                                    lstKMCTHD[i].ThanhToan = lstKMCTHD[i].ThanhTien;
                                    indexMin = i;
                                    break;
                                }
                            }
                            // remove item con lai
                            for (let i = 0; i < lstKMCTHD.length; i++) {
                                if (lstKMCTHD[i].IDRandomHD === idRandomHD && i > indexMin) {
                                    lstKMCTHD.splice(i, 1);
                                    break;
                                }
                            }
                        }
                        else {
                            // neu chua du sltang --> gan sluong = max - sum (sluong) cho Sp dau tien (OK)
                            if (sumSL < sluongTang_PhuHop) {
                                var slThieu = sluongTang_PhuHop - sumSL;
                                for (let i = 0; i < lstKMCTHD.length; i++) {
                                    if (lstKMCTHD[i].IDRandomHD === idRandomHD) {
                                        lstKMCTHD[i].SoLuong = parseFloat(lstKMCTHD[i].SoLuong) + slThieu;
                                        lstKMCTHD[i].ThanhTien = (lstKMCTHD[i].GiaBan - lstKMCTHD[i].TienChietKhau) * lstKMCTHD[i].SoLuong;
                                        lstKMCTHD[i].ThanhToan = lstKMCTHD[i].ThanhTien;
                                        break;
                                    }
                                }
                            }
                        }
                        // update SoThuTu in productKM_HoaDon
                        for (let i = 0; i < lstKMCTHD.length; i++) {
                            if (lstKMCTHD[i].IDRandomHD === idRandomHD) {
                                lstKMCTHD[i].SoThuTu = (i + 1);
                            }
                        }
                        localStorage.setItem(lcProductKM_HoaDon, JSON.stringify(lstKMCTHD));
                        // get noteDetail if HinhThuc = 12 Or 13
                        if (itemKM[0].HinhThuc === 12) {
                            for (let i = 0; i < lstKMCTHD.length; i++) {
                                if (lstKMCTHD[i].IDRandomHD === idRandomHD) {
                                    noteDetail += lstKMCTHD[i].SoLuong + ' ' + lstKMCTHD[i].MaHangHoa + ' ,';
                                }
                            }
                            note_KMaiHD = itemKM[0].TenKhuyenMai + ': Tổng tiền hàng từ ' + formatNumber3Digit(tongtienGG) + ' tặng ' + noteDetail;
                        }
                        else {
                            for (let i = 0; i < lstKMCTHD.length; i++) {
                                if (lstKMCTHD[i].IDRandomHD === idRandomHD) {
                                    noteDetail += giamGiaHD + ' ' + (isGiamGiaPT ? '%' : 'Đ')
                                        + ' cho ' + lstKMCTHD[i].SoLuong + ' ' + lstKMCTHD[i].MaHangHoa + ' ,';
                                }
                            }
                            note_KMaiHD = itemKM[0].TenKhuyenMai + ': Tổng tiền hàng từ ' + formatNumber3Digit(tongtienGG) + ' giảm giá ' + noteDetail;
                        }
                    }
                    // bind lst HHTang of HoaDon
                    var arrKM_HoaDon = $.grep(lstKMCTHD, function (x) {
                        return x.IDRandomHD === idRandomHD;
                    });
                    self.HHTang_HoaDon(arrKM_HoaDon);
                    // caculator sum money in CTHD + hangtangHD
                    var sumMoney = CaculatorTongTien_fromHDMua_LoHang(idRandomHD);
                    // update again TongGiamGia, PhaiTT if GiamGiaHD (OK)
                    for (let i = 0; i < lstHD.length; i++) {
                        if (lstHD[i].IDRandom === idRandomHD) {
                            lstHD[i].IsOpeningKMaiHD = true;
                            lstHD[i].ID_KhuyenMai = self.HD_KhuyenMai(); // assign ID_KhuyenMai to do save DB
                            lstHD[i].KhuyenMai_GhiChu = Remove_LastComma(note_KMaiHD);
                            lstHD[i].TongTienHang = sumMoney;
                            if (lstHD[i].TongChietKhau > 0) {
                                lstHD[i].TongGiamGia = lstHD[i].TongChietKhau * sumMoney / 100;
                            }
                            // chi update GiamGia neu la KM HoaDon - giamgiaHang
                            if (itemKM[0].HinhThuc === 11) {
                                if (isGiamGiaPT) {
                                    lstHD[i].PTGiam_KM = giamGiaHD;
                                    lstHD[i].KhuyeMai_GiamGia = lstHD[i].TongTienHang * giamGiaHD / 100;
                                }
                                else {
                                    lstHD[i].PTGiam_KM = 0;
                                    lstHD[i].KhuyeMai_GiamGia = giamGiaHD;
                                }
                            }
                            else {
                                lstHD[i].PTGiam_KM = 0;
                                lstHD[i].KhuyeMai_GiamGia = 0;
                            }
                            lstHD[i].TongGiamGiaKM_HD = lstHD[i].TongGiamGia + lstHD[i].KhuyeMai_GiamGia;
                            // truong hop KH DatHang va da thanh toan truoc
                            var phaiTT = sumMoney - lstHD[i].TongGiamGiaKM_HD - lstHD[i].KhachDaTra;
                            if (phaiTT < 0) {
                                // neu gg > tong tien hang: hoan tra = 0
                                if (lstHD[i].TongGiamGiaKM_HD > sumMoney) {
                                    lstHD[i].PhaiThanhToan = 0;
                                    lstHD[i].HoanTraTamUng = 0;
                                }
                                else {
                                    lstHD[i].PhaiThanhToan = 0;
                                    lstHD[i].HoanTraTamUng = phaiTT * (-1);
                                }
                            }
                            else {
                                lstHD[i].PhaiThanhToan = phaiTT;
                                lstHD[i].HoanTraTamUng = 0;
                            }
                            lstHD[i].DaThanhToan = lstHD[i].PhaiThanhToan;
                            lstHD[i].TienMat = lstHD[i].PhaiThanhToan;
                            itemHD = lstHD[i];
                            break;
                        }
                    }
                    localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                    UpdateChietKhauHD_NhanVien(idRandomHD);
                    self.HoaDons().SetData(itemHD);
                    localStorage.setItem(lcMaHD, _maHoaDon);
                    $('#promotiont_Parent').modal('hide');
                    // this code must before update DiemGiaoDichHoaDon (must set ThietLapTichDiem = true)
                    if (itemKM[0].HinhThuc === 14) {
                        if (self.ThietLap_TichDiem().length > 0) {
                            var quydoiDiemKM = Math.floor(formatNumberToFloat(itemHD.PhaiThanhToan) / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                            if (isGiamGiaPT) {
                                // tinh diem
                                quydoiDiemKM = Math.floor(giamGiaHD / 100 * quydoiDiemKM);
                            }
                            else {
                                quydoiDiemKM = giamGiaHD;
                                // if not cong % diem --> khong tru diem cong
                            }
                            UpdateDiemCong_KMCongDiem(idRandomHD, quydoiDiemKM, true);
                        }
                    }
                    UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                    Caculator_AmountProduct();
                }
            }
        }
    }
    // Search and paging DatHang
    self.filterMaHD = ko.observable();
    self.showpopupDatHang = function () {
        $('#modalPopuplgDatHang').modal('show');
        $('#txtMaHoaDonDH').val('');
        $('#txtFromDateDH').val('');
        $('#txtToDateDH').val('');
        self.currentPageDH(0);
        GetListIDNhanVien_byUserLogin('DatHang');
    }
    // Search and Paging Dat Hang popup 
    self.PageListDH = ko.computed(function () {
        var arrPage = [];
        var allPage = self.PageCountDH();
        var currentPage = self.currentPageDH();
        if (allPage > 4) {
            var i = 0;
            if (currentPage === 0) {
                i = parseInt(self.currentPageDH()) + 1;
            }
            else {
                i = self.currentPageDH();
            }
            if (allPage >= 5 && currentPage > allPage - 5) {
                if (currentPage >= allPage - 2) {
                    // get 5 trang cuoi cung
                    for (let i = allPage - 5; i < allPage; i++) {
                        let obj = {
                            pageNumber: i + 1,
                        };
                        arrPage.push(obj);
                    }
                }
                else {
                    if (currentPage === 1) {
                        for (let j = currentPage - 1; (j <= currentPage + 3) && j < allPage; j++) {
                            let obj = {
                                pageNumber: j + 1,
                            };
                            arrPage.push(obj);
                        }
                    }
                    else {
                        // get currentPage - 2 , currentPage, currentPage + 2
                        for (let j = currentPage - 2; (j <= currentPage + 2) && j < allPage; j++) {
                            let obj = {
                                pageNumber: j + 1,
                            };
                            arrPage.push(obj);
                        }
                    }
                }
            }
            else {
                // get 5 trang dau
                if (i >= 2) {
                    while (arrPage.length < 5) {
                        let obj = {
                            pageNumber: i - 1,
                        };
                        arrPage.push(obj);
                        i = i + 1;
                    }
                }
                else {
                    while (arrPage.length < 5) {
                        let obj = {
                            pageNumber: i,
                        };
                        arrPage.push(obj);
                        i = i + 1;
                    }
                }
            }
        }
        else {
            // neu chi co 1 trang --> khong hien thi DS trang
            if (allPage > 1) {
                for (let i = 0; i < allPage; i++) {
                    let obj = {
                        pageNumber: i + 1,
                    };
                    arrPage.push(obj);
                }
            }
        }
        return arrPage;
    });
    self.PageResultDH = ko.computed(function () {
        if (self.HoaDonDHs() !== null) {
            if (self.HoaDonDHs().length === 0) {
                self.fromitem(0);
            }
            else {
                self.fromitem((self.currentPageDH() * self.pageSizeDH()) + 1);
            }
            if (((self.currentPageDH() + 1) * self.pageSizeDH()) > self.HoaDonDHs().length) {
                var fromItem = (self.currentPageDH() + 1) * self.pageSizeDH();
                if (fromItem < self.TotalRecordDH()) {
                    self.toitem((self.currentPageDH() + 1) * self.pageSizeDH());
                }
                else {
                    self.toitem(self.TotalRecordDH());
                }
            } else {
                self.toitem((self.currentPageDH() * self.pageSizeDH()) + self.pageSizeDH());
            }
        }
    });
    self.VisibleStartPageDH = ko.computed(function () {
        if (self.PageListDH().length > 0) {
            return self.PageListDH()[0].pageNumber !== 1;
        }
    });
    self.VisibleEndPageDH = ko.computed(function () {
        if (self.PageListDH().length > 0) {
            return self.PageListDH()[self.PageListDH().length - 1].pageNumber !== self.PageCountDH();
        }
    });
    self.GoToPageDH = function (page) {
        self.currentPageDH(page.pageNumber - 1);
        SearchHoaDonDatHang(true);
    };
    self.GetClassDH = function (page) {
        return ((page.pageNumber - 1) === self.currentPageDH()) ? "click" : "";
    };
    self.StartPageDH = function () {
        self.currentPageDH(0);
        SearchHoaDonDatHang(true);
    }
    self.BackPageDH = function () {
        if (self.currentPageDH() > 1) {
            self.currentPageDH(self.currentPageDH() - 1);
            SearchHoaDonDatHang(true);
        }
    }
    self.GoToNextPageDH = function () {
        if (self.currentPageDH() < self.PageCountDH() - 1) {
            self.currentPageDH(self.currentPageDH() + 1);
            SearchHoaDonDatHang(true);
        }
    }
    self.EndPageDH = function () {
        if (self.currentPageDH() < self.PageCountDH() - 1) {
            self.currentPageDH(self.PageCountDH() - 1);
            SearchHoaDonDatHang(true);
        }
    }
    $('#txtMaHoaDonDH').keypress(function (e) {
        if (e.keyCode === 13) {
            self.currentPageDH(0);
            SearchHoaDonDatHang();
        }
    });
    self.filterFromDateDH.subscribe(function () {
        self.currentPageDH(0);
        SearchHoaDonDatHang();
    });
    self.filterToDateDH.subscribe(function () {
        self.currentPageDH(0);
        SearchHoaDonDatHang();
    });
    function SearchHoaDonDatHang(isGoToNext) {
        var txtMaHDon = $('#txtMaHoaDonDH').val();
        var txtFromDate = $('#txtFromDateDH').val();
        var txtToDate = $('#txtToDateDH').val();
        var _now = new Date();
        if (txtFromDate === '' || txtFromDate.indexOf('_') > -1) {
            txtFromDate = '2016-01-01';
        }
        else {
            txtFromDate = moment(txtFromDate, 'DD/MM/YYYY').format('YYYY-MM-DD');
        }
        if (txtToDate === '' || txtToDate.indexOf('_') > -1) {
            txtToDate = moment(_now).add(1, 'days').format('YYYY-MM-DD'); // get tomorrow
        }
        else {
            txtToDate = moment(txtToDate, 'DD/MM/YYYY').add(1, 'days').format('YYYY-MM-DD');
        }
        var arrIDNhanVien = [];
        for (let i = 0; i < self.ListIDNhanVienQuyen().length; i++) {
            arrIDNhanVien.push(self.ListIDNhanVienQuyen()[i]);
        }
        var Params_GetListHoaDon = {
            LoaiHoaDon: 3,
            MaHoaDon: txtMaHDon,
            ID_ChiNhanhs: [id_DonVi],
            ID_NhanViens: arrIDNhanVien, // NVBan
            NguoiTao: userLogin, // nguoitaoHD
            NgayTaoHD_TuNgay: txtFromDate,
            NgayTaoHD_DenNgay: txtToDate,
            TrangThai: 12,
            CurrentPage: self.currentPageDH(),
            PageSize: self.pageSizeDH(),
        }
        ajaxHelper(BHHoaDonUri + 'GetHD_CTHDDatHang_afterMuaHang', 'POST', Params_GetListHoaDon).done(function (data) {
            if (data !== null) {
                self.HoaDonDHs(data.lstCH);
                self.TotalRecordDH(data.Rowcount);
                self.PageCountDH(data.pageCount);
                db.HDDatHang_Offline.bulkPut(data.lstCH);
            }
        });
    }

    function GetPTChietKhauHang_DB(cthd) {
        var ptCKHang = 0;
        var arr = $.grep(cthd, function (x) {
            return x.PTChietKhau === cthd[0].PTChietKhau;
        });
        if (arr.length === cthd.length) {
            ptCKHang = cthd[0].PTChietKhau;
        }
        return {
            PTChietKhauHH: ptCKHang,
        }
    }

    function AssignTPDinhLuong_toCTHD(itemCT) {
        if (itemCT.ThanhPhan_DinhLuong !== null && itemCT.ThanhPhan_DinhLuong !== undefined) {
            for (let k = 0; k < itemCT.ThanhPhan_DinhLuong.length; k++) {
                let tpDL = itemCT.ThanhPhan_DinhLuong[k];
                itemCT.ThanhPhan_DinhLuong[k].STT = k + 1;
                itemCT.ThanhPhan_DinhLuong[k].isDefault = false;
                itemCT.ThanhPhan_DinhLuong[k].IDRandom = CreateIDRandom('TPDL_');
                itemCT.ThanhPhan_DinhLuong[k].SoLuongQuyCach = tpDL.SoLuong * tpDL.QuyCach;
                itemCT.ThanhPhan_DinhLuong[k].SoLuongDinhLuong_BanDau = tpDL.SoLuong / itemCT.SoLuong;
                itemCT.ThanhPhan_DinhLuong[k].SoLuongMacDinh = itemCT.ThanhPhan_DinhLuong[k].SoLuongDinhLuong_BanDau; // assign = SoLuongDinhLuong_BanDau
                itemCT.ThanhPhan_DinhLuong[k].GiaVonAfter = tpDL.SoLuong * tpDL.GiaVon;
            }
        }
        else {
            itemCT.ThanhPhan_DinhLuong = [];
        }
        return itemCT;
    }

    function AssignThanhPhanComBo_toCTHD(itemCT) {
        if (itemCT.ThanhPhanComBo !== null && itemCT.ThanhPhanComBo !== undefined) {
            for (let k = 0; k < itemCT.ThanhPhanComBo.length; k++) {
                let combo = itemCT.ThanhPhanComBo[k];
                if (itemCT.LoaiHoaDon === 6) {
                    combo.SoLuong = 0;
                    combo.ThanhTien = 0;
                    combo.PTChietKhau = 0;
                    combo.TienChietKhau = 0;
                    combo.ThanhToan = 0;
                    combo.ID_ChiTietGoiDV = combo.ID;
                    combo.SoLuongDaMua = combo.SoLuongConLai;
                    combo.GiaBan = combo.DonGia - combo.GiamGia;
                    combo.DonGia = combo.GiaBan;
                    combo.SoLuongMacDinh = itemCT.SoLuongDaMua == 0 ? combo.SoLuongConLai : combo.SoLuongConLai / itemCT.SoLuongDaMua;
                    combo.ThanhPhan_DinhLuong = [];
                }
                else {
                    combo.SoLuongMacDinh = itemCT.SoLuong === 0 ? combo.SoLuong : combo.SoLuong / itemCT.SoLuong;
                    combo.SoLuongDaMua = 0;
                    combo = AssignTPDinhLuong_toCTHD(combo);
                }

                let dateLot1 = GetNgaySX_NgayHH(combo);
                combo.NgaySanXuat = dateLot1.NgaySanXuat;
                combo.NgayHetHan = dateLot1.NgayHetHan;
                combo.LotParent = false;
                combo.DM_LoHang = [];

                combo.IDRandom = CreateIDRandom('combo_');
                combo.IDRandomHD = itemCT.IDRandomHD;
                combo.LoaiHoaDon = itemCT.LoaiHoaDon;
                combo.MaHoaDon = itemCT.MaHoaDon;
                combo.ID_ViTri = itemCT.ID_ViTri;
                combo.TenViTri = itemCT.TenPhongBan;
                combo.ChatLieu = itemCT.ChatLieu;

                combo.DVTinhGiam = "%";
                combo.GhiChu_NVThucHien = '';
                combo.GhiChu_NVThucHienPrint = '';
                combo.GhiChu_NVTuVan = '';
                combo.GhiChu_NVTuVanPrint = '';
                combo.CssWarning = false;
                combo.IsKhuyenMai = false;
                combo.IsOpeningKMai = false;
                combo.TenKhuyenMai = '';
                combo.HangHoa_KM = [];
                combo.UsingService = false;
                combo.ListDonViTinh = [];
                combo.SoLuongQuyCach = 0;
                combo.BH_NhanVienThucHien = [];// tru hoahong by hoadonmua (at DB)
                combo.DM_LoHang = [];
                combo.HangCungLoais = [];
                combo.LaConCungLoai = false;
                combo.LotParent = false;
                combo.TimeStart = 0;
                combo.QuaThoiGian = 0;
                combo.TimeRemain = 0;
                combo.ThoiGian = moment(new Date()).format('YYYY-MM-DD HH:mm');
            }
        }
        else {
            itemCT.ThanhPhanComBo = [];
        }
        return itemCT;
    }

    self.clickXuLiDonHang = function (item) {
        $('#modalPopuplgDatHang').modal('hide');
        localStorage.setItem('createHDfrom', 2);
        self.DateHDDefault(moment(serverTime).format('DD/MM/YYYY'));
        self.TimeHDDefault(moment(serverTime).format('HH:mm'));
        var phaiTT = item.PhaiThanhToan - item.KhachDaTra;
        var dvtGiam = 'VND';
        if (item.TongChietKhau > 0) {
            dvtGiam = '%';
        }
        if (item.ID_BangGia === null) {
            item.ID_BangGia = const_GuidEmpty;
        }
        var idRandomHD = CreateIDRandom('HD_');

        var itemNew = {
            ID: item.ID,
            ID_HoaDon: null,
            IDRandom: idRandomHD,
            MaHoaDon: item.MaHoaDon,
            MaHoaDonDB: item.MaHoaDon,
            LoaiHoaDon: 3,
            ID_DoiTuong: item.ID_DoiTuong,
            ID_DonVi: item.ID_DonVi,
            NguoiTao: userLogin,
            ID_BangGia: item.ID_BangGia,
            ID_NhanVien: item.ID_NhanVien,
            ID_User: id_User,
            NgayLapHoaDon: moment(item.NgayLapHoaDon).format('YYYY-MM-DD HH:mm'),
            TongTienHang: item.TongTienHang,
            TongGiamGia: item.TongGiamGia,
            KhachDaTra: item.KhachDaTra,
            PTThueHoaDon: item.PTThueHoaDon, // vi DB khong co truong luu % thue, nen phai chia deu thue
            TongTienThue: item.TongTienThue,
            ChoThanhToan: false,
            DienGiai: item.DienGiai,
            TienGui: 0,
            TienThua: 0,
            Status: 1,
            StatusOffline: false,
            DVTinhGiam: dvtGiam,
            TongChietKhau: item.TongChietKhau, // PTGiam
            DaThanhToan: phaiTT, // lấy đúng số tiền khách đã thanh toán ở đặt hàng
            PhaiThanhToan: phaiTT,
            TienMat: phaiTT,
            // Tra Hang
            PhaiThanhToanDB: 0,
            TongGiaGocHangTra: 0,
            TongChiPhiHangTra: 0,
            TongChiPhi: 0,
            HoanTraThuKhac: 0,
            TongTienTra: 0,
            PhaiTraKhach: 0,
            DaTraKhach: 0,
            GiaoHang: false,
            TongGiamGiaDB: item.TongGiamGia, // used to caculator agiain TongGiamGia of HD was creat from HdDatHang (if HDDatHang change)
            PTGiamDB: 0,
            TongTienMua: 0,
            TongThueDB: 0,
            PTThueDB: 0,
            TrangThaiHD: 6,

            IsActive: '',
            YeuCau: item.YeuCau,
            IsChose: true, // tức là đang thao tác với hóa đơn này
            HoanTraTamUng: 0,

            IsKhuyenMaiHD: false,
            IsOpeningKMaiHD: false,
            KhuyeMai_GiamGia: 0,
            TongGiamGiaKM_HD: item.TongGiamGia + item.KhuyeMai_GiamGia, // to do bind GiamGia
            // TichDiem
            DiemGiaoDich: 0,
            TTBangDiem: 0,
            DiemQuyDoi: 0,
            DiemHienTai: 0,
            DiemGiaoDichDB: 0,
            // use when KM_Cong diem
            DiemCong: 0,
            DiemKhuyenMai: 0,
            // Goi dich vu
            NgayApDungGoiDV: null,
            HanSuDungGoiDV: null,
            // check when change infor HD,CTHD of HDDatHang is XuLY
            IsChangeHDXuLy: false,
            BH_NhanVienThucHiens: [],
            TienTheGiaTri: 0,
            ThoiGianThucHien: 0,
            TenViTriHD: '',
            ID_ViTri: null,
            TenNhanVien: item.TenNhanVien,

            PTChietKhauHH: 0,
            TongGiamGiaHang: 0,
            TongTienHangChuaCK: 0,
            TongTienKhuyenMai_CT: 0,
            TongGiamGiaKhuyenMai_CT: 0,
        }

        // get infor hd
        var tonggiamgiahang = item.BH_HoaDon_ChiTiet.reduce(function (x, item) {
            return x + (item.TienChietKhau * item.SoLuong);
        }, 0);
        var tongtienhangchuaCK = item.BH_HoaDon_ChiTiet.reduce(function (x, item) {
            return x + item.TienChietKhau;
        }, 0);

        itemNew.TongGiamGiaHang = tonggiamgiahang;
        itemNew.TongTienHangChuaCK = tongtienhangchuaCK;
        var objThueCK = GetPTChietKhauHang_DB(item.BH_HoaDon_ChiTiet);
        itemNew.PTChietKhauHH = objThueCK.PTChietKhauHH;

        // save cache lcXuLiDonHang to arrayJson --> xu li nhieu DH cung 1 luc
        var itemEx = [];
        var lcXuLiDonHang = localStorage.getItem(lcXuLiDonHang_Const);
        if (lcXuLiDonHang === null) {
            lcXuLiDonHang = [];
        }
        else {
            lcXuLiDonHang = JSON.parse(lcXuLiDonHang);
            itemEx = $.grep(lcXuLiDonHang, function (itemXL) {
                return itemXL.MaHoaDon === item.MaHoaDon && itemXL.TrangThaiHD === 1;
            });
        }
        if (itemEx.length === 0) {
            // update status = 0 with hd dathang old
            for (let i = 0; i < lcXuLiDonHang.length; i++) {
                lcXuLiDonHang[i].Status = 0;
            }
            lcXuLiDonHang.push(itemNew);
        }
        else {
            // remove and add new
            for (let i = 0; i < lcXuLiDonHang.length; i++) {
                if (lcXuLiDonHang[i].MaHoaDon === item.MaHoaDon && lcXuLiDonHang[i].TrangThaiHD === 1) {
                    lcXuLiDonHang.splice(i, 1);
                    break;
                }
            }
            lcXuLiDonHang.push(itemNew);
        }
        localStorage.setItem(lcXuLiDonHang_Const, JSON.stringify(lcXuLiDonHang));
        var lcCTDatHang = localStorage.getItem(lcCTDatHang_Const);
        if (lcCTDatHang === null) {
            lcCTDatHang = [];
        }
        else {
            // remove lcCTDatHang if exist
            lcCTDatHang = JSON.parse(lcCTDatHang);
            lcCTDatHang = $.grep(lcCTDatHang, function (x) {
                return x.MaHoaDon !== item.MaHoaDon;
            });
        }
        // order by SoThuTu ASC --> group Hang Hoa by LoHang
        var cthd = item.BH_HoaDon_ChiTiet.sort(function (a, b) {
            var x = a.SoThuTu,
                y = b.SoThuTu;
            return x < y ? -1 : x > y ? 1 : 0;
        });
        var arrIDQuiDoi = [];
        var cthdLoHang = [];
        for (let i = 0; i < cthd.length; i++) {
            delete cthd[i]["ID_HoaDon"];  // delete avoid error
            cthd[i].MaHoaDon = item.MaHoaDon;
            cthd[i].LoaiHoaDon = 3;
            cthd[i].SoLuongDaMua = 0;
            cthd[i].TienChietKhau = cthd[i].GiamGia;
            cthd[i].DVTinhGiam = 'VND';
            cthd[i].GiaBan = cthd[i].DonGia;
            if (cthd[i].PTChietKhau > 0) {
                cthd[i].DVTinhGiam = '%';
            }

            cthd[i] = SetDefaultPropertierCTHD(cthd[i]);

            let quanlytheolo = cthd[i].QuanLyTheoLoHang;
            cthd[i].DM_LoHang = [];
            cthd[i].LotParent = quanlytheolo;

            cthd[i].ID_ChiTietGoiDV = null;
            cthd[i].ChatLieu = '3';
            let quycach = cthd[i].QuyCach === null || cthd[i].QuyCach === 0 ? 1 : cthd[i].QuyCach;
            cthd[i].QuyCach = quycach;
            cthd[i].CssWarning = false;
            if (self.ThietLap().DatHangXuatAm === false) {
                if (cthd[i].SoLuong > cthd[i].TonKho) {
                    cthd[i].CssWarning = true;
                }
            }

            let lotSX = GetNgaySX_NgayHH(cthd[i]);
            cthd[i].NgaySanXuat = lotSX.NgaySanXuat;
            cthd[i].NgayHetHan = lotSX.NgayHetHan;

            cthd[i] = AssignTPDinhLuong_toCTHD(cthd[i]);
            cthd[i] = AssignThanhPhanComBo_toCTHD(cthd[i]);

            // check exist in cthdLoHang
            let objLot = {};
            if ($.inArray(cthd[i].ID_DonViQuiDoi, arrIDQuiDoi) === -1) {
                arrIDQuiDoi.unshift(cthd[i].ID_DonViQuiDoi);

                cthd[i].SoThuTu = cthdLoHang.length + 1;
                cthd[i].IDRandom = CreateIDRandom('RandomCTHD_');
                cthd[i].IDRandomHD = idRandomHD;

                if (quanlytheolo) {
                    objLot = $.extend({}, cthd[i]);
                    objLot.HangCungLoais = [];
                    objLot.DM_LoHang = [];
                    cthd[i].DM_LoHang.push(objLot);
                }
                cthdLoHang.unshift(cthd[i]);
            }
            else {
                // find in cthdLoHang with same ID_QuiDoi
                for (let j = 0; j < cthdLoHang.length; j++) {
                    if (cthdLoHang[j].ID_DonViQuiDoi === cthd[i].ID_DonViQuiDoi) {
                        if (quanlytheolo) {
                            // push DM_Lo
                            objLot = $.extend({}, cthd[i]);
                            objLot.IDRandom = CreateIDRandom('RandomCT_');
                            objLot.HangCungLoais = [];
                            objLot.DM_LoHang = [];
                            objLot.LotParent = false;
                            cthdLoHang[j].DM_LoHang.push(objLot);
                        }
                        else {
                            cthd[i].IDRandom = CreateIDRandom('RandomCT_');
                            cthd[i].LaConCungLoai = true;
                            cthdLoHang[j].HangCungLoais.push(cthd[i]);
                        }
                        break;
                    }
                }
            }
        }
        // push in cache CTHD (xu li nhieu CT cung luc)
        for (let i = 0; i < cthdLoHang.length; i++) {
            lcCTDatHang.push(cthdLoHang[i]);
        }
        localStorage.setItem(lcCTDatHang_Const, JSON.stringify(lcCTDatHang));

        getListHoaDonLe();
        ActiveTab_SoDoPhong(false);
    }
    // hide popup -> alway focus in txtSearchHH
    $('.modal').on('hidden.bs.modal', function () {
        $('#txtSearchHH').focus();
    })
    //trinhpv import hóa đơn, đặt hàng
    self.ShowmyModalinport = function () {
        $('#myModalinport').modal('show');
    }
    var DMHangHoaUri = '/api/DanhMuc/DM_HangHoaAPI/';
    self.DownloadFileTeamplateXLS = function () {
        var url = DMHangHoaUri + "Download_TeamplateImport?fileSave=" + "FileImport_HangHoaHoaDon_LoHang.xls";
        window.open(url);
    }
    self.DownloadFileTeamplateXLSX = function () {
        var url = DMHangHoaUri + "Download_TeamplateImport?fileSave=" + "FileImport_HangHoaHoaDon_LoHang.xlsx";
        window.open(url)
    }
    self.fileNameExcel = ko.observable("Lựa chọn file Excel...");
    self.visibleImport = ko.observable(true);
    self.notvisibleImport = ko.computed(function () {
        return !self.visibleImport();
    });
    self.refreshFileSelect = function () {
        self.visibleImport(true);
        self.fileNameExcel("Lựa chọn file Excel...");
        $(".filterFileSelect").hide();
        $(".btnImportExcel").hide();
        document.getElementById('imageUploadForm').value = "";
    }
    $(".filterFileSelect").hide();
    $(".btnImportExcel").hide();
    self.SelectedFileImport = function (vm, evt) {
        if (evt.target.files.length > 0) {
            self.visibleImport(false);
            self.fileNameExcel(evt.target.files[0].name)
            $(".filterFileSelect").show();
            $(".btnImportExcel").show();
            $(".NoteImport").show();
            $(".BangBaoLoi").hide();
        }
    }
    self.loiExcel = ko.observableArray();
    self.DanhSachHangHoaHoaDon = ko.observableArray();
    $(".BangBaoLoi").hide();
    self.insertArticleNews = function () {
        hidewait('printinport');
        var typeExcel = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel'];
        var sError = '';
        var formData = new FormData();
        var totalFiles = document.getElementById("imageUploadForm").files.length;
        for (let i = 0; i < totalFiles; i++) {
            var file = document.getElementById("imageUploadForm").files[i];
            if (file.type !== "" && $.inArray(file.type, typeExcel) === -1) {
                sError += file.name + ', ';
            }
            else {
                formData.append("imageUploadForm", file);
            }
        }
        if (sError !== '') {
            ShowMessage_Danger('File ' + Remove_LastComma(sError) + ' không đúng định dạng');
            $('#wait').remove();
            self.visibleImport(false);
            return false;
        }
        $.ajax({
            type: "POST",
            url: DMHangHoaUri + "ImportHangHoaHoaDon", // get error
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (item) {
                self.loiExcel(item);
                if (self.loiExcel() !== null) {
                    self.visibleImport(true);
                    $(".BangBaoLoi").show();
                    $(".NoteImport").hide();
                    $(".filterFileSelect").hide();
                    $(".btnImportExcel").hide();
                }
                else {
                    // thực hiện import
                    $.ajax({
                        type: "POST",
                        url: DMHangHoaUri + "getList_HangHoaHoaDon",
                        data: formData,
                        dataType: 'json',
                        contentType: false,
                        processData: false,
                        success: function (item) {
                            self.DanhSachHangHoaHoaDon(item);
                            AddHoaDon_fromExcel();
                        },
                    });
                }
                $('#wait').remove();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                ShowMessage_Danger('Import hóa đơn thất bại');
                $('#wait').remove();
            }
        })
    }
    self.ShowandHide = function () {
        self.insertArticleNews();
    }
    function AddHoaDon_fromExcel() {
        var arrQuiDoi = self.DanhSachHangHoaHoaDon().map(function (x) {
            return x.ID_DonViQuiDoi;
        });
        var param = {
            ID_ChiNhanh: id_DonVi,
            ID_BangGia: const_GuidEmpty,
            LstIDQuiDois: arrQuiDoi,
        };

        // get infor product from DB
        ajaxHelper('/api/DanhMuc/DM_HangHoaAPI/Gara_GetListHangHoa_ByIDQuiDoi', 'POST', param).done(function (x) {
            if (x.res) {
                var arr = [];
                for (let i = 0; i < self.DanhSachHangHoaHoaDon().length; i++) {
                    let forOut = $.extend({}, true, self.DanhSachHangHoaHoaDon()[i]);
                    let ctHH = $.grep(x.dataSoure, function (y) {
                        return y.ID_DonViQuiDoi === forOut.ID_DonViQuiDoi
                            && ((y.ID_LoHang === forOut.ID_LoHang) || (forOut.ID_LoHang === const_GuidEmpty && y.ID_LoHang == null))
                    });
                    if (ctHH.length > 0) {
                        let objCT = $.extend({}, true, ctHH[0]);
                        objCT.ThuTuHoaDon = forOut.ThuTuHoaDon;
                        objCT.SoLuong = forOut.SoLuong;
                        objCT.ID_LoHang = forOut.ID_LoHang;
                        objCT.MaLoHang = forOut.MaLoHang;
                        objCT.GiaBan = forOut.GiaBan != null ? forOut.GiaBan : objCT.GiaBan;
                        objCT.GiamGia = forOut.GiamGia != null ? forOut.GiamGia : 0;
                        arr.push(objCT);
                    }
                }
                self.DanhSachHangHoaHoaDon($.extend([], true, arr));

                var maHoaDonImport = nameHD_InsertBH;
                var loaiHD = self.HoaDons().LoaiHoaDon();
                switch (loaiHD) {
                    case 2:
                        maHoaDonImport = nameHD_BaoHanh;
                        break;
                    case 3:
                        maHoaDonImport = nameHD_InsertDH;
                        break;
                    case 6:
                        ShowMessage_Danger('Không import hóa đơn trả từ file excel');
                        return false;
                    case 19:
                        maHoaDonImport = nameHD_AddGoiDV;
                        break;
                }
                var max = 0;
                var lstHD = localStorage.getItem(lcListHD);
                var cthd = localStorage.getItem(lcListCTHD);
                if (lstHD !== null) {
                    lstHD = JSON.parse(lstHD);
                    max = GetMax_MaHoaDon(loaiHD, lstHD);
                }
                else {
                    lstHD = [];
                }
                if (cthd !== null) {
                    cthd = JSON.parse(cthd);
                }
                else {
                    cthd = [];
                }
                var arrIDQuiDoi = [];
                var cthdLoHang = [];
                for (let i = 0; i < self.DanhSachHangHoaHoaDon().length; i++) {
                    let itemFor = self.DanhSachHangHoaHoaDon()[i];
                    let maHD = itemFor.ThuTuHoaDon + max;

                    if (parseInt(itemFor.ThuTuHoaDon) !== 1) {
                        loaiHD = 1;// neu hd dautien chon tu PhieuTiepNhan (loaiHD = 25), sau do reset loaiHD = 1
                    }
                    // check HD exist
                    let itemHD = GetHDOpening_byMaHoaDon(maHoaDonImport + maHD, lstHD);
                    let idRandomHD = '';
                    if (itemHD.length === 0) {
                        // reset arrIDQuiDoi if newHDon
                        arrIDQuiDoi = [];
                        let newObj = newHoaDon(maHoaDonImport + maHD);
                        lstHD.push(newObj);
                        idRandomHD = newObj.IDRandom;
                        itemHD = newObj;
                    }
                    else {
                        idRandomHD = itemHD[0].IDRandom;
                        itemHD = itemHD[0];
                    }

                    let quanLiTheoLo = itemFor.QuanLyTheoLoHang;
                    let giaBanAfterSale = itemFor.GiaBan - itemFor.GiamGia;
                    giaBanAfterSale = (giaBanAfterSale < 0 ? itemFor.GiaBan : giaBanAfterSale);
                    let thanhtien = giaBanAfterSale * itemFor.SoLuong;

                    var dateLot = GetNgaySX_NgayHH(itemFor);

                    if ($.inArray(itemFor.ID_DonViQuiDoi, arrIDQuiDoi) === -1) {
                        arrIDQuiDoi.unshift(itemFor.ID_DonViQuiDoi);

                        let ob1 = newHangHoa(itemFor, itemHD, false);
                        ob1.TienChietKhau = itemFor.GiamGia;
                        ob1.ThanhTien = thanhtien;
                        ob1.ThanhToan = thanhtien;
                        ob1.ListDonViTinh = [];
                        ob1.MaLoHang = itemFor.MaLoHang;
                        ob1.NgaySanXuat = dateLot.NgaySanXuat;
                        ob1.NgayHetHan = dateLot.NgayHetHan;

                        if (quanLiTheoLo) {
                            let objLot = $.extend({}, ob1);
                            objLot.DM_LoHang = [];
                            objLot.HangCungLoais = [];
                            ob1.DM_LoHang.push(objLot);
                        }
                        cthdLoHang.push(ob1);
                    }
                    else {
                        // find in cthdLoHang with same ID_QuiDoi
                        for (let j = 0; j < cthdLoHang.length; j++) {
                            if (cthdLoHang[j].IDRandomHD === idRandomHD
                                && cthdLoHang[j].ID_DonViQuiDoi === itemFor.ID_DonViQuiDoi) {
                                if (quanLiTheoLo) {
                                    let objLot = $.extend({}, cthdLoHang[j]);
                                    objLot.LotParent = false;
                                    objLot.IDRandom = CreateIDRandom('RandomCT_');
                                    objLot.DM_LoHang = [];
                                    objLot.HangCungLoais = [];

                                    objLot.ID_LoHang = itemFor.ID_LoHang;
                                    objLot.MaLoHang = itemFor.MaLoHang;
                                    objLot.NgaySanXuat = dateLot.NgaySanXuat;
                                    objLot.NgayHetHan = dateLot.NgayHetHan;
                                    objLot.SoLuong = itemFor.SoLuong;
                                    objLot.DonGia = itemFor.GiaBan;
                                    objLot.GiaBan = itemFor.GiaBan;
                                    objLot.TienChietKhau = itemFor.GiamGia;
                                    objLot.ThanhTien = thanhtien;
                                    objLot.ThanhToan = thanhtien;
                                    cthdLoHang[j].DM_LoHang.push(objLot);
                                }
                                else {
                                    let cungloai = $.extend({}, cthdLoHang[j]);
                                    cungloai.IDRandom = CreateIDRandom('RandomCT_');
                                    cungloai.LaConCungLoai = true;
                                    cungloai.HangCungLoais = [];
                                    cungloai.DM_LoHang = [];
                                    cungloai.SoLuong = itemFor.SoLuong;
                                    cungloai.DonGia = itemFor.GiaBan;
                                    cungloai.GiaBan = itemFor.GiaBan;
                                    cungloai.TienChietKhau = itemFor.GiamGia;
                                    cungloai.ThanhTien = thanhtien;
                                    cungloai.ThanhToan = thanhtien;
                                    cthdLoHang[j].HangCungLoais.push(cungloai);
                                }
                                break;
                            }
                        }
                    }

                }
                // push in CTHD
                for (let i = 0; i < cthdLoHang.length; i++) {
                    cthd.push(cthdLoHang[i]);
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
                // save cache hd
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));

                for (let i = 0; i < cthd.length; i++) {
                    UpdateKhuyenMai_CTHD(cthd[i].ID_DonViQuiDoi, cthd[i].IDRandomHD);
                    _maHoaDon = cthd[i].MaHoaDon;
                }

                var arrIDRandomHD = lstHD.map(function (x) {
                    return x.IDRandom;
                });
                for (let i = 0; i < arrIDRandomHD.length; i++) {
                    UpdateSoThuTu_CTHD(false, arrIDRandomHD[i]);
                    self.KM_KMApDung([]);
                    UpdateCacheHDLe(arrIDRandomHD[i], false);
                    UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                }

                BindHD_CTHDafterSave();
                SetBorder_LotEnd_CTHD();
                Call_6Func();
            }

            $(".BangBaoLoi").hide();
            $(".NoteImport").show();
            $('#myModalinport').modal("hide");
            $('#wait').remove();
            self.refreshFileSelect();
        })
    }
    // Nhap nhanh/ nhap thuong
    self.NhapThuong_Nhanh = function () {
        $('#txtSoLuong, #txtDonGia').val('');
        if (self.IsNhapNhanh()) {
            self.IsNhapNhanh(false);
            bottomrightnotify('Chế độ nhập thường', 'success');
            if ($('#txtSearchHH').val() === '') {
                $('#txtSearchHH').focus();
            }
            else {
                $('#txtSoLuong').focus();
            }
            $("#searchandadd").css("width", "calc(100% - 210px)")
        }
        else {
            self.IsNhapNhanh(true);
            bottomrightnotify('Chế độ nhập nhanh', 'success');
            $("#searchandadd").css("width", "calc(100% - 50px)")
            $('#txtSearchHH').focus();
        }
        self.txtSoLuong(1);
        self.txtDonGia('');
        NhapThuong_HideShow_txtDonGia();
    }
    self.itemCTHD_clickGiaBan = ko.observableArray(); // get item CTHD when click GiaBan;
    self.IsClickNewPrice_computer = ko.observable(true); // dang click vao newprice computer, default = true
    self.clickGiaBan = function (item) {
        self.itemCTHD_clickGiaBan(item);
    }
    self.editPrice_computer = function () {
        // get infor from CTHD old
        var priceOld = self.itemCTHD_clickGiaBan().DonGia;
        var thisObj = $('#computer_newPrice');
        var objSale = $('#computer-gg');
        formatNumberObj(thisObj);
        var price = formatNumberToFloat(thisObj.val());
        var priceNew = price;
        var tienGiam = 0;
        if (priceNew < priceOld) {
            tienGiam = priceOld - priceNew;
        }
        // assign again sale
        if (clickVND) {
            objSale.val(formatNumber3Digit(tienGiam));
        }
        else {
            objSale.val(formatNumber3Digit(tienGiam / priceOld * 100));
        }
        thisObj.val(formatNumber3Digit(priceNew));
    }
    self.editSale_computer = function () {
        var thisObj = $('#computer-gg');
        var objPrice = $('#computer_newPrice');
        var keyCode = event.keyCode || e.which;
        // neu dang go phim back
        if (keyCode === 8) {
            var newVal = thisObj.val();
            // if last char ='.' --> remove
            var lastChar = newVal[newVal.length - 1];
            if (lastChar === '.') {
                newVal = newVal.substr(0, newVal.length - 1);
                thisObj.val(newVal);
            }
        }
        // get infor from CTHD old
        var priceOld = self.itemCTHD_clickGiaBan().DonGia;
        var priceNew = 0;
        var tienGiam = 0;
        // neu gia cu = 0 => khong cho phep nhap giam gia
        if (priceOld === 0) {
            thisObj.val(0);
        }
        else {
            // format 000,000,000
            formatNumberObj(thisObj);
            var valThis = thisObj.val();
            if (valThis === '') {
                // neu clear giamgia ='';
                valThis = 0;
            }
            // clickVND: global variable
            if (clickVND) {
                // neu giam gia > gia cu
                if (formatNumberToFloat(valThis) > priceOld) {
                    thisObj.val(formatNumber3Digit(priceOld));
                    valThis = priceOld;
                }
                // round VD: 20.45 --> 20; 20.51 --> 21
                tienGiam = formatNumberToFloat(valThis);
            }
            else {
                // neu giam gia > 100 %
                if (formatNumberToFloat(valThis) > 100) {
                    thisObj.val(100);
                    valThis = 100;
                }
                tienGiam = priceOld * parseFloat(valThis) / 100;
            }
            priceNew = priceOld - tienGiam;
            objPrice.val(formatNumber3Digit(priceNew));
        }
    }
    // click input NewPrice_computer
    self.clickNewPrice_computer = function () {
        self.IsClickNewPrice_computer(true);
        $('#computer_newPrice').focus();
        $('#computer_newPrice').select();
    }
    // click input sale_computer
    self.clickSale_computer = function () {
        self.IsClickNewPrice_computer(false);
        $('#computer-gg').focus();
        $('#computer-gg').select();
    }
    // set value for input when click number
    self.clickNumber = function (number) {
        var cpt_newPrice = $('#computer_newPrice');
        var cpt_sale = $('#computer-gg');
        // get infor from CTHD old
        var priceOld = self.itemCTHD_clickGiaBan().DonGia;
        var priceNew = 0;
        var tienGiam = 0;
        var newVal = '';
        // if is focus newprice
        if (self.IsClickNewPrice_computer()) {
            // get value at input #computer_newPrice, after concat string (nối chuỗi)
            newVal = cpt_newPrice.val() + number;
            // convert price ti int
            var price = formatNumberToFloat(newVal);
            priceNew = price;
            if (priceNew < priceOld) {
                tienGiam = priceOld - priceNew;
            }
            // assign again sale
            if (clickVND) {
                cpt_sale.val(formatNumber3Digit(tienGiam));
            }
            else {
                cpt_sale.val(formatNumber3Digit(tienGiam / priceOld * 100));
            }
            cpt_newPrice.val(formatNumber3Digit(priceNew));
        }
        else {
            // neu gia cu = 0 => khong cho phep nhap giam gia
            if (priceOld === 0) {
                cpt_sale.val(0);
            }
            else {
                // tim den vi tri chua dau .
                var indexComma = cpt_sale.val().indexOf('.');
                if (indexComma > -1) {
                    // lay do dai chuoi - 1
                    var len = cpt_sale.val().length - 1;
                    // dem so ki tu sau dau .
                    // neu === 3 --> khong cong chuoi nua
                    if (len - indexComma < 3) {
                        // concat string (nối chuỗi)
                        newVal = cpt_sale.val() + number;
                        // 000,000 --> 000 000
                        newVal = newVal.toString().replace(/,/g, '');
                        // if last char of string ='.' --> not format to float
                        let lastChar = newVal[newVal.length - 1];
                        if (lastChar !== '.') {
                            newVal = formatNumberToFloat(newVal);
                        }
                        // assign again value for input
                        cpt_sale.val(formatNumber3Digit(newVal));
                    }
                }
                else {
                    // concat string (nối chuỗi)
                    newVal = cpt_sale.val() + number;
                    // 000,000 --> 000 000
                    newVal = newVal.toString().replace(/,/g, '');
                    // if last char of string ='.' --> not format to float
                    let lastChar = newVal[newVal.length - 1];
                    if (lastChar !== '.') {
                        newVal = formatNumberToFloat(newVal);
                    }
                    // assign again value for input
                    cpt_sale.val(formatNumber3Digit(newVal));
                }
                // neu clear giamgia ='';
                var valGiamGia = cpt_sale.val();
                if (valGiamGia === '') {
                    valGiamGia = 0;
                }
                // caculator again newPrice (same editSale_computer)
                // clickVND: global variable
                if (clickVND) {
                    // neu giam gia > gia cu
                    if (formatNumberToFloat(valGiamGia) > priceOld) {
                        cpt_sale.val(formatNumber3Digit(priceOld));
                    }
                    // round VD: 20.45 --> 20; 20.51 --> 21
                    tienGiam = formatNumberToFloat(valGiamGia);
                }
                else {
                    // neu giam gia > 100 %
                    if (formatNumberToFloat(valGiamGia) > 100) {
                        cpt_sale.val(100);
                    }
                    tienGiam = priceOld * parseFloat(valGiamGia) / 100;
                }
                priceNew = priceOld - tienGiam;
                cpt_newPrice.val(formatNumber3Digit(priceNew));
            }
        }
    }
    self.deleteNumber = function () {
        var cpt_newPrice = $('#computer_newPrice');
        var cpt_sale = $('#computer-gg');
        var newVal = '';
        var oldVal = '';
        var priceOld = self.itemCTHD_clickGiaBan().DonGia;
        var priceNew = 0;
        var tienGiam = 0;
        if (self.IsClickNewPrice_computer()) {
            // get old string
            oldVal = cpt_newPrice.val();
            // remove last char of old string
            newVal = oldVal.substr(0, oldVal.length - 1);
            // format again newValue
            newVal = newVal.replace(/,/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            // tinh lai giam gia (same edit price)
            var price = formatNumberToFloat(newVal);
            priceNew = price;
            if (priceNew < priceOld) {
                tienGiam = priceOld - priceNew;
            }
            // assign again sale
            if (clickVND) {
                cpt_sale.val(formatNumber3Digit(tienGiam));
            }
            else {
                cpt_sale.val(formatNumber3Digit(tienGiam / priceOld * 100));
            }
            cpt_newPrice.val(formatNumber3Digit(priceNew));
        }
        else {
            oldVal = cpt_sale.val();
            newVal = oldVal.substr(0, oldVal.length - 1);
            newVal = newVal.replace(/,/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            // if last char ='.' --> remove
            var lastChar = newVal[newVal.length - 1];
            if (lastChar === '.') {
                newVal = newVal.substr(0, newVal.length - 1);
            }
            cpt_sale.val(newVal);
            // caculator again newPrice, sale
            // neu clear giamgia ='';
            if (formatNumberToFloat(cpt_sale.val()) === 0) {
                cpt_sale.val(0);
            }
            // clickVND: global variable
            if (clickVND) {
                // neu giam gia > gia cu
                if (formatNumberToFloat(cpt_sale.val()) > priceOld) {
                    cpt_sale.val(formatNumber3Digit(priceOld));
                }
                // round VD: 20.45 --> 20; 20.51 --> 21
                tienGiam = formatNumberToFloat(cpt_sale.val());
            }
            else {
                // neu giam gia > 100 %
                if (formatNumberToFloat(cpt_sale.val()) > 100) {
                    cpt_sale.val(100);
                }
                tienGiam = priceOld * parseFloat(cpt_sale.val()) / 100;
            }
            priceNew = priceOld - tienGiam;
            cpt_newPrice.val(formatNumber3Digit(priceNew));
        }
    }
    self.clickVND_computer = function () {
        $('.toogle-report').addClass('active-re');
        var objSale = $('#computer-gg');
        var giamgia = objSale.val();
        var priceOld = self.itemCTHD_clickGiaBan().DonGia;
        var tienGiam = 0;
        // clickVND global variable
        if (clickVND) {
            tienGiam = formatNumberToFloat(giamgia);
        }
        else {
            tienGiam = parseFloat(giamgia) * priceOld / 100;
        }
        clickVND = true;
        objSale.val(formatNumber3Digit(tienGiam));
    }
    self.clickNoVND_computer = function () {
        $('.toogle-report').removeClass('active-re');
        var objSale = $('#computer-gg');
        var giamgia = objSale.val();
        var priceOld = self.itemCTHD_clickGiaBan().DonGia;
        // chi xu li neu priceOld > 0
        if (priceOld !== 0) {
            // clickVND: global variable (co nen su dung bien clickVND o day khong nhi ??)
            if (!clickVND) {
                objSale.val(formatNumber3Digit(giamgia));
            }
            else {
                var div = formatNumberToFloat(giamgia) / priceOld * 100;
                objSale.val(formatNumber3Digit(div));
            }
            clickVND = false;
        }
    }
    self.ChangeDVT_computer = function () {
        var objSale = $('#computer-gg');
        var priceOld = self.itemCTHD_clickGiaBan().DonGia;
        var giamgia = objSale.val();
        var tienGiam = 0;
        var isPercent = $('#divOnOffVND').hasClass('active-re');
        if (clickVND) {
            // truoc do la %
            if (isPercent) {
                tienGiam = parseFloat(giamgia) * priceOld / 100;
                objSale.val(formatNumber3Digit(tienGiam));
                clickVND = true;
            }
            else {
                // truoc do la VND
                let div = formatNumberToFloat(giamgia) / priceOld * 100;
                objSale.val(formatNumber3Digit(div));
                clickVND = false;
            }
        }
        else {
            // truoc do la %
            if (isPercent) {
                tienGiam = parseFloat(giamgia) * priceOld / 100;
                objSale.val(formatNumber3Digit(tienGiam));
                clickVND = true;
            }
            else {
                // truoc do la VND
                let div = formatNumberToFloat(giamgia) / priceOld * 100;
                objSale.val(formatNumber3Digit(div));
                clickVND = false;
            }
        }
    }
    self.agreeNewPrice_computer = function () {
        $('#computersquer').modal('hide');
        var cthdIsChose = self.itemCTHD_clickGiaBan();
        var newPrice = formatNumberToFloat($('#computer_newPrice').val());
        var newSale = $('#computer-gg').val();
        var tienGiam = 0;
        var ptGiam = 0;
        var dvtGiam = 'VND';
        var priceOld = cthdIsChose.DonGia;
        if (clickVND) {
            tienGiam = formatNumberToFloat(newSale);
            ptGiam = 0;
            dvtGiam = 'VND';
        }
        else {
            ptGiam = parseFloat(newSale);
            tienGiam = ptGiam * priceOld / 100;
            dvtGiam = '%';
        }
        var idRandomHD = cthdIsChose.IDRandomHD;
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0; i < lstCTHD.length; i++) {
                if (lstCTHD[i].IDRandomHD === idRandomHD && lstCTHD[i].ID_DonViQuiDoi === cthdIsChose.ID_DonViQuiDoi) {
                    // update giaban, giamgia, thanh tien, dvt
                    lstCTHD[i].GiaBan = newPrice;
                    lstCTHD[i].PTChietKhau = ptGiam;
                    lstCTHD[i].TienChietKhau = tienGiam;
                    lstCTHD[i].DVTinhGiam = dvtGiam;
                    lstCTHD[i].ThanhTien = lstCTHD[i].SoLuong * newPrice;
                    break;
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD))
        }
        if (cthdIsChose.MaHoaDon.indexOf('Trả') > -1) {
            UpdateHD_TraHang(idRandomHD);
            BindHD_CTHDafterSave();
        }
        else {
            // reset KM of HangHoa, but not bind CTHD
            ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(cthdIsChose.ID_DonViQuiDoi, cthdIsChose.ID_NhomHangHoa, idRandomHD);
            ResetKM_HoaDon(idRandomHD);
            UpdateCacheHDLe(idRandomHD, false);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            self.KM_KMApDung([]);
            UpdateKhuyenMai_CTHD(cthdIsChose.ID_DonViQuiDoi, idRandomHD);
            BindCTHD_byIDRandomHD(idRandomHD);
            BindHD_byIDRandom(idRandomHD);
        }
        $('#txtDaThanhToan').select();
    }

    // use at txt FromDate
    self.formatFromDate = function () {
        $('#txtFromDate, #txtFromDateDH').datetimepicker(
            {
                format: "d/m/Y",
                mask: true,
                timepicker: false,
            });
    }
    // use at txt ToDate
    self.formatToDate = function () {
        $('#txtToDate, #txtToDateDH').datetimepicker(
            {
                format: "d/m/Y",
                mask: true,
                timepicker: false,
                maxDate: new Date(),
            });
    }
    // use at txtNgaySinh, NgaySuDung, NgayHetHang (spa)
    self.formatDate = function () {
        var thisObj = event.currentTarget;
        $(thisObj).datetimepicker(
            {
                format: "d/m/Y",
                mask: true,
                timepicker: false,
            });
    }
    self.formatDateTime = function () {
        $('.datepicker_mask').datetimepicker(
            {
                format: "d/m/Y H:i",
                mask: true,
                timepicker: true,
                maxDate: new Date(),
            });
    }

    // Tich Diem
    function GetHT_TichDiem() {
        ajaxHelper('/api/DanhMuc/HT_API/' + 'GetHT_CauHinh_TichDiemChiTiet?idDonVi=' + id_DonVi, 'GET').done(function (obj) {
            if (obj.res === true) {
                let data = obj.data;
                self.ThietLap_TichDiem(data);
                WriteData_Dexie(db.HeThongTichDiem, data);
                // truong hop copyHD from GiaoDich.js --> update Diem cho HD
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();

                if (data.length > 0) {
                    vmThanhToanGara.ThietLap_TichDiem = {
                        DuocThietLap: true,
                        DiemThanhToan: data[0].DiemThanhToan,
                        TienThanhToan: data[0].TienThanhToan,
                        TyLeDoiDiem: data[0].TyLeDoiDiem,
                        TichDiemGiamGia: data[0].TichDiemGiamGia,
                        TichDiemHoaDonGiamGia: data[0].TichDiemHoaDonGiamGia,
                    }
                }
            }
        });
    }
    // update DiemGiaoDich, but reset DiemQuyDoi = 0, TTBangDiem = 0 (use edit/tang/giam so luong)
    function UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon() {
        if (self.ThietLap().TinhNangTichDiem) {
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                if (_maHoaDon === '') {
                    _maHoaDon = $('.bill-bxslide li.using font').text();
                }
                var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
                if (itemHD.length > 0) {
                    var sumCTHD_sale = 0;
                    var sumCTHD_notsale = 0;
                    var sumHH_KM = 0;
                    var sumHH_ofHDKM = 0;
                    var sum_cthd0tichdiem = 0;
                    var idNhomDTs = '';
                    var idRandomHD = itemHD[0].IDRandom;
                    // tinh tien hang khuyen mai cua HD (Khong tich diem cho hang khuyen mai)
                    var lstKM_HD = localStorage.getItem(lcProductKM_HoaDon);
                    if (lstKM_HD !== null) {
                        lstKM_HD = JSON.parse(lstKM_HD);
                        var arrProduct = $.grep(lstKM_HD, function (x) {
                            return x.IDRandomHD === idRandomHD;
                        });
                        for (let i = 0; i < arrProduct.length; i++) {
                            sumHH_ofHDKM += arrProduct[i].ThanhTien;
                        }
                    }
                    // if Khong tich diem cho Sp giam gia
                    if (self.ThietLap_TichDiem() !== null && self.ThietLap_TichDiem().length > 0) {

                        if (itemHD[0].LoaiHoaDon === 1 || itemHD[0].LoaiHoaDon === 19) {
                            var lstCTHD = localStorage.getItem(lcListCTHD);
                            if (lstCTHD !== null) {
                                lstCTHD = JSON.parse(lstCTHD);
                                // sum diem of product ducotichdiem =0
                                let cthd_notTichDiem = $.grep(lstCTHD, function (x) {
                                    return x.DuocTichDiem === 0 && x.IDRandomHD === idRandomHD;
                                });
                                for (let i = 0; i < cthd_notTichDiem.length; i++) {
                                    sum_cthd0tichdiem += cthd_notTichDiem[i].ThanhTien;
                                }
                                // only get product with duoctichdiem = 1 
                                lstCTHD = $.grep(lstCTHD, function (x) {
                                    return x.DuocTichDiem === 1;
                                });
                                if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                                    // tinh tong tien cac hang hoa co giam gia cua HD Mua
                                    for (let i = 0, il = lstCTHD.length; i < il; i++) {
                                        let itemCTHD = lstCTHD[i];
                                        if (itemCTHD.IDRandomHD === idRandomHD) {
                                            if (itemCTHD.TienChietKhau > 0) {
                                                sumCTHD_sale += itemCTHD.ThanhTien;
                                            }
                                            else {
                                                sumCTHD_notsale += itemCTHD.ThanhTien;
                                            }
                                            // sum DM_Lo (sale/not sale)
                                            for (let k = 1; k < itemCTHD.DM_LoHang.length; k++) {
                                                if (itemCTHD.DM_LoHang[k].TienChietKhau > 0) {
                                                    sumCTHD_sale += itemCTHD.DM_LoHang[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_notsale += itemCTHD.DM_LoHang[k].ThanhTien;
                                                }
                                            }
                                            for (let k = 0; k < itemCTHD.HangCungLoais.length; k++) {
                                                if (itemCTHD.HangCungLoais[k].TienChietKhau > 0) {
                                                    sumCTHD_sale += itemCTHD.HangCungLoais[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_notsale += itemCTHD.HangCungLoais[k].ThanhTien;
                                                }
                                            }
                                            // tinh tien hang khuyen mai cua hang hoa
                                            for (let j = 0; j < itemCTHD.HangHoa_KM.length; j++) {
                                                sumHH_KM += itemCTHD.HangHoa_KM[j].ThanhTien;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
                            if (lstCTHD_TH !== null) {
                                lstCTHD_TH = JSON.parse(lstCTHD_TH);
                                // sum diem of product ducotichdiem =0
                                let cthd_notTichDiem = $.grep(lstCTHD_TH, function (x) {
                                    return x.DuocTichDiem === 0 && x.IDRandomHD === idRandomHD;
                                });
                                for (let i = 0; i < cthd_notTichDiem.length; i++) {
                                    sum_cthd0tichdiem += cthd_notTichDiem[i].ThanhTien;
                                }
                                // only get product with duoctichdiem = 1
                                lstCTHD_TH = $.grep(lstCTHD_TH, function (x) {
                                    return x.DuocTichDiem === 1;
                                });

                                // tinh tong tien cac hang khong giam gia cua HD Doi Tra
                                if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                                    for (let i = 0; i < lstCTHD_TH.length; i++) {
                                        let itemCTHD_TH = lstCTHD_TH[i];
                                        if (itemCTHD_TH.IDRandomHD === idRandomHD) {
                                            if (itemCTHD_TH.TienChietKhau > 0) {
                                                sumCTHD_sale += itemCTHD_TH.ThanhTien;
                                            }
                                            else {
                                                sumCTHD_notsale += itemCTHD_TH.ThanhTien;
                                            }
                                            // sum DM_Lo (sale/not sale)
                                            for (let k = 1; k < itemCTHD_TH.DM_LoHang.length; k++) {
                                                if (itemCTHD_TH.DM_LoHang[k].TienChietKhau > 0) {
                                                    sumCTHD_sale += itemCTHD_TH.DM_LoHang[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_notsale += itemCTHD_TH.DM_LoHang[k].ThanhTien;
                                                }
                                            }
                                            for (let k = 0; k < itemCTHD_TH.HangCungLoais.length; k++) {
                                                if (itemCTHD_TH.HangCungLoais[k].TienChietKhau > 0) {
                                                    sumCTHD_sale += itemCTHD_TH.HangCungLoais[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_notsale += itemCTHD_TH.HangCungLoais[k].ThanhTien;
                                                }
                                            }
                                            // tinh tien hang khuyen mai cua hang hoa
                                            for (let j = 0; j < itemCTHD_TH.HangHoa_KM.length; j++) {
                                                sumHH_KM += itemCTHD_TH.HangHoa_KM[j].ThanhTien;
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        // diem GD cua HH co giam gia
                        var diemGD_ofHHsale = Math.floor(sumCTHD_sale / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        // diem GD cua all Hang Khuyen Mai (HH + HD)
                        var diemGD_ofHHKM = Math.floor((sumHH_ofHDKM + sumHH_KM) / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        let diemGD_cthd0tichdiem = Math.floor(sum_cthd0tichdiem / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        // diem GD cua HoaDon
                        var diemGD_ofHD = Math.floor((itemHD[0].TongTienHang - itemHD[0].TongGiamGiaKM_HD) / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        // diem GD sau khi tru diem GD khuyen mai
                        var diemGiaoDich = diemGD_ofHD - diemGD_ofHHKM - diemGD_cthd0tichdiem;
                        diemGiaoDich = diemGiaoDich > 0 ? diemGiaoDich : 0;
                        if (self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0) {
                            // get diem hien tai cua KH
                            if (self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === null || self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === undefined) {
                                idNhomDTs = '';
                            }
                            else {
                                idNhomDTs = self.ChiTietDoiTuong()[0].ID_NhomDoiTuong.toLowerCase();
                            }

                            // Tich Diem for all KH
                            if (self.ThietLap_TichDiem()[0].ToanBoKhachHang) {
                                // if Khong tich diem cho Sp giam gia
                                if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                                    // if Khong tich diem cho HD Giam Gia
                                    if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                                        // check xem HD co dang duoc giam gia khong
                                        if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                            // neu co Giam Gia --> khong update gi ca
                                            for (let i = 0; i < lstHD.length; i++) {
                                                if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                    lstHD[i].DiemQuyDoi = 0;
                                                    lstHD[i].TTBangDiem = 0;
                                                    lstHD[i].DiemGiaoDich = 0;
                                                    break;
                                                }
                                            }
                                        }
                                        else {
                                            for (let i = 0; i < lstHD.length; i++) {
                                                if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                    lstHD[i].DiemQuyDoi = 0;
                                                    lstHD[i].TTBangDiem = 0;
                                                    // diemGD = diem cua HH khong co GG (OK)
                                                    lstHD[i].DiemGiaoDich = Math.floor(sumCTHD_notsale / self.ThietLap_TichDiem()[0].TyLeDoiDiem) + lstHD[i].DiemCong;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    else {
                                        // tich diem cho ca HD giam gia --> update DiemGD for HH khong giam gia
                                        for (let i = 0; i < lstHD.length; i++) {
                                            if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                lstHD[i].DiemQuyDoi = 0;
                                                lstHD[i].TTBangDiem = 0;
                                                // diemGD = diemGD of HD - diemGD of HH co giam gia (OK)
                                                let diemGD = diemGiaoDich - diemGD_ofHHsale + lstHD[i].DiemCong;
                                                lstHD[i].DiemGiaoDich = diemGD > 0 ? diemGD : 0;
                                                break;
                                            }
                                        }
                                    }
                                }
                                else {
                                    // tich diem cho all SP
                                    // Khong Tich Diem cho HD Giam Gia
                                    if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                                        if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                            // neu co Giam Gia --> khong update gi ca
                                            for (let i = 0; i < lstHD.length; i++) {
                                                if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                    lstHD[i].DiemQuyDoi = 0;
                                                    lstHD[i].TTBangDiem = 0;
                                                    lstHD[i].DiemGiaoDich = 0;
                                                    break;
                                                }
                                            }
                                        }
                                        else {
                                            // HD khong giam gia: update DiemGiaoDich for all HangHoa
                                            for (let i = 0; i < lstHD.length; i++) {
                                                if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                    lstHD[i].DiemQuyDoi = 0;
                                                    lstHD[i].TTBangDiem = 0;
                                                    // khong can check loaiHD = 6
                                                    lstHD[i].DiemGiaoDich = diemGiaoDich + lstHD[i].DiemCong;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    else {
                                        // Tich Diem HD Giam Gia = false
                                        for (let i = 0; i < lstHD.length; i++) {
                                            if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                lstHD[i].DiemQuyDoi = 0;
                                                lstHD[i].TTBangDiem = 0;
                                                lstHD[i].DiemGiaoDich = diemGiaoDich + lstHD[i].DiemCong;
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                // Tich Diem Theo Nhom KH
                                for (let j = 0; j < self.ThietLap_TichDiem().length; j++) {
                                    // if KH thuoc nhom duoc tich diem
                                    if (idNhomDTs.indexOf(self.ThietLap_TichDiem()[j].ID_NhomDoiTuong) > -1) {
                                        // if Khong tich diem cho Sp giam gia
                                        if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                                            // if Khong tich diem cho HD Giam Gia
                                            if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                                                // check xem HD co dang duoc giam gia khong
                                                if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                    // neu co Giam Gia --> khong update gi ca
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemQuyDoi = 0;
                                                            lstHD[i].TTBangDiem = 0;
                                                            lstHD[i].DiemGiaoDich = 0;
                                                            break;
                                                        }
                                                    }
                                                }
                                                else {
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemQuyDoi = 0;
                                                            lstHD[i].TTBangDiem = 0;
                                                            lstHD[i].DiemGiaoDich = Math.floor(sumCTHD_notsale / self.ThietLap_TichDiem()[0].TyLeDoiDiem) + lstHD[i].DiemCong;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                            else {
                                                // tich diem cho ca HD giam gia --> update DiemGD for HH khong giam gia
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemQuyDoi = 0;
                                                        lstHD[i].TTBangDiem = 0;
                                                        let diemGD = diemGiaoDich - diemGD_ofHHsale + lstHD[i].DiemCong;
                                                        lstHD[i].DiemGiaoDich = diemGD > 0 ? diemGD : 0;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        else {
                                            // tich diem cho all SP
                                            // Khong Tich Diem cho HD Giam Gia
                                            if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                                                if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                    // neu co Giam Gia --> khong update gi ca
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemQuyDoi = 0;
                                                            lstHD[i].TTBangDiem = 0;
                                                            lstHD[i].DiemGiaoDich = 0;
                                                            break;
                                                        }
                                                    }
                                                }
                                                else {
                                                    // HD khong giam gia: update DiemGiaoDich for all HangHoa
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemQuyDoi = 0;
                                                            lstHD[i].TTBangDiem = 0;
                                                            lstHD[i].DiemGiaoDich = diemGiaoDich + lstHD[i].DiemCong;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                            else {
                                                // Tich Diem HD Giam Gia = false
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemQuyDoi = 0;
                                                        lstHD[i].TTBangDiem = 0;
                                                        lstHD[i].DiemGiaoDich = diemGiaoDich + lstHD[i].DiemCong;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        break; // esc if Check ThietLap_TichDiem().ID_NhomDoiTuong === idNhomDT
                                    }
                                }
                            }
                        }
                        else {
                            // khach le --> khong tich diem
                            for (let j = 0; j < lstHD.length; j++) {
                                if (lstHD[j].IDRandom === idRandomHD) {
                                    lstHD[j].TTBangDiem = 0;
                                    lstHD[j].DiemQuyDoi = 0;
                                    lstHD[j].DiemGiaoDich = 0;
                                    lstHD[j].DiemKhuyenMai = 0;
                                    break;
                                }
                            }
                        }
                        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                    }
                }
            }
        }
        $('#lblTienMat').text('(Tiền mặt)');
    }
    // use after agreePay
    function UpdateDiemGiaoDich_forHoaDon() {
        var hdOp = [];
        if (self.ThietLap().TinhNangTichDiem) {
            var lstHD = localStorage.getItem(lcListHD);
            if (lstHD !== null) {
                lstHD = JSON.parse(lstHD);
                if (_maHoaDon === '') {
                    _maHoaDon = $('.bill-bxslide li.using font').text();
                }
                var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
                if (itemHD.length > 0) {
                    var sumCTHD_sale = 0;
                    var sumCTHD_notsale = 0;
                    var sumHH_KM = 0;
                    var sumHH_ofHDKM = 0;
                    let sum_cthd0tichdiem = 0;
                    var idNhomDTs = '';
                    var idRandomHD = itemHD[0].IDRandom;
                    // tinh tien hang khuyen mai cua HD (Khong tich diem cho hang khuyen mai)
                    var lstKM_HD = localStorage.getItem(lcProductKM_HoaDon);
                    if (lstKM_HD !== null) {
                        lstKM_HD = JSON.parse(lstKM_HD);
                        let arrProduct = $.grep(lstKM_HD, function (x) {
                            return x.IDRandomHD === idRandomHD;
                        });
                        for (let i = 0; i < arrProduct.length; i++) {
                            sumHH_ofHDKM += arrProduct[i].ThanhTien;
                        }
                    }

                    if (self.ThietLap_TichDiem() !== null && self.ThietLap_TichDiem().length > 0) {
                        if (itemHD[0].LoaiHoaDon === 1 || itemHD[0].LoaiHoaDon === 19) {
                            var lstCTHD = localStorage.getItem(lcListCTHD);
                            if (lstCTHD !== null) {
                                lstCTHD = JSON.parse(lstCTHD);

                                // sum diem of product ducotichdiem =0
                                let cthd_notTichDiem = $.grep(lstCTHD, function (x) {
                                    return x.DuocTichDiem === 0;
                                });
                                for (let i = 0; i < cthd_notTichDiem.length; i++) {
                                    sum_cthd0tichdiem += cthd_notTichDiem[i].ThanhTien;
                                }

                                // only get product with duoctichdiem = 1
                                lstCTHD = $.grep(lstCTHD, function (x) {
                                    return x.DuocTichDiem === 1;
                                });
                                // if Khong tich diem cho Sp giam gia
                                if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                                    // tinh tong tien cac hang khong giam gia cua HD Mua
                                    for (let i = 0; i < lstCTHD.length; i++) {
                                        var itemCTHD = lstCTHD[i];
                                        if (itemCTHD.IDRandomHD === idRandomHD) {
                                            if (itemCTHD.TienChietKhau === 0) {
                                                sumCTHD_notsale += itemCTHD.ThanhTien;
                                            }
                                            else {
                                                sumCTHD_sale += itemCTHD.ThanhTien;
                                            }
                                            for (let k = 1; k < itemCTHD.DM_LoHang.length; k++) {
                                                if (itemCTHD.DM_LoHang[k].TienChietKhau === 0) {
                                                    sumCTHD_notsale += itemCTHD.DM_LoHang[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_sale += itemCTHD.DM_LoHang[k].ThanhTien;
                                                }
                                            }
                                            for (let k = 0; k < itemCTHD.HangCungLoais.length; k++) {
                                                if (itemCTHD.HangCungLoais[k].TienChietKhau === 0) {
                                                    sumCTHD_notsale += itemCTHD.HangCungLoais[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_sale += itemCTHD.HangCungLoais[k].ThanhTien;
                                                }
                                            }
                                            // tinh tien hang khuyen mai cua hang hoa
                                            for (let j = 0; j < itemCTHD.HangHoa_KM.length; j++) {
                                                sumHH_KM += itemCTHD.HangHoa_KM[j].ThanhTien;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            var lstCTHD_TH = localStorage.getItem(lcListCTHD_DoiTra);
                            if (lstCTHD_TH !== null) {
                                lstCTHD_TH = JSON.parse(lstCTHD_TH);
                                // sum diem of product ducotichdiem =0
                                let cthd_notTichDiem = $.grep(lstCTHD_TH, function (x) {
                                    return x.DuocTichDiem === 0;
                                });
                                for (let i = 0; i < cthd_notTichDiem.length; i++) {
                                    sum_cthd0tichdiem += cthd_notTichDiem[i].ThanhTien;
                                }
                                // only get product with duoctichdiem = 1
                                lstCTHD_TH = $.grep(lstCTHD_TH, function (x) {
                                    return x.DuocTichDiem === 1;
                                });

                                if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                                    // tinh tong tien cac hang khong giam gia cua HD Doi Tra
                                    for (let i = 0; i < lstCTHD_TH.length; i++) {
                                        var itemCTHD_TH = lstCTHD_TH[i];
                                        if (itemCTHD_TH.IDRandomHD === idRandomHD) {
                                            if (itemCTHD_TH.TienChietKhau === 0) {
                                                sumCTHD_notsale += itemCTHD_TH.ThanhTien;
                                            }
                                            else {
                                                sumCTHD_sale += itemCTHD_TH.ThanhTien;
                                            }
                                            // sum DM_Lo, HangCungLoai
                                            for (let k = 1; k < itemCTHD_TH.DM_LoHang.length; k++) {
                                                if (itemCTHD_TH.DM_LoHang[k].TienChietKhau === 0) {
                                                    sumCTHD_notsale += itemCTHD_TH.DM_LoHang[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_sale += itemCTHD_TH.DM_LoHang[k].ThanhTien;
                                                }
                                            }
                                            for (let k = 0; k < itemCTHD_TH.HangCungLoais.length; k++) {
                                                if (itemCTHD_TH.HangCungLoais[k].TienChietKhau === 0) {
                                                    sumCTHD_notsale += itemCTHD_TH.HangCungLoais[k].ThanhTien;
                                                }
                                                else {
                                                    sumCTHD_sale += itemCTHD_TH.HangCungLoais[k].ThanhTien;
                                                }
                                            }
                                            // tinh tien hang khuyen mai cua hang hoa
                                            for (let j = 0; j < itemCTHD_TH.HangHoa_KM.length; j++) {
                                                sumHH_KM += itemCTHD_TH.HangHoa_KM[j].ThanhTien;
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        // diem GD cua HH co giam gia
                        var diemGD_ofHHsale = Math.floor(sumCTHD_sale / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        // diem GD cua all Hang Khuyen Mai (HH + HD)
                        var diemGD_ofHHKM = Math.floor((sumHH_ofHDKM + sumHH_KM) / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        let diemGD_cthd0tichdiem = Math.floor(sum_cthd0tichdiem / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        // diem GD cua HoaDon
                        var diemGD_ofHD = Math.floor((formatNumberToFloat(itemHD[0].TongTienHang) - formatNumberToFloat(itemHD[0].TongGiamGiaKM_HD)) / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                        // diem GD sau khi tru diem GD khuyen mai
                        var diemGiaoDich = diemGD_ofHD - diemGD_ofHHKM - diemGD_cthd0tichdiem;
                        diemGiaoDich = diemGiaoDich > 0 ? diemGiaoDich : 0;
                        if (self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0) {
                            if (self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === null || self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === undefined) {
                                idNhomDTs = '';
                            }
                            else {
                                idNhomDTs = self.ChiTietDoiTuong()[0].ID_NhomDoiTuong.toLowerCase();
                            }
                            // Tich Diem for all KH
                            if (self.ThietLap_TichDiem()[0].ToanBoKhachHang) {
                                // if Khong tich diem cho Sp giam gia
                                if (self.ThietLap_TichDiem()[0].TichDiemGiamGia) {
                                    // if Khong tich diem cho HD thanh toan = diem
                                    if (self.ThietLap_TichDiem()[0].TichDiemHoaDonDiemThuong) {
                                        // if Khong tich diem cho HD Giam Gia
                                        if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                                            // check xem HD co dang duoc giam gia khong
                                            if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                // neu co Giam Gia --> khong update gi ca
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemGiaoDich = 0;
                                                        break;
                                                    }
                                                }
                                            }
                                            else {
                                                // check xem co TT = diem Khong
                                                // neu HD khong TT = diem --> update DiemGiaoDich for HangHoa khong giam gia
                                                if (itemHD[0].DiemQuyDoi === 0) {
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemGiaoDich = Math.floor(sumCTHD_notsale / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                                                            break;
                                                        }
                                                    }
                                                }
                                                else {
                                                    // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemGiaoDich = 0;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else {
                                            // check xem co HD TT = diem Khong
                                            // neu HD khong TT = diem --> update DiemGiaoDich for HangHoa khong giam gia
                                            if (itemHD[0].DiemQuyDoi === 0) {
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        // diemGD = diemGD of HD - diemGD of HH co giam gia (OK)
                                                        let diemGD = diemGiaoDich - diemGD_ofHHsale;
                                                        lstHD[i].DiemGiaoDich = diemGD > 0 ? diemGD : 0;
                                                        break;
                                                    }
                                                }
                                            }
                                            else {
                                                // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemGiaoDich = 0;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    else {
                                        if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                                            // check Giam Gia in HD
                                            if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                // neu co Giam Gia --> khong update gi ca
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemGiaoDich = 0;
                                                        break;
                                                    }
                                                }
                                            }
                                            else {
                                                //  neu khong co GG --> update DiemQuiDoi +  SP khong giam gia
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemGiaoDich = Math.floor(sumCTHD_notsale / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        else {
                                            // Giong truong hop Khong co GG in HD
                                            // TichDiem cho HD TT = diem + SP khong giam gia (Van Tich diem cho HD tt = diem, nhung chi tich diem cho Sp giam gia)
                                            for (let i = 0; i < lstHD.length; i++) {
                                                if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                    // diemGD = diemGD of HD - diemGD of HH co giam gia (OK)
                                                    let diemGD = diemGiaoDich - diemGD_ofHHsale;
                                                    lstHD[i].DiemGiaoDich = diemGD > 0 ? diemGD : 0;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }
                                else {
                                    // tich diem cho all SP
                                    if (self.ThietLap_TichDiem()[0].TichDiemHoaDonDiemThuong) {
                                        // Khong Tich Diem cho HD Giam Gia
                                        if (self.ThietLap_TichDiem()[0].TichDiemHoaDonGiamGia) {
                                            if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                // neu co Giam Gia --> khong update gi ca
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemGiaoDich = 0;
                                                        break;
                                                    }
                                                }
                                            }
                                            else {
                                                // check xem co TT = diem Khong
                                                // neu HD khong TT = diem --> update DiemGiaoDich for HangHoa khong giam gia
                                                if (itemHD[0].DiemQuyDoi === 0) {
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemGiaoDich = diemGiaoDich;
                                                            break;
                                                        }
                                                    }
                                                }
                                                else {
                                                    // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                    for (let i = 0; i < lstHD.length; i++) {
                                                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                            lstHD[i].DiemGiaoDich = 0;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else {
                                            // Tich Diem HD Giam Gia = false
                                            if (itemHD[0].DiemQuyDoi === 0) {
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemGiaoDich = diemGiaoDich;
                                                        break;
                                                    }
                                                }
                                            }
                                            else {
                                                // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                for (let i = 0; i < lstHD.length; i++) {
                                                    if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                        lstHD[i].DiemGiaoDich = 0;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    else {
                                        // tich diem for all SP + HD tt = diem
                                        for (let i = 0; i < lstHD.length; i++) {
                                            if (lstHD[i].IDRandom === idRandomHD && lstHD[i].LoaiHoaDon !== 3) {
                                                lstHD[i].DiemGiaoDich = diemGiaoDich;
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                // Tich Diem Theo Nhom KH
                                for (let i = 0; i < self.ThietLap_TichDiem().length; i++) {
                                    // if KH thuoc nhom duoc tich diem
                                    if (idNhomDTs.indexOf(self.ThietLap_TichDiem()[i].ID_NhomDoiTuong) > -1) {
                                        // if Khong tich diem cho Sp giam gia
                                        if (self.ThietLap_TichDiem()[i].TichDiemGiamGia) {
                                            // if Khong tich diem cho HD thanh toan = diem
                                            if (self.ThietLap_TichDiem()[i].TichDiemHoaDonDiemThuong) {
                                                // if Khong tich diem cho HD Giam Gia
                                                if (self.ThietLap_TichDiem()[i].TichDiemHoaDonGiamGia) {
                                                    // check xem HD co dang duoc giam gia khong
                                                    if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                        // neu co Giam Gia --> khong update gi ca
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                lstHD[j].DiemGiaoDich = 0;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    else {
                                                        // check xem co TT = diem Khong
                                                        // neu HD khong TT = diem --> update DiemGiaoDich for HangHoa khong giam gia
                                                        if (itemHD[0].DiemQuyDoi === 0) {
                                                            for (let j = 0; j < lstHD.length; j++) {
                                                                if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                    lstHD[j].DiemGiaoDich = Math.round(sumCTHD_notsale / self.ThietLap_TichDiem()[i].TyLeDoiDiem);
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        else {
                                                            // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                            for (let j = 0; j < lstHD.length; j++) {
                                                                if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                    lstHD[j].DiemGiaoDich = 0;
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                else {
                                                    // check xem co HD TT = diem Khong
                                                    // neu HD khong TT = diem --> update DiemGiaoDich for HangHoa khong giam gia
                                                    if (itemHD[0].DiemQuyDoi === 0) {
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                let diemGD = diemGiaoDich - diemGD_ofHHsale;
                                                                lstHD[i].DiemGiaoDich = diemGD > 0 ? diemGD : 0;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    else {
                                                        // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                lstHD[j].DiemGiaoDich = 0;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else {
                                                if (self.ThietLap_TichDiem()[i].TichDiemHoaDonGiamGia) {
                                                    // check Giam Gia in HD
                                                    if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                        // neu co Giam Gia --> khong update gi ca
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                lstHD[j].DiemGiaoDich = 0;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    else {
                                                        //  neu khong co GG --> update DiemQuiDoi +  SP khong giam gia
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                lstHD[j].DiemGiaoDich = Math.round(sumCTHD_notsale / self.ThietLap_TichDiem()[i].TyLeDoiDiem);
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                                else {
                                                    // Giong truong hop Khong co GG in HD
                                                    // TichDiem cho HD TT = diem + SP khong giam gia (Van Tich diem cho HD tt = diem, nhung chi tich diem cho Sp giam gia)
                                                    for (let j = 0; j < lstHD.length; j++) {
                                                        if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                            let diemGD = diemGiaoDich - diemGD_ofHHsale;
                                                            lstHD[j].DiemGiaoDich = diemGD > 0 ? diemGD : 0;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else {
                                            // tich diem cho all SP
                                            if (self.ThietLap_TichDiem()[i].TichDiemHoaDonDiemThuong) {
                                                // Khong Tich Diem cho HD Giam Gia
                                                if (self.ThietLap_TichDiem()[i].TichDiemHoaDonGiamGia) {
                                                    if (itemHD[0].TongGiamGiaKM_HD > 0) {
                                                        // neu co Giam Gia --> khong update gi ca
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                lstHD[j].DiemGiaoDich = 0;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    else {
                                                        // check xem co TT = diem Khong
                                                        // neu HD khong TT = diem --> update DiemGiaoDich for HangHoa khong giam gia
                                                        if (itemHD[0].DiemQuyDoi === 0) {
                                                            for (let j = 0; j < lstHD.length; j++) {
                                                                if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                    lstHD[j].DiemGiaoDich = diemGiaoDich;
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        else {
                                                            // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                            for (let j = 0; j < lstHD.length; j++) {
                                                                if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                    lstHD[j].DiemGiaoDich = 0;
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                else {
                                                    // Tich Diem HD Giam Gia = false
                                                    if (itemHD[0].DiemQuyDoi === 0) {
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                lstHD[j].DiemGiaoDich = diemGiaoDich;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    else {
                                                        // neu HD tt = diem --> update DiemQuyDoi, not update DiemGiaoDich
                                                        for (let j = 0; j < lstHD.length; j++) {
                                                            if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                                lstHD[j].DiemGiaoDich = 0;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else {
                                                // tich diem for all SP + HD tt = diem
                                                for (let j = 0; j < lstHD.length; j++) {
                                                    if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                                        lstHD[j].DiemGiaoDich = diemGiaoDich;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        break; // esc if Check ThietLap_TichDiem().ID_NhomDoiTuong === idNhomDTs
                                    }
                                }
                            }
                        }
                        else {
                            // khach le --> khong tich diem
                            for (let j = 0; j < lstHD.length; j++) {
                                if (lstHD[j].IDRandom === idRandomHD && lstHD[j].LoaiHoaDon !== 3) {
                                    lstHD[j].DiemGiaoDich = 0;
                                    break;
                                }
                            }
                        }
                        hdOp = $.grep(lstHD, function (x) { // used to TamLuu sau do ThanhToan --> get DiemGiaoDich
                            return x.IDRandom === idRandomHD;
                        })
                        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                    }
                }
            }
        }
        $('#lblTienMat').text('(Tiền mặt)');
        return hdOp;
    }
    // use if Khuyen Mai = 23,14 (KM cong diem)
    function UpdateDiemCong_KMCongDiem(idRandomHD, diemCong, isKMHoaDon) {
        // get diemkhuyenmai in cthd
        var diemHangHoa = 0;
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandomHD) {
                    if (isNaN(cthd[i].DiemKhuyenMai) === false) {
                        diemHangHoa += cthd[i].DiemKhuyenMai;
                    }
                }
            }
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRandomHD) {
                    if (isKMHoaDon) {
                        lstHD[i].DiemKhuyenMai = diemCong;
                        lstHD[i].DiemCong = diemCong + diemHangHoa;
                    }
                    else {
                        lstHD[i].DiemCong = diemHangHoa;
                    }
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }
    function UpdateDiemKhuyenMai_CTHD(diemCong) {
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === self.CTHD_ChosingKM().IDRandom) {
                    cthd[i].DiemKhuyenMai = diemCong;
                    break;
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
        }
    }
    function Enable_DisableNgayLapHD() {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var loaiHoaDon = 1;
        var isHDoffline = false;
        var itemHD = [];
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        }
        if (itemHD.length > 0) {
            loaiHoaDon = itemHD[0].LoaiHoaDon;
            isHDoffline = itemHD[0].StatusOffline;
        }
        else {
            loaiHoaDon = GetLoaiHoaDon_ofHDopening();
        }
        if (isHDoffline === false) {
            // check role change NVien
            var maQuyen = '';
            switch (loaiHoaDon) {
                case 1:
                    maQuyen = 'HoaDon_ThayDoiThoiGian';
                    break;
                case 2:
                    maQuyen = 'HoaDonBaoHanh_ThayDoiThoiGian';
                    break;
                case 3:
                    maQuyen = 'DatHang_ThayDoiThoiGian';
                    break;
                case 6:
                    maQuyen = 'TraHang_ThayDoiThoiGian';
                    break;
                case 19:
                    maQuyen = 'GoiDichVu_ThayDoiThoiGian';
                    break;
            }
            var itemRole = $.grep(self.Quyen_NguoiDung(), function (x) {
                return x.MaQuyen === maQuyen;
            });
            var roleChangeNgayLapHD = itemRole.length > 0;
            //if (roleChangeNgayLapHD) {
            //    $('#datetime').removeAttr('disabled');
            //}
            //else {
            //    $('#datetime').attr('disabled', 'disabled');
            //}
            if (roleChangeNgayLapHD) {
                $('#datepicker, #timepicker').removeAttr('disabled');
            }
            else {
                $('#datepicker, #timepicker').attr('disabled', 'disabled');
            }
        }
    }
    $('.datepicker_maskby').datetimepicker(
        {
            format: "d/m/Y",
            //value: moment(time).format('DD/MM/YYYY'),
            mask: true,
            timepicker: false,
        });
    function WriteData_Dexie(tbl, data) {
        //db.transaction("rw", tbl, () => {
        //    tbl.bulkPut(data);
        //}).catch(function (e) {
        //    console.log(tbl.name, e);
        //});
    }

    function CheckRole() {
        self.RoleChange_ChietKhauNV(CheckQuyenExist('HoaHong_ThayDoi'));
        self.RoleView_ChietKhauNV(CheckQuyenExist('BanHang_HoaDongDichVu_XemChietKhau'));
        self.roleUpdateImg(CheckQuyenExist('HoaDon_CapNhatAnh'));
        self.roleHoaDonHoTro_Insert(CheckQuyenExist('HoaDonHoTro_ThemMoi'));

        vmHoaHongDV.role.XemChietKhau = CheckQuyenExist('BanHang_HoaDongDichVu_XemChietKhau');
        vmHoaHongDV.role.ThayDoiChietKhau = CheckQuyenExist('HoaHong_ThayDoi');
        vmThemMoiKhach.role.KhachHang.ThemMoi = CheckQuyenExist('KhachHang_ThemMoi');
        vmThemMoiKhach.role.KhachHang.CapNhat = CheckQuyenExist('KhachHang_CapNhat');
        vmThemMoiKhach.role.NhomKhach.ThemMoi = CheckQuyenExist('NhomKhachHang_ThemMoi');
        vmThemMoiKhach.role.NguonKhach.ThemMoi = CheckQuyenExist('NguonKhach_ThemMoi');
        vmThanhToanGara.RoleChange_ChietKhauNV = vmHoaHongDV.role.ThayDoiChietKhau;
        vmUpAnhHoaDon.roleUpdateImg = self.roleUpdateImg();
        vmNKGoiBaoDuong.roleUpdateImg = self.roleUpdateImg();
        vmNKGoiBaoDuong.roleGoiDichVu_KhongChoPhepSuDung = CheckQuyenExist('GoiDichVu_KhongChoPhepSuDung');
        vmApDungNhomHoTro.roleChangeNgayLapHD = CheckQuyenExist('HoaDon_ThayDoiThoiGian');

        self.roleCustomer_Insert(CheckQuyenExist('KhachHang_ThemMoi'));
        self.roleCustomer_ThanhToanNo(CheckQuyenExist('KhachHang_ThanhToanNo'));

        vmThanhToan.role.PhieuThu.Insert = CheckQuyenExist('SoQuy_ThemMoi');
        vmThanhToan.role.PhieuThu.Update = CheckQuyenExist('SoQuy_CapNhat');
        vmThanhToan.role.PhieuThu.Delete = CheckQuyenExist('SoQuy_Xoa');
        vmThanhToan.role.PhieuThu.ChangeNgayLap = CheckQuyenExist('SoQuy_ThayDoiThoiGian');
        vmThanhToan.role.PhieuThu.ChangeNVLap = CheckQuyenExist('SoQuy_ThayDoiThoiNVLapPhieu');

        self.RoleInsert_Invoice(CheckQuyenExist('HoaDon_ThemMoi'));
        self.RoleInsert_Order(CheckQuyenExist('DatHang_ThemMoi'));
        self.RoleInsert_Service(CheckQuyenExist('GoiDichVu_ThemMoi'));
        self.RoleXuly_Order(CheckQuyenExist('DatHang_TaoHoaDon'));
        self.RoleInsert_Return(CheckQuyenExist('TraHang_ThemMoi'));
        self.rolePrintDraf_Invoice(CheckQuyenExist('HoaDon_InNhap'));

        self.roleChangePriceProduct_Invoice(CheckQuyenExist('HoaDon_ThayDoiGia'));
        self.roleChangeSale_Invoice(CheckQuyenExist('HoaDon_GiamGia'));
        self.roleChangePriceProduct_Order(CheckQuyenExist('DatHang_ThayDoiGia'));
        self.roleChangeSale_Order(CheckQuyenExist('DatHang_GiamGia'));
        self.roleChangePriceProduct_Return(CheckQuyenExist('TraHang_ThayDoiGia'));
        self.roleChangeSale_Return(CheckQuyenExist('TraHang_GiamGia'));
        self.roleChangePriceProduct_ServicePackage(CheckQuyenExist('GoiDichVu_ThayDoiGia'));
        self.roleChangeSale_ServicePackage(CheckQuyenExist('GoiDichVu_GiamGia'));
    }

    function Check_QuyenXemGiaVon() {
        ajaxHelper('/api/DanhMuc/ReportAPI/' + "getQuyenXemGiaVon?ID_NguoiDung=" + id_User + "&MaQuyen=" + "HangHoa_XemGiaVon", "GET")
            .done(function (data) {
                if (data !== '') {
                    vmThanhPhanDinhLuong.roleXemGiaVon = true;
                }
                else {
                    vmThanhPhanDinhLuong.roleXemGiaVon = false;
                }
            });
    }

    // end TrinhPV
    var roleLoadEnd = false;
    function GetHT_Quyen_ByNguoiDung() {
        ajaxHelper('/api/DanhMuc/HT_NguoiDungAPI/' + "GetListQuyen_OfNguoiDung", 'GET').done(function (data) {
            if (data !== "" && data.length > 0) {
                self.Quyen_NguoiDung(data);

                Check_QuyenXemGiaVon();
                CheckRole();

                DeleteHD_CTHD_ifNotRole();
                roleLoadEnd = true;

                // use when HangHoa load finished, but Quyen_NguoiDung has not finish --> update TonKho,Warning CTHD
                if (productLoadEnd) {
                    console.log('hh > 0')
                    if (IsShop_SpaSalon()) {
                        self.ClickTab_PhongBan(false, true);
                    }
                    else {
                        getListHoaDonLe();
                        ActiveTab_SoDoPhong(false);
                    }
                    //UpdateTonKhoCTHD_FirstLoad(lcListCTHD);
                    //UpdateTonKhoCTHD_FirstLoad(lcListCTHD_DoiTra);
                    Update_GiaVonCTHD_FirstLoad(lcListCTHD);
                    Update_GiaVonCTHD_FirstLoad(lcListCTHD_DoiTra);
                }
                WriteData_Dexie(db.Quyen_NguoiDung, data);
            }
            else {
                ShowMessage_Danger('Không có quyền ');
            }
        })
    }

    function DeleteHD_CTHD_ifNotRole() {
        var hd = localStorage.getItem(lcListHD);
        if (hd !== null) {
            hd = JSON.parse(hd);

            // remove hd
            if (!self.RoleInsert_Invoice()) {
                hd = $.grep(hd, function (x) {
                    return x.NguoiTao !== userLogin || (x.NguoiTao === userLogin && x.LoaiHoaDon !== 1);
                });
            }
            // remove dathang
            if (!self.RoleInsert_Order()) {
                hd = $.grep(hd, function (x) {
                    return x.NguoiTao !== userLogin || (x.NguoiTao === userLogin && x.LoaiHoaDon !== 3);
                });
            }

            // remove goidv
            if (!self.RoleInsert_Service()) {
                hd = $.grep(hd, function (x) {
                    return x.NguoiTao !== userLogin || (x.NguoiTao === userLogin && x.LoaiHoaDon !== 19);
                });
            }
            // remove trahang
            if (!self.RoleInsert_Return()) {
                hd = $.grep(hd, function (x) {
                    return x.NguoiTao !== userLogin || (x.NguoiTao === userLogin && x.LoaiHoaDon !== 6);
                });
            }

            // get arrIDRandomHD
            var arrIDRandom = [];
            for (let i = 0; i < hd.length; i++) {
                arrIDRandom.push(hd[i].IDRandom);
            }

            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                cthd = $.grep(cthd, function (x) {
                    return $.inArray(x.IDRandomHD, arrIDRandom) > -1
                });
                localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            }
            localStorage.setItem(lcListHD, JSON.stringify(hd));
        }
    }

    function Call_6Func(firstLoad) {
        firstLoad = firstLoad || false;
        // count number product and show at header CTHD
        Caculator_AmountProduct();
        NhapThuong_HideShow_txtDonGia();
        // enable/disbale by role user
        Enable_DisableNgayLapHD();
        SetPageSize_FullProduct(false);
        HideShow_Icon_ChietKhauNV();
        SetText_aReturn();
    }
    function SetText_aReturn() {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        if (_maHoaDon.indexOf('DV') > 0) {
            $('#aReturn').text('Chọn trả gói dịch vụ')
        }
        else {
            $('#aReturn').text('Chọn hóa đơn trả hàng');
        }
    }
    function IsShop_SpaSalon() {
        if (shopCookies === 'AC9DF2ED-FF08-488F-9A64-08433E541020' || shopCookies === '83894499-AEFA-4F58-96B4-5EC1A0B16A76'
            || shopCookies === 'C16EDDA0-F6D0-43E1-A469-844FAB143014') {
            return true;
        }
        else {
            return false;
        }
    }
    function GetNganhNgheKinhDoanh() {
        switch (shopCookies) {
            case 'AC9DF2ED-FF08-488F-9A64-08433E541020': // spa
                break;
            case '83894499-AEFA-4F58-96B4-5EC1A0B16A76': // salon
                break;
            case 'C1D14B5A-6E81-4893-9F73-E11C63C8E6BC': // nhahang
                self.LoaiNganhNghe(2);
                break;
            case 'C16EDDA0-F6D0-43E1-A469-844FAB143014': // gara
                self.LoaiNganhNghe(1);
                break;
        }
    }
    function HideShow_Icon_NhatKyGoiDV() {
        if (IsShop_SpaSalon()) {
            $('.icon-diary_service').show();
        }
        else {
            $('.icon-diary_service').hide();
        }
    }
    function NhapThuong_HideShow_txtDonGia() {
        if (!self.IsNhapNhanh()) {
            //chống nhảy dòng cho nhập nhanh
            $('#pressNormal').delay(400).fadeIn();
            $("#searchandadd").css("width", "calc(100% - 210px)");
        }
        else {
            $('#pressNormal').hide();
            $("#searchandadd").css("width", "calc(100% - 50px)")
        }
        var loaiHoaDon = self.HoaDons().LoaiHoaDon();
        var roleChangePriceProduct = true;
        switch (loaiHoaDon) {
            case 1:
                roleChangePriceProduct = self.roleChangePriceProduct_Invoice();
                break;
            case 3:
                roleChangePriceProduct = self.roleChangePriceProduct_Order();
                break;
            case 6:
                roleChangePriceProduct = self.roleChangePriceProduct_Return();
                break;
            case 19:
                roleChangePriceProduct = self.roleChangePriceProduct_ServicePackage();
                break;
            case 2:
                roleChangePriceProduct = false;
                break;
        }
        self.roleChangePriceProduct(roleChangePriceProduct);
    }
    function GetListHD_Opening() {
        var lstHD = localStorage.getItem(lcListHD);
        var lstHDisOpening = [];
        if (lstHD !== null && lstHD !== 'null') {
            lstHD = JSON.parse(lstHD);
            var lstHD_byUser = $.grep(lstHD, function (item) {
                return item.Status === 1 &&
                    (item.NguoiTao === userLogin || item.TrangThaiHD === 3); // get HD this user OR client (if hd client is opening)
            });
            lstHDisOpening = lstHD_byUser;
            if (!self.RoleInsert_Invoice()) {
                lstHDisOpening = $.grep(lstHD_byUser, function (x) {
                    return x.LoaiHoaDon !== 1 && x.LoaiHoaDon !== 25;
                });
            }
            if (!self.RoleInsert_Order()) {
                lstHDisOpening = $.grep(lstHD_byUser, function (x) {
                    return x.LoaiHoaDon !== 3;
                });
            }
            if (!self.RoleInsert_Service()) {
                lstHDisOpening = $.grep(lstHD_byUser, function (x) {
                    return x.LoaiHoaDon !== 19;
                });
            }
            if (!self.RoleInsert_Return()) {
                lstHDisOpening = $.grep(lstHD_byUser, function (x) {
                    return x.LoaiHoaDon !== 6;
                });
            }
        }
        return lstHDisOpening;
    }
    function updatePTVND(arr, ctDoing, loai, gtri, dvt) {
        var quanlytheolo = ctDoing.QuanLyTheoLoHang;
        var concungloai = ctDoing.LaConCungLoai;
        var lotParent = ctDoing.LotParent;
        var idRandom = ctDoing.IDRandom;

        if (lotParent || (concungloai === false && quanlytheolo === false)) {
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].IDRandom === idRandom) {
                    switch (loai) {
                        case 1:// ck
                            arr[i].PTChietKhau = gtri;
                            arr[i].DVTinhGiam = dvt;
                            break;
                        case 2://thue
                            arr[i].PTThue = gtri;
                            break;
                    }
                    if (lotParent) {
                        arr[i].DM_LoHang[0].PTChietKhau = arr[i].PTChietKhau;
                        arr[i].DM_LoHang[0].DVTinhGiam = arr[i].DVTinhGiam;
                        arr[i].DM_LoHang[0].PTThue = arr[i].PTThue;
                    }
                    break;
                }
            }
        }
        else {
            if (quanlytheolo) {
                for (let i = 0; i < arr.length; i++) {
                    for (let j = 0; j < arr[i].DM_LoHang.length; j++) {
                        if (arr[i].DM_LoHang[j].IDRandom === idRandom) {
                            switch (loai) {
                                case 1:// ck
                                    arr[i].DM_LoHang[j].PTChietKhau = gtri;
                                    arr[i].DM_LoHang[j].DVTinhGiam = dvt;
                                    break;
                                case 2://thue
                                    arr[i].DM_LoHang[j].PTThue = gtri;
                                    break;
                            }
                            i = arr.length;// used to esc out for loop
                            break;
                        }
                    }
                }
            }
            else {
                for (let i = 0; i < arr.length; i++) {
                    for (let j = 0; j < arr[i].HangCungLoais.length; j++) {
                        if (arr[i].HangCungLoais[j].IDRandom === idRandom) {
                            switch (loai) {
                                case 1:// ck
                                    arr[i].HangCungLoais[j].PTChietKhau = gtri;
                                    arr[i].HangCungLoais[j].DVTinhGiam = dvt;
                                    break;
                                case 2://thue
                                    arr[i].HangCungLoais[j].PTThue = gtri;
                                    break;
                            }
                            i = arr.length;
                            break;
                        }
                    }
                }
            }
        }
        return arr;
    }

    function updateCTHDLe(arr, ctDoing) {
        var quanlytheolo = ctDoing.QuanLyTheoLoHang;
        var concungloai = ctDoing.LaConCungLoai;
        var lotParent = ctDoing.LotParent;
        var idRandom = ctDoing.IDRandom;

        var newSoLuong = ctDoing.SoLuong;
        var newGiaBan = ctDoing.GiaBan;
        var tienGiam = ctDoing.TienChietKhau;
        var ptGiam = ctDoing.PTChietKhau;
        var tienThue = ctDoing.TienThue;
        var ptThue = ctDoing.PTThue;
        var thanhtien = ctDoing.ThanhTien;
        var thanhtoan = ctDoing.ThanhToan;

        if (lotParent || (concungloai === false && quanlytheolo === false)) {
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].IDRandom === idRandom) {
                    if (arr[i].ChatLieu !== '4') {
                        arr[i].ThanhTien = thanhtien;
                        arr[i].ThanhToan = thanhtoan;
                    }
                    else {
                        // sudunggoi: ThanhTien = 0
                        arr[i].ThanhTien = 0;
                        arr[i].ThanhToan = 0;
                    }
                    // update TongPhiDichVu de tinh lai chiet khau cho nhan vien
                    if (arr[i].LaPTPhiDichVu) {
                        arr[i].TongPhiDichVu = Math.round(arr[i].PhiDichVu * newGiaBan * newSoLuong / 100);
                    }
                    else {
                        arr[i].TongPhiDichVu = arr[i].PhiDichVu * newSoLuong;
                    }
                    arr[i].SoLuong = newSoLuong;
                    arr[i].GiaBan = newGiaBan;
                    arr[i].DonGia = newGiaBan;
                    arr[i].PTChietKhau = ptGiam;
                    arr[i].TienChietKhau = tienGiam;
                    arr[i].PTThue = ptThue;
                    arr[i].TienThue = tienThue;

                    if (lotParent) {
                        arr[i].DM_LoHang[0].SoLuong = newSoLuong;
                        arr[i].DM_LoHang[0].GiaBan = newGiaBan;
                        arr[i].DM_LoHang[0].DonGia = newGiaBan;
                        arr[i].DM_LoHang[0].TienChietKhau = tienGiam;
                        arr[i].DM_LoHang[0].PTChietKhau = ptGiam;
                        arr[i].DM_LoHang[0].ThanhTien = arr[i].ThanhTien;
                        arr[i].DM_LoHang[0].ThanhToan = arr[i].ThanhToan;
                        arr[i].DM_LoHang[0].TongPhiDichVu = arr[i].TongPhiDichVu;
                    }
                    break;
                }
            }
        }
        else {
            if (quanlytheolo) {
                for (let i = 0; i < arr.length; i++) {
                    for (let j = 0; j < arr[i].DM_LoHang.length; j++) {
                        if (arr[i].DM_LoHang[j].IDRandom === idRandom) {
                            if (arr[i].DM_LoHang[j].ChatLieu !== '4') {// tragoiDV: van update ThanhTien
                                arr[i].DM_LoHang[j].ThanhTien = thanhtien;
                                arr[i].DM_LoHang[j].ThanhToan = thanhtoan;
                            }
                            else {
                                arr[i].DM_LoHang[j].ThanhTien = 0;
                                arr[i].DM_LoHang[j].ThanhToan = 0;
                            }
                            // update TongPhiDichVu de tinh lai chiet khau cho nhan vien
                            if (arr[i].DM_LoHang[j].LaPTPhiDichVu) {
                                arr[i].DM_LoHang[j].TongPhiDichVu = Math.round(arr[i].DM_LoHang[j].PhiDichVu * newGiaBan * newSoLuong / 100);
                            }
                            else {
                                arr[i].DM_LoHang[j].TongPhiDichVu = arr[i].DM_LoHang[j].PhiDichVu * newSoLuong;
                            }
                            arr[i].DM_LoHang[j].SoLuong = newSoLuong;
                            arr[i].DM_LoHang[j].GiaBan = newGiaBan;
                            arr[i].DM_LoHang[j].DonGia = newGiaBan;
                            arr[i].DM_LoHang[j].PTChietKhau = ptGiam;
                            arr[i].DM_LoHang[j].TienChietKhau = tienGiam;
                            arr[i].DM_LoHang[j].PTThue = ptThue;
                            arr[i].DM_LoHang[j].TienThue = tienThue;

                            i = arr.length;// used to esc out for loop
                            break;
                        }
                    }
                }
            }
            else {
                for (let i = 0; i < arr.length; i++) {
                    for (let j = 0; j < arr[i].HangCungLoais.length; j++) {
                        if (arr[i].HangCungLoais[j].IDRandom === idRandom) {
                            if (arr[i].HangCungLoais[j].ChatLieu !== '4') {
                                arr[i].HangCungLoais[j].ThanhTien = thanhtien;
                                arr[i].HangCungLoais[j].ThanhToan = thanhtoan;
                            }
                            else {
                                arr[i].HangCungLoais[j].ThanhTien = 0;
                                arr[i].HangCungLoais[j].ThanhToan = 0;
                            }
                            // update TongPhiDichVu de tinh lai chiet khau cho nhan vien
                            if (arr[i].HangCungLoais[j].LaPTPhiDichVu) {
                                arr[i].HangCungLoais[j].TongPhiDichVu = Math.round(arr[i].HangCungLoais[j].PhiDichVu * newGiaBan * newSoLuong / 100);
                            }
                            else {
                                arr[i].HangCungLoais[j].TongPhiDichVu = arr[i].HangCungLoais[j].PhiDichVu * newSoLuong;
                            }
                            arr[i].HangCungLoais[j].SoLuong = newSoLuong;
                            arr[i].HangCungLoais[j].GiaBan = newGiaBan;
                            arr[i].HangCungLoais[j].DonGia = newGiaBan;
                            arr[i].HangCungLoais[j].TienChietKhau = tienGiam;
                            arr[i].HangCungLoais[j].PTChietKhau = ptGiam;
                            arr[i].HangCungLoais[j].TienChietKhau = tienGiam;
                            arr[i].HangCungLoais[j].PTThue = ptThue;
                            arr[i].HangCungLoais[j].TienThue = tienThue;
                            i = arr.length;
                            break;
                        }
                    }
                }
            }
        }
        return arr;
    }

    // typeEdit: default:0, 1.editCKHangHoaPr, 2.isEditThuePr, 3.editCK_chitiet, 4.isEditThue_chitiet
    function UpdateCacheHDLe(idRandom, isDoiTra, typeEdit = 0) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var thanhtien = 0, tienthue = 0;
        var thanhtienchuaCK = 0, chietkhauhang = 0, chietkhauhangKM = 0;
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);

            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandom) {
                    let itFor = cthd[i];
                    thanhtien += formatNumberToFloat(itFor.ThanhTien);
                    tienthue += itFor.TienThue * itFor.SoLuong;
                    if (itFor.ChatLieu !== '4') {
                        chietkhauhang += itFor.TienChietKhau * itFor.SoLuong;
                        thanhtienchuaCK += itFor.GiaBan * itFor.SoLuong;
                    }

                    // sum Hang KhuyenMai
                    for (let k = 0; k < itFor.HangHoa_KM.length; k++) {
                        thanhtien += formatNumberToFloat(itFor.HangHoa_KM[k].ThanhTien);
                        chietkhauhang += itFor.HangHoa_KM[k].SoLuong * itFor.HangHoa_KM[k].TienChietKhau;
                    }
                    // for from j =1, because DM_LoHang[0] = CTHD parent
                    for (let j = 1; j < itFor.DM_LoHang.length; j++) {
                        let forIn = itFor.DM_LoHang[j];
                        thanhtien += forIn.ThanhTien;
                        tienthue += forIn.TienThue * forIn.SoLuong;
                        if (forIn.ChatLieu !== '4') {
                            chietkhauhang += forIn.TienChietKhau * forIn.SoLuong;
                            thanhtienchuaCK += forIn.GiaBan * forIn.SoLuong;
                        }
                    }
                    // sum hangcungloai
                    for (let j = 0; j < itFor.HangCungLoais.length; j++) {
                        let forIn = itFor.HangCungLoais[j];
                        thanhtien += forIn.ThanhTien;
                        tienthue += forIn.TienThue * forIn.SoLuong;
                        if (forIn.ChatLieu !== '4') {
                            chietkhauhang += forIn.TienChietKhau * forIn.SoLuong;
                            thanhtienchuaCK += forIn.GiaBan * forIn.SoLuong, 3;
                        }
                    }
                }
            }

            if (isDoiTra === false) {
                // sum hang KM HoaDon(HD - giam gia hang)
                var producKM_HD = localStorage.getItem(lcProductKM_HoaDon);
                if (producKM_HD !== null) {
                    producKM_HD = JSON.parse(producKM_HD);
                    for (let i = 0; i < producKM_HD.length; i++) {
                        if (producKM_HD[i].IDRandomHD === idRandom) {
                            thanhtien += producKM_HD[i].ThanhTien;
                        }
                    }
                }
            }
        }

        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                let itFor = lstHD[i];
                if (itFor.IDRandom === idRandom) {
                    switch (typeEdit) {
                        case 1: // edit ckhanghoa at parent
                            lstHD[i].TongTienHang = thanhtienchuaCK - itFor.TongGiamGiaHang;
                            if (itFor.PTThueHoaDon > 0) {
                                lstHD[i].TongTienThue = itFor.PTThueHoaDon * lstHD[i].TongTienHang / 100;
                            }
                            break;
                        case 2: // edit thue at parent
                            break;
                        case 3: // editCK_chitiet
                            lstHD[i].PTChietKhauHH = 0;
                            lstHD[i].TongTienHangChuaCK = thanhtienchuaCK;
                            lstHD[i].TongGiamGiaHang = chietkhauhang;
                            lstHD[i].TongTienHang = thanhtien;
                            if (itFor.PTThueHoaDon > 0) {
                                lstHD[i].TongTienThue = itFor.PTThueHoaDon * thanhtien / 100;
                            }
                            break;
                        case 4: // editThue_chitiet
                            lstHD[i].PTThueHoaDon = 0;
                            lstHD[i].TongTienHangChuaCK = thanhtienchuaCK;
                            lstHD[i].TongGiamGiaHang = chietkhauhang;
                            lstHD[i].TongTienHang = thanhtien;
                            lstHD[i].TongTienThue = tienthue;
                            break;
                        default:
                            lstHD[i].TongTienHangChuaCK = thanhtienchuaCK;
                            lstHD[i].TongGiamGiaHang = chietkhauhang;
                            lstHD[i].TongTienHang = thanhtien;
                            if (itFor.PTThueHoaDon > 0) {
                                lstHD[i].TongTienThue = itFor.PTThueHoaDon * thanhtien / 100;
                            }
                            else {
                                lstHD[i].TongTienThue = tienthue;
                            }
                            break;
                    }

                    lstHD[i].TongGiamGiaKhuyenMai_CT = chietkhauhangKM;

                    if (lstHD[i].TongChietKhau > 0) {
                        lstHD[i].TongGiamGia = lstHD[i].TongChietKhau * (lstHD[i].TongTienHang + lstHD[i].TongTienThue) / 100;
                    }
                    lstHD[i].TongGiamGiaKM_HD = formatNumberToFloat(lstHD[i].TongGiamGia) + lstHD[i].KhuyeMai_GiamGia;

                    let tongmua = lstHD[i].TongTienHang - formatNumberToFloat(lstHD[i].TongGiamGiaKM_HD)
                        + formatNumberToFloat(lstHD[i].TongTienThue);
                    tongmua = tongmua < 0 ? 0 : tongmua;
                    lstHD[i].TongTienMua = tongmua;

                    // trahang
                    if (lstHD[i].PTGiamDB > 0) {
                        lstHD[i].TongGiamGiaDB = lstHD[i].PTGiamDB * lstHD[i].TongGiaGocHangTra / 100;
                    }
                    if (lstHD[i].PTThueDB > 0) {
                        lstHD[i].TongThueDB = lstHD[i].PTThueDB * lstHD[i].TongGiaGocHangTra / 100;
                    }
                    let tongtra = lstHD[i].TongGiaGocHangTra - lstHD[i].TongChiPhiHangTra - lstHD[i].TongGiamGiaDB
                        + lstHD[i].TongThueDB;
                    tongtra = tongtra < 0 ? 0 : tongtra;
                    lstHD[i].TongTienTra = tongtra;

                    let noHDCu = lstHD[i].NoHDCu;
                    if (commonStatisJs.CheckNull(noHDCu)) {
                        noHDCu = 0;
                    }
                    let butruHDGoc = tongtra - noHDCu;
                    let phaiTT = tongmua - butruHDGoc - lstHD[i].KhachDaTra;

                    if (phaiTT < 0) {
                        lstHD[i].HoanTraTamUng = Math.abs(phaiTT);
                        lstHD[i].DaTraKhach = lstHD[i].HoanTraTamUng;
                        lstHD[i].TienMat = lstHD[i].HoanTraTamUng;
                        lstHD[i].PhaiThanhToan = 0;
                        lstHD[i].DaThanhToan = 0;
                    }
                    else {
                        lstHD[i].PhaiThanhToan = phaiTT;
                        lstHD[i].DaThanhToan = lstHD[i].LoaiHoaDon === 3 ? 0 : phaiTT;
                        lstHD[i].TienMat = lstHD[i].LoaiHoaDon === 3 ? 0 : phaiTT;
                        lstHD[i].HoanTraTamUng = 0;
                        lstHD[i].DaTraKhach = 0;
                    }
                    lstHD[i].PhaiThanhToanDB = butruHDGoc;
                    lstHD[i].TienGui = 0;
                    lstHD[i].TienATM = 0;
                    lstHD[i].TienTheGiaTri = 0;
                    lstHD[i].TienThua = 0;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
            UpdateChietKhauHD_NhanVien(idRandom);
        }
    }

    function UpdateChietKhauHD_NhanVien(idRandom) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRandom) {
                    if (lstHD[i].BH_NhanVienThucHiens.length > 0) {
                        let doanhthu = formatNumberToFloat(lstHD[i].TongTienHang) - formatNumberToFloat(lstHD[i].TongGiamGiaKM_HD);
                        let thucthu = formatNumberToFloat(lstHD[i].TienMat) + formatNumberToFloat(lstHD[i].TienATM)
                            + formatNumberToFloat(lstHD[i].TienGui);
                        if (lstHD[i].LoaiHoaDon !== 6 && lstHD[i].HoanTraTamUng > 0) {
                            thucthu = thucthu * (-1);
                        }
                        for (let j = 0; j < lstHD[i].BH_NhanVienThucHiens.length; j++) {
                            let itFor = lstHD[i].BH_NhanVienThucHiens[j];
                            let heso = parseFloat(itFor.HeSo);
                            let gtriCK = parseFloat(itFor.PT_ChietKhau);
                            let tinhCKTheo = parseInt(itFor.TinhChietKhauTheo);
                            let tienCK = itFor.TienChietKhau;
                            switch (tinhCKTheo) {
                                case 1:
                                    tienCK = thucthu * gtriCK / 100 * heso;
                                    break;
                                case 2:
                                    tienCK = doanhthu * gtriCK / 100 * heso;
                                    break;
                                // loai 3: khong cap nhat, vi CK theo VND
                            }
                            lstHD[i].BH_NhanVienThucHiens[j].TienChietKhau = tienCK;
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }

    function GetCTHoaDon_FromArr(arr, idRandomHD) {
        var ctHD = [];
        for (let i = arr.length - 1; i >= 0; i--) {
            if (arr[i].IDRandomHD === idRandomHD) {
                // because ID_LoHang was assign Auto when getAllDmHangHoa --> so remove ID_LoHang if QuanLyTheoLo = false
                if (!arr[i].QuanLyTheoLoHang) {
                    arr[i].ID_LoHang = null;
                }
                // STT của hàng hóa < STT của hàng KM (để order ASC STT khi in, hàng KM nằm dưới)
                // only add if SoLuong > 0 (because parent have SoLuong = 0, but DM_Lo have SoLuong > 0)
                //if (arr[i].SoLuong > 0) {
                arr[i].SoThuTu = ctHD.length + 1;
                ctHD.push(arr[i]);
                //}
                // add Hang Khuyen Mai
                for (let j = 0; j < arr[i].HangHoa_KM.length; j++) {
                    arr[i].HangHoa_KM[j].SoThuTu = ctHD.length + 1;
                    // check HangKM tang kem co quan ly theo lo khong? Neu co luu ID_LoHang
                    if (arr[i].HangHoa_KM[j].TangKem) {
                        var itemHH = $.grep(self.HangHoaAll(), function (x) {
                            return x.ID_DonViQuiDoi === arr[i].HangHoa_KM[j].ID_DonViQuiDoi;
                        });
                        if (itemHH.length > 0 && itemHH[0].QuanLyTheoLoHang) {
                            arr[i].HangHoa_KM[j].ID_LoHang = itemHH[0].ID_LoHang;
                            arr[i].HangHoa_KM[j].QuanLyTheoLoHang = true;
                        }
                    }
                    ctHD.push(arr[i].HangHoa_KM[j]);
                }
                // add Hang Hoa theo Lo
                for (let k = 1; k < arr[i].DM_LoHang.length; k++) {
                    //if (arr[i].DM_LoHang[k].SoLuong > 0) {
                    arr[i].DM_LoHang[k].SoThuTu = ctHD.length + 1;
                    ctHD.push(arr[i].DM_LoHang[k]);
                    //}
                }
                // add HangCungLoai
                for (let k = 0; k < arr[i].HangCungLoais.length; k++) {
                    //if (arr[i].HangCungLoais[k].SoLuong > 0) {
                    arr[i].HangCungLoais[k].SoThuTu = ctHD.length + 1;
                    ctHD.push(arr[i].HangCungLoais[k]);
                    //}
                }
            }
        }
        // add product KhuyenMai of HoaDon into CTHD
        var productKMs = localStorage.getItem(lcProductKM_HoaDon);
        if (productKMs !== null) {
            productKMs = JSON.parse(productKMs);
            for (let i = 0; i < productKMs.length; i++) {
                if (productKMs[i].IDRandomHD === idRandomHD) {
                    ctHD.push(productKMs[i]);
                }
            }
        }
        return ctHD;
    }
    function GetArrCTHD_withIDLoHangOtherNull(arr) {
        for (let i = 0; i < arr.length; i++) {
            delete arr[i]["DM_LoHang"];
            delete arr[i]["HangHoa_KM"];
            if (!commonStatisJs.CheckNull(arr[i].ThanhPhanComBo)) {
                for (let k = 0; k < arr[i].ThanhPhanComBo.length; k++) {
                    delete arr[i].ThanhPhanComBo[k]["DM_LoHang"];
                }
            }

            if (arr[i].QuanLyTheoLoHang === false) {
                arr[i].ID_LoHang = null;
            }
            var thuocTinh = arr[i].ThuocTinh_GiaTri;
            thuocTinh = (thuocTinh === null || thuocTinh === undefined || thuocTinh === '') ? '' : thuocTinh.substr(1);// loai bo ki tu _
            arr[i].ThuocTinh_GiaTri = thuocTinh;

            // assign TimeStart, TimeEnd, timeover
            var sophut = arr[i].ThoiGianThucHien;
            if (sophut > 0 && formatNumberToFloat(arr[i].TimeStart) !== 0) {
                if (arr[i].QuaThoiGian > 0) {
                    sophut += arr[i].QuaThoiGian;
                }
                else {
                    sophut -= arr[i].TimeRemain;
                }
                arr[i].ThoiGianThucHien = sophut;
                var date_ofCT = arr[i].ThoiGian.split(' ')[0];
                var ngaygioVao = date_ofCT.concat(' ', arr[i].TimeStart);
                var dateVao = new Date(ngaygioVao);
                dateVao.setMinutes(dateVao.getMinutes() + sophut);
                var ngaygioRa = moment(dateVao).format('YYYY-MM-DD HH:mm');
                arr[i].ThoiGian = date_ofCT + ' ' + arr[i].TimeStart;
                arr[i].ThoiGianHoanThanh = ngaygioRa;
            }
        }
        arr = $.grep(arr, function (x) {
            // check QuanLyTheoLoHang === undefined (use if HangHoa id KhuyenMai TangKem)
            return x.QuanLyTheoLoHang === false || x.QuanLyTheoLoHang === undefined || x.QuanLyTheoLoHang === null ||
                (x.QuanLyTheoLoHang && x.ID_LoHang !== null && x.ID_LoHang !== const_GuidEmpty)
        });
        return arr;
    }

    // 1: TraHang, 2.TraHang + MuaMoi, 3. MuaHang
    self.LoaiThanhToan = ko.observable(0);// used to check when editTienMat, tienCK
    function SetText_popThanhToan(loaiTT) {
        switch (loaiTT) {
            case 1:
            case 2:
                $('#titleThanhToan').text('Tiền trả khách');
                $("#ulTabThanhToan li:eq(0) a").text('Thông tin trả tiền');
                $('#lblTongTien_ThanhToan').text('Tổng tiền trả khách');
                $('#lblPopTienMat').text('Tiền mặt');
                $('#lblTienCK').text('Tiền chuyển khoản');
                $('#lblTheGiaTri').text('Hoàn trả tiền thẻ giá trị');
                $('#lblDaThanhToan').text('Tổng trả khách');
                $('#lblTienThua_HoaDon').text('Tiền thừa');
                break;
            case 3:
                $('#titleThanhToan').text('Khách trả tiền');
                $("#ulTabThanhToan li:eq(0) a").innerHTML = 'Thông tin khách trả tiền';
                $('#lblTongTien_ThanhToan').text('Tổng tiền khách cần trả');
                $('#lblPopTienMat').text('Tiền mặt khách đưa');
                $('#lblTienPOS').text('Tiền quẹt thẻ POS');
                $('#lblTienCK').text('Tiền chuyển khoản');
                $('#lblTheGiaTri').text('Thẻ giá trị');
                $('#lblDaThanhToan').text('Khách đã trả');
                $('#lblTienThua_HoaDon').text($('#textTienThua').text());// assign lable = lable
                break;
        }
    }

    self.ThanhToanThe = function (loaiThanhToan) {
        self.LoaiThanhToan(loaiThanhToan);

        var hd = self.HoaDons();
        var cusDoing = self.ChiTietDoiTuong();
        var maKH = cusDoing.length > 0 ? cusDoing[0].MaDoiTuong : 'KL';
        var tenKH = cusDoing.length > 0 ? cusDoing[0].TenDoiTuong : 'Khách lẻ';
        var diemKH = cusDoing.length > 0 ? cusDoing[0].TongTichDiem : 0;
        var idCus = cusDoing.length > 0 ? cusDoing[0].ID : null;

        var phaiTT = formatNumberToFloat(hd.TongTienHang())
            - formatNumberToFloat(hd.TongGiamGiaKM_HD())
            + formatNumberToFloat(hd.TongTienThue())
        phaiTT = hd.LoaiHoaDon() === 6 ? hd.PhaiThanhToan() : phaiTT;

        var obj = {
            MaHoaDon: '',
            IDRandom: hd.IDRandom(),
            LoaiDoiTuong: 1,// 1.kh, 2.ncc, 3.bh
            LoaiHoaDon: hd.LoaiHoaDon(),
            SoDuDatCoc: 0,
            HoanTraTamUng: hd.HoanTraTamUng(),
            PhaiThanhToan: phaiTT,
            PhaiThanhToanBaoHiem: 0,
            TongThanhToan: phaiTT,
            TongTienThue: hd.TongTienThue(),
            TongTichDiem: diemKH,
            ThucThu: 0,
            ConNo: 0,
            DienGiai: hd.DienGiai(),
            ID_DoiTuong: idCus,
            MaDoiTuong: maKH,
            TenDoiTuong: tenKH,
            TenBaoHiem: '',
            NgayLapHoaDon: hd.NgayLapHoaDon(),
            ID_NhanVien: _idNhanVien,
            ID_DonVi: id_DonVi,
            NguoiTao: userLogin,
            ID_PhieuTiepNhan: null,
            DaThanhToan: hd.DaThanhToan(), // used to don't click btnThanhToan
            KhachDaTra: hd.KhachDaTra(), // used when update hd
            BaoHiemDaTra: 0, // used when update hd
            IsTraGDV: hd.IsTraGDV()
        }
        vmThanhToanGara.showModalUpdate(obj);
        vmThanhToanGara.listData.ChietKhauHoaDons = vmHoaHongHoaDon.listData.ChietKhauHoaDons;
    }

    self.agreePay = function () {
        var ptKhach = vmThanhToanGara.PhieuThuKhach;
        var loaiThanhToan = self.LoaiThanhToan();
        var tienMat = formatNumberToFloat(ptKhach.TienMat);
        var diemQuyDoi = formatNumberToFloat(ptKhach.DiemQuyDoi);
        var tienQuyDoi = formatNumberToFloat(ptKhach.TTBangDiem);
        var tienTheGiaTri = formatNumberToFloat(ptKhach.TienTheGiaTri);
        var tienATM = formatNumberToFloat(ptKhach.TienPOS);
        var tienGui = formatNumberToFloat(ptKhach.TienCK);

        var itemHD = [];
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            // update TienMat, TienGui
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === vmThanhToanGara.inforHoaDon.IDRandom) {
                    let thanhToan = tienMat + tienGui + tienATM + tienQuyDoi + tienTheGiaTri;
                    switch (loaiThanhToan) {
                        case 1:
                        case 2:
                            lstHD[i].DaTraKhach = thanhToan;
                            lstHD[i].TienThua = formatNumberToFloat(lstHD[i].HoanTraTamUng) - thanhToan;
                            break;
                        case 3:
                            lstHD[i].DaThanhToan = thanhToan;
                            lstHD[i].TTBangDiem = tienQuyDoi;
                            lstHD[i].DiemQuyDoi = diemQuyDoi;
                            lstHD[i].TienThua = thanhToan - lstHD[i].PhaiThanhToan;
                            break;
                    }
                    lstHD[i].TienMat = tienMat;
                    lstHD[i].TienATM = tienATM;
                    lstHD[i].TienGui = tienGui;
                    lstHD[i].TienTheGiaTri = tienTheGiaTri;
                    lstHD[i].ID_TaiKhoanChuyenKhoan = ptKhach.ID_TaiKhoanChuyenKhoan;
                    lstHD[i].ID_TaiKhoanPos = ptKhach.ID_TaiKhoanPos;
                    lstHD[i].ListTKPos = ptKhach.ListTKPos;
                    lstHD[i].ListTKChuyenKhoan = ptKhach.ListTKChuyenKhoan;
                    itemHD = lstHD[i];
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));

            UpdateDiemGiaoDich_forHoaDon();
            if (itemHD !== []) {
                SetText_lblTienMat(itemHD, 1);
                self.HoaDons().SetData(itemHD);
                Agree_ChietKhauHoaDon(itemHD.IDRandom);
            }
        }
    }

    function SetText_lblTienMat(itemHD, loaiThu) {
        var tienMat = 0;
        var tienPOS = 0;
        var tienCK = 0;
        var tienTheGTri = 0;
        var diemQuiDoi = 0;
        var lblFind = '';
        if (loaiThu === 11) {
            tienMat = formatNumberToFloat(self.TienMat_PhieuThu());
            tienPOS = formatNumberToFloat(self.TienATM_PhieuThu());
            tienCK = formatNumberToFloat(self.TienGui_PhieuThu());
            tienTheGTri = formatNumberToFloat(self.TienTheGiaTri_PhieuThu());
            // so quy
            lblFind = $('#lblTienMat_PhieuThu');
        }
        else {
            let phaiThanhToan = formatNumberToFloat(itemHD.PhaiThanhToan);
            let phaiThanhToanDB = formatNumberToFloat(itemHD.PhaiThanhToanDB);// nohoadongoc (trahang)
            let tongTienHangDoiTra = formatNumberToFloat(itemHD.TongTienHang);
            tienMat = formatNumberToFloat(itemHD.TienMat);
            tienPOS = formatNumberToFloat(itemHD.TienATM);
            tienCK = formatNumberToFloat(itemHD.TienGui);
            tienTheGTri = formatNumberToFloat(itemHD.TienTheGiaTri);
            diemQuiDoi = formatNumberToFloat(itemHD.DiemQuyDoi);
            // mua > tra
            if (phaiThanhToan > 0) {
                if (phaiThanhToanDB < 0) {// nohdGoc > tienkhachtra
                    lblFind = $('#lblLoaiTienNoHDGoc');
                }
                else {
                    lblFind = $('#lblTienMat');
                }
            }
            else {
                // co doi tra
                if (tongTienHangDoiTra > 0) {
                    lblFind = $('#lblTienMat_TH');
                }
                else {
                    lblFind = $('#lblTienMat_THKM');
                }
            }
            // keep value old taikhoan pos, ck of hd update
            self.selectID_POS(itemHD.ID_TaiKhoanPos);
            self.selectID_ChuyenKhoan(itemHD.ID_TaiKhoanChuyenKhoan);
        }
        if (tienMat > 0) {
            if (tienPOS > 0) {
                if (tienCK > 0) {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, POS, CK, thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(Tiền mặt, POS, CK, điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, POS, CK, thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(Tiền mặt, POS, CK)');
                        }
                    }
                }
                else {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, POS, thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(Tiền mặt, POS, điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, POS, thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(Tiền mặt, POS)');
                        }
                    }
                }
            }
            else {
                if (tienCK > 0) {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, CK, thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(Tiền mặt, CK, điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, CK, thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(Tiền mặt, CK)');
                        }
                    }
                }
                else {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(Tiền mặt, điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Tiền mặt, thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(Tiền mặt)');
                        }
                    }
                }
            }
        }
        else {
            if (tienPOS > 0) {
                if (tienCK > 0) {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(POS, CK, thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(POS, CK, điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(POS, CK, thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(POS, CK)');
                        }
                    }
                }
                else {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(POS, thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(POS, điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(POS, thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(POS)');
                        }
                    }
                }
            }
            else {
                if (tienCK > 0) {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(CK, thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(CK, điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(CK, thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(CK)');
                        }
                    }
                }
                else {
                    if (diemQuiDoi > 0) {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Thẻ giá trị, điểm)');
                        }
                        else {
                            lblFind.text('(Điểm)');
                        }
                    }
                    else {
                        if (tienTheGTri !== undefined && tienTheGTri > 0) {
                            lblFind.text('(Thẻ giá trị)');
                        }
                        else {
                            lblFind.text('(Tiền mặt)');
                        }
                    }
                }
            }
        }
    }

    // changeChiNhanh: don't need load again this func
    function Call_ManyFunction_Onsuccess() {
        ajaxHelper(DMDoiTuongUri + 'Call_ManyFunction_OnsuccessBanHang?idChiNhanh=' + id_DonVi, 'GET').done(function (obj) {
            if (obj.res === true) {
                self.DM_MauIn(obj.TemPrint);
                self.BindSettingPrint(true);
                self.AllQuanHuyens(obj.District);
                self.AllNhomBans(obj.NhomBan);

                for (let i = 0; i < obj.PhongBan.length; i++) {
                    obj.PhongBan[i].CreateTime = 0;
                    obj.PhongBan[i].NhanVien_Phong = '';
                    obj.PhongBan[i].ThoiGianThucHien = ''; //tong thoi gian thuc hien cac dich vu
                    obj.PhongBan[i].TextTGConLai = ''; //thoi gian con lai
                }
                var arrSortPB = obj.PhongBan.sort((a, b) => a.TenViTri.localeCompare(b.TenViTri, undefined, { caseFirst: "upper" }));
                self.AllPhongBans(arrSortPB);
                self.PhongBans_byIDNhom(self.AllPhongBans());
                vm_PhongBan.reset(self.AllPhongBans());

                // write data to indexDB
                WriteData_Dexie(db.DM_QuanHuyen, obj.District);
                WriteData_Dexie(db.DM_MauIn, obj.TemPrint);
                WriteData_Dexie(db.DM_KhuVuc, self.AllNhomBans());
                WriteData_Dexie(db.DM_ViTri, self.AllPhongBans());
            }
        })
    }

    function GetDM_TaiKhoanNganHang() {
        ajaxHelper('/api/DanhMuc/Quy_HoaDonAPI/' + 'GetAllTaiKhoanNganHang_ByDonVi?idDonVi=' + id_DonVi, 'GET').done(function (x) {
            if (x.res === true) {
                let data = x.data;
                WriteData_Dexie(db.DM_TaiKhoanNganHang, data);
                // not set default TaiKhoanNganHang
                var lstTKPos = $.grep(data, function (x) {
                    return x.TaiKhoanPOS === true;
                });
                self.ListAccountPOS(lstTKPos);
                var lstTKChuyenKhoan = $.grep(data, function (x) {
                    return x.TaiKhoanPOS === false;
                });
                self.ListAccountChuyenKhoan(lstTKChuyenKhoan);

                vmThanhToan.listData.AccountBanks = data;
                vmThanhToanGara.listData.AccountBanks = data;
            }
        })
    }

    function ShareTienThu_HDDoiTra(hd, objMuaHang) {
        let idDoiTuong = hd.ID_DoiTuong;
        let maDoiTuong = hd.MaDoiTuong, tenDoiTuong = hd.TenDoiTuong;

        let tongno = hd.PhaiThanhToan;
        let money = shareMoney_QuyHD(tongno, formatNumberToFloat(hd.TTBangDiem),
            formatNumberToFloat(hd.TienMat), formatNumberToFloat(hd.TienATM),
            formatNumberToFloat(hd.TienGui), formatNumberToFloat(hd.TienTheGiaTri));

        let tiendatcoc = money.TienCoc;
        let tienmat = money.TienMat;
        let tienpos = money.TienPOS;
        let tienck = money.TienChuyenKhoan;
        let tienthe = money.TienTheGiaTri;
        let tiendiem = money.TTBangDiem;
        let idKhoanThuChi = null;

        let lst = [];
        let arrPhuongThuc = [];
        let ktc = [];
        if (commonStatisJs.CheckNull(idKhoanThuChi)) {
            ktc = $.grep(self.KhoanThuChis(), function (x) {
                return x.LoaiChungTu === hd.LoaiHoaDon.toString() && x.LaKhoanThu;
            });
        }
        if (ktc.length > 0) {
            idKhoanThuChi = ktc[0].ID;
        }
        // thanhtoan no HDCu
        let phaiTTHDCu_afterTra = Math.abs(formatNumberToFloat(hd.PhaiThanhToanDB));
        if (!commonStatisJs.CheckNull(hd.ID_HoaDon)) {
            if (commonStatisJs.CheckNull(idKhoanThuChi)) {
                ktc = $.grep(self.KhoanThuChis(), function (x) {
                    return x.LoaiChungTu.indexOf('1') > -1 && x.LaKhoanThu;
                });
            }
            if (ktc.length > 0) {
                idKhoanThuChi = ktc[0].ID;
            }

            let obj = shareMoney_QuyHD(phaiTTHDCu_afterTra, tiendiem, tienmat, tienpos, tienck, tienthe, tiendatcoc);
            obj.ID_HoaDonLienQuan = hd.ID_HoaDon;
            obj.MaHoaDon = hd.MaHoaDonTraHang;
            lst.push(obj);

            tienmat = tienmat - obj.TienMat;
            tienpos = tienpos - obj.TienPOS;
            tienck = tienck - obj.TienChuyenKhoan;
            tienthe = tienthe - obj.TienTheGiaTri;
            tiendiem = tiendiem - obj.TTBangDiem;
        }

        let lstQuyChiTiet = [];
        let ghichu = hd.DienGiai;
        if (commonStatisJs.CheckNull(ghichu)) {
            ghichu = ''.concat(tenDoiTuong, ' (', maDoiTuong, ')');
        }
        else {
            ghichu = ghichu.concat('/ ', tenDoiTuong, ' (', maDoiTuong, ')');
        }
        let ngaylapHD = hd.NgayLapHoaDon;
        if (hd.TongTienMua > 0 && objMuaHang !== null) {
            let obj = shareMoney_QuyHD(tongno - phaiTTHDCu_afterTra, tiendiem, tienmat, tienpos, tienck, tienthe);
            obj.ID_HoaDonLienQuan = objMuaHang.ID;
            obj.MaHoaDon = objMuaHang.MaHoaDon;
            ngaylapHD = objMuaHang.NgayLapHoaDon;
            lst.push(obj);
        }

        let tongthu = 0, sHDLienQuan = '';
        // 1 phieuthu - 2 hoadon
        let Quy_HoaDon = {
            LoaiHoaDon: 11,
            TongTienThu: tongthu,
            MaHoaDon: '',
            NgayLapHoaDon: ngaylapHD,
            NguoiNopTien: tenDoiTuong,
            NguoiTao: userLogin,
            NoiDungThu: hd.DienGiai,
            ID_NhanVien: hd.ID_NhanVien,
            ID_DonVi: hd.ID_DonVi,
            // used to get save diary 
            MaHoaDonTraHang: '',
            ID_DoiTuong: idDoiTuong,
            MaNguoiNop: maDoiTuong,
        }

        for (let i = 0; i < lst.length; i++) {
            let itemQuy = lst[i];
            tongthu += itemQuy.TienMat + itemQuy.TienPOS + itemQuy.TienChuyenKhoan + itemQuy.TienTheGiaTri;
            sHDLienQuan += itemQuy.MaHoaDon + ', ';

            if (itemQuy.TienMat > 0) {
                let qct = newQuyChiTiet({
                    ID_HoaDonLienQuan: itemQuy.ID_HoaDonLienQuan,
                    ID_KhoanThuChi: idKhoanThuChi,
                    ID_DoiTuong: idDoiTuong,
                    GhiChu: '',
                    TienThu: itemQuy.TienMat,
                    TienMat: itemQuy.TienMat,
                    HinhThucThanhToan: 1,
                });
                lstQuyChiTiet.push(qct);

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }

            if (itemQuy.TienPOS > 0) {
                let qct = {
                    HinhThucThanhToan: 2,
                }
                let tienATM = itemQuy.TienPOS;
                if (!commonStatisJs.CheckNull(hd.ListTKPos)) {
                    for (let i = 0; i < hd.ListTKPos.length; i++) {
                        let itFor = hd.ListTKPos[i];
                        let item_TienPos = formatNumberToFloat(itFor.TienPOS);

                        if (tienATM > item_TienPos) {
                            tienATM = tienATM - item_TienPos;

                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: itemQuy.ID_HoaDonLienQuan,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanPos.concat(' - ', itFor.TenNganHangPos),
                                TienThu: item_TienPos,
                                TienPOS: item_TienPos,
                                HinhThucThanhToan: 2,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanPos,
                            });
                            lstQuyChiTiet.push(qct);
                            ghichu += ' / ' + qct.GhiChu;
                        }
                        else {
                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: itemQuy.ID_HoaDonLienQuan,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanPos.concat(' - ', itFor.TenNganHangPos),
                                TienThu: tienATM,
                                TienPOS: tienATM,
                                HinhThucThanhToan: 2,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanPos,
                            });
                            lstQuyChiTiet.push(qct);
                            ghichu += ' / ' + qct.GhiChu;
                            tienATM = 0;
                        }
                    }
                }
                else {
                    qct = newQuyChiTiet({
                        ID_HoaDonLienQuan: itemQuy.ID_HoaDonLienQuan,
                        ID_KhoanThuChi: idKhoanThuChi,
                        ID_DoiTuong: idDoiTuong,
                        GhiChu: '',
                        TienThu: itemQuy.TienPOS,
                        TienPOS: itemQuy.TienPOS,
                        HinhThucThanhToan: 2,
                        ID_TaiKhoanNganHang: hd.ID_TaiKhoanPos,
                    });
                    lstQuyChiTiet.push(qct);
                }

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }

            if (itemQuy.TienChuyenKhoan > 0) {
                let tienGui = itemQuy.TienChuyenKhoan;
                let qct = {
                    HinhThucThanhToan: 3,
                }
                if (!commonStatisJs.CheckNull(hd.ListTKChuyenKhoan)) {
                    for (let i = 0; i < hd.ListTKChuyenKhoan.length; i++) {
                        let itFor = hd.ListTKChuyenKhoan[i];
                        let item_TienCK = formatNumberToFloat(itFor.TienCK);

                        if (tienGui > item_TienCK) {
                            tienGui = tienGui - item_TienCK;

                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: itemQuy.ID_HoaDonLienQuan,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanCK.concat(' - ', itFor.TenNganHangCK),
                                TienThu: item_TienCK,
                                HinhThucThanhToan: 3,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanChuyenKhoan,
                            });
                            lstQuyChiTiet.push(qct);
                            ghichu += ' / ' + qct.GhiChu;
                        }
                        else {
                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: itemQuy.ID_HoaDonLienQuan,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanCK.concat(' - ', itFor.TenNganHangCK),
                                TienThu: tienGui,
                                HinhThucThanhToan: 3,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanChuyenKhoan,
                            });
                            lstQuyChiTiet.push(qct);
                            ghichu += ' / ' + qct.GhiChu;
                            tienGui = 0;
                        }
                    }
                }
                else {
                    qct = newQuyChiTiet({
                        ID_HoaDonLienQuan: itemQuy.ID_HoaDonLienQuan,
                        ID_KhoanThuChi: idKhoanThuChi,
                        ID_DoiTuong: idDoiTuong,
                        GhiChu: '',
                        TienThu: tienGui,
                        TienChuyenKhoan: tienGui,
                        HinhThucThanhToan: 3,
                        ID_TaiKhoanNganHang: hd.ID_TaiKhoanChuyenKhoan,
                    });
                    lstQuyChiTiet.push(qct);
                }
                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }

            if (itemQuy.TienTheGiaTri > 0) {
                let qct = newQuyChiTiet({
                    ID_HoaDonLienQuan: idHoaDon,
                    ID_KhoanThuChi: idKhoanThuChi,
                    ID_DoiTuong: idDoiTuong,
                    GhiChu: ghichu,
                    TienThu: itemQuy.TienTheGiaTri,
                    TienTheGiaTri: itemQuy.TienTheGiaTri,
                    HinhThucThanhToan: 4,
                });
                lstQuyChiTiet.push(qct);

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }
            if (itemQuy.TTBangDiem > 0) {
                let qct = newQuyChiTiet({
                    ID_HoaDonLienQuan: idHoaDon,
                    ID_KhoanThuChi: idKhoanThuChi,
                    ID_DoiTuong: idDoiTuong,
                    GhiChu: ghichu,
                    TienThu: itemQuy.TTBangDiem,
                    DiemThanhToan: hd.DiemQuyDoi,
                    HinhThucThanhToan: 5,
                });
                lstQuyChiTiet.push(qct);

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }
        }

        arrPhuongThuc = $.unique(arrPhuongThuc);
        let phuongthucTT = '';
        for (let i = 0; i < arrPhuongThuc.length; i++) {
            switch (arrPhuongThuc[i]) {
                case 1:
                    phuongthucTT += 'Tiền mặt, ';
                    break;
                case 2:
                    phuongthucTT += 'POS, ';
                    break;
                case 3:
                    phuongthucTT += 'Chuyển khoản,  ';
                    break;
                case 4:
                    phuongthucTT += 'Thẻ giá trị, ';
                    break;
                case 5:
                    phuongthucTT += 'Điểm, ';
                    break;
                case 6:
                    phuongthucTT += 'Thu từ cọc, ';
                    break;
            }
        }

        // remove last comma
        phuongthucTT = Remove_LastComma(phuongthucTT);
        Quy_HoaDon.PhuongThucTT = phuongthucTT;
        Quy_HoaDon.NoiDungThu = ghichu;
        Quy_HoaDon.TongTienThu = tongthu;
        Quy_HoaDon.MaHoaDonTraHang = sHDLienQuan;

        let myData = {};
        myData.objQuyHoaDon = Quy_HoaDon;
        myData.lstCTQuyHoaDon = lstQuyChiTiet;
        if (lstQuyChiTiet.length > 0) {
            ajaxHelper('/api/DanhMuc/Quy_HoaDonAPI/PostQuy_HoaDon_DefaultIDDoiTuong', 'POST', myData).done(function (x) {
                if (x.res === true) {
                    Quy_HoaDon.MaHoaDon = x.data.MaHoaDon;

                    Insert_NhatKyThaoTac(Quy_HoaDon, [], 3, 1);
                }
            })
        }
    }

    function SavePhieuThuChi_DoiTra(hd, objTraHang = null, objMuaHang = null) {
        let butruNoCu = hd.PhaiThanhToanDB;
        if (!commonStatisJs.CheckNull(butruNoCu)) {
            if (butruNoCu > 0) {// tralai tienkhach
                if (hd.HoanTraTamUng > 0) {
                    // chi tien hdTra
                    if (objTraHang !== null) {
                        GetQuyHoaDonfromHD_andInsert(objTraHang);
                    }
                }
                else {
                    // thu tien hdMua
                    if (objMuaHang !== null) {
                        GetQuyHoaDonfromHD_andInsert(objMuaHang);
                    }
                }
            }
            else {// khachcantra noCu
                // chia tien: hdGoc cu + hdMoi
                if (objTraHang !== null) {
                    hd.MaDoiTuong = objTraHang.MaDoiTuong;
                    hd.TenDoiTuong = objTraHang.TenDoiTuong;
                    hd.NgayLapHoaDon = objTraHang.NgayLapHoaDon;
                }
                ShareTienThu_HDDoiTra(hd, objMuaHang);
            }
        }
    }

    // SaveHoaDon: split multiple func 
    function GetQuyHoaDonfromHD_andInsert(itemHD) {
        var arrPhuongThuc = [];
        var loaiThuChi = 11;
        var tongThu = 0;
        var tienMat = formatNumberToFloat(itemHD.TienMat);
        var tienGui = formatNumberToFloat(itemHD.TienGui);
        var tienATM = formatNumberToFloat(itemHD.TienATM);
        var tienTheGiaTri = itemHD.TienTheGiaTri;
        if (tienTheGiaTri !== undefined) {
            tienTheGiaTri = formatNumberToFloat(tienTheGiaTri);
        }
        else {
            tienTheGiaTri = 0;
        }
        var tienDiem = formatNumberToFloat(itemHD.TTBangDiem);
        var lstQuyChiTiet = [];
        var phaiTT = 0;
        if (self.HoaDons().HoanTraTamUng() > 0) {
            loaiThuChi = 12;
            phaiTT = self.HoaDons().HoanTraTamUng();

            let dataReturn = shareMoney_QuyHD(phaiTT, 0, tienMat, tienATM, tienGui, tienTheGiaTri);
            tienDiem = 0;
            tienMat = dataReturn.TienMat;
            tienATM = dataReturn.TienPOS;
            tienGui = dataReturn.TienChuyenKhoan;
            tienTheGiaTri = dataReturn.TienTheGiaTri;
        }
        else {
            phaiTT = formatNumberToFloat(itemHD.PhaiThanhToan) - formatNumberToFloat(itemHD.KhachDaTra);
            // phân bổ và trừ dần TienThua vào TienMat, POS CK ,...
            let dataReturn = shareMoney_QuyHD(phaiTT, tienDiem, tienMat, tienATM, tienGui, tienTheGiaTri);
            tienDiem = dataReturn.TTBangDiem;
            tienMat = dataReturn.TienMat;
            tienATM = dataReturn.TienPOS;
            tienGui = dataReturn.TienChuyenKhoan;
            tienTheGiaTri = dataReturn.TienTheGiaTri;
        }

        tongThu = tienDiem + tienMat + tienATM + tienGui + tienTheGiaTri;
        var tenDoiTuong = 'Khách lẻ';
        var maDoiTuong = 'KL00001';
        var arrDoiTuong0 = self.ChiTietDoiTuong();
        if (!commonStatisJs.CheckNull(itemHD.MaDoiTuong)) {
            maDoiTuong = itemHD.MaDoiTuong;
        }
        else {
            if (arrDoiTuong0.length > 0) {
                maDoiTuong = arrDoiTuong0[0].MaDoiTuong;
            }
        }
        if (!commonStatisJs.CheckNull(itemHD.TenDoiTuong)) {
            tenDoiTuong = itemHD.TenDoiTuong;
        }
        else {
            if (arrDoiTuong0.length > 0) {
                tenDoiTuong = arrDoiTuong0[0].TenDoiTuong;
            }
        }

        //  used to get save diary
        var ghichu = itemHD.DienGiai;
        if (commonStatisJs.CheckNull(ghichu)) {
            ghichu = ghichu.concat(tenDoiTuong, ' (', maDoiTuong, ') /', itemHD.MaHoaDon);
        }
        else {
            ghichu = ghichu.concat(' / ', tenDoiTuong, ' (', maDoiTuong, ') /', itemHD.MaHoaDon);
        }
        var idHoaDon = itemHD.ID;
        var idKhoanThuChi = null;
        var phuongthucTT = '';
        var idDoiTuong = itemHD.ID_DoiTuong;
        idDoiTuong = idDoiTuong === null ? const_GuidEmpty : idDoiTuong;
        if (tongThu > 0) {
            let ktc = [];
            if (commonStatisJs.CheckNull(idKhoanThuChi)) {
                ktc = $.grep(self.KhoanThuChis(), function (x) {
                    return x.LoaiChungTu.indexOf(itemHD.LoaiHoaDon.toString()) > -1 && x.LaKhoanThu == (loaiThuChi != 12); // thu/chi
                });
            }
            if (ktc.length > 0) {
                idKhoanThuChi = ktc[0].ID;
            }

            // if update HD DatHang OR HDTamLuu, get MaPhieuChi = null --> get autocode
            var maPhieuThuChi = 'TT' + itemHD.MaHoaDon;
            if (itemHD.LoaiHoaDon === 3 || itemHD.TrangThaiHD === 3) {
                // DatHang: set autoCode
                maPhieuThuChi = null;
            }
            var nowSeconds = (new Date()).getSeconds() + 1;
            var Quy_HoaDon = {
                LoaiHoaDon: loaiThuChi,
                TongTienThu: tongThu,
                MaHoaDon: maPhieuThuChi,
                NgayLapHoaDon: itemHD.NgayLapHoaDon,
                NguoiNopTien: tenDoiTuong,
                NguoiTao: userLogin,
                NoiDungThu: itemHD.DienGiai,
                ID_NhanVien: itemHD.ID_NhanVien,
                ID_DonVi: itemHD.ID_DonVi,
                // used to get save diary 
                MaHoaDonTraHang: itemHD.MaHoaDon,
                ID_DoiTuong: idDoiTuong,
                MaNguoiNop: maDoiTuong,
            }

            if (tienMat > 0) {
                let qct = newQuyChiTiet({
                    ID_HoaDonLienQuan: idHoaDon,
                    ID_KhoanThuChi: idKhoanThuChi,
                    ID_DoiTuong: idDoiTuong,
                    GhiChu: ghichu,
                    TienThu: tienMat,
                    TienMat: tienMat,
                    HinhThucThanhToan: 1,
                });
                lstQuyChiTiet.push(qct);

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }

            if (tienATM > 0) {
                let qct = {
                    HinhThucThanhToan: 2,
                }
                if (!commonStatisJs.CheckNull(itemHD.ListTKPos)) {
                    for (let i = 0; i < itemHD.ListTKPos.length; i++) {
                        let itFor = itemHD.ListTKPos[i];
                        let item_TienPos = formatNumberToFloat(itFor.TienPOS);
                        if (tienATM > item_TienPos) {
                            tienATM = tienATM - item_TienPos;

                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: idHoaDon,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanPos.concat(' - ', itFor.TenNganHangPos),
                                TienThu: item_TienPos,
                                TienPOS: item_TienPos,
                                HinhThucThanhToan: 2,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanPos,
                            });
                            qct.ChiPhiNganHang = itFor.ChiPhiThanhToan;
                            qct.LaPTChiPhiNganHang = itFor.TheoPhanTram;
                            lstQuyChiTiet.push(qct);
                            ghichu += ' / ' + qct.GhiChu;
                        }
                        else {
                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: idHoaDon,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanPos.concat(' - ', itFor.TenNganHangPos),
                                TienThu: tienATM,
                                TienPOS: tienATM,
                                HinhThucThanhToan: 2,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanPos,
                            });
                            qct.ChiPhiNganHang = itFor.ChiPhiThanhToan;
                            qct.LaPTChiPhiNganHang = itFor.TheoPhanTram;
                            lstQuyChiTiet.push(qct);
                            tienATM = 0;
                            ghichu += ' / ' + qct.GhiChu;
                        }
                    }
                }
                else {
                    qct = newQuyChiTiet({
                        ID_HoaDonLienQuan: idHoaDon,
                        ID_KhoanThuChi: idKhoanThuChi,
                        ID_DoiTuong: idDoiTuong,
                        GhiChu: ghichu,
                        TienThu: tienATM,
                        TienPOS: tienATM,
                        HinhThucThanhToan: 2,
                        ID_TaiKhoanNganHang: itemHD.ID_TaiKhoanPos,
                    });
                    lstQuyChiTiet.push(qct);
                }

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }

            if (tienGui > 0) {
                let qct = {
                    HinhThucThanhToan: 3,
                }
                if (!commonStatisJs.CheckNull(itemHD.ListTKChuyenKhoan)) {
                    for (let i = 0; i < itemHD.ListTKChuyenKhoan.length; i++) {
                        let itFor = itemHD.ListTKChuyenKhoan[i];
                        let item_TienCK = formatNumberToFloat(itFor.TienCK);
                        if (tienGui > item_TienCK) {
                            tienGui = tienGui - item_TienCK;

                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: idHoaDon,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanCK.concat(' - ', itFor.TenNganHangCK),
                                TienThu: item_TienCK,
                                TienChuyenKhoan: item_TienCK,
                                HinhThucThanhToan: 3,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanChuyenKhoan,
                            });
                            qct.ChiPhiNganHang = itFor.ChiPhiThanhToan;
                            qct.LaPTChiPhiNganHang = itFor.TheoPhanTram;
                            lstQuyChiTiet.push(qct);
                            ghichu += ' / ' + qct.GhiChu;
                        }
                        else {
                            qct = newQuyChiTiet({
                                ID_HoaDonLienQuan: idHoaDon,
                                ID_KhoanThuChi: idKhoanThuChi,
                                ID_DoiTuong: idDoiTuong,
                                GhiChu: itFor.TenTaiKhoanCK.concat(' - ', itFor.TenNganHangCK),
                                TienThu: tienGui,
                                TienChuyenKhoan: tienGui,
                                HinhThucThanhToan: 3,
                                ID_TaiKhoanNganHang: itFor.ID_TaiKhoanChuyenKhoan,
                            });
                            qct.ChiPhiNganHang = itFor.ChiPhiThanhToan;
                            qct.LaPTChiPhiNganHang = itFor.TheoPhanTram;
                            lstQuyChiTiet.push(qct);
                            tienGui = 0;
                            ghichu += ' / ' + qct.GhiChu;
                        }
                    }
                }
                else {
                    qct = newQuyChiTiet({
                        ID_HoaDonLienQuan: idHoaDon,
                        ID_KhoanThuChi: idKhoanThuChi,
                        ID_DoiTuong: idDoiTuong,
                        GhiChu: ghichu,
                        TienThu: tienGui,
                        TienChuyenKhoan: tienGui,
                        HinhThucThanhToan: 3,
                        ID_TaiKhoanNganHang: itemHD.ID_TaiKhoanChuyenKhoan,
                    });
                    lstQuyChiTiet.push(qct);
                }
                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }

            if (tienTheGiaTri > 0) {
                let qct = newQuyChiTiet({
                    ID_HoaDonLienQuan: idHoaDon,
                    ID_KhoanThuChi: idKhoanThuChi,
                    ID_DoiTuong: idDoiTuong,
                    GhiChu: ghichu,
                    TienThu: tienTheGiaTri,
                    TienTheGiaTri: tienTheGiaTri,
                    HinhThucThanhToan: 4,
                });
                lstQuyChiTiet.push(qct);

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }
            if (tienDiem > 0) {
                let qct = newQuyChiTiet({
                    ID_HoaDonLienQuan: idHoaDon,
                    ID_KhoanThuChi: idKhoanThuChi,
                    ID_DoiTuong: idDoiTuong,
                    GhiChu: ghichu,
                    TienThu: tienDiem,
                    DiemThanhToan: itemHD.DiemQuyDoi,
                    HinhThucThanhToan: 5,
                });
                lstQuyChiTiet.push(qct);

                if ($.inArray(qct.HinhThucThanhToan, arrPhuongThuc) === -1) {
                    arrPhuongThuc.push(qct.HinhThucThanhToan);
                }
            }

            arrPhuongThuc = $.unique(arrPhuongThuc);
            for (let i = 0; i < arrPhuongThuc.length; i++) {
                switch (arrPhuongThuc[i]) {
                    case 1:
                        phuongthucTT += 'Tiền mặt, ';
                        break;
                    case 2:
                        phuongthucTT += 'POS, ';
                        break;
                    case 3:
                        phuongthucTT += 'Chuyển khoản,  ';
                        break;
                    case 4:
                        phuongthucTT += 'Thẻ giá trị, ';
                        break;
                    case 5:
                        phuongthucTT += 'Điểm, ';
                        break;
                    case 6:
                        phuongthucTT += 'Thu từ cọc, ';
                        break;
                }
            }

            // remove last comma
            phuongthucTT = Remove_LastComma(phuongthucTT);
            Quy_HoaDon.PhuongThucTT = phuongthucTT;
            Quy_HoaDon.NoiDungThu = ghichu;
            var myData = {};
            myData.objQuyHoaDon = Quy_HoaDon;
            myData.lstCTQuyHoaDon = lstQuyChiTiet;
            if (lstQuyChiTiet.length > 0) {
                ajaxHelper('/api/DanhMuc/Quy_HoaDonAPI/PostQuy_HoaDon_DefaultIDDoiTuong', 'POST', myData).done(function (x) {
                    if (x.res === true) {

                        Quy_HoaDon.MaHoaDon = x.data.MaHoaDon;

                        PostNhanVienThucHien(itemHD, x.data.ID)
                        Insert_NhatKyThaoTac(Quy_HoaDon, [], 3, 1);

                        vmThemMoiKhach.NangNhomKhachHang(idDoiTuong);
                    }
                })
            }
        }
        else {
            PostNhanVienThucHien(itemHD);
        }
    }

    function UpdateIDQuyHoaDon_toBHThucHien(objHD, idQuyHD) {
        if (objHD.BH_NhanVienThucHiens.length > 0) {
            ajaxHelper('/api/DanhMuc/Quy_HoaDonAPI/UpdateIDQuyHoaDon_toBHThucHien?idHoaDon=' + objHD.ID + '&idQuyHD=' + idQuyHD, 'POST').done(function (data) {
            });
        }
    }

    function UpdateDiemKH_toDB(idDoiTuong) {
        var itemDT = self.ChiTietDoiTuong();
        if (itemDT.length > 0) {
            var DM_DoiTuong = {
                ID: itemDT[0].ID,
                TongTichDiem: itemDT[0].TongTichDiem
            }
            var myData = {};
            myData.objDoiTuong = DM_DoiTuong;
            ajaxHelper(DMDoiTuongUri + 'UpdateDiem_DMDoiTuong', 'POST', myData).done(function (err) {
                if (err !== '') {
                    ShowMessage_Danger(err);
                }
            });
        }
    }
    function AddKhachHang_HoaDon(DM_DoiTuong, myDataHD, isDongBo, updateHDDatHang) {
        delete DM_DoiTuong["ID"]; // delete ID because when Offline: save ID = Ma
        delete DM_DoiTuong["ID_NhomDoiTuong"]; // delete ID_NhomDoiTuong because at DM_DoiTuong have ID_NhomDoiTuong type Guid
        console.log('DM_DoiTuong ', DM_DoiTuong)
        jQuery.ajax({
            data: DM_DoiTuong,
            url: DMDoiTuongUri + "PostDM_DoiTuong",
            type: 'POST',
            async: false,
            dataType: 'json',
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            success: function (obj) {
                if (obj.res === true) {
                    var itemDT = obj.data;
                    DM_DoiTuong.ID = itemDT.ID;
                    DM_DoiTuong.Name_Phone = locdau(DM_DoiTuong.TenDoiTuong) + " " +
                        DM_DoiTuong.TenDoiTuong + " " + itemDT.MaDoiTuong + " " + DM_DoiTuong.DienThoai;
                    // remove old, add new IndexDB
                    AddNewDoiTuong_andRemoveDoiTuongOfflineOld_IndexDB(DM_DoiTuong);
                    // save HoaDon
                    myDataHD.objHoaDon.ID_DoiTuong = itemDT.ID;
                    if (isDongBo) {
                        PostHD_SoQuy_DongBo(myDataHD);
                    }
                    else {
                        if (myDataHD.objHoaDon.LoaiHoaDon === 19) {
                            PostHD_HoaDon_DichVu(myDataHD);
                        }
                        else {
                            PostHD_SoQuy_SaveHD(myDataHD, updateHDDatHang);
                        }
                    }
                }
                else {
                    console.log('PostDM_DoiTuong', obj.mes);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
            },
            complete: function () {
                // must load before Hub
                SaveHD_RemoveDisable();
                $('.divDongBoHoa').gridLoader({ show: false });
                $('#btnDongBoHoa').removeAttr('disabled');
            }
        });
    }
    function AddNewDoiTuong_andRemoveDoiTuongOfflineOld_IndexDB(DM_DoiTuong) {
        var maKHoffline = DM_DoiTuong.MaDoiTuong;
        // update again ID for DoiTuong (vi da nang nhom roi)
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].ID_DoiTuong === maKHoffline) {
                    lstHD[i].ID_DoiTuong = DM_DoiTuong.ID;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
        // Update new ID for DoiTuong offline (not remove because lost KH if multiple HD offline same KHO)
        var doiTuongOffline = localStorage.getItem("DM_DoiTuongs");
        if (doiTuongOffline !== null) {
            doiTuongOffline = JSON.parse(doiTuongOffline);
            for (let i = 0; i < doiTuongOffline.length; i++) {
                if (doiTuongOffline[i].ID === maKHoffline) {
                    doiTuongOffline[i].ID = DM_DoiTuong.ID;
                }
            }
            localStorage.setItem("DM_DoiTuongs", JSON.stringify(doiTuongOffline));
        }
    }

    function UpdateGiamGiaHD_ByNhomKH(idRandomHD) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var idNhomDTs = '';
            if (self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0) {
                if (self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === null || self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === undefined) {
                    idNhomDTs = '';
                }
                else {
                    idNhomDTs = self.ChiTietDoiTuong()[0].ID_NhomDoiTuong.toLowerCase();
                }
                // get Nhom of this KhachHang have GiamGia 
                var allNhomGG = $.grep(self.NhomDoiTuongDB(), function (x) {
                    return x.GiamGia > 0 && idNhomDTs.indexOf(x.ID) > -1;
                });

                // sort GiamGia desc & get nhom has GiamGia max
                allNhomGG = allNhomGG.sort(function (a, b) {
                    let x = a.GiamGia, y = b.GiamGia;
                    return x > y ? -1 : x < y ? 1 : 0;
                });
                self.ListGroupSale(allNhomGG);

                if (allNhomGG.length > 0) {
                    let ptGiam = allNhomGG[0].GiamGia;
                    for (let i = 0; i < lstHD.length; i++) {
                        let itFor = lstHD[i];
                        if (lstHD[i].IDRandom === idRandomHD) {
                            if (allNhomGG[0].GiamGiaTheoPhanTram) {
                                lstHD[i].TongGiamGia = (itFor.TongTienHang + itFor.TongTienThue) * ptGiam / 100;
                                lstHD[i].TongChietKhau = ptGiam;
                                lstHD[i].DVTinhGiam = '%';
                            }
                            else {
                                lstHD[i].TongChietKhau = 0;
                                lstHD[i].TongGiamGia = ptGiam;
                                lstHD[i].DVTinhGiam = 'VND';
                            }
                            lstHD[i].TongGiamGiaKM_HD = lstHD[i].KhuyeMai_GiamGia + lstHD[i].TongGiamGia;
                            lstHD[i].ID_NhomDTApplySale = allNhomGG[0].ID;
                            break;
                        }
                    }
                }
                else {
                    self.ListGroupSale([]);
                    for (let i = 0; i < lstHD.length; i++) {
                        // reset TongGiamGia=0 nếu trước đó HD có nhóm KH được giảm giá (OK)
                        if (lstHD[i].IDRandom === idRandomHD && lstHD[i].ID_NhomDTApplySale !== null) {
                            lstHD[i].TongChietKhau = 0;
                            lstHD[i].TongGiamGia = 0;
                            lstHD[i].TongGiamGiaKM_HD = lstHD[i].KhuyeMai_GiamGia + lstHD[i].TongGiamGia;
                            lstHD[i].ID_NhomDTApplySale = null;
                            break;
                        }
                    }
                }
            }
            else {
                self.ListGroupSale([]);
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].IDRandom === idRandomHD
                        && (lstHD[i].ID_NhomDTApplySale !== null)) {
                        lstHD[i].TongChietKhau = 0;
                        lstHD[i].TongGiamGia = 0;
                        lstHD[i].TongGiamGiaKM_HD = lstHD[i].KhuyeMai_GiamGia + lstHD[i].TongGiamGia;
                        lstHD[i].ID_NhomDTApplySale = null;
                        break;
                    }
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));

            UpdateHD_aferGiamGia(idRandomHD);
        }
    }

    function UpdateHD_aferGiamGia(idRandomHD) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRandomHD) {
                    let tongmua = lstHD[i].TongTienHang - formatNumberToFloat(lstHD[i].TongGiamGiaKM_HD)
                        + formatNumberToFloat(lstHD[i].TongTienThue);
                    tongmua = tongmua < 0 ? 0 : tongmua;
                    lstHD[i].TongTienMua = tongmua;

                    // trahang
                    if (lstHD[i].PTGiamDB > 0) {
                        lstHD[i].TongGiamGiaDB = lstHD[i].PTGiamDB * lstHD[i].TongGiaGocHangTra / 100;
                    }
                    if (lstHD[i].PTThueDB > 0) {
                        lstHD[i].TongThueDB = lstHD[i].PTThueDB * lstHD[i].TongGiaGocHangTra / 100;
                    }
                    let tongtra = lstHD[i].TongGiaGocHangTra - lstHD[i].TongChiPhiHangTra - lstHD[i].TongGiamGiaDB + lstHD[i].TongThueDB;
                    tongtra = tongtra < 0 ? 0 : tongtra;
                    lstHD[i].TongTienTra = tongtra;

                    let noHDCu = lstHD[i].NoHDCu;
                    if (commonStatisJs.CheckNull(noHDCu)) {
                        noHDCu = 0;
                    }
                    let butruHDGoc = tongtra - noHDCu;
                    let phaiTT = tongmua - butruHDGoc - lstHD[i].KhachDaTra;

                    if (phaiTT < 0) {
                        lstHD[i].HoanTraTamUng = Math.abs(phaiTT);
                        lstHD[i].DaTraKhach = lstHD[i].HoanTraTamUng;
                        lstHD[i].TienMat = lstHD[i].HoanTraTamUng;
                        lstHD[i].PhaiThanhToan = 0;
                    }
                    else {
                        lstHD[i].PhaiThanhToan = phaiTT;
                        lstHD[i].TongThanhToan = phaiTT;
                        lstHD[i].DaThanhToan = lstHD[i].LoaiHoaDon === 3 ? 0 : phaiTT;
                        lstHD[i].TienMat = lstHD[i].LoaiHoaDon === 3 ? 0 : phaiTT;
                        lstHD[i].HoanTraTamUng = 0;
                    }
                    lstHD[i].PhaiThanhToanDB = butruHDGoc;
                    lstHD[i].TienGui = 0;
                    lstHD[i].TienATM = 0;
                    lstHD[i].TienTheGiaTri = 0;
                    lstHD[i].TienThua = 0;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }

    self.GetlistGroupSale = function () {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            if (itemHD.length > 0) {
                var idRandomHD = itemHD[0].IDRandom;
                // get CT DoiTra --> check GiamGia HD by Nhom KH
                var arrCTDoiTra = [];
                var lstCTHD_DoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                if (lstCTHD_DoiTra !== null) {
                    lstCTHD_DoiTra = JSON.parse(lstCTHD_DoiTra);
                    arrCTDoiTra = $.grep(lstCTHD_DoiTra, function (x) {
                        return x.IDRandomHD === idRandomHD;
                    });
                }
                // chi update giam gia if maHD !='BG0000' and HD khong tao tu HD Dat hang, and not HD sao chep
                // neu BG0000--> not update, but MaHoaDon = 'Copy_BG..'-> update 
                // update GiamGia if TraHang co MuaMoi (ID_HoaDon = 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'), x!==0
                if (itemHD[0].MaHoaDon.indexOf(nameHD_UpdateDH) !== 0
                    && (itemHD[0].ID_HoaDon === null || itemHD[0].ID_HoaDon === const_GuidEmpty
                        || (itemHD[0].LoaiHoaDon === 6 && arrCTDoiTra.length > 0))) {
                    var idNhomDTs = '';
                    if (self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0) {
                        if (self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === null || self.ChiTietDoiTuong()[0].ID_NhomDoiTuong === undefined) {
                            idNhomDTs = '';
                        }
                        else {
                            idNhomDTs = self.ChiTietDoiTuong()[0].ID_NhomDoiTuong.toLowerCase();
                        }
                        // get Nhom of this KhachHang have GiamGia 
                        var allNhomGG = $.grep(self.NhomDoiTuongDB(), function (x) {
                            return x.GiamGia > 0 && idNhomDTs.indexOf(x.ID) > -1;
                        });

                        // sort GiamGia desc & get nhom has GiamGia max
                        allNhomGG = allNhomGG.sort(function (a, b) {
                            let x = a.GiamGia, y = b.GiamGia;
                            return x > y ? -1 : x < y ? 1 : 0;
                        });
                        self.ListGroupSale(allNhomGG);
                    }
                    else {
                        self.ListGroupSale([]);
                    }
                }
            }
        }
    }

    self.ChangeID_NhomSale = function (item) {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        var idRandom = null;
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemNhomChose = $.grep(self.NhomDoiTuongDB(), function (x) {
                return x.ID === item.ID;
            });
            if (itemNhomChose.length > 0) {

                var ptGiam = itemNhomChose[0].GiamGia;
                for (let i = 0; i < lstHD.length; i++) {
                    let itFor = lstHD[i];
                    if (itFor.MaHoaDon === _maHoaDon
                        && (itFor.NguoiTao === userLogin || itFor.TrangThaiHD === 3)) {
                        if (itemNhomChose[0].GiamGiaTheoPhanTram) {
                            lstHD[i].TongChietKhau = ptGiam;
                            lstHD[i].TongGiamGia = (itFor.TongTienHang + itFor.TongTienThue) * ptGiam / 100;
                            dvtGiam = '%';
                            $('#dvtGiamParent').text('%');
                            $('.vnd1').removeClass('gb');
                            $('.senter1').addClass('gb');
                        }
                        else {
                            $('#dvtGiamParent').text('VND');
                            $('.senter1').removeClass('gb');
                            $('.vnd1').addClass('gb');
                            lstHD[i].TongGiamGia = ptGiam;
                            lstHD[i].TongChietKhau = 0;
                        }
                        idRandom = lstHD[i].IDRandom;
                        lstHD[i].TongGiamGiaKM_HD = lstHD[i].KhuyeMai_GiamGia + lstHD[i].TongGiamGia;
                        lstHD[i].ID_NhomDTApplySale = item.ID;
                        $('.jsSalePr .price-sa').val(formatNumber3Digit(ptGiam));
                        break;
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                if (idRandom !== null) {
                    UpdateHD_aferGiamGia(idRandom);
                }
            }
        }
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        BindHD_byIDRandom(idRandom);
    }
    function GetDiemGiaoDich_HDTraHang(phaiTTTraHang) {
        var diemGiaoDich = 0;
        if (phaiTTTraHang > 0) {
            if (self.ThietLap().TinhNangTichDiem) {
                if (self.ThietLap_TichDiem() !== null && self.ThietLap_TichDiem().length > 0) {
                    diemGiaoDich = Math.floor(phaiTTTraHang / self.ThietLap_TichDiem()[0].TyLeDoiDiem);
                }
            }
        }
        return diemGiaoDich;
    };
    // update DiemKhachHang
    function UpdateInforKH_inLstDoiTuongs(itemHD, isTrahet) {

        if (self.ChiTietDoiTuong().length > 0) {
            var tongdiem = self.ChiTietDoiTuong()[0].TongTichDiem;
            var tongTraHang = itemHD.TongGiaGocHangTra - itemHD.TongGiamGiaDB;
            var tongMua = itemHD.TongTienHang - itemHD.TongGiamGiaKM_HD;
            var updateDiem = false;
            var diemHienTai = 0;
            var diemGDCurrent = formatNumberToFloat(itemHD.DiemGiaoDich);
            switch (itemHD.LoaiHoaDon) {
                case 1:
                case 19:
                case 25:
                    //diemHienTai = itemHD.DiemHienTai - itemHD.DiemGiaoDichDB;
                    // not get diem from hoadon 
                    //(vì trường hợp tạo 2 hóa đơn cho 1 khách hàng, sau đó thanh toán cùng lúc thì chưa update điểm mới cho khách)
                    diemHienTai = tongdiem + diemGDCurrent - itemHD.DiemQuyDoi - itemHD.DiemGiaoDichDB;
                    // Neu HD khong dc tich diem (vi cai dat: khong TichDiem cho HD giam gia/HD thanh toan = diem), nhung van TT = diem --> tru diem KH
                    if ((diemGDCurrent !== 0) || (diemGDCurrent === 0 && itemHD.DiemQuyDoi > 0)) {
                        updateDiem = true;
                    }
                    break;
                case 6:
                    // if TraHang from HD tich diem --> get DiemGD of TraHang--> tru diem for KH
                    var diemGD = 0;
                    if (itemHD.FromHDTichDiem) {
                        diemGD = GetDiemGiaoDich_HDTraHang(tongTraHang);
                        diemHienTai = tongdiem + diemGDCurrent - diemGD; // diem cu of KH + diem GD - diem tra hang
                        updateDiem = true;
                    }
                    else {
                        // khong tra hang tu HD tich diem, nhung co mua moi --> cong diem cho KH
                        if (tongMua > 0) {
                            diemHienTai = tongdiem + diemGDCurrent;
                            updateDiem = true;
                        }
                        else {
                            // khong mua moi
                            diemHienTai = tongdiem; // assign = 0 --> avoid update when UpdateDiemKH_toDB (online)
                        }
                    }
                    break;
            }
            if (updateDiem) {
                self.ChiTietDoiTuong()[0].TongTichDiem = diemHienTai;
            }
        }
    }
    // In Offline
    function GetAllMauIn_byChiNhanh() {
        ajaxHelper('/api/DanhMuc/ThietLapApi/GetAllMauIn_ByChiNhanh?idChiNhanh=' + id_DonVi, 'GET').done(function (data) {
            if (data !== null) {
                self.DM_MauIn(data);
                self.BindSettingPrint(true);
                WriteData_Dexie(db.DM_MauIn, data);
            }
        });
    }
    self.printDraft = function () {
        var rolePrintDraft = $.grep(self.Quyen_NguoiDung(), function (x) {
            return x.MaQuyen === 'HoaDon_InNhap';
        });
        if (rolePrintDraft.length === 0) {
            ShowMessage_Danger('Bạn không có quyền in nháp');
            return false;
        }
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var lstHDTemp = localStorage.getItem(lcListHD);
        var objAdd = [];
        if (lstHDTemp !== null) {
            lstHDTemp = JSON.parse(lstHDTemp);
            objAdd = GetHDOpening_byMaHoaDon(_maHoaDon, lstHDTemp);
            if (objAdd.length > 0) {
                var idRandomHD = objAdd[0].IDRandom;
                // show div by LoaiHoaDon
                var maChungTu = '';
                switch (objAdd[0].LoaiHoaDon) {
                    case 0:
                    case 1:
                        maChungTu = 'HDBL';
                        break;
                    case 3:
                        maChungTu = 'DH';
                        break;
                    case 19:
                        maChungTu = 'GDV';
                        break;
                    case 6:
                        // check co HD Doi Tra khong
                        var lstCTDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                        if (lstCTDoiTra !== null) {
                            lstCTDoiTra = JSON.parse(lstCTDoiTra);
                            var itemDT = $.grep(lstCTDoiTra, function (x) {
                                return x.IDRandomHD === idRandomHD;
                            });
                            if (itemDT.length > 0) {
                                // HD Doi Tra
                                maChungTu = 'DTH';
                                var arrCTHDMH_format = GetCTHDPrint_Format(itemDT);
                                self.CTHoaDonPrintMH(arrCTHDMH_format); // CTHD mua hang
                            }
                            else {
                                // HD Tra
                                maChungTu = 'TH';
                            }
                        }
                        else {
                            // HD Tra
                            maChungTu = 'TH';
                        }
                        break;
                }
                var objHDPrint = GetInforHDPrint(objAdd[0]);
                // tim CTHoaDon t/u voi HoaDon
                var objCTAdd = [];
                var listAllCTHD = localStorage.getItem(lcListCTHD);
                if (listAllCTHD !== null) {
                    listAllCTHD = JSON.parse(listAllCTHD);
                    objCTAdd = $.grep(listAllCTHD, function (x) {
                        return x.IDRandomHD === idRandomHD;
                    });
                    if (objCTAdd.length > 0) {
                        objCTAdd = GetCTHoaDon_FromArr(objCTAdd, idRandomHD);
                        self.InforHDprintf(objHDPrint);
                        var arrCTHD_format = GetCTHDPrint_Format(objCTAdd);
                        self.CTHoaDonPrint(arrCTHD_format);
                    }
                }
            }
            else {
                ShowMessage_Danger('Vui lòng nhập chi tiết hóa đơn');
                return;
            }
        }
        else {
            ShowMessage_Danger('Vui lòng nhập chi tiết hóa đơn');
            return;
        }
        self.InHoaDon(maChungTu, true);
    }
    shortcut.add('F11', function () {
        var rolePrintDraft = $.grep(self.Quyen_NguoiDung(), function (x) {
            return x.MaQuyen === 'HoaDon_InNhap';
        });
        if (rolePrintDraft.length === 0) {
            ShowMessage_Danger('Bạn không có quyền in nháp');
            return false;
        }
        // check set up print draft
        var itemEx = [];
        var lcSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lcSetPrint !== null) {
            lcSetPrint = JSON.parse(lcSetPrint);
            var loaiHD = GetLoaiHoaDon_ofHDopening();
            itemEx = $.grep(lcSetPrint, function (x) {
                return x.LoaiHoaDon === loaiHD && x.PrintDraft === true;
            });
        }
        if (itemEx.length > 0) {
            self.printDraft();
        }
        else {
            ShowMessage_Danger('Bạn chưa thiết lập in nháp hóa đơn');
        }
    })
    self.InHoaDon_TextFile = function (idDivPrint) {
        var contents = $(idDivPrint).html();
        contents = contents.concat('<script src="/Scripts/knockout-3.4.2.js"></script>');
        PrintExtraReport(contents, '', self.numberOfPrint());
    }

    function UpdateNhomKH_DB(idDoiTuong) {
        var lstNhom = $.map(self.NhomDoiTuongChosed(), function (x) { return x.ID });
        if (lstNhom.length > 0) {
            var lst = [];
            for (let i = 0; i < lstNhom.length; i++) {
                let obj = {
                    ID_DoiTuong: idDoiTuong,
                    ID_NhomDoiTuong: lstNhom[i],
                }
                lst.push(obj);
            }
            console.log(lst);
            var myData = {
                lstDM_DoiTuong_Nhom: lst,
            };
            ajaxHelper(DMDoiTuongUri + 'PutDM_DoiTuong_Nhom', 'PUT', myData).done(function () {

            })
        }
        else {
            // delete all nhom of DoiTuon in DB
            ajaxHelper(DMDoiTuongUri + 'DeleteAllNhom_ofDoiTuong?idDoiTuong=' + idDoiTuong, 'PUT').done(function (x) {
            })
        }
    }

    // setting print (new interface)
    self.ChangeSetPrint = function (typeSet) {
        self.agree_SettingPrint();
        // load again HangHoa, load after save cache
        switch (typeSet) {
            case 4:
                var loaiHD = GetLoaiHoaDon_ofHDopening();
                LoadAgain_ListHangHoa_IfNotXuatAm(loaiHD);
                break;
            case 5:
                BindCTHD_whenDocumentReadly();
                Bind_CTHĐoiTra_afterHideColumn();
                break;
            case 6:
                ActiveTab_SoDoPhong(false);
                break;
        }
    }

    self.BindSettingPrint = function (isFirstLoad) {
        // get mahoadon --> get temp by loaiHoaDon
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        var itemHD = [];
        var loaiHoaDon = 1;
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
        }
        if (itemHD.length > 0) {
            loaiHoaDon = itemHD[0].LoaiHoaDon;
        }
        // get list temp by loaiHoaDon
        var maloaiChungTu = '';
        switch (loaiHoaDon) {
            case 1:
                maloaiChungTu = 'HDBL';
                break;
            case 19:
                maloaiChungTu = 'GDV';
                break;
            case 3:
                maloaiChungTu = 'DH';
                break;
            case 6:
                // check xem co mua moi khong
                var itemCTDT = [];
                var lstCTDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                if (lstCTDoiTra !== null) {
                    lstCTDoiTra = JSON.parse(lstCTDoiTra);
                    if (itemHD.length > 0) {
                        itemCTDT = $.grep(lstCTDoiTra, function (x) {
                            return x.IDRandomHD === itemHD[0].IDRandom;
                        });
                    }
                }
                if (itemCTDT.length > 0) {
                    maloaiChungTu = 'DTH';
                    loaiHoaDon = 17; // assign to do check in set print
                }
                else {
                    maloaiChungTu = 'TH';
                }
                break;
        }
        // get all temp with maChungTu
        var lstTemp = $.grep(self.DM_MauIn(), function (x) {
            return x.MaLoaiChungTu === maloaiChungTu;
        });
        // check xem co mau mac dinh chua
        var itemDefault = $.grep(self.DM_MauIn(), function (x) {
            return x.MaLoaiChungTu === maloaiChungTu && x.LaMacDinh;
        });
        if (itemDefault.length === 0) {
            // neu chua co -->  push MauMacDinh into lst Mau
            var tempDefault = {
                ID: 0,
                TenMauIn: 'Mẫu mặc định',
                LaMacDinh: true,
            }
            lstTemp.unshift(tempDefault);
        }
        // sort by LaMacDinh is top
        lstTemp = lstTemp.sort(function (a, b) {
            var x = a.LaMacDinh, y = b.LaMacDinh;
            return (x === y) ? 0 : x ? -1 : 1;
        });
        // hide product if TonKho <= 0 
        var hideProduct = false;
        var itemSet = [];
        var lcSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lcSetPrint !== null) {
            lcSetPrint = JSON.parse(lcSetPrint);
            var itemEx = $.grep(lcSetPrint, function (x) {
                return x.HideProduct === true;
            });
            hideProduct = itemEx.length > 0;
            itemSet = $.grep(lcSetPrint, function (x) {
                return x.LoaiHoaDon === loaiHoaDon && x.ID_DonVi === id_DonVi;
            });
        }
        if (itemSet.length === 0) {
            Reset_SettingPrint();
            self.ListTempPrint(lstTemp);
        }
        else {
            // find id_temprint in lst
            var miEx = $.grep(lstTemp, function (x) {
                return x.ID === itemSet[0].TempPrint;
            });
            self.setPrintDraft(itemSet[0].PrintDraft);
            self.setPrintPay(itemSet[0].PrintPay);
            self.setPrintTicket(itemSet[0].PrintTicket);
            self.numberOfPrint(itemSet[0].NumberOfPrint);
            self.setNhapQuyCach(itemSet[0].ShowEditQuyCach);
            self.setViewSoDoPhong(itemSet[0].ShowSoDoPhong);
            self.setLuuTam(itemSet[0].ShowLuuTam);
            self.ListTempPrint(lstTemp);
            if (miEx.length > 0) {
                // don't reset SettingPrint
                // set value for ddlTempPrint after bind ListTempPrint
                $('#ddlTempPrint').val(itemSet[0].TempPrint);
            }
        }
        // chi can cai dat HideProduct = true cho 1 loaiHD -- > default cac loai khac cung HideProduct = true 
        self.setHideProduct(hideProduct);
        if (isFirstLoad === false) {
            var divSetPrint = $('.install-notifi');
            if (divSetPrint.is(':hidden')) {
                divSetPrint.show();
            }
            else {
                divSetPrint.hide();
            };
        }
    }

    self.Change_MauIn = function () {
        var idChosed = $('#ddlTempPrint').val();
        if (idChosed !== undefined) {
            self.agree_SettingPrint();
        }
    }
    // set height, page size when full product
    function SetPageSize_FullProduct(firstLoad) {
        if (firstLoad) {
            if (_maHoaDon === '' || _maHoaDon === undefined) {
                _maHoaDon = $('.bill-bxslide  li.using font').text();
            }
            var loaiHoaDon = 3;
            // Trả hàng ... or THO or copy_T
            if (_maHoaDon.indexOf('T') > -1) {
                loaiHoaDon = 6;
            }
            // Hóa đơn ... or HDO or Coypy_H
            if (_maHoaDon.indexOf('H') === 0 || _maHoaDon.indexOf('CopyH') === 0) {
                loaiHoaDon = 1;
            }
            if (_maHoaDon.indexOf('G') === 0 || _maHoaDon.indexOf('CopyG') === 0) {
                loaiHoaDon = 19;
            }
            // reset setPrintTicket = false, after assign again
            //self.setPrintTicket(false);
            var hideProduct = false;
            var lsSetPrint = localStorage.getItem(lcSetPrintConst);
            if (lsSetPrint !== null) {
                lsSetPrint = JSON.parse(lsSetPrint);
                var itemEx = $.grep(lsSetPrint, function (x) {
                    return x.HideProduct === true && x.ID_DonVi === id_DonVi;
                });
                hideProduct = itemEx.length > 0;
                for (let i = 0; i < lsSetPrint.length; i++) {
                    var itemSet = lsSetPrint[i];
                    if (itemSet.LoaiHoaDon === loaiHoaDon && itemSet.ID_DonVi === id_DonVi) {
                        self.setPrintDraft(itemSet.PrintDraft);
                        self.setPrintPay(itemSet.PrintPay);
                        self.setPrintTicket(itemSet.PrintTicket);
                        self.numberOfPrint(formatNumberToFloat(itemSet.NumberOfPrint));
                        $('#ddlTempPrint').val(itemSet.TempPrint);
                        break;
                    }
                }
            }
            self.setHideProduct(hideProduct);
        }
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            // only assign setPrintTicket = true if not HDupdate or hd was create from DatHang
            var itemHD = $.grep(lstHD, function (x) {
                return x.MaHoaDon === _maHoaDon && (x.ID !== null || x.ID_HoaDon !== null);
            });
            if (itemHD.length > 0) {
                self.setPrintTicket(false);
            }
        }
        if (self.setPrintTicket()) {
            $('.slide-goods').css('height', '94%');
            $('.grocery .bill-listmenu').css('height', '100%');
            // set assign pageSize list HangHoa
            if (self.windowWidth() < 1280) {
                self.windowWidth(1200);
            };
            if (self.windowWidth() >= 1569) {
                self.windowWidth(1569);
            };
            switch (self.windowWidth()) {
                case 768:
                    self.pageSize(12);
                    break;
                case 1024:
                    self.pageSize(6);
                    break;
                case 1200:
                    self.pageSize(12);
                    break;
                case 1280:
                    self.pageSize(12);
                    break;
                case 1358:
                    self.pageSize(24);
                    break;
                case 1440:
                    self.pageSize(28);
                    break;
                case 1569:
                    self.pageSize(24);
                    break;
            }
        }
        else {
            $('.slide-goods').css('height', '340px');
            $('.grocery .bill-listmenu').css('max-height', '370px');
            switch (self.windowWidth()) {
                case 768:
                    self.pageSize(12);
                    break;
                case 1024:
                    self.pageSize(6);
                    break;
                case 1200:
                    self.pageSize(12);
                    break;
                case 1280:
                    self.pageSize(12);
                    break;
                case 1358:
                    self.pageSize(12);
                    break;
                case 1440:
                    self.pageSize(12);
                    break;
                case 1569:
                    self.pageSize(12);
                    break;
            }
        }
        if (self.windowWidth() >= 1440) {
            self.pageSizeHD(4);
        } else {
            if (self.windowWidth() < 1440 && self.windowWidth() >= 1280) {
                self.pageSizeHD(3);
            } else {
                if (self.windowWidth() < 1280 && self.windowWidth() >= 1024) {
                    self.pageSizeHD(2);
                } else {
                    if (self.windowWidth() < 1024 && self.windowWidth() >= 800) {
                        self.pageSizeHD(1);
                    } else {
                        if (self.windowWidth() <= 768) {
                            self.pageSizeHD(4);
                        }
                    }
                }
            }
        }
    }
    self.UpDown_FullProduct = function () {
        if (self.setPrintTicket()) {
            // up: len, down: xuong
            var isUp = true;
            if ($('.up-slide .dow-sli').css('display') === 'none') {
                isUp = false;
            }
            // set assign pageSize list HangHoa
            if (self.windowWidth() >= 1536) {
                self.windowWidth(1600);
            }
            if (isUp) {
                switch (self.windowWidth()) {
                    case 768:
                        self.pageSize(8);
                        break;
                    case 1024:
                        self.pageSize(6);
                        break;
                    case 1358:
                        self.pageSize(24);
                        break;
                    case 1400:
                        self.pageSize(28);
                        break;
                    case 1600:
                        self.pageSize(28);
                        break;
                }
            }
            else {
                switch (self.windowWidth()) {
                    case 768:
                        self.pageSize(4);
                        break;
                    case 1024:
                        self.pageSize(6);
                        break;
                    case 1358:
                        self.pageSize(12);
                        break;
                    case 1400:
                        self.pageSize(21);
                        break;
                }
            }
        }
        if (self.windowWidth() >= 1440) {
            self.pageSizeHD(4);
        } else {
            if (self.windowWidth() < 1440 && self.windowWidth() >= 1280) {
                self.pageSizeHD(3);
            } else {
                if (self.windowWidth() < 1280 && self.windowWidth() >= 1024) {
                    self.pageSizeHD(2);
                } else {
                    if (self.windowWidth() < 1024 && self.windowWidth() >= 800) {
                        self.pageSizeHD(1);
                    } else {
                        if (self.windowWidth() <= 768) {
                            self.pageSizeHD(4);
                        }
                    }
                }
            }
        }
    }
    self.agree_SettingPrint = function () {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        // check LoaiHoaDon is opening
        var loaiHoaDon = 1;
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHD);
            if (itemHD.length > 0) {
                loaiHoaDon = itemHD[0].LoaiHoaDon;
                if (loaiHoaDon === 6) {
                    var itemCTDT = [];
                    var lstCTDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                    if (lstCTDoiTra !== null) {
                        lstCTDoiTra = JSON.parse(lstCTDoiTra);
                        itemCTDT = $.grep(lstCTDoiTra, function (x) {
                            return x.IDRandomHD === itemHD[0].IDRandom;
                        });
                    }
                    // if DoiTra, assign Loai = 4
                    if (itemCTDT.length > 0) {
                        loaiHoaDon = 4;
                    }
                }
            }
        }
        var exist = false;
        var idTemprint = $('#ddlTempPrint').val();
        var lsSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lsSetPrint !== null) {
            lsSetPrint = JSON.parse(lsSetPrint);
            // if exist --> update new value
            for (let i = 0; i < lsSetPrint.length; i++) {
                if (lsSetPrint[i].LoaiHoaDon === loaiHoaDon && lsSetPrint[i].ID_DonVi === id_DonVi) {
                    lsSetPrint[i].PrintDraft = self.setPrintDraft();
                    lsSetPrint[i].PrintPay = self.setPrintPay();
                    // default: not set print ticker for Dathang/TraHang
                    if (loaiHoaDon !== 1) {
                        self.setPrintTicket(false);
                    }
                    lsSetPrint[i].PrintTicket = self.setPrintTicket();
                    lsSetPrint[i].NumberOfPrint = self.numberOfPrint();
                    lsSetPrint[i].TempPrint = idTemprint;
                    lsSetPrint[i].HideProduct = self.setHideProduct();
                    lsSetPrint[i].ShowEditQuyCach = self.setNhapQuyCach();
                    lsSetPrint[i].ShowSoDoPhong = self.setViewSoDoPhong();
                    lsSetPrint[i].ShowLuuTam = self.setLuuTam();
                    exist = true;
                    break;
                }
            }
            // if HideProduct = false --> update HideProduct = false for all
            if (self.setHideProduct() === false) {
                for (let i = 0; i < lsSetPrint.length; i++) {
                    lsSetPrint[i].HideProduct = false;
                }
            }
        }
        else {
            lsSetPrint = [];
        }
        if (exist === false) {
            if (loaiHoaDon !== 1) {
                self.setPrintTicket(false);
            }
            var objSetPrint = {
                LoaiHoaDon: loaiHoaDon, // 1.HDBL, 3.DH, 6.TH, 17.DTH (use for setting print)
                PrintDraft: self.setPrintDraft(),
                PrintPay: self.setPrintPay(),
                PrintTicket: self.setPrintTicket(),
                NumberOfPrint: self.numberOfPrint(),
                TempPrint: idTemprint,
                HideProduct: self.setHideProduct(),
                ShowEditQuyCach: self.setNhapQuyCach(),
                ShowSoDoPhong: self.setViewSoDoPhong(),
                ShowLuuTam: self.setLuuTam(),
                ID_DonVi: id_DonVi,
            };
            lsSetPrint.push(objSetPrint);
        }
        localStorage.setItem(lcSetPrintConst, JSON.stringify(lsSetPrint));
    }
    self.increaseNumberPrint = function (isIncrease) {
        var thisObj = $('#txtNumberOfPrint');
        var numberOld = formatNumberToFloat(thisObj.val());
        if (isIncrease) {
            numberOld = numberOld + 1;
        }
        else {
            numberOld = numberOld - 1;
            if (numberOld <= 0) {
                numberOld = 1;
            }
        }
        thisObj.val(numberOld);
        self.numberOfPrint(numberOld);
        self.agree_SettingPrint();
    }
    self.editNumberOfPrint = function () {
        var number = formatNumberToFloat($('#txtNumberOfPrint').val());
        self.numberOfPrint(number);
        self.agree_SettingPrint();
    }

    self.BindSet_HideShowColumCTHD = function () {
        $('#HienThi').modal('show');
        var lcSetCTHD = localStorage.getItem('lcHideShowColumCTHD_BL');
        if (lcSetCTHD !== null) {
            lcSetCTHD = JSON.parse(lcSetCTHD);
            for (let i = 0; i < lcSetCTHD.length; i++) {
                self.show_STT(lcSetCTHD[i].ShowSTT);
                self.show_ProductCode(lcSetCTHD[i].ShowProductCode);
                self.show_ProductName(lcSetCTHD[i].ShowProductName);
                self.show_ProductCount(lcSetCTHD[i].ShowProductCount);
                self.show_ProductSale(lcSetCTHD[i].ShowProductSale);
                self.show_ProductPrice(lcSetCTHD[i].ShowProductPrice);
                self.show_SumPrice(lcSetCTHD[i].ShowSumPrice);
                break;
            }
        }
        else {
            self.show_STT(true);
            self.show_ProductCode(true);
            self.show_ProductName(true);
            self.show_ProductCount(true);
            self.show_ProductPrice(true);
            self.show_SumPrice(true);
            self.show_ProductSale(true);
        }
        if (!self.show_STT()) {
            $('#divSet_showSTT').removeClass('main-hide');
        }
        else {
            $('#divSet_showSTT').addClass('main-hide');
        }
        if (!self.show_ProductCode()) {
            $('#divSet_showProductCode').removeClass('main-hide');
        }
        else {
            $('#divSet_showProductCode').addClass('main-hide');
        }
        if (!self.show_ProductName()) {
            $('#divSet_showProductName').removeClass('main-hide');
        }
        else {
            $('#divSet_showProductName').addClass('main-hide');
        }
        if (!self.show_ProductPrice()) {
            $('#divSet_showProductPrice').removeClass('main-hide');
        }
        else {
            $('#divSet_showProductPrice').addClass('main-hide');
        }
        if (!self.show_SumPrice()) {
            $('#divSet_showSumPrice').removeClass('main-hide');
        }
        else {
            $('#divSet_showSumPrice').addClass('main-hide');
        }
        if (!self.show_ProductCount()) {
            $('#divSet_showProductCount').removeClass('main-hide');
        }
        else {
            $('#divSet_showProductCount').addClass('main-hide');
        }
        if (!self.show_ProductSale()) {
            $('#divSet_showProductSale').removeClass('main-hide');
        }
        else {
            $('#divSet_showProductSale').addClass('main-hide');
        }
    }
    self.Setting_HideShowColumCTHD = function (idDiv) {
        var obj = $('#' + idDiv);
        obj.toggleClass("main-hide");
        switch (idDiv) {
            case 'divSet_showSTT':
                if (!obj.hasClass('main-hide')) {
                    self.show_STT(false);
                }
                else {
                    self.show_STT(true);
                }
                break;
            case 'divSet_showProductCode':
                if (!obj.hasClass('main-hide')) {
                    self.show_ProductCode(false);
                }
                else {
                    self.show_ProductCode(true);
                }
                break;
            case 'divSet_showProductName':
                if (!obj.hasClass('main-hide')) {
                    self.show_ProductName(false);
                }
                else {
                    self.show_ProductName(true);
                }
                break;
            case 'divSet_showProductPrice':
                if (!obj.hasClass('main-hide')) {
                    self.show_ProductPrice(false);
                }
                else {
                    self.show_ProductPrice(true);
                }
                break;
            case 'divSet_showSumPrice':
                if (!obj.hasClass('main-hide')) {
                    self.show_SumPrice(false);
                }
                else {
                    self.show_SumPrice(true);
                }
                break;
            case 'divSet_showProductCount':
                if (!obj.hasClass('main-hide')) {
                    self.show_ProductCount(false);
                }
                else {
                    self.show_ProductCount(true);
                }
                break;
            case 'divSet_showProductSale':
                if (!obj.hasClass('main-hide')) {
                    self.show_ProductSale(false);
                }
                else {
                    self.show_ProductSale(true);
                }
                break;
        }
    }
    var widthTenSanPham;
    self.Agree_SettingHideShowColumCTHD = function () {
        var lcSetCTHD = localStorage.getItem('lcHideShowColumCTHD_BL');
        if (lcSetCTHD !== null) {
            lcSetCTHD = JSON.parse(lcSetCTHD);
            for (let i = 0; i < lcSetCTHD.length; i++) {
                lcSetCTHD[i].ShowSTT = self.show_STT();
                lcSetCTHD[i].ShowProductCode = self.show_ProductCode();
                lcSetCTHD[i].ShowProductName = self.show_ProductName();
                lcSetCTHD[i].ShowProductPrice = self.show_ProductPrice();
                lcSetCTHD[i].ShowProductSale = self.show_ProductSale();
                lcSetCTHD[i].ShowSumPrice = self.show_SumPrice();
                lcSetCTHD[i].ShowProductCount = self.show_ProductCount();
                break;
            }
        }
        else {
            lcSetCTHD = [];
            var objSet = {
                ShowSTT: self.show_STT(),
                ShowProductCode: self.show_ProductCode(),
                ShowProductName: self.show_ProductName(),
                ShowProductPrice: self.show_ProductPrice(),
                ShowProductSale: self.show_ProductSale(),
                ShowSumPrice: self.show_SumPrice(),
                ShowProductCount: self.show_ProductCount(),
                ShowWidthProductName: self.show_WidthProductName()
            };
            lcSetCTHD.push(objSet);
        }
        widthTenSanPham = 30;
        if (lcSetCTHD[0].ShowProductPrice === true) {
            widthTenSanPham = widthTenSanPham + 130;
        }
        if (lcSetCTHD[0].ShowProductSale === true) {
            widthTenSanPham = widthTenSanPham + 130;
        }
        if (lcSetCTHD[0].ShowProductCount === true) {
            widthTenSanPham = widthTenSanPham + 185;
        }
        if (lcSetCTHD[0].ShowSumPrice === true) {
            widthTenSanPham = widthTenSanPham + 130;
        }
        $('#HienThi').modal('hide');
        self.show_WidthProductName("calc(100% - " + widthTenSanPham + "px)");
        self.showHeader_WidthProductName("calc(100% - " + widthTenSanPham + "px)");
        lcSetCTHD[0].ShowWidthProductName = self.show_WidthProductName();
        localStorage.setItem('lcHideShowColumCTHD_BL', JSON.stringify(lcSetCTHD));
        BindHD_CTHDafterSave();
        HideShow_HeaderCTHD();
        Bind_CTHĐoiTra_afterHideColumn();
    }
    function HideShow_HeaderCTHD() {
        self.showHeader_STT(self.show_STT());
        self.showHeader_ProductCode(self.show_ProductCode());
        self.showHeader_ProductName(self.show_ProductName());
        self.showHeader_ProductPrice(self.show_ProductPrice());
        self.showHeader_ProductSale(self.show_ProductSale());
        self.showHeader_SumPrice(self.show_SumPrice());
        self.showHeader_ProductCount(self.show_ProductCount());
        self.showHeader_WidthProductName(self.show_WidthProductName());
    }
    self.FullScreen = function () {
        toggleFullScreen();
        var elm = $('#ESC-full-screen');
        if ($(elm).css('display') === 'none') {
            $('#full-screen').attr('title', '');
            elm.show();
        }
        else {
            $('#full-screen').attr('title', 'Toàn màn hình');
            elm.hide();
        }
    }
    function toggleFullScreen() {
        if (!document.fullscreenElement &&    // alternative standard method
            !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {  // current working methods
            if (document.documentElement.requestFullscreen) {
                document.documentElement.requestFullscreen();
            } else if (document.documentElement.msRequestFullscreen) {
                document.documentElement.msRequestFullscreen();
            } else if (document.documentElement.mozRequestFullScreen) {
                document.documentElement.mozRequestFullScreen();
            } else if (document.documentElement.webkitRequestFullscreen) {
                document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        } else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.msExitFullscreen) {
                document.msExitFullscreen();
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            }
        }
    }
    // short cut
    shortcut.add('Home', function () {
        $('#CTHDView').find('input[id^=munber_]').eq(0).focus().select();
    });
    shortcut.add('F6', function () {
        self.NhapThuong_Nhanh();
    });
    shortcut.add('F10', function () {
        if ($('.bgwhite').css('display') === "none") {
            $('.bgwhite').show();
            self.saveHoaDonTraHang(false);
        }
    });

    self.NhapThuong_Nhanh_DoiTra = function () {
        if (self.IsNhapNhanh_DoiTra()) {
            self.IsNhapNhanh_DoiTra(false);
            bottomrightnotify('Chế độ nhập thường', 'success');

            if ($('#txtSearchDoiTra').val() === '') {
                $('#txtSearchDoiTra').focus();
            }
            else {
                $('#txtSoLuong_DT').focus();
            }
        }
        else {
            self.IsNhapNhanh_DoiTra(true);
            bottomrightnotify('Chế độ nhập nhanh', 'success');
            $('#txtSearchDoiTra').focus();
        }
        // check role change DonGia of HD --> show txtDonGia
        if (!self.IsNhapNhanh_DoiTra()) {
            $("#pressNormal-DT").show();
            if (self.roleChangePriceProduct_Invoice()) {
                $('#txtDonGia_DT').show();
            }
            else {
                $('#txtDonGia_DT').hide();
            }
        }
        else {
            $('#pressNormal-DT').hide();
        }
        self.txtSoLuongDT(1);
        self.txtDonGiaDT('');
    }
    self.editSoLuongDoiTra_NhapThuong = function () {
        var $this = $('#txtSoLuong_DT');
        formatNumberObj($this);

        var valThis = formatNumberToFloat($this.val());
        var keyCode = event.keyCode || event.which;
        if (keyCode === 13) {
            if (self.ItemHH_LoChosing_DoiTra().ID_DonViQuiDoi === undefined) {
                ShowMessage_Danger('Vui lòng chọn hàng hóa');
                return;
            }
            if (valThis === 0) {
                ShowMessage_Danger('Vui lòng nhập số lượng cho hàng hóa');
                return;
            }
            self.Click_ChoseHangLo_DoiTra(self.ItemHH_LoChosing_DoiTra(), 2);
        }
    }
    self.editDonGiaDoiTra_NhapThuong = function () {
        var $this = $(event.currentTarget);
        formatNumberObj($this);
        var keycode = event.keyCode || event.which;
        if (keycode === 13) {
            var product = self.ItemHH_LoChosing_DoiTra();
            self.Click_ChoseHangLo_DoiTra(product, 3);
        }
    }
    function Insert_NhatKyThaoTac(objHD, objCTHD, chucNang, loaiNhatKy, isTamLuu) {
        // chuc nang (1. TaoHD/HuyHD, 2.ThemKH, 3.TaoPhieuThu, )
        isTamLuu = isTamLuu || false;
        var tenChucNang = '';
        var noiDung = '';
        var noiDungChiTiet = '';
        var txtFirst = '';
        var style1 = '<a style="cursor: pointer" onclick = "';
        var style2 = "('";
        var style3 = "')\" >";
        var style4 = '</a>';
        var funcNameKH = 'LoadKhachHang_byMaKH';
        var funcNameHD = 'LoadHoaDon_byMaHD';
        var funcNameHH = 'loadHangHoabyMaHH';
        var maHD = objHD.MaHoaDon;
        maHD = maHD === null ? '' : maHD;
        var styleMaHD = ''.concat(style1, funcNameHD, style2, maHD, style3, maHD, style4);
        var maKH = '';
        var sKH = '';
        var styleKH = '';
        var styleHDGoc = '';
        // get MaKhachHang by ID
        var itemKH = self.ChiTietDoiTuong();
        if (itemKH.length > 0) {
            maKH = itemKH[0].MaDoiTuong;
            sKH = ', Khách hàng: ' + maKH + ', ';
            styleKH = ', Khách hàng: '.concat(style1, funcNameKH, style2, maKH, style3, maKH, style4, ', ');
        }
        else {
            if (chucNang === 3) {
                sKH = ', Khách hàng: '.concat(objHD.NguoiNopTien);
            }
            else {
                sKH = ', Khách hàng: Khách lẻ, ';
            }
        }
        var ngaylapHD = moment(GetNgayLapHD_whenSave(objHD.NgayLapHoaDon), 'YYYY-MM-DD HH:mm').format('DD/MM/YYYY HH:mm');
        var phaiTT = 0;
        var isTraGoiDV = false;
        if (chucNang === 1) {
            var maHDGoc = '';
            var sHDGoc = '';
            var tenBG = ' Bảng giá: Bảng giá chuẩn, ';
            isTraGoiDV = objHD.LoaiHoaDon === 6 && objCTHD[0].ChatLieu === '4'
            // get TenBangGia by ID
            var itemBangGia = $.grep(self.GiaBans(), function (x) {
                return x.ID === objHD.ID_BangGia;
            });
            if (itemBangGia.length > 0) {
                tenBG = ' Bảng giá: ' + itemBangGia[0].TenGiaBan + ', ';
            }
            // get chi tiet hang hoa (chi lay 60 hang hoa - tranh NoiDungChiTiet qua dai)
            var styleHangHoa = '';
            var lenCTHD = objCTHD.length;
            for (let i = 0; i < lenCTHD; i++) {
                var itemCTHD = objCTHD[i];
                // if quanlitheolo: (MaHangHoa): (malo) Soluong, giaban
                // else (MaHangHoa): SoLuong, GiaBan
                var giaban = formatNumberToFloat(itemCTHD.DonGia) - formatNumberToFloat(itemCTHD.TienChietKhau);
                styleHangHoa += itemCTHD.QuanLyTheoLoHang ?
                    '- '.concat(style1, funcNameHH, style2, itemCTHD.MaHangHoa, style3, itemCTHD.MaHangHoa, style4, ' (Số lô: ', itemCTHD.MaLoHang, ')', ': Số lượng: ', itemCTHD.SoLuong, ', Giá bán: ', formatNumber3Digit(giaban), '<br />') :
                    '- '.concat(style1, funcNameHH, style2, itemCTHD.MaHangHoa, style3, itemCTHD.MaHangHoa, style4, ': Số lượng: ', itemCTHD.SoLuong, ', Giá bán: ', formatNumber3Digit(giaban), '<br />');
            }
            phaiTT = formatNumber3Digit(objHD.PhaiThanhToan);
            var styleKhuyenMai = '';
            switch (objHD.LoaiHoaDon) {
                case 1:
                    tenChucNang = 'Bán hàng';
                    txtFirst = 'Tạo hóa đơn: ';
                    if (isTamLuu) txtFirst = 'Tạo hóa đơn tạm lưu: ';
                    if (objHD.TrangThaiHD === 3) txtFirst = 'Thanh toán hóa đơn tạm lưu: ';
                    if (objHD.ID_HoaDon !== null && objHD.ID_HoaDon !== undefined) {
                        maHDGoc = objHD.MaHoaDonTraHang;
                        // neu HD DoiTra, objHD.ID_HoaDon !== null but maHDGoc = undefined
                        if (maHDGoc !== undefined) {
                            sHDGoc = ' (cho đơn đặt hàng: ' + maHDGoc + ') ';
                            styleHDGoc = ' (cho đơn đặt hàng: '.concat(style1, funcNameHD, style2, maHDGoc, style3, maHDGoc, style4, ') ');
                        }
                    }
                    if (objHD.KhuyenMai_GhiChu !== '' && objHD.KhuyenMai_GhiChu !== undefined && objHD.KhuyenMai_GhiChu !== 'undefined'
                        && objHD.KhuyenMai_GhiChu !== null && objHD.KhuyenMai_GhiChu.trim() !== '<br />') {
                        styleKhuyenMai = '<br /> Khuyến mại <i class="fa fa-gift bg-pink"></i><br />' + objHD.KhuyenMai_GhiChu;
                    }
                    break;
                case 3:
                    tenChucNang = 'Đặt hàng';
                    txtFirst = 'Tạo đơn đặt hàng: ';
                    break;
                case 6:
                    tenChucNang = 'Trả hàng';
                    txtFirst = 'Tạo phiếu trả hàng: ';
                    if (objHD.ID_HoaDon !== null && objHD.ID_HoaDon !== undefined) {
                        maHDGoc = objHD.MaHoaDonTraHang;
                        sHDGoc = ' (cho hóa đơn: ' + maHDGoc + ') ';
                        styleHDGoc = ' (cho hóa đơn: '.concat(style1, funcNameHD, style2, maHDGoc, style3, maHDGoc, style4, ') ');
                    }
                    break;
                case 19:
                    tenChucNang = 'Gói dịch vu';
                    txtFirst = 'Mua gói dịch vụ: ';
                    break;
            }
            noiDung = txtFirst.concat(maHD, sHDGoc, sKH, tenBG, ' Giá trị: ', phaiTT, ', Thời gian: ', ngaylapHD);
            noiDungChiTiet = txtFirst.concat(styleMaHD, styleHDGoc, styleKH,
                tenBG, ' Giá trị: ', phaiTT, ', Thời gian: ', ngaylapHD,
                ' bao gồm: <br />', styleHangHoa, styleKhuyenMai);
        }
        if (chucNang === 2) {
            tenChucNang = 'Khách hàng';
            txtFirst = 'Thêm mới khách hàng: ';
            if (loaiNhatKy === 2) {
                txtFirst = 'Cập nhật khách hàng: ';
            }
            noiDung = txtFirst.concat(objHD.MaDoiTuong, ', tên: ', objHD.TenDoiTuong, ', Điện thoại:', objHD.DienThoai);
            noiDungChiTiet = txtFirst.concat(style1, funcNameKH, style2, objHD.MaDoiTuong, style3, objHD.MaDoiTuong, style4, ', tên: ', objHD.TenDoiTuong, ', Điện thoại:', objHD.DienThoai);
        }
        if (chucNang === 3) {
            phaiTT = formatNumber3Digit(objHD.TongTienThu);
            maHDGoc = objHD.MaHoaDonTraHang;
            if (maHDGoc !== null) {
                styleHDGoc = ' cho hóa đơn: '.concat(style1, funcNameHD, style2, objHD.MaHoaDonTraHang, style3, objHD.MaHoaDonTraHang, style4, ' ');
            }
            // 11.Thu, 12.Chi
            if (objHD.LoaiHoaDon === 11) {
                tenChucNang = 'Phiếu thu';
                txtFirst = 'Tạo phiếu thu ';
            }
            else {
                tenChucNang = 'Phiếu chi';
                txtFirst = 'Tạo phiếu chi: ';
            }
            if (maHDGoc !== null) {
                noiDung = txtFirst.concat(maHD, ' cho hóa đơn ', objHD.MaHoaDonTraHang, sKH, ' với giá trị: ', phaiTT, ', Phương thức thanh toán: ', objHD.PhuongThucTT, ', Thời gian: ', ngaylapHD);
            }
            else {
                noiDung = txtFirst.concat(maHD, sKH, ' với giá trị: ', phaiTT, ', Phương thức thanh toán: ', objHD.PhuongThucTT, ', Thời gian: ', ngaylapHD);
            }
            noiDungChiTiet = txtFirst.concat(styleMaHD, styleHDGoc, sKH,
                '<br/ > Giá trị: ', phaiTT, '<br/ > Phương thức thanh toán: ', objHD.PhuongThucTT, '<br/ > Thời gian: ', ngaylapHD);
        }
        // insert HT_NhatKySuDung
        var objNhatKy = {
            ID_NhanVien: _idNhanVien,
            ID_DonVi: id_DonVi,
            ChucNang: tenChucNang,
            LoaiNhatKy: loaiNhatKy,
            NoiDung: noiDung,
            NoiDungChiTiet: noiDungChiTiet,
        };
        if (chucNang === 1) {
            if (objHD.LoaiHoaDon !== 3) {
                // tamluu or trahang tu GoiDV --> don't update TonKho
                if (isTamLuu || isTraGoiDV) {
                    // update HD TamLuu: don't update GiaVon
                    Insert_NhatKyThaoTac_1Param(objNhatKy);
                }
                else {
                    objNhatKy.ID_HoaDon = objHD.ID;
                    objNhatKy.LoaiHoaDon = objHD.LoaiHoaDon;
                    var timeUpdate = GetNgayLapHD_whenSave(objHD.NgayLapHoaDon);
                    objNhatKy.ThoiGianUpdateGV = timeUpdate;
                    Post_NhatKySuDung_UpdateGiaVon(objNhatKy);
                }
            }
            else {
                // DatHang: khong update GiaVon
                Insert_NhatKyThaoTac_1Param(objNhatKy);
            }
        }
        else {
            Insert_NhatKyThaoTac_1Param(objNhatKy);
        }
    }
    //timer();
    function OnOff_Timer(ngaylapHD) {
        if (ngaylapHD === null) {
            stopTimer();
            timer();
        }
        else {
            stopTimer();
        }
    }
    function GetNgayLapHD_fromHD(ngaylapHD) {
        if (ngaylapHD === null) {
            return moment(now).format('YYYY-MM-DD HH:mm');
        }
        else {
            return ngaylapHD;
        }
    }
    self.showChiNhanh_byUser = function () {
        // hide list BangGia, list user if is openning
        $('.select-user2,.select-user1').hide();
        var $this = $('#divChiNhanh0');
        var thisNext = $this.next(".select-usercn");
        // get all ChiNhanh of user
        var arrChiNhanh = [];
        for (let i = 0; i < self.NhanViens_ChiNhanh().length; i++) {
            var itemFor = self.NhanViens_ChiNhanh()[i];
            if (itemFor.ID_NguoiDung === id_User) {
                // find ChiNhanh in list ChiNhanh
                var itemCN = $.grep(self.ChiNhanhs(), function (x) {
                    return x.ID === itemFor.ID_DonVi;
                });
                if (itemCN.length > 0) {
                    arrChiNhanh.push(itemCN[0]);
                }
            }
        }
        var arrSortbyName = [];
        if (arrChiNhanh.length > 0) {
            arrSortbyName = arrChiNhanh.sort((a, b) => a.TenDonVi.localeCompare(b.TenDonVi, undefined, { caseFirst: "upper" }));
        }
        self.ChiNhanhs_byUser(arrSortbyName);
        // set check after li
        $('#lstChiNhanh span').each(function () {
            $(this).empty();
        });
        $(function () {
            $('span[id=spanCheckChiNhanh_' + id_DonVi + ']').append(element_appendCheck)
        });
        // show/hide dropdown list ChiNhanh if not HD offline && not TraHang from HD
        var check = CheckHDOffline_orTraHangfromHD();
        if (arrChiNhanh.length > 1 && check === 0) {
            if (thisNext.css('display') === 'none') {
                thisNext.show();
            }
            else {
                thisNext.hide();
            }
            $this.find(" font i").toggle();
        }
    }
    self.filterChiNhanh = ko.observable();
    self.arrChiNhanhs_byUser = ko.computed(function (x) {
        var filter = self.filterChiNhanh();
        return ko.utils.arrayFilter(self.ChiNhanhs_byUser(), function (prop) {
            var chon = true;
            var arr = locdau(prop.TenDonVi).split(/\s+/);
            var sSearch = '';
            for (let i = 0; i < arr.length; i++) {
                sSearch += arr[i].toString().split('')[0];
            }
            if (filter) {
                chon = (locdau(prop.TenDonVi).indexOf(locdau(filter)) >= 0 ||
                    sSearch.indexOf(locdau(filter)) >= 0
                )
            }
            return chon;
        })
    })
    self.CheckRole_ChangeNVien = function () {
        // show list NhanVien if not HD offline
        var check = CheckHDOffline_orTraHangfromHD();
        if (check !== 1) {
            // check role change NVien
            var loaiHoaDon = GetLoaiHoaDon_ofHDopening();
            var maQuyen = '';
            switch (loaiHoaDon) {
                case 1:
                    maQuyen = 'HoaDon_ThayDoiNhanVien';
                    break;
                case 2:
                    maQuyen = 'HoaDonBaoHanh_ThayDoiNhanVien';
                    break;
                case 3:
                    maQuyen = 'DatHang_ThayDoiNhanVien';
                    break;
                case 6:
                    maQuyen = 'TraHang_ThayDoiNhanVien';
                    break;
                case 19:
                    maQuyen = 'GoiDichVu_ThayDoiNhanVien';
                    break;
            }
            var itemRole = $.grep(self.Quyen_NguoiDung(), function (x) {
                return x.MaQuyen === maQuyen;
            });
            if (itemRole.length > 0) {
                showpanel(4)
            }
        }
    }
    // lo hang
    self.AllLot = ko.observableArray();
    self.ListLot_ofProduct = ko.observableArray();// danh sach lo theo id_quidoi
    self.AllLot_ofProduct = ko.observableArray();
    self.LotChosed = ko.observableArray(); // lo da chon khi add hang hoa (always = 1)
    self.filterLot_ofProduct = ko.observable(); // search lo hang
    function GetAll_LoHang() {
        var timeChotSo = '2016-01-01';
        if (self.ChotSo_ChiNhanh().length > 0) {
            timeChotSo = self.ChotSo_ChiNhanh()[0].NgayChotSo;
        }
        // get all LoHang (get ca lo khong con su dung & HagHoa da xoa --> assign when TraHang)
        ajaxHelper(DM_HangHoaUri + "SP_GetAll_DMLoHang?iddonvi=" + id_DonVi + '&timeChotSo=' + timeChotSo, 'GET').done(function (data) {
            if (data !== null) {
                self.AllLot(data);
            }
        });
    }
    self.LoadListLot_ofProduct = function (item) {
        // item: CTHD/DM_LoHang
        var idQuiDoi = item.ID_DonViQuiDoi;
        var idHangHoa = item.ID_HangHoa;
        var arrLot = $.grep(self.AllLot(), function (x) {
            return x.ID_DonViQuiDoi === idQuiDoi;
        });
        // get allhanghoa same idquidoi (todo - nếu không muốn update TonKho sau khi Thanh toán, thì get lại tồn kho từ HangHoaAlls)
        // arr contain ID lot is chosed (not use)
        var arrIDLotChosed = [];
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            if (_maHoaDon === '') {
                _maHoaDon = $('.bill-bxslide li.using font').text();
            }
            var idRandomHD = item.IDRandomHD;
            var arrCTHD = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD && x.ID_DonViQuiDoi === item.ID_DonViQuiDoi;
            });
            if (arrCTHD.length > 0) {
                for (let i = 0; i < arrCTHD[0].DM_LoHang.length; i++) {
                    arrIDLotChosed.push(arrCTHD[0].DM_LoHang[i].ID_LoHang);
                }
                if (arrCTHD[0].LoaiHoaDon !== 6) {
                    let dtNow = moment(new Date()).format('YYYY-MM-DD');
                    // if Mua/DatHang --> remove Lô ngừng kinh doanh & lô hết hạn sd
                    arrLot = $.grep(arrLot, function (x) {
                        return x.TrangThai === true && (x.NgayHetHan === null || moment(x.NgayHetHan).format('YYYY-MM-DD') >= dtNow);
                    });
                }
            }
        }
        // get arr Lot chua chon
        //arrLot = $.grep(arrLot, function (x) {
        //    return $.inArray(x.ID, arrIDLotChosed) === -1;
        //});
        self.ListLot_ofProduct(arrLot);
        self.AllLot_ofProduct(arrLot);
        // focus into li is chosing
        var thisObj = event.currentTarget;
        var idLoHang = item.ID_LoHang;
        if (idLoHang !== null) {
            var li = $(thisObj).parent().next().find('li');
            $(li).each(function (index) {
                if ($(this).attr('id') === idLoHang) {
                    $(li).eq(index).addClass('focusLot');
                    return false;
                }
            });
        }
    }
    self.ClickChoseLot = function (item) {
        var $this = event.currentTarget;
        var ngaysx = moment(item.NgaySanXuat).format('DD/MM/YYYY');
        var hethan = moment(item.NgayHetHan).format('DD/MM/YYYY');
        var idRandom = $($this.closest('.name-lot1')).find('span').eq(0).attr('id');
        if (ngaysx === 'Invalid date') {
            ngaysx = '';
        }
        if (hethan === 'Invalid date') {
            hethan = '';
        }
        var idLoHang = item.ID;
        var maLoHang = item.MaLoHang;
        var soluongConLai = null; // use get soluongconlai in DM_Lo of CTTraHang
        // add cache CTHD
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            if (_maHoaDon === '') {
                _maHoaDon = $('.bill-bxslide li.using font').text();
            }
            var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
            // check exist Lot if same ID_QuiDoi
            var itemCTHD = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD && x.ID_DonViQuiDoi === item.ID_DonViQuiDoi;
            });
            var xuatAm = false;
            if (itemCTHD.length > 0) {
                if (itemCTHD[0].LoaiHoaDon === 1) {
                    xuatAm = self.ThietLap().XuatAm;
                }
                else {
                    if (itemCTHD[0].LoaiHoaDon === 3) {
                        xuatAm = self.ThietLap().DatHangXuatAm;
                    }
                }
                //var existLot = $.grep(itemCTHD[0].DM_LoHang, function (x) {
                //    return x.ID_LoHang === idLoHang;
                //});
                //if (existLot.length > 0) {
                //    ShowMessage_Danger('Lô ' + maLoHang + ' đã được chọn');
                //    return;
                //}
                // neu chon lo khong co trong ctTraHang --> warning
                if (itemCTHD[0].LoaiHoaDon === 6) {
                    if (itemCTHD[0].QuanLyTheoLoHang) {
                        var arrID_LoHang = [];
                        var cacheTraHang = localStorage.getItem(lcCTHDTraHang_fromHD);
                        if (cacheTraHang !== null) {
                            cacheTraHang = JSON.parse(cacheTraHang);
                            // get CTTraHang with ID_QuiDoi is chosing
                            var cacheTH_ofHD = $.grep(cacheTraHang, function (x) {
                                return x.IDRandomHD === idRandomHD && x.ID_DonViQuiDoi === item.ID_DonViQuiDoi;
                            });
                            if (cacheTH_ofHD.length > 0) {
                                // get arrID_LoHang in cache TraHang
                                for (let i = 0; i < cacheTH_ofHD[0].DM_LoHang.length; i++) {
                                    arrID_LoHang.push(cacheTH_ofHD[0].DM_LoHang[i].ID_LoHang);
                                    if (cacheTH_ofHD[0].DM_LoHang[i].ID_LoHang === idLoHang) {
                                        soluongConLai = cacheTH_ofHD[0].DM_LoHang[i].SoLuongDaMua;
                                    }
                                }
                            }
                            if (arrID_LoHang.length > 0 && $.inArray(idLoHang, arrID_LoHang) === -1) {
                                ShowMessage_Danger('Lô ' + item.MaLoHang + ' không tồn tại trong chi tiết trả hàng');
                                return;
                            }
                        }
                    }
                }
            }
            for (let i = 0; i < lstCTHD.length; i++) {
                let ctFor = lstCTHD[i];
                if (ctFor.IDRandomHD === idRandomHD && ctFor.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                    // if change ID_LoHang --> update, not push
                    for (let j = 0; j < ctFor.DM_LoHang.length; j++) {
                        if (ctFor.DM_LoHang[j].IDRandom === idRandom) {
                            // if first DM_LoHang--> update ID_LoHang for CTHD if LotParent
                            if (j === 0) {
                                lstCTHD[i].ID_LoHang = idLoHang;
                                lstCTHD[i].MaLoHang = maLoHang; // add properties MaLoHang --> used to save LichSuThaoTac
                                lstCTHD[i].TonKho = item.TonKho; // update TonKho forCTHD parent
                                lstCTHD[i].NgaySanXuat = item.NgaySanXuat;// --> used to InHoaDon
                                lstCTHD[i].NgayHetHan = item.NgayHetHan;
                                lstCTHD[i].CssWarning = (xuatAm === false && lstCTHD[i].TonKho < lstCTHD[i].SoLuong);
                            }
                            lstCTHD[i].DM_LoHang[j].ID_LoHang = idLoHang;
                            lstCTHD[i].DM_LoHang[j].MaLoHang = maLoHang;
                            lstCTHD[i].DM_LoHang[j].NgaySanXuat = ngaysx;
                            lstCTHD[i].DM_LoHang[j].NgayHetHan = hethan;
                            lstCTHD[i].DM_LoHang[j].TonKho = item.TonKho;
                            // find SoLuongConLai at ct TraHang
                            if (soluongConLai !== null) {
                                lstCTHD[i].DM_LoHang[j].SoLuongDaMua = soluongConLai;
                            }
                            lstCTHD[i].DM_LoHang[j].CssWarning = (xuatAm === false && lstCTHD[i].DM_LoHang[j].TonKho < lstCTHD[i].DM_LoHang[j].SoLuong);
                            break;
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
            BindCTHD_byIDRandomHD(idRandomHD);
            HideShow_Icon_ChietKhauNV();
            SendDataBanHangToPos_byUser(idRandomHD, 1);
        }
        HideShow_Icon_ChietKhauNV();
    }
    self.addLot = function (item) {
        var idQuiDoi = item.ID_DonViQuiDoi;
        var idRandomHD = item.IDRandomHD;
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            if (_maHoaDon === '') {
                _maHoaDon = $('.bill-bxslide li.using font').text();
            }
            // count sum lot of HangHoa 
            var arrLot = $.grep(self.AllLot(), function (x) {
                return x.ID_DonViQuiDoi === idQuiDoi;
            });
            var idRandomCungLoai = '';
            if (arrLot.length === 0) {
                // add hangcungloai
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandomHD === idRandomHD && cthd[i].ID_DonViQuiDoi === idQuiDoi && cthd[i].ID_ChiTietGoiDV === item.ID_ChiTietGoiDV) {
                        let cungloai = $.extend({}, cthd[i]);
                        cungloai.SoLuong = 1;
                        let obj = newHangHoa(cungloai, null, true);
                        idRandomCungLoai = obj.IDRandom;
                        cthd[i].HangCungLoais.push(obj);
                        break;
                    }
                }
            }
            else {
                // add lot
                for (let i = 0; i < cthd.length; i++) {
                    let itFor = cthd[i];
                    if (itFor.IDRandomHD === idRandomHD && itFor.ID_DonViQuiDoi === idQuiDoi) {
                        let lohang = $.extend({}, itFor);
                        lohang.SoLuong = 1;
                        let countLot = itFor.DM_LoHang.length;
                        let idRandom = CreateIDRandom('RandomCT_');
                        let objLot = newHangHoa(lohang, null, true);
                        objLot.NgaySanXuat = itFor.NgaySanXuat;
                        objLot.NgayHetHan = itFor.NgayHetHan;
                        objLot.LotParent = false;
                        objLot.IDRandom = idRandom;
                        objLot.SoThuTu = countLot + 1;
                        objLot.DM_LoHang = [];
                        objLot.HangCungLoais = [];
                        objLot.ThanhPhan_DinhLuong = [];
                        objLot.BH_NhanVienThucHien = [];
                        cthd[i].DM_LoHang.push(objLot);
                        break;
                    }
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            //var arrCTHD = $.grep(cthd, function (x) {
            //    return x.IDRandomHD === idRandomHD;
            //});
            //self.HangHoaAfterAdds(arrCTHD);
            if (_maHoaDon.indexOf('Trả') === -1) {
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            }
            else {
                UpdateHD_TraHang(idRandomHD);
            }
            self.KM_KMApDung([]);
            UpdateKhuyenMai_CTHD(idQuiDoi, idRandomHD);
            ResetKM_HangHoa(this.ID_DonViQuiDoi, this.ID_NhomHangHoa, idRandomHD);
            ResetKM_HoaDon(idRandomHD);
            if (item.LoaiHoaDon === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }
            if (!commonStatisJs.CheckNull(idRandomCungLoai)) {
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandomCungLoai, 1, false)
            }
            // must be call 2 func BindHD_byIDRandom --> bind into text and get value at self.HoaDons
            BindHD_byIDRandom(idRandomHD);
            BindCTHD_byIDRandomHD(idRandomHD)
            Focus_InputPhaiThanhToan();
            Caculator_AmountProduct();
            SetBorder_LotEnd_CTHD();
        }
        HideShow_Icon_ChietKhauNV();
    }

    self.SearchLot_ofProduct = function (item) {
        var thisObj = event.currentTarget;
        var txtSearch = $(thisObj).val().toLowerCase();
        var arrLot = [];
        if (txtSearch !== '') {
            for (let i = 0; i < self.AllLot_ofProduct().length; i++) {
                if (self.AllLot_ofProduct()[i].MaLoHang.toLowerCase().indexOf(txtSearch) > -1) {
                    arrLot.push(self.AllLot_ofProduct()[i]);
                }
            }
            self.ListLot_ofProduct(arrLot);
        }
        else {
            self.ListLot_ofProduct(self.AllLot_ofProduct());
        }
        if (self.ListLot_ofProduct().length > 0) {
            // show list LoHang (OK): because if click lan 2 --> list LoHang was hide
            $(thisObj).parent().attr("aria-expanded", "true");
            $(thisObj).parent().parent().addClass('open');
        }
        // compare text search with MaLoHang
        var itemEx = $.grep(self.ListLot_ofProduct(), function (x) {
            return x.MaLoHang === txtSearch;
        });
        var idRandomHD = GetIDRandomHD_byMaHoaDon(item.MaHoaDon);
        var isCTHD_Ban = false; // check search CTHD Ban/DoiTra
        if (itemEx.length === 0) {
            // reset lot for CTHD
            var lstCTHD = localStorage.getItem(lcListCTHD);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                // remove lot is chosing of CTHD/DM_LoHang
                for (let i = 0; i < lstCTHD.length; i++) {
                    let xCTHD = lstCTHD[i];
                    if (xCTHD.IDRandomHD === idRandomHD && xCTHD.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                        for (let j = 0; j < xCTHD.DM_LoHang.length; j++) {
                            if (xCTHD.DM_LoHang[j].IDRandom === item.IDRandom) {
                                isCTHD_Ban = true;
                                if (xCTHD.DM_LoHang[j].LotParent) {
                                    lstCTHD[i].ID_LoHang = null;
                                }
                                lstCTHD[i].DM_LoHang[j].ID_LoHang = null;
                                break;
                            }
                        }
                    }
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
            }
            if (isCTHD_Ban === false) {
                // find and reset CTHD DoiTra
                // nếu đã chọn lô, và chọn lại lô này trên cùng 1 dòng --> reset
                var lstCTHD_DoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                if (lstCTHD_DoiTra !== null) {
                    lstCTHD_DoiTra = JSON.parse(lstCTHD_DoiTra);
                    for (let i = 0; i < lstCTHD_DoiTra.length; i++) {
                        let xCTHD = lstCTHD_DoiTra[i];
                        if (xCTHD.IDRandomHD === idRandomHD && xCTHD.ID_DonViQuiDoi === item.ID_DonViQuiDoi) {
                            for (let j = 0; j < xCTHD.DM_LoHang.length; j++) {
                                if (xCTHD.DM_LoHang[j].IDRandom === item.IDRandom) {
                                    if (xCTHD.DM_LoHang[j].LotParent) {
                                        lstCTHD_DoiTra[i].ID_LoHang = null;
                                    }
                                    lstCTHD_DoiTra[i].DM_LoHang[j].ID_LoHang = null;
                                    break;
                                }
                            }
                        }
                    }
                    localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(lstCTHD_DoiTra));
                }
            }
        }
        var keyCode = event.keyCode || event.which;
        var li = $(thisObj).parent().next().find('li');
        var indexLi = -1;
        var idFocus = null;
        // reset again indexLi if is search
        if (keyCode !== 38 && keyCode !== 40 && keyCode !== 13) {
            indexLi = -1;
        }
        else {
            // else: if key = 38/40 --> find li focus
            $(li).each(function (index) {
                if ($(this).hasClass('focusLot')) {
                    indexLi = index;
                    return false;
                }
            })
        }
        if (indexLi <= -1) {
            // focus in to li:eq(0)
            indexLi = 0;
        }
        else {
            // up : len 
            if (keyCode === 38) {
                indexLi = indexLi - 1;
                if (indexLi < 0) {
                    indexLi = 0;
                }
            }
            // down: xuong
            if (keyCode === 40) {
                indexLi = indexLi + 1;
                // neu index vuot qua do dai cua mang Lot
                if (indexLi > self.ListLot_ofProduct().length - 1) {
                    indexLi = 0;
                }
            }
        }
        // remove class focus for all li
        li.removeClass('focusLot');
        $(li).eq(indexLi).addClass('focusLot');
        idFocus = $(li).eq(indexLi).attr('id');
        // enter --> chose Lot and update CTHD
        if (keyCode === 13 && idFocus !== null) {
            var itemFocus = $.grep(self.AllLot_ofProduct(), function (x) {
                return x.ID === idFocus;
            });
            if (itemFocus.length > 0) {
                var loaiHD = GetLoaiHoaDon_ofHDopening();
                if (loaiHD === 6) {
                    self.ClickChoseLot_DoiTra(itemFocus[0]);
                }
                else {
                    self.ClickChoseLot(itemFocus[0]);
                }
            }
        }
    }
    function GetLoaiHoaDon_ofHDopening() {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var loaiHoaDon = 1;
        // Hóa đơn, HDBL
        if (_maHoaDon.indexOf('H') === 0 || _maHoaDon.indexOf('CopyH') === 0) {
            loaiHoaDon = 1;
        }

        if (_maHoaDon.indexOf('DH') > -1 || _maHoaDon.indexOf(nameHD_UpdateDH) > -1 || _maHoaDon.indexOf('Đ') > -1) {
            loaiHoaDon = 3;
        }
        if (_maHoaDon.indexOf('T') > -1) {
            loaiHoaDon = 6;
        }
        // bao hanh: Bảo hành, HDB, BH
        if (_maHoaDon.indexOf('B') === 0 ||
            (_maHoaDon.indexOf('HDB') > -1 && _maHoaDon.indexOf('L') === -1)) {
            loaiHoaDon = 2;
        }
        // neu trả gói dịch vụ, return loai = 19 --> show icon chiết khấu NV + ngày áp dụng (nếu đổi trả) (mặc dù thực tế loại = 6)
        if (_maHoaDon.indexOf('DV') > -1) {
            loaiHoaDon = 19;
        }
        return self.HoaDons().LoaiHoaDon();
    }

    function GetTonKho_ofHangHoafromDB(item, type = 1) {// 1.nhapnhanh, 2.nhapsoluong
        var lahanghoa = item.LaHangHoa;
        var addHang = true;
        if (!self.IsNhapNhanh() && type === 1) {
            addHang = false;
            $('#txtSoLuong').focus().select();
        }
        self.ItemHH_LoChosing(item);
        if (addHang) {
            self.Click_ChoseHangLo(item, type);
        }
        else {
            $('#txtSoLuong').focus().select();
        }
    }

    function ChangeDonGia_CaculatorAgainCTHD(ctDoing, soluongNew, dongiaNew) {

        let price = formatNumberToFloat(dongiaNew);
        let tienCK = ctDoing.TienChietKhau;
        var tienthue = ctDoing.TienThue;

        if (ctDoing.PTChietKhau > 0) {
            tienCK = ctDoing.PTChietKhau * price / 100;
        }
        if (ctDoing.PTThue > 0) {
            tienthue = ctDoing.PTThue * (price - tienCK) / 100;
        }

        var tongphiDV = 0;
        if (ctDoing.LoaiHoaDon === 1 || ctDoing.LoaiHoaDon === 25) {
            tongphiDV = ctDoing.PhiDichVu;
            if (ctDoing.LaPTPhiDichVu) {
                tongphiDV = ctDoing.PhiDichVu * soluongNew * price / 100;
            }
        }
        ctDoing.SoLuong = soluongNew;
        ctDoing.DonGia = dongiaNew;
        ctDoing.GiaBan = dongiaNew;
        ctDoing.TienChietKhau = tienCK;
        ctDoing.TienThue = tienthue;
        ctDoing.TongPhiDichVu = tongphiDV;
        ctDoing.ThanhTien = soluongNew * (dongiaNew - tienCK);
        ctDoing.ThanhToan = soluongNew * (dongiaNew - tienCK + tienthue);
        return ctDoing;
    }

    self.ItemHH_LoChosing = ko.observable();

    async function huonghasalon_AddHang(type = 1) {
        let itemChose = self.ItemHH_LoChosing();
        var idQuiDoi = itemChose.ID_DonViQuiDoi;
        var quanLiTheoLo = itemChose.QuanLyTheoLoHang;
        quanLiTheoLo = (quanLiTheoLo === null ? false : quanLiTheoLo);
        var idCT_goiDV = itemChose.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);

        var soluong = 1, dongia = itemChose.GiaBan;
        switch (type) {
            case 1:// nhap nhanh
                $('#txtSearchHH').focus();
                if (quanLiTheoLo) {
                    $('#txtSearchHH').val(itemChose.MaHangHoa + ' LSX: ' + itemChose.MaLoHang);
                }
                else {
                    $('#txtSearchHH').val(itemChose.MaHangHoa);
                }
                $('#txtSearchHH').select();
                break;
            case 2:// nhap soluong
                soluong = formatNumberToFloat(self.txtSoLuong());
                if (formatNumberToFloat(self.txtDonGia()) > 0) {
                    dongia = formatNumberToFloat(self.txtDonGia());
                }
                break;
            case 3:// nhap dongia
                soluong = formatNumberToFloat(self.txtSoLuong());
                dongia = formatNumberToFloat(self.txtDonGia());
                $('#txtDonGia').focus().select();
                break;
        }

        var itemEx = [];
        var lstHoaDon = localStorage.getItem(lcListHD);
        if (lstHoaDon === null) {
            lstHoaDon = [];
        }
        else {
            lstHoaDon = JSON.parse(lstHoaDon);
            itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
        }
        if (itemEx.length === 0) {
            let newObj = newHoaDon(_maHoaDon);
            lstHoaDon.push(newObj);
            localStorage.setItem(lcListHD, JSON.stringify(lstHoaDon));
        }
        // find itemHD with _maHoaDon
        var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
        var idRandomHD = itemHD[0].IDRandom;
        var loaiHD = itemHD[0].LoaiHoaDon;
        var arrIDQuyDoi_TH = [];
        var arrID_LoHang_TH = [];
        var itemCTTrahang = [];

        // use when HD was create from DatHang
        var typeAdd = 0; // 0. HD, 1. Trahang, 2. XulyDatHang
        if (loaiHD === 6) {
            var cacheTraHang = localStorage.getItem(lcCTHDTraHang_fromHD);
            if (cacheTraHang !== null) {
                cacheTraHang = JSON.parse(cacheTraHang);
                // get cache CTTH of Hoa don Tra (trường hợp mở nhiều HDTraHang cùng lúc)
                var cacheTH_ofHD = $.grep(cacheTraHang, function (item) {
                    return item.IDRandomHD === idRandomHD;
                });
                if (cacheTH_ofHD.length > 0) {
                    typeAdd = 1;
                    // get arrID_QuyDoi in cache TraHang
                    for (let i = 0; i < cacheTH_ofHD.length; i++) {
                        arrIDQuyDoi_TH.push(cacheTH_ofHD[i].ID_DonViQuiDoi);
                    }
                    // get item with ID_QuyDoi --> get SoLuongDaMua
                    itemCTTrahang = $.grep(cacheTH_ofHD, function (item) {
                        return item.ID_DonViQuiDoi === idQuiDoi;
                    });
                    if (itemCTTrahang.length > 0) {
                        for (let i = 0; i < itemCTTrahang[0].DM_LoHang.length; i++) {
                            arrID_LoHang_TH.push(itemCTTrahang[0].DM_LoHang[i].ID_LoHang);
                        }
                    }
                    // check exist in HDTra
                    if ($.inArray(idQuiDoi, arrIDQuyDoi_TH) === -1) {
                        ShowMessage_Danger('Hàng hóa ' + itemChose.TenHangHoa + ' không có trong đơn hàng');
                        return false;
                    }
                    if (itemChose.QuanLyTheoLoHang && $.inArray(itemChose.ID_LoHang, arrID_LoHang_TH) === -1) {
                        ShowMessage_Danger('Hàng  hóa ' + itemChose.TenHangHoa
                            + ' có số lô: ' + itemChose.MaLoHang + ' không có trong đơn hàng');
                        return;
                    }
                }
            }
        }
        else {
            // check HD was create from DatHang --> assign SoLuongDaMua
            if (itemHD[0].MaHoaDonTraHang !== null && itemHD[0].MaHoaDonTraHang !== undefined && itemHD[0].MaHoaDonTraHang !== '') {
                var ctDatHang = localStorage.getItem(lcCTDatHang_Const);
                if (ctDatHang !== null) {
                    ctDatHang = JSON.parse(ctDatHang);
                    itemCTTrahang = $.grep(ctDatHang, function (x) {
                        return x.ID_DonViQuiDoi === itemChose.ID_DonViQuiDoi && x.MaHoaDon === itemHD[0].MaHoaDonTraHang;
                    });
                    if (itemCTTrahang.length > 0) {
                        typeAdd = 2;
                        // cache DatHang: assign SoLuongDaMua = SoLuongConLai --> assign to CTHD
                        itemCTTrahang[0].SoLuongDaMua = itemCTTrahang[0].SoLuongConLai;
                        itemCTTrahang[0].ID_ChiTietGoiDV = itemCTTrahang[0].ID;
                        for (let j = 0; j < itemCTTrahang[0].DM_LoHang.length; j++) {
                            if (j !== 0) {
                                itemCTTrahang[0].DM_LoHang[j].ID_ChiTietGoiDV = itemCTTrahang[0].DM_LoHang[j].ID;
                            }
                            itemCTTrahang[0].DM_LoHang[j].SoLuongDaMua = itemCTTrahang[0].DM_LoHang[j].SoLuongConLai;
                        }
                        for (let j = 0; j < itemCTTrahang[0].HangCungLoais.length; j++) {
                            itemCTTrahang[0].HangCungLoais[j].ID_ChiTietGoiDV = itemCTTrahang[0].HangCungLoais[j].ID;
                            itemCTTrahang[0].HangCungLoais[j].SoLuongDaMua = itemCTTrahang[0].HangCungLoais[j].SoLuongConLai;
                        }
                    }
                }
            }
        }

        var found = -1;
        var soluongNew = 1;
        itemChose.GiaBan = dongia;
        itemChose.SoLuong = soluong;
        itemChose.ID_HangHoa = itemChose.ID;

        if (itemChose.LoaiHangHoa === 3) {
            itemChose.ThanhPhanComBo = await GetThanhPhanComBo(itemChose.ID_DonViQuiDoi, itemHD[0]);
        }
        else {
            itemChose.ThanhPhanComBo = [];
        }

        var ob1 = newHangHoa(itemChose, itemHD[0]);
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd === null) {
            cthd = [];
        }
        else {
            cthd = JSON.parse(cthd);
        }
        if (ob1.QuanLyTheoLoHang) {
            let objLot = $.extend({}, ob1);
            objLot.ListDonViTinh = [];
            objLot.HangCungLoais = [];
            objLot.DM_LoHang = [];
            objLot.ThanhPhan_DinhLuong = [];
            objLot.BH_NhanVienThucHien = [];
            ob1.DM_LoHang.push(objLot);
        }
        cthd.unshift(ob1);

        localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
        UpdateSoThuTu_CTHD(false, idRandomHD);
        UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
        UpdateAgain_ListDVT_forCTHD(false, idRandomHD);
        Reset_ListDVT_forCTHD_TraHang();
        self.KM_KMApDung([]);
        UpdateKhuyenMai_CTHD(ob1.ID_DonViQuiDoi, idRandomHD);
        if (ob1.ThanhPhanComBo.length > 0) {
            ChangeSoLuongParent_UpdateCombo(ob1.IDRandom, soluongNew, false);
        }
        UpdateChietKhauNV_inCTHD(ob1.IDRandom, itemHD[0].LoaiHoaDon === 6, ob1);
        ResetKM_HangHoa(ob1.ID_DonViQuiDoi, ob1.ID_NhomHangHoa, idRandomHD);
        ResetKM_HoaDon(idRandomHD);
        BindCTHD_byIDRandomHD(idRandomHD);
        if (itemHD[0].LoaiHoaDon === 3) {
            Update_StatusXuLy_ofHDDatHang(idRandomHD);
        }
        // upadate TongTien, giamgia, phai thanh toan, can thanh toan of HoaDon after addHH
        if (itemHD[0].LoaiHoaDon !== 6) {
            if (found !== -1) {
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, ob1.IDRandom, soluongNew, false);
            }
            UpdateCacheHDLe(idRandomHD, false);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            var arrHD = [];
            let lcHD = localStorage.getItem(lcListHD);
            lcHD = JSON.parse(lcHD);
            for (let i = 0; i < lcHD.length; i++) {
                if (lcHD[i].IDRandom === idRandomHD) {
                    arrHD = lcHD[i];
                    break;
                }
            }
            var printTicket = Check_PrintTicket(itemHD[0]);
            if (printTicket === true) {
                self.saveHoaDonTraHang(false);
            }
            else {
                // bind again HoaDon if have KhuyenMai
                self.HoaDons().SetData(arrHD);
            }
        }
        else {
            if (found !== -1) {
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, ob1.IDRandom, soluongNew, true);
            }
            UpdateHD_TraHang(idRandomHD);
        }
        BindHD_byIDRandom(idRandomHD);
        vmUpAnhHoaDon.InvoiceChosing.IDRandomHD = idRandomHD;
        HideShow_Icon_ChietKhauNV();
        Caculator_AmountProduct();
    }

    self.Click_ChoseHangLo = async function (itemChose, type) {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }

        var isOffline = CheckHoaDonOffline_byMaHoaDon(_maHoaDon);
        if (isOffline === false) {
            return false;
        }

        var addHang = true;
        if (!self.IsNhapNhanh() && type === 1) {
            addHang = false;
            $('#txtSoLuong_DT').focus().select();
        }

        if (!addHang) {
            return;
        }

        self.ItemHH_LoChosing(itemChose);

        if (self.SubDomain() === 'huonghasalon') {
            huonghasalon_AddHang(type)
        }
        else {
            var idQuiDoi = itemChose.ID_DonViQuiDoi;
            var quanLiTheoLo = itemChose.QuanLyTheoLoHang;
            quanLiTheoLo = (quanLiTheoLo === null ? false : quanLiTheoLo);
            var idCT_goiDV = itemChose.ID_ChiTietGoiDV;
            idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);

            var soluong = 1, dongia = itemChose.GiaBan;
            switch (type) {
                case 1:
                    $('#txtSearchHH').focus();
                    if (quanLiTheoLo) {
                        $('#txtSearchHH').val(itemChose.MaHangHoa + ' LSX: ' + itemChose.MaLoHang);
                    }
                    else {
                        $('#txtSearchHH').val(itemChose.MaHangHoa);
                    }
                    $('#txtSearchHH').select();
                    break;
                case 2:
                    soluong = formatNumberToFloat(self.txtSoLuong());

                    if (formatNumberToFloat(self.txtDonGia()) > 0) {
                        dongia = formatNumberToFloat(self.txtDonGia());
                    }
                    break;
                case 3:
                    soluong = formatNumberToFloat(self.txtSoLuong());
                    dongia = formatNumberToFloat(self.txtDonGia());
                    $('#txtDonGia').focus().select();
                    break;
            }

            var itemEx = [];
            var lstHoaDon = localStorage.getItem(lcListHD);
            if (lstHoaDon === null) {
                lstHoaDon = [];
            }
            else {
                lstHoaDon = JSON.parse(lstHoaDon);
                itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
            }
            if (itemEx.length === 0) {
                let newObj = newHoaDon(_maHoaDon);
                lstHoaDon.push(newObj);
                localStorage.setItem(lcListHD, JSON.stringify(lstHoaDon));
            }
            // find itemHD with _maHoaDon
            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
            var idRandomHD = itemHD[0].IDRandom;
            var loaiHD = itemHD[0].LoaiHoaDon;
            var arrIDQuyDoi_TH = [];
            var arrID_LoHang_TH = [];
            var itemCTTrahang = [];

            // use when HD was create from DatHang
            var typeAdd = 0; // 0. HD, 1. Trahang, 2. XulyDatHang
            if (loaiHD === 6) {
                var cacheTraHang = localStorage.getItem(lcCTHDTraHang_fromHD);
                if (cacheTraHang !== null) {
                    cacheTraHang = JSON.parse(cacheTraHang);
                    // get cache CTTH of Hoa don Tra (trường hợp mở nhiều HDTraHang cùng lúc)
                    var cacheTH_ofHD = $.grep(cacheTraHang, function (item) {
                        return item.IDRandomHD === idRandomHD;
                    });
                    if (cacheTH_ofHD.length > 0) {
                        typeAdd = 1;
                        // get arrID_QuyDoi in cache TraHang
                        for (let i = 0; i < cacheTH_ofHD.length; i++) {
                            arrIDQuyDoi_TH.push(cacheTH_ofHD[i].ID_DonViQuiDoi);
                        }
                        // get item with ID_QuyDoi --> get SoLuongDaMua
                        itemCTTrahang = $.grep(cacheTH_ofHD, function (item) {
                            return item.ID_DonViQuiDoi === idQuiDoi;
                        });
                        if (itemCTTrahang.length > 0) {
                            for (let i = 0; i < itemCTTrahang[0].DM_LoHang.length; i++) {
                                arrID_LoHang_TH.push(itemCTTrahang[0].DM_LoHang[i].ID_LoHang);
                            }
                        }
                        // check exist in HDTra
                        if ($.inArray(idQuiDoi, arrIDQuyDoi_TH) === -1) {
                            ShowMessage_Danger('Hàng hóa ' + itemChose.TenHangHoa + ' không có trong đơn hàng');
                            return false;
                        }
                        if (itemChose.QuanLyTheoLoHang && $.inArray(itemChose.ID_LoHang, arrID_LoHang_TH) === -1) {
                            ShowMessage_Danger('Hàng  hóa ' + itemChose.TenHangHoa
                                + ' có số lô: ' + itemChose.MaLoHang + ' không có trong đơn hàng');
                            return;
                        }
                    }
                }
            }
            else {
                // check HD was create from DatHang --> assign SoLuongDaMua
                if (itemHD[0].MaHoaDonTraHang !== null && itemHD[0].MaHoaDonTraHang !== undefined && itemHD[0].MaHoaDonTraHang !== '') {
                    var ctDatHang = localStorage.getItem(lcCTDatHang_Const);
                    if (ctDatHang !== null) {
                        ctDatHang = JSON.parse(ctDatHang);
                        itemCTTrahang = $.grep(ctDatHang, function (x) {
                            return x.ID_DonViQuiDoi === itemChose.ID_DonViQuiDoi && x.MaHoaDon === itemHD[0].MaHoaDonTraHang;
                        });
                        if (itemCTTrahang.length > 0) {
                            typeAdd = 2;
                            // cache DatHang: assign SoLuongDaMua = SoLuongConLai --> assign to CTHD
                            itemCTTrahang[0].SoLuongDaMua = itemCTTrahang[0].SoLuongConLai;
                            itemCTTrahang[0].ID_ChiTietGoiDV = itemCTTrahang[0].ID;
                            for (let j = 0; j < itemCTTrahang[0].DM_LoHang.length; j++) {
                                if (j !== 0) {
                                    itemCTTrahang[0].DM_LoHang[j].ID_ChiTietGoiDV = itemCTTrahang[0].DM_LoHang[j].ID;
                                }
                                itemCTTrahang[0].DM_LoHang[j].SoLuongDaMua = itemCTTrahang[0].DM_LoHang[j].SoLuongConLai;
                            }
                            for (let j = 0; j < itemCTTrahang[0].HangCungLoais.length; j++) {
                                itemCTTrahang[0].HangCungLoais[j].ID_ChiTietGoiDV = itemCTTrahang[0].HangCungLoais[j].ID;
                                itemCTTrahang[0].HangCungLoais[j].SoLuongDaMua = itemCTTrahang[0].HangCungLoais[j].SoLuongConLai;
                            }
                        }
                    }
                }
            }

            if (loaiHD === 2) {// hoadon baohanh: assign DonGia = 0
                dongia = 0;
            }

            var found = -1;
            var soluongNew = 1;
            itemChose.GiaBan = dongia;
            itemChose.SoLuong = soluong;
            itemChose.ID_HangHoa = itemChose.ID;

            if (itemChose.LoaiHangHoa === 3) {
                itemChose.ThanhPhanComBo = await GetThanhPhanComBo(itemChose.ID_DonViQuiDoi, itemHD[0]);
            }
            else {
                itemChose.ThanhPhanComBo = [];
            }

            var ob1 = {};
            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd === null) {
                cthd = [];
            }
            else {
                cthd = JSON.parse(cthd);
            }
            for (let i = 0; i < cthd.length; i++) {
                let itemFor = cthd[i];
                if (itemFor.IDRandomHD === idRandomHD && itemFor.ID_DonViQuiDoi === idQuiDoi
                    && itemFor.ID_ChiTietGoiDV === idCT_goiDV) {
                    found = i;
                    ob1 = itemFor;
                    if (itemFor.QuanLyTheoLoHang) {
                        let ctEx = $.grep(itemFor.DM_LoHang, function (x) {
                            return x.ID_LoHang === itemChose.ID_LoHang;
                        });
                        if (ctEx.length > 0) {
                            if (ctEx[0].LotParent) {
                                soluongNew = formatNumberToFloat(itemFor.SoLuong) + soluong;

                                ob1 = ChangeDonGia_CaculatorAgainCTHD(ob1, soluongNew, type == 3 ? dongia : ob1.GiaBan);

                                // assign again lotparent
                                ob1.DM_LoHang[0].SoLuong = ob1.SoLuong;
                                ob1.DM_LoHang[0].ThanhTien = ob1.ThanhTien;
                                ob1.DM_LoHang[0].ThanhToan = ob1.ThanhToan;
                                ob1.DM_LoHang[0].TongPhiDichVu = ob1.TongPhiDichVu;

                                if (typeAdd === 1 && soluongNew > itemFor.SoLuongDaMua) {
                                    ShowMessage_Danger(itemChose.TenHangHoa +
                                        ' có mã lô ' + itemChose.MaLoHang + ' chỉ được phép trả tối đa số lượng là ' + itemFor.SoLuongDaMua);
                                    return;
                                }
                            }
                            else {
                                // update soluong in dm_lo
                                for (let k = 0; k < ob1.DM_LoHang.length; k++) {
                                    let forLot = ob1.DM_LoHang[k];
                                    if (forLot.ID_LoHang === itemChose.ID_LoHang) {
                                        ob1.DM_LoHang[k].SoLuong = forLot.SoLuong + soluong;

                                        if (typeAdd === 1 && ob1.DM_LoHang[k].SoLuong > forLot.SoLuongDaMua) {
                                            ShowMessage_Danger(itemChose.TenHangHoa +
                                                ' có mã lô ' + itemChose.MaLoHang + ' chỉ được phép trả tối đa số lượng là ' + itemFor.SoLuongDaMua);
                                            return;
                                        }

                                        ob1.DM_LoHang[k] = ChangeDonGia_CaculatorAgainCTHD(ob1.DM_LoHang[k],
                                            ob1.DM_LoHang[k].SoLuong, type == 3 ? dongia : forLot.GiaBan);
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            let objLot = {};
                            if (typeAdd !== 0) {
                                let loChild = $.grep(itemCTTrahang[0].DM_LoHang, function (x) {
                                    return x.ID_LoHang === itemChose.ID_LoHang;
                                });
                                if (loChild.length > 0) {
                                    loChild[0].SoLuong = 1;
                                    objLot = newHangHoa(loChild[0], itemHD[0]);
                                    objLot.NgaySanXuat = loChild[0].NgaySanXuat;
                                    objLot.NgayHetHan = loChild[0].NgayHetHan;
                                    objLot.SoLuongDaMua = loChild[0].SoLuongDaMua;
                                    objLot.SoLuongConLai = loChild[0].SoLuongConLai;
                                }
                            }
                            else {
                                objLot = newHangHoa(itemChose, itemHD[0]);
                            }
                            objLot.LotParent = false;
                            ob1.DM_LoHang.push(objLot);
                        }
                    }
                    else {
                        soluongNew = formatNumberToFloat(itemFor.SoLuong) + soluong;
                        if (typeAdd === 1 && soluongNew > itemFor.SoLuongDaMua) {
                            ShowMessage_Danger(itemChose.TenHangHoa +
                                ' chỉ được phép trả tối đa số lượng là ' + itemFor.SoLuongDaMua);
                            return;
                        }
                        ob1 = ChangeDonGia_CaculatorAgainCTHD(ob1, soluongNew, type == 3 ? dongia : ob1.GiaBan);
                    }
                    break;
                }
            }
            if (found === -1) {
                if (typeAdd !== 0) {
                    itemCTTrahang[0].SoLuong = 1;
                    ob1 = newHangHoa(itemCTTrahang[0], itemHD[0]);
                    ob1.SoLuongDaMua = itemCTTrahang[0].SoLuongDaMua;
                    ob1.SoLuongConLai = itemCTTrahang[0].SoLuongConLai;
                }
                else {
                    ob1 = newHangHoa(itemChose, itemHD[0]);
                }
                if (ob1.QuanLyTheoLoHang) {
                    let objLot = $.extend({}, ob1);
                    objLot.ListDonViTinh = [];
                    objLot.HangCungLoais = [];
                    objLot.DM_LoHang = [];
                    objLot.ThanhPhan_DinhLuong = [];
                    objLot.BH_NhanVienThucHien = [];
                    ob1.DM_LoHang.push(objLot);
                }
                cthd.unshift(ob1);
            }
            else {
                switch (typeAdd) {
                    case 0:
                        for (let i = 0; i < cthd.length; i++) {
                            if (cthd[i].IDRandomHD === idRandomHD && cthd[i].ID_DonViQuiDoi === idQuiDoi
                            ) {
                                cthd.splice(i, 1);
                                break;
                            }
                        }
                        break;
                    case 1:
                    case 2:
                        for (let i = 0; i < cthd.length; i++) {
                            if (cthd[i].IDRandomHD === idRandomHD && cthd[i].ID_DonViQuiDoi === idQuiDoi) {
                                ob1.ID_ChiTietGoiDV = cthd[i].ID_ChiTietGoiDV;
                                ob1.SoLuongDaMua = itemCTTrahang[0].SoLuongDaMua;
                                ob1.SoLuongConLai = itemCTTrahang[0].SoLuongConLai;
                                cthd.splice(i, 1);
                                break;
                            }
                        }
                        break;
                }
                cthd.unshift(ob1);
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
            UpdateSoThuTu_CTHD(false, idRandomHD);
            UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
            UpdateAgain_ListDVT_forCTHD(false, idRandomHD);
            Reset_ListDVT_forCTHD_TraHang();
            self.KM_KMApDung([]);
            UpdateKhuyenMai_CTHD(ob1.ID_DonViQuiDoi, idRandomHD);
            if (ob1.ThanhPhanComBo.length > 0) {
                ChangeSoLuongParent_UpdateCombo(ob1.IDRandom, soluongNew, false);
            }
            UpdateChietKhauNV_inCTHD(ob1.IDRandom, itemHD[0].LoaiHoaDon === 6, ob1);
            ResetKM_HangHoa(ob1.ID_DonViQuiDoi, ob1.ID_NhomHangHoa, idRandomHD);
            ResetKM_HoaDon(idRandomHD);
            BindCTHD_byIDRandomHD(idRandomHD);
            if (itemHD[0].LoaiHoaDon === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }
            // upadate TongTien, giamgia, phai thanh toan, can thanh toan of HoaDon after addHH
            if (itemHD[0].LoaiHoaDon !== 6) {
                if (found !== -1) {
                    UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, ob1.IDRandom, soluongNew, false);
                }
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                var arrHD = [];
                let lcHD = localStorage.getItem(lcListHD);
                lcHD = JSON.parse(lcHD);
                for (let i = 0; i < lcHD.length; i++) {
                    if (lcHD[i].IDRandom === idRandomHD) {
                        arrHD = lcHD[i];
                        break;
                    }
                }
                var printTicket = Check_PrintTicket(itemHD[0]);
                if (printTicket === true) {
                    self.saveHoaDonTraHang(false);
                }
                else {
                    // bind again HoaDon if have KhuyenMai
                    self.HoaDons().SetData(arrHD);
                }
            }
            else {
                if (found !== -1) {
                    UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, ob1.IDRandom, soluongNew, true);
                }
                UpdateHD_TraHang(idRandomHD);
            }
            BindHD_byIDRandom(idRandomHD);
            vmUpAnhHoaDon.InvoiceChosing.IDRandomHD = idRandomHD;
            HideShow_Icon_ChietKhauNV();
            Caculator_AmountProduct();
        }
    }

    async function GetThanhPhanComBo(idQuiDoi, hd) {
        var xx = await ajaxHelper(DMHangHoaUri + 'GetDinhLuongDV_FromIDQuyDoi?idQuiDoi=' + idQuiDoi + '&idDonVi=' + id_DonVi
            , 'GET').done(function () { })
            .then(function (x) {
                if (x.res) {
                    let combo = [];
                    for (let i = 0; i < x.dataSoure.length; i++) {
                        let tp = x.dataSoure[i];
                        tp.DonViTinh = [];
                        tp.ID_ChiTietGoiDV = null;
                        tp.GiaVon = 0;
                        tp.GhiChuHH = tp.GhiChu;
                        let objTP = newHangHoa(tp, hd, false);
                        objTP.PTThue = 0;
                        objTP.TienThue = 0;
                        objTP.PTChietKhau = 0;
                        objTP.TienChietKhau = 0;
                        objTP.DonGia = tp.GiaBan;
                        objTP.ThanhTien = tp.GiaBan * tp.SoLuong;
                        objTP.ThanhToan = objTP.ThanhTien;
                        objTP.SoLuongMacDinh = tp.SoLuong;

                        let tongphiDV = 0;
                        if (objTP.LoaiHoaDon === 1 || objTP.LoaiHoaDon === 25) {
                            tongphiDV = tp.PhiDichVu;
                            if (tp.LaPTPhiDichVu) {
                                tongphiDV = Math.round(tp.PhiDichVu * tp.SoLuong * tp.GiaBan / 100);
                            }
                        }
                        objTP.TongPhiDichVu = tongphiDV;
                        combo.push(objTP);
                    }
                    return combo;
                }
                return []
            })
        return xx;
    }

    function UpdateSoThuTu_CTHD(isCTDoiTra, idRandomHD) {
        var locaStoreName = lcListCTHD;
        if (isCTDoiTra) {
            locaStoreName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(locaStoreName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            var arrHD = $.grep(cthd, function (item) {
                return item.IDRandomHD === idRandomHD;
            });
            // update again SoThuTu for CTHD with MaHoaDon
            var stt = 1;
            for (let i = arrHD.length - 1; i >= 0; i--) {
                arrHD[i].SoThuTu = stt;
                stt = stt + 1;
            }
            for (let i = cthd.length - 1; i >= 0; i--) {
                if (cthd[i].IDRandomHD === idRandomHD) {
                    for (let j = 0; j < arrHD.length; j++) {
                        if (cthd[i].IDRandom === arrHD[j].IDRandom) {
                            cthd[i].SoThuTu = arrHD[j].SoThuTu;
                        }
                    }
                }
            }
            localStorage.setItem(locaStoreName, JSON.stringify(cthd));
        }
    }
    function FindCTHD_isDoing(item, isCTDoiTra) {
        var quanLiTheoLo = item.QuanLyTheoLoHang;
        quanLiTheoLo = (quanLiTheoLo === null ? false : quanLiTheoLo);
        var idCT_goiDV = item.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);
        var concungloai = item.LaConCungLoai;
        var idRandom = item.IDRandom;
        var locaStoreName = lcListCTHD;
        if (isCTDoiTra) {
            locaStoreName = lcListCTHD_DoiTra;
        }
        var lstCTHD = localStorage.getItem(locaStoreName);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            if (quanLiTheoLo) {
                if (item.LotParent) {
                    for (let i = 0; i < lstCTHD.length; i++) {
                        if (lstCTHD[i].IDRandom === idRandom) {
                            return lstCTHD[i];
                        }
                    }
                }
                else {
                    for (let i = 0; i < lstCTHD.length; i++) {
                        for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                            if (lstCTHD[i].DM_LoHang[j].IDRandom === idRandom) {
                                return lstCTHD[i].DM_LoHang[j];
                            }
                        }
                    }
                }
            }
            else {
                if (concungloai) {
                    for (let i = 0; i < lstCTHD.length; i++) {
                        for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                            if (lstCTHD[i].HangCungLoais[j].IDRandom === idRandom) {
                                return lstCTHD[i].HangCungLoais[j];
                            }
                        }
                    }
                }
                else {
                    for (let i = 0; i < lstCTHD.length; i++) {
                        if (lstCTHD[i].IDRandom === idRandom) {
                            return lstCTHD[i];
                        }
                    }
                }
            }
        }
        return null;
    }
    function SetBorder_LotEnd_CTHD() {
        // set border bottom for all div is child of ul li
        //$('ul li div:last-child').css('border-bottom', '1px dotted #ccc');
        //// remove border of div last
        //$('ul li div:last-child').css('border-bottom', 'none');
    }
    self.ItemHH_LoChosing_DoiTra = ko.observable();
    self.Click_ChoseHangLo_DoiTra = async function (itemChose, type) {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var isOffline = CheckHoaDonOffline_byMaHoaDon(_maHoaDon);
        if (isOffline === false) {
            return false;
        }
        self.ItemHH_LoChosing_DoiTra(itemChose);

        var addHang = true;
        if (!self.IsNhapNhanh_DoiTra() && type === 1) {
            addHang = false;
            $('#txtSoLuong_DT').focus().select();
        }

        var idQuiDoi = itemChose.ID_DonViQuiDoi;
        var quanLiTheoLo = itemChose.QuanLyTheoLoHang;
        quanLiTheoLo === null ? false : quanLiTheoLo;

        var soluong = 1, dongia = itemChose.GiaBan;
        switch (type) {
            case 1:
                $('#txtSearchDoiTra').focus();
                if (quanLiTheoLo) {
                    $('#txtSearchDoiTra').val(itemChose.MaHangHoa + ' LSX: ' + itemChose.MaLoHang);
                }
                else {
                    $('#txtSearchDoiTra').val(itemChose.MaHangHoa);
                }
                $('#txtSearchDoiTra').select();
                break;
            case 2:
                soluong = formatNumberToFloat(self.txtSoLuongDT());
                $('#txtSoLuong_DT').focus().select();
                if (formatNumberToFloat(self.txtDonGiaDT()) > 0) {
                    dongia = formatNumberToFloat(self.txtDonGiaDT());
                }
                break;
            case 3:
                soluong = formatNumberToFloat(self.txtSoLuongDT());
                dongia = formatNumberToFloat(self.txtDonGiaDT());
                $('#txtDonGia_DT').focus().select();
                break;
        }

        if (!addHang) {
            return;
        }

        var itemEx = [];
        var lstHoaDon = localStorage.getItem(lcListHD);
        if (lstHoaDon === null) {
            lstHoaDon = [];
        }
        else {
            lstHoaDon = JSON.parse(lstHoaDon);
            itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
        }
        if (itemEx.length === 0) {
            var newObj = newHoaDon(_maHoaDon);
            lstHoaDon.push(newObj);
            localStorage.setItem(lcListHD, JSON.stringify(lstHoaDon));
        }
        // find itemHD with _maHoaDon
        var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
        var idRandomHD = itemHD[0].IDRandom;
        var idCT_goiDV = itemChose.ID_ChiTietGoiDV;
        idCT_goiDV = (idCT_goiDV === undefined ? null : idCT_goiDV);

        itemChose.SoLuong = soluong;
        itemChose.GiaBan = dongia;
        itemChose.ID_HangHoa = itemChose.ID;

        if (itemChose.LoaiHangHoa === 3) {
            itemChose.ThanhPhanComBo = await GetThanhPhanComBo(itemChose.ID_DonViQuiDoi, itemHD[0]);
        }
        else {
            itemChose.ThanhPhanComBo = [];
        }

        var ob1 = {};
        var found = -1;
        var soluongNew = 1;

        var cthd = localStorage.getItem(lcListCTHD_DoiTra);
        if (cthd === null) {
            cthd = [];
        }
        else {
            cthd = JSON.parse(cthd);
        }
        for (let i = 0; i < cthd.length; i++) {
            let itemFor = cthd[i];
            if (itemFor.IDRandomHD === idRandomHD && itemFor.ID_DonViQuiDoi === idQuiDoi) {
                found = i;
                ob1 = itemFor;
                if (itemFor.QuanLyTheoLoHang) {
                    let ctEx = $.grep(itemFor.DM_LoHang, function (x) {
                        return x.ID_LoHang === itemChose.ID_LoHang;
                    });
                    if (ctEx.length > 0) {
                        if (ctEx[0].LotParent) {
                            soluongNew = formatNumberToFloat(itemFor.SoLuong) + soluong;

                            ob1 = ChangeDonGia_CaculatorAgainCTHD(ob1, soluongNew, type === 3 ? dongia : ob1.GiaBan);

                            // assign again lotparent
                            ob1.DM_LoHang[0].SoLuong = ob1.SoLuong;
                            ob1.DM_LoHang[0].ThanhTien = ob1.ThanhTien;
                            ob1.DM_LoHang[0].ThanhToan = ob1.ThanhToan;
                            ob1.DM_LoHang[0].TongPhiDichVu = ob1.TongPhiDichVu;
                        }
                        else {
                            // update soluong in dm_lo
                            for (let k = 0; k < ob1.DM_LoHang.length; k++) {
                                let forLot = ob1.DM_LoHang[k];
                                if (forLot.ID_LoHang === itemChose.ID_LoHang) {
                                    ob1.DM_LoHang[k].SoLuong = forLot.SoLuong + soluong;
                                    ob1.DM_LoHang[k] = ChangeDonGia_CaculatorAgainCTHD(ob1.DM_LoHang[k],
                                        ob1.DM_LoHang[k].SoLuong, type === 3 ? dongia : forLot.GiaBan);
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        let objLot = newHangHoa(itemChose, itemHD[0]);
                        objLot.LotParent = false;
                        ob1.DM_LoHang.push(objLot);
                    }
                }
                else {
                    soluongNew = formatNumberToFloat(itemFor.SoLuong) + soluong;
                    ob1 = ChangeDonGia_CaculatorAgainCTHD(ob1, soluongNew, type === 3 ? dongia : ob1.GiaBan);
                }
                break;
            }
        }
        if (found === -1) {
            ob1 = newHangHoa(itemChose, itemHD[0]);
            if (ob1.QuanLyTheoLoHang) {
                let objLot = $.extend({}, ob1);
                objLot.ListDonViTinh = [];
                objLot.HangCungLoais = [];
                objLot.DM_LoHang = [];
                objLot.ThanhPhan_DinhLuong = [];
                objLot.BH_NhanVienThucHien = [];
                ob1.DM_LoHang.push(objLot);
            }
            cthd.unshift(ob1);
        }
        else {
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandomHD === idRandomHD && cthd[i].ID_DonViQuiDoi === idQuiDoi
                    && cthd[i].ID_ChiTietGoiDV === idCT_goiDV) {
                    cthd.splice(i, 1);
                    break;
                }
            }
            cthd.unshift(ob1);
        }
        localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(cthd));

        UpdateSoThuTu_CTHD(true, idRandomHD);
        UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
        UpdateAgain_ListDVT_forCTHD(true, idRandomHD);

        if (found !== -1) {
            UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, ob1.IDRandom, soluongNew, true);
        }
        if (ob1.ThanhPhanComBo.length > 0) {
            ChangeSoLuongParent_UpdateCombo(ob1.IDRandom, soluongNew, true);
        }
        UpdateCacheHDLe(idRandomHD, true);
        UpdateGiamGiaHD_ByNhomKH(idRandomHD);
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
        Bind_CTHĐoiTra_afterHideColumn();
        BindHD_byIDRandom(idRandomHD);
        HideShow_Icon_ChietKhauNV();
    }

    self.KeyUp_GiamGiaNhomKH = function () {
        var $this = $('#txtGiamGiaNhomKH');
        formatNumberObj($this);
        var valThis = formatNumberToFloat($this.val());
        if ($('#LaPhanTram').hasClass('active-re')) {
            if (valThis > 100) {
                $this.val(100);
            }
        }
    }
    // NV TuVan, NV ThucHien
    self.DichVu_isDoing = ko.observableArray();
    // status: busy=1 (bận) , free=0 (rảnh)
    // check and assign status for NhanVien
    function Check_Status_NhanVien() {
        var arrIDNhanVien = [];
        // find NhanVien is busy in CTHD
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                for (let j = 0; j < cthd[i].BH_NhanVienThucHien.length; j++) {
                    if ($.inArray(cthd[i].BH_NhanVienThucHien[j].ID_NhanVien, arrIDNhanVien) === -1) {
                        arrIDNhanVien.push(cthd[i].BH_NhanVienThucHien[j].ID_NhanVien);
                    }
                }
                // find nv in hangcungloai
                if (cthd[i].HangCungLoais.length > 0) {
                    for (let k = 0, m = cthd[i].HangCungLoais.length; k < m; k++) {
                        for (let n = 0; n < cthd[i].HangCungLoais[k].BH_NhanVienThucHien.length; n++) {
                            if ($.inArray(cthd[i].HangCungLoais[k].BH_NhanVienThucHien[n].ID_NhanVien, arrIDNhanVien) === -1) {
                                arrIDNhanVien.push(cthd[i].HangCungLoais[k].BH_NhanVienThucHien[n].ID_NhanVien);
                            }
                        }
                    }
                }
                // find nv in lohang
                if (cthd[i].DM_LoHang.length > 0) {
                    for (let k = 0, m = cthd[i].DM_LoHang.length; k < m; k++) {
                        if (cthd[i].DM_LoHang[k].BH_NhanVienThucHien !== undefined) {
                            for (let n = 0; n < cthd[i].DM_LoHang[k].BH_NhanVienThucHien.length; n++) {
                                if ($.inArray(cthd[i].DM_LoHang[k].BH_NhanVienThucHien[n].ID_NhanVien, arrIDNhanVien) === -1) {
                                    arrIDNhanVien.push(cthd[i].DM_LoHang[k].BH_NhanVienThucHien[n].ID_NhanVien);
                                }
                            }
                        }
                    }
                }
                if (cthd[i].ThanhPhanComBo.length > 0) {
                    for (let k = 0, m = cthd[i].ThanhPhanComBo.length; k < m; k++) {
                        if (cthd[i].ThanhPhanComBo[k].BH_NhanVienThucHien !== undefined) {
                            for (let n = 0; n < cthd[i].ThanhPhanComBo[k].BH_NhanVienThucHien.length; n++) {
                                if ($.inArray(cthd[i].ThanhPhanComBo[k].BH_NhanVienThucHien[n].ID_NhanVien, arrIDNhanVien) === -1) {
                                    arrIDNhanVien.push(cthd[i].ThanhPhanComBo[k].BH_NhanVienThucHien[n].ID_NhanVien);
                                }
                            }
                        }
                    }
                }
            }
        }
        // find NhanVien is busy in CTHD_DoiTra
        var ctdt = localStorage.getItem(lcListCTHD_DoiTra);
        if (ctdt !== null) {
            ctdt = JSON.parse(ctdt);
            for (let i = 0; i < ctdt.length; i++) {
                for (let j = 0; j < ctdt[i].BH_NhanVienThucHien.length; j++) {
                    if ($.inArray(ctdt[i].BH_NhanVienThucHien[j].ID_NhanVien, arrIDNhanVien) === -1) {
                        arrIDNhanVien.push(ctdt[i].BH_NhanVienThucHien[j].ID_NhanVien);
                    }
                }
                // find nv in hangcungloai
                if (ctdt[i].HangCungLoais.length > 0) {
                    for (let k = 0, m = ctdt[i].HangCungLoais.length; k < m; k++) {
                        for (let n = 0; n < ctdt[i].HangCungLoais[k].BH_NhanVienThucHien.length; n++) {
                            if ($.inArray(ctdt[i].HangCungLoais[k].BH_NhanVienThucHien[n].ID_NhanVien, arrIDNhanVien) === -1) {
                                arrIDNhanVien.push(ctdt[i].HangCungLoais[k].BH_NhanVienThucHien[n].ID_NhanVien);
                            }
                        }
                    }
                }
                // find nv in lohang
                if (ctdt[i].DM_LoHang.length > 0) {
                    for (let k = 0, m = ctdt[i].DM_LoHang.length; k < m; k++) {
                        for (let n = 0; n < ctdt[i].DM_LoHang[k].BH_NhanVienThucHien.length; n++) {
                            if ($.inArray(ctdt[i].DM_LoHang[k].BH_NhanVienThucHien[n].ID_NhanVien, arrIDNhanVien) === -1) {
                                arrIDNhanVien.push(ctdt[i].DM_LoHang[k].BH_NhanVienThucHien[n].ID_NhanVien);
                            }
                        }
                    }
                }
            }
        }
        // add Status for List NhanVien
        for (let i = 0; i < self.NhanViens().length; i++) {
            if ($.inArray(self.NhanViens()[i].ID, arrIDNhanVien) === -1) {
                self.NhanViens()[i].StatusCV = 0;
            }
            else {
                self.NhanViens()[i].StatusCV = 1;
            }
        }
    }

    self.showPopupUserDiscount = function (item, isDoiTra) {
        Check_Status_NhanVien();

        var cthdDoing = FindCTHD_isDoing(item, isDoiTra);
        if (cthdDoing !== null) {
            let phiDV = 0;
            // chi tinh phiDV khi su dung
            if (item.LaHangHoa === false && (item.LoaiHoaDon === 1 || item.LoaiHoaDon === 25 || isDoiTra)) {
                phiDV = cthdDoing.TongPhiDichVu;
                phiDV = phiDV === undefined ? 0 : phiDV;
            }
            cthdDoing.TongPhiDichVu = phiDV;
            let thanhtien = (cthdDoing.GiaBan - cthdDoing.TienChietKhau) * cthdDoing.SoLuong;
            thanhtien = thanhtien < 0 ? 0 : thanhtien;
            cthdDoing.ThanhTien = thanhtien;

            self.DichVu_isDoing(cthdDoing);
            vmHoaHongDV.GridNV_TVTH = cthdDoing.BH_NhanVienThucHien;
            vmHoaHongDV.DichVu_isDoing = cthdDoing;

            let loaiHD = self.HoaDons().LoaiHoaDon();
            if (loaiHD === 6) {
                if (self.HoaDons().MaHoaDon().indexOf('DV') > -1) {
                    loaiHD = 19;
                }
                else {
                    loaiHD = 1;
                }
            }
            vmHoaHongDV.inforHoaDon.LoaiHoaDon = loaiHD;
            vmHoaHongDV.showModal(cthdDoing, isDoiTra, false);
        }
    }

    $('#vmEditHoaHongDV').on('hidden.bs.modal', function () {
        if (vmHoaHongDV.saveOK && vmHoaHongDV.inforHoaDon.LoaiHoaDon !== 36) {
            if (vmHoaHongDV.isNew) {
                if (!vmHoaHongDV.isCombo) {
                    self.AgreeNhanVien_TVTH();
                }
                else {
                    self.Combo_AgreeNhanVienTVTH();
                }
            }
        }
    })

    self.AgreeNhanVien_TVTH = function () {
        // check if chose same ID_ViTri old
        let check = CheckViTri_Chosed();
        if (check !== false) {
            $('#modalNhanVienChietKhau').modal('hide');
            // update listNhanVien TV, TH in cache CTHD
            let nvTH = '';
            let nvTV = '';
            let nvTH_Print = '';
            let nvTV_Print = '';
            for (let i = 0; i < vmHoaHongDV.GridNV_TVTH.length; i++) {
                let itemFor = vmHoaHongDV.GridNV_TVTH[i];
                let dvtCK = ' đ';
                let valCK = formatNumber3Digit(itemFor.TienChietKhau);
                if (itemFor.PT_ChietKhau > 0) {
                    dvtCK = ' %';
                    valCK = formatNumber3Digit(itemFor.PT_ChietKhau);
                }
                switch (itemFor.TacVu) {
                    case 1: // thuchien
                    case 3: // thuchien theoyc
                        nvTH += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                        nvTH_Print += itemFor.TenNhanVien + ', ';
                        break;
                    case 2: // tuvan
                    case 4: // bangoi
                        nvTV += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                        nvTV_Print += itemFor.TenNhanVien + ', ';
                        break;
                }
            }

            let loaiHD = GetLoaiHoaDon_ofHDopening();
            let nameCacheCTHD = lcListCTHD;
            let txtFirst_GhiChu = "Tư vấn: ";
            switch (loaiHD) {
                case 6:
                    nameCacheCTHD = lcListCTHD_DoiTra;
                    break;
                case 19:
                    let allHD = localStorage.getItem(lcListHD);
                    if (allHD !== null) {
                        allHD = JSON.parse(allHD);
                        let hdOp = GetHDOpening_byIDRandom(self.DichVu_isDoing().IDRandomHD, allHD);
                        if (hdOp.length > 0) {
                            if (hdOp[0].LoaiHoaDon === 6) {
                                nameCacheCTHD = lcListCTHD_DoiTra;
                            }
                        }
                    }
                    txtFirst_GhiChu = 'Bán gói DV: '
                    break
            }
            nvTH = nvTH !== '' ? 'Thực hiện: ' + Remove_LastComma(nvTH) : '';
            nvTH_Print = nvTH_Print !== '' ? Remove_LastComma(nvTH_Print) : '';
            nvTV = nvTV !== '' ? txtFirst_GhiChu + Remove_LastComma(nvTV) : '';
            nvTV_Print = nvTV_Print !== '' ? Remove_LastComma(nvTV_Print) : '';

            // update NVTH-TV in CTHD
            let idRandom = self.DichVu_isDoing().IDRandom;
            let quanlytheolo = self.DichVu_isDoing().QuanLyTheoLoHang;
            let cthd = localStorage.getItem(nameCacheCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                let tinhHoaHongtruocCK = vmHoaHongDV.TinhHoaHongTruocCK ? 1 : 0;
                if (self.DichVu_isDoing().LotParent || (quanlytheolo === false && self.DichVu_isDoing().LaConCungLoai === false)) {
                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandom === idRandom) {
                            cthd[i].GhiChu_NVThucHien = nvTH;
                            cthd[i].GhiChu_NVThucHienPrint = nvTH_Print;
                            cthd[i].GhiChu_NVTuVan = nvTV;
                            cthd[i].GhiChu_NVTuVanPrint = nvTV_Print;
                            cthd[i].HoaHongTruocChietKhau = tinhHoaHongtruocCK;
                            cthd[i].BH_NhanVienThucHien = vmHoaHongDV.GridNV_TVTH;
                            break;
                        }
                    }
                }
                else {
                    if (quanlytheolo) {
                        for (let i = 0; i < cthd.length; i++) {
                            for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                                if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                                    cthd[i].DM_LoHang[j].GhiChu_NVThucHien = nvTH;
                                    cthd[i].DM_LoHang[j].GhiChu_NVThucHienPrint = nvTH_Print;
                                    cthd[i].DM_LoHang[j].GhiChu_NVTuVan = nvTV;
                                    cthd[i].DM_LoHang[j].GhiChu_NVTuVanPrint = nvTV_Print;
                                    cthd[i].DM_LoHang[j].HoaHongTruocChietKhau = tinhHoaHongtruocCK;
                                    cthd[i].DM_LoHang[j].BH_NhanVienThucHien = vmHoaHongDV.GridNV_TVTH;
                                    i = cthd.length;  // esc for loop
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        for (let i = 0; i < cthd.length; i++) {
                            for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                                if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                                    cthd[i].HangCungLoais[j].GhiChu_NVThucHien = nvTH;
                                    cthd[i].HangCungLoais[j].GhiChu_NVThucHienPrint = nvTH_Print;
                                    cthd[i].HangCungLoais[j].GhiChu_NVTuVan = nvTV;
                                    cthd[i].HangCungLoais[j].GhiChu_NVTuVanPrint = nvTV_Print;
                                    cthd[i].HangCungLoais[j].HoaHongTruocChietKhau = tinhHoaHongtruocCK;
                                    cthd[i].HangCungLoais[j].BH_NhanVienThucHien = vmHoaHongDV.GridNV_TVTH;
                                    i = cthd.length;
                                    break;
                                }
                            }
                        }
                    }
                }
                localStorage.setItem(nameCacheCTHD, JSON.stringify(cthd));
            }
            // update ID_ViTri in cache HD
            let lstHD = localStorage.getItem(lcListHD);
            lstHD = JSON.parse(lstHD);
            if (self.IDPhongBan_Chosing() !== undefined) {
                for (let i = 0; i < lstHD.length; i++) {
                    if (lstHD[i].IDRandom === self.DichVu_isDoing().IDRandomHD) {
                        lstHD[i].ID_ViTri = self.IDPhongBan_Chosing();
                        lstHD[i].CreateTime = FormatDatetime_AMPM(new Date());
                        break;
                    }
                }
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
            }
            if (loaiHD === 6) {
                Bind_CTHĐoiTra_afterHideColumn();
            }
            else {
                BindCTHD_byIDRandomHD(self.DichVu_isDoing().IDRandomHD);
            }
            HideShow_Icon_ChietKhauNV();
        }
    }

    function CreateObjHub_User(idRandomHD, hd, cthd, func) {
        return {
            ID_DonVi: id_DonVi,
            SubDomain: _subDomain,
            IDRandomHD: idRandomHD,
            ID_User: id_User,
            HD: hd,
            CTHD: cthd,
            Func: func,
        }
    }

    // update ChietKhauNV, TongPhiDV (addLot: khong can update vi khong co icon nhap chiet khau)
    function UpdateChietKhauNV_inCTHD(idRandom, isDoiTra = false, ctDoing = null) {
        if (ctDoing !== null) {
            let quanlytheolo = ctDoing.QuanLyTheoLoHang;
            let concungloai = ctDoing.LaConCungLoai;
            let lotParent = ctDoing.LotParent;

            let nameCache = lcListCTHD;
            if (isDoiTra) {
                nameCache = lcListCTHD_DoiTra;
            }
            var cthd = localStorage.getItem(nameCache);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                if (lotParent || (concungloai === false && quanlytheolo === false)) {
                    for (let i = 0; i < cthd.length; i++) {
                        let forOut = cthd[i];
                        if (forOut.IDRandom === idRandom) {
                            if (forOut.BH_NhanVienThucHien.length > 0) {

                                let tongPhiDV = forOut.TongPhiDichVu;
                                if (forOut.LoaiHoaDon === 19) {
                                    tongPhiDV = 0;
                                }

                                let gtriTinh = 0;
                                if (forOut.HoaHongTruocChietKhau === 1) {
                                    gtriTinh = forOut.GiaBan * forOut.SoLuong;
                                }
                                else {
                                    gtriTinh = (forOut.GiaBan - forOut.TienChietKhau) * forOut.SoLuong;
                                }
                                gtriTinh = gtriTinh - tongPhiDV;
                                gtriTinh = gtriTinh < 0 ? 0 : gtriTinh;

                                for (let j = 0; j < forOut.BH_NhanVienThucHien.length; j++) {
                                    let forIn = forOut.BH_NhanVienThucHien[j];
                                    let tienCKNew = forIn.ChietKhauMacDinh * forOut.SoLuong * forIn.HeSo;
                                    if (forIn.PT_ChietKhau > 0) {
                                        tienCKNew = gtriTinh * forIn.PT_ChietKhau / 100 * forIn.HeSo;
                                    }
                                    cthd[i].BH_NhanVienThucHien[j].TienChietKhau = tienCKNew;
                                }

                                cthd[i] = CTHD_GetGhiChu_NVTuVanTH(cthd[i]);
                                if (lotParent) {
                                    cthd[i].DM_LoHang[0].BH_NhanVienThucHien = cthd[i].BH_NhanVienThucHien;
                                }
                            }
                            break;
                        }
                    }
                }
                else {
                    if (quanlytheolo) {
                        for (let i = 0; i < cthd.length; i++) {
                            let forOut = cthd[i];
                            for (let j = 0; j < forOut.DM_LoHang.length; j++) {
                                let forIn = forOut.DM_LoHang[j];
                                if (forIn.IDRandom === idRandom) {
                                    if (forIn.BH_NhanVienThucHien.length > 0) {
                                        let gtriTinh = 0;
                                        if (forIn.HoaHongTruocChietKhau === 1) {
                                            gtriTinh = forIn.GiaBan * forIn.SoLuong;
                                        }
                                        else {
                                            gtriTinh = (forIn.GiaBan - forIn.TienChietKhau) * forIn.SoLuong;
                                        }
                                        gtriTinh = gtriTinh - forIn.TongPhiDichVu;
                                        gtriTinh = gtriTinh < 0 ? 0 : gtriTinh;

                                        for (let k = 0; k < forIn.BH_NhanVienThucHien.length; k++) {
                                            let for3 = forIn.BH_NhanVienThucHien[k];
                                            let tienCKNew = for3.ChietKhauMacDinh * forIn.SoLuong * for3.HeSo;
                                            if (for3.PT_ChietKhau > 0) {
                                                tienCKNew = Math.round(gtriTinh * for3.PT_ChietKhau / 100) * for3.HeSo;
                                            }
                                            cthd[i].DM_LoHang[j].BH_NhanVienThucHien[k].TienChietKhau = tienCKNew;
                                        }
                                        cthd[i].DM_LoHang[j] = CTHD_GetGhiChu_NVTuVanTH(cthd[i].DM_LoHang[j]);
                                    }
                                    forIn = CTHD_GetGhiChu_NVTuVanTH(forIn);
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        for (let i = 0; i < cthd.length; i++) {
                            let forOut = cthd[i];
                            for (let j = 0; j < forOut.HangCungLoais.length; j++) {
                                let forIn = forOut.HangCungLoais[j];
                                if (forIn.IDRandom === idRandom) {
                                    if (forIn.BH_NhanVienThucHien.length > 0) {
                                        let gtriTinh = 0;
                                        if (forIn.HoaHongTruocChietKhau === 1) {
                                            gtriTinh = forIn.GiaBan * forIn.SoLuong;
                                        }
                                        else {
                                            gtriTinh = (forIn.GiaBan - forIn.TienChietKhau) * forIn.SoLuong;
                                        }
                                        gtriTinh = gtriTinh - forIn.TongPhiDichVu;
                                        gtriTinh = gtriTinh < 0 ? 0 : gtriTinh;

                                        for (let k = 0; k < forIn.BH_NhanVienThucHien.length; k++) {
                                            let for3 = forIn.BH_NhanVienThucHien[k];
                                            let tienCKNew = for3.ChietKhauMacDinh * forIn.SoLuong * for3.HeSo;
                                            if (for3.PT_ChietKhau > 0) {
                                                tienCKNew = Math.round(gtriTinh * for3.PT_ChietKhau / 100) * for3.HeSo;
                                            }
                                            cthd[i].HangCungLoais[j].BH_NhanVienThucHien[k].TienChietKhau = tienCKNew;
                                        }
                                        forIn = CTHD_GetGhiChu_NVTuVanTH(forIn);
                                    }
                                    break;
                                }
                            }
                        }
                    }
                }
                localStorage.setItem(nameCache, JSON.stringify(cthd));
            }
        }
    }

    // use when tang/giam/edit soluong
    function CTHD_GetGhiChu_NVTuVanTH(ctDoing) {
        let nvTH = '';
        let nvTH_Print = '';
        let nvTV = '';
        let nvTV_Print = '';
        for (let j = 0; j < ctDoing.BH_NhanVienThucHien.length; j++) {
            let itemNV = ctDoing.BH_NhanVienThucHien[j];
            let dvtCK = ' đ';
            let valCK = formatNumber3Digit(itemNV.TienChietKhau);
            if (itemNV.PT_ChietKhau > 0) {
                dvtCK = ' %';
                valCK = itemNV.PT_ChietKhau;
            }
            switch (itemNV.TacVu) {
                case 1:
                case 3:
                    nvTH += itemNV.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                    nvTH_Print += itemNV.TenNhanVien + ', ';
                    break;
                case 2:
                case 4:
                    nvTV += itemNV.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                    nvTV_Print += itemNV.TenNhanVien + ', ';
                    break;
            }
        }
        if (nvTH !== '') {
            ctDoing.GhiChu_NVThucHien = 'Thực hiện: ' + Remove_LastComma(nvTH);
            ctDoing.GhiChu_NVThucHienPrint = Remove_LastComma(nvTH_Print);
        }
        if (nvTV !== '') {
            ctDoing.GhiChu_NVTuVan = 'Tư vấn: ' + Remove_LastComma(nvTV);
            ctDoing.GhiChu_NVTuVanPrint = Remove_LastComma(nvTV_Print);
        }
        return ctDoing;
    }

    // hide/show icon ChietKhau and icon change TPDinhLuong
    function HideShow_Icon_ChietKhauNV() {
        // show icon chietkhau nhan vien all nganh nghe kinh doanh
        var loaiHD = GetLoaiHoaDon_ofHDopening();
        switch (loaiHD) {
            case 1:
                $('.icon-user-blue').show();
                $('.icon-user-blue1').css('display', 'none');
                break;
            case 3:
                $('.icon-user-blue ,.icon-user-blue1').css('display', 'none');
                break;
            case 6:
                $('#CTHDView .icon-user-blue,.icon-user-blue1').css('display', 'none');
                //$('#TraHangView .icon-user-blue1').css('display', 'none');
                //$('#TraHangView .icon-user-blue').show();// doi tra show icon
                break;
            case 19:
                // tra goi, mua goi (return loai 19)
                $('.icon-user-blue1').show();
                $('.icon-user-blue').css('display', 'none');
                //$('.i-con-ban-hang .fa-list-alt').hide();
                if (_maHoaDon === '') {
                    _maHoaDon = $('.bill-bxslide  li.using font').text();
                }
                break;
            default:
                break;
        }
    }
    self.GotoHome = function () {
        window.open('/#/DashBoard', '_blank');
    }
    // use for events in page (not use first load): load hanghoa and update GiaBan by ID_BangGia current
    function LoadAgain_ListHangHoa_IfNotXuatAm(loaiHD) {
        var lstHH_haveTonKho = [];
        var itemEx = [];
        var lcSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lcSetPrint !== null) {
            lcSetPrint = JSON.parse(lcSetPrint);
            itemEx = $.grep(lcSetPrint, function (x) {
                return x.HideProduct === true;
            })
        }
        if (itemEx.length > 0) {
            lstHH_haveTonKho = $.grep(self.HangHoaOlds(), function (x) {
                return (x.TonKho > 0 && x.LaHangHoa) || x.LaHangHoa === false;
            });
            if (loaiHD === 6) {
                // tra hang: TonKho < 0
                self.HangHoaAll($.extend(true, [], self.HangHoaOlds()));
                self.HangHoas($.extend(true, [], self.HangHoaOlds()));
            }
            else {
                self.HangHoaAll($.extend(true, [], lstHH_haveTonKho));
                self.HangHoas($.extend(true, [], lstHH_haveTonKho));
            }
        }
        else {
            lstHH_haveTonKho = self.HangHoaOlds();
            self.HangHoaAll($.extend(true, [], lstHH_haveTonKho));
            self.HangHoas($.extend(true, [], lstHH_haveTonKho));
        }
        vm_HangHoa.reset(self.HangHoaAll());
        // mua moi: TonKho > 0
        model_TH.reset(lstHH_haveTonKho);
        BindListHangHoa_ByPage();

    }

    self.clickGoiDichVu = function () {
        ChangeLoaiHD_CheckHasKhuyenMai_orUsingService(19);
        UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
    }
    self.ChangeNgayApDung_GoiDV = function () {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        var dtchange = $('#dtNgayApDungGoiDV').val();
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].MaHoaDon === _maHoaDon && lstHD[i].NguoiTao === userLogin) {
                    lstHD[i].NgayApDungGoiDV = dtchange;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }
    self.ChangeNgayHetHan_GoiDV = function () {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide  li.using font').text();
        }
        var dtchange = $('#dtNgayHetHanGoiDV').val();
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].MaHoaDon === _maHoaDon && lstHD[i].NguoiTao === userLogin) {
                    lstHD[i].HanSuDungGoiDV = dtchange;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }
    self.Chose_Service = function (itemChose, soluong, isNhapSoLuong) {
        self.ItemHH_LoChosing(itemChose);

        var idQuiDoi = itemChose.ID_DonViQuiDoi;
        var addHang = false;
        if (self.IsNhapNhanh() === true) {
            addHang = true;
            $('#txtSearchHH').focus();
            $('#txtSearchHH').select();
        }
        else {
            if (isNhapSoLuong) {
                addHang = true;
            }
            // nhap thuong -> focus txtSoLuong
            $('#txtSoLuong').focus();
            $('#txtSoLuong').val(1);
            $('#txtSoLuong').select();
        }
        if (addHang) {
            var lstHoaDon = localStorage.getItem(lcListHD);
            if (lstHoaDon === null) {
                lstHoaDon = [];
            }
            else {
                lstHoaDon = JSON.parse(lstHoaDon);
            }
            var loaiHD = GetLoaiHoaDon_ofHDopening();
            // if is active Tab DatHang/GoiDv --> active tab HoaDon
            if (loaiHD !== 1) {
                var max = GetMax_MaHoaDon(1, lstHoaDon);
                _maHoaDon = nameHD_InsertBH + (max + 1);
            }
            var itemEx = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
            if (itemEx.length === 0) {
                let newObj = newHoaDon(_maHoaDon);
                newObj.ID_DoiTuong = self.selectedNCC();
                lstHoaDon.push(newObj);
                localStorage.setItem(lcListHD, JSON.stringify(lstHoaDon));
            }
            // find itemHD with _maHoaDon
            var itemHD = GetHDOpening_byMaHoaDon(_maHoaDon, lstHoaDon);
            var idRandomHD = itemHD[0].IDRandom;
            var idChiTietGoiDV = itemChose.ID_ChiTietGoiDV;

            var idTangKem = itemChose.ID_TangKem;
            idTangKem = (idTangKem === const_GuidEmpty || idTangKem === undefined) ? null : idTangKem;
            var isKMai = (idTangKem === null ? false : true);
            var laDVChuan = itemChose.LaDonViChuan;
            laDVChuan = (laDVChuan === undefined || laDVChuan === null) ? false : laDVChuan;
            var tyLeChuyenDoi = itemChose.TyLeChuyenDoi;
            tyLeChuyenDoi = (tyLeChuyenDoi === undefined || tyLeChuyenDoi === null) ? 1 : tyLeChuyenDoi;
            var tongphiDV = itemChose.PhiDichVu;
            if (itemChose.LaPTPhiDichVu) {
                tongphiDV = Math.round(itemChose.PhiDichVu * itemChose.GiaBan / 100);
            }
            // get infor còn thiếu (GiaVon, LaDVChuan) from list HangHoa
            var giaVon = 0, tonkho = 1;
            var laHangHoa = false;
            var itemHH = $.grep(self.HangHoaOlds(), function (x) {
                return x.ID_DonViQuiDoi === idQuiDoi;
            });
            if (itemHH.length > 0) {
                laHangHoa = itemHH[0].LaHangHoa;
                if (itemHH[0].QuanLyTheoLoHang) {
                    let lot = $.grep(itemHH, function (x) {
                        return x.ID_LoHang === itemChose.ID_LoHang;
                    });
                    if (lot.length > 0) {
                        tonkho = lot[0].TonKho;
                    }
                }
                else {
                    tonkho = itemHH[0].TonKho;
                }
                if (laHangHoa === false) {
                    giaVon = 0;
                }
            }
            else {
                ShowMessage_Danger('Dịch vụ ' + itemChose.TenHangHoa + ' đã bị xóa, không thể sử dụng');
                return false;
            }
            var idRandom = CreateIDRandom('RandomCTHD_');
            var quanLyTheoLo = itemChose.QuanLyTheoLoHang;
            quanLyTheoLo = (quanLyTheoLo === undefined || quanLyTheoLo === null ? false : quanLyTheoLo);

            var dateLot = GetNgaySX_NgayHH(itemChose);
            var tpComBo = itemChose.ThanhPhanComBo;
            if (commonStatisJs.CheckNull(tpComBo)) {
                tpComBo = [];
            }
            var ob1 = {
                SoThuTu: 1,
                IDRandomHD: idRandomHD,
                MaHoaDon: _maHoaDon,
                LoaiHoaDon: itemHD[0].LoaiHoaDon, // add LoaiHoaDon --> show warning CTHD (view)
                DonGia: itemChose.GiaBan, // Gia ban dau of HH
                GiaBan: itemChose.GiaBan, // Gia after change
                GiaVon: giaVon,
                SoLuong: soluong,
                TonKho: tonkho,
                TenHangHoa: itemChose.TenHangHoa,
                ThuocTinh_GiaTri: '',
                ThanhTien: 0, // su dung DV, khong tinh tien nua
                ThanhToan: 0,
                ID_DonViQuiDoi: idQuiDoi,
                TenDonViTinh: itemChose.TenDonViTinh,
                MaHangHoa: itemChose.MaHangHoa,
                ID_HangHoa: itemChose.ID_HangHoa, // check when load list Lot
                TienChietKhau: itemChose.TienChietKhau,
                PTChietKhau: itemChose.PTChietKhau,
                DVTinhGiam: '%',
                ThoiGian: moment(new Date()).format('YYYY-MM-DD HH:mm'),
                GhiChu: '',
                SoLuongDaMua: 0,
                SoLuongConLai: itemChose.SoLuongConLai,
                CssWarning: false,
                LaHangHoa: laHangHoa,
                ID_NhomHangHoa: itemChose.ID_NhomHangHoa, // to do check KhuyenMai
                TenNhomHangHoa: '', //todo
                IsKhuyenMai: isKMai,
                IsOpeningKMai: false, // neu Km da duoc mo
                ID_KhuyenMai: null,
                HangHoa_KM: [],
                TenKhuyenMai: '',
                PhiDichVu: itemChose.PhiDichVu,
                LaPTPhiDichVu: itemChose.LaPTPhiDichVu,
                TongPhiDichVu: tongphiDV,
                IDRandom: idRandom,
                MaLoHang: '', // assign to do bind InHoaDon
                ThoiGianThucHien: itemChose.SoPhutThucHien === null ? 0 : itemChose.SoPhutThucHien,
                GhiChuHH: itemChose.GhiChuHH,

                BH_NhanVienThucHien: [], // use spa
                GhiChu_NVThucHien: '',
                GhiChu_NVTuVan: '',
                GhiChu_NVThucHienPrint: '', // used to printHoaDon (not show %ChietKhau)
                GhiChu_NVTuVanPrint: '',
                ID_ChiTietDinhLuong: null,
                ID_ChiTietGoiDV: idChiTietGoiDV,
                TangKem: itemChose.TangKem,
                ID_TangKem: idTangKem,
                ListDonViTinh: [],
                LaDonViChuan: laDVChuan,
                TyLeChuyenDoi: tyLeChuyenDoi,
                ShowWarningQuyCach: false,
                QuyCach: itemChose.QuyCach,
                SoLuongQuyCach: 0,
                ThanhPhan_DinhLuong: [],
                HangCungLoais: [],
                LaConCungLoai: false,
                PTThue: 0,
                TienThue: 0,
                ChatLieu: '4',// 1.Tra HD, 2.Tra GDV, 3.Xuly DH , 4.Sudung GDV,
                ThoiGianBaoHanh: itemChose.ThoiGianBaoHanh,
                LoaiThoiGianBH: itemChose.LoaiBaoHanh,
                ID_ViTri: itemHD[0].ID_ViTri,
                TimeStart: 0,
                QuaThoiGian: 0,
                TimeRemain: itemChose.SoPhutThucHien === null ? 0 : itemChose.SoPhutThucHien,
                TenViTri: itemHD[0].TenViTriHD,

                QuanLyTheoLoHang: quanLyTheoLo,
                DM_LoHang: [],
                ID_LoHang: itemChose.ID_LoHang,
                LotParent: quanLyTheoLo,  // if QuanLyTheoLo= true, lotParent= true -> check when update CTHD
                MaLoHang: itemChose.MaLoHang,
                NgaySanXuat: dateLot.NgaySanXuat,
                NgayHetHan: dateLot.NgayHetHan,
                ThanhPhanComBo: tpComBo,
                LoaiHangHoa: itemChose.LoaiHangHoa,
                TenHangHoaThayThe: itemChose.TenHangHoa,
                HoaHongTruocChietKhau: itemChose.HoaHongTruocChietKhau,
                ChietKhauMD_NV: itemChose.ChietKhauMD_NV,
                ChietKhauMD_NVTheoPT: itemChose.ChietKhauMD_NVTheoPT,
            }
            var typeFind = 0;// 0. not exists, 1. exist in lstCT, 2. exist in HangCungLoai/lo, 3.same ID_QuiDoi, but not exist in HangCungLoai, 4. exist in DM_Lo
            var idRandom = ob1.IDRandom;
            var soluongnew = soluong;

            var lstCTHD = localStorage.getItem(lcListCTHD);
            if (lstCTHD === null) {
                lstCTHD = [];
                if (ob1.QuanLyTheoLoHang) {
                    let objLot = $.extend({}, ob1);
                    objLot.DM_LoHang = [];
                    objLot.HangCungLoais = [];
                    ob1.DM_LoHang.push(objLot);
                }
                lstCTHD.push(ob1);
            }
            else {
                lstCTHD = JSON.parse(lstCTHD);
                for (let i = 0; i < lstCTHD.length; i++) {
                    if (lstCTHD[i].IDRandomHD === idRandomHD && lstCTHD[i].ID_DonViQuiDoi === idQuiDoi) {
                        if (lstCTHD[i].ID_ChiTietGoiDV === idChiTietGoiDV) {
                            idRandom = lstCTHD[i].IDRandom;
                            typeFind = 1;
                            soluongnew = parseFloat(lstCTHD[i].SoLuong) + 1;
                            lstCTHD[i].SoLuong = soluongnew;
                            if (ob1.LaPTPhiDichVu) {
                                lstCTHD[i].TongPhiDichVu = Math.round(ob1.PhiDichVu * soluongnew * (lstCTHD[i].DonGia) / 100);
                            }
                            else {
                                lstCTHD[i].TongPhiDichVu = ob1.PhiDichVu * soluongnew;
                            }
                        }
                        else {
                            typeFind = 3;
                            for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                                let cungloai = lstCTHD[i].HangCungLoais[j];
                                if (cungloai.ID_ChiTietGoiDV === idChiTietGoiDV) {
                                    idRandom = cungloai.IDRandom;
                                    typeFind = 2;// same idquydoi + idChiTietGoiDV
                                    soluongnew = parseFloat(cungloai.SoLuong) + 1;
                                    lstCTHD[i].HangCungLoais[j].SoLuong = soluongnew;
                                    if (ob1.LaPTPhiDichVu) {
                                        lstCTHD[i].HangCungLoais[j].TongPhiDichVu = Math.round(ob1.PhiDichVu * soluongnew * (cungloai.DonGia) / 100);
                                    }
                                    else {
                                        lstCTHD[i].HangCungLoais[j].TongPhiDichVu = ob1.PhiDichVu * soluongnew;
                                    }
                                    break;
                                }
                            }

                            for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                                let cungloai = lstCTHD[i].DM_LoHang[j];
                                if (cungloai.ID_ChiTietGoiDV === idChiTietGoiDV) {
                                    idRandom = cungloai.IDRandom;
                                    typeFind = 2;// same idquydoi + idChiTietGoiDV
                                    soluongnew = parseFloat(cungloai.SoLuong) + 1;
                                    lstCTHD[i].DM_LoHang[j].SoLuong = soluongnew;
                                    if (ob1.LaPTPhiDichVu) {
                                        lstCTHD[i].DM_LoHang[j].TongPhiDichVu = Math.round(ob1.PhiDichVu * soluongnew * (cungloai.DonGia) / 100);
                                    }
                                    else {
                                        lstCTHD[i].DM_LoHang[j].TongPhiDichVu = ob1.PhiDichVu * soluongnew;
                                    }
                                    break;
                                }
                            }
                            if (typeFind === 3) {// same idquydoi
                                if (ob1.QuanLyTheoLoHang) {
                                    ob1.LotParent = false;
                                    lstCTHD[i].DM_LoHang.push(ob1);
                                }
                                else {
                                    ob1.LaConCungLoai = true;
                                    lstCTHD[i].HangCungLoais.push(ob1);
                                }
                            }
                        }
                        break;
                    }
                }
                if (typeFind === 0) {// not exist
                    if (ob1.QuanLyTheoLoHang) {
                        let objLot = $.extend({}, ob1);
                        objLot.DM_LoHang = [];
                        objLot.HangCungLoais = [];
                        ob1.DM_LoHang.push(objLot);
                    }
                    lstCTHD.unshift(ob1);
                }
            }
            localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
            UpdateSoThuTu_CTHD_DichVu(false, idRandomHD);
            Caculator_AmountProduct();
            UpdateAgain_ListDVT_forCTHD(false, idRandomHD);
            UpdateChietKhauNV_inCTHD(idRandom, false, ob1);
            if (ob1.ThanhPhanComBo.length > 0) {
                ChangeSoLuongParent_UpdateCombo(idRandom, soluongnew, false);
            }
            // upadate TongTien, giamgia, phai thanh toan, can thanh toan of HoaDon after addHH
            if (itemHD[0].LoaiHoaDon !== 6) {
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, soluongnew, false);
            }
            BindHD_byIDRandom(idRandomHD);
            HideShow_Icon_ChietKhauNV();
            vmUpAnhHoaDon.InvoiceChosing.IDRandomHD = idRandomHD;
        }
    }
    function UpdateSoThuTu_CTHD_DichVu(isCTDoiTra, idRandomHD) {
        var locaStoreName = lcListCTHD;
        if (isCTDoiTra) {
            locaStoreName = lcListCTHD_DoiTra;
        }
        //var idRandomHD = GetIDRandomHD_byMaHoaDon(_maHoaDon);
        var listAllCTHD = localStorage.getItem(locaStoreName);
        if (listAllCTHD !== null) {
            listAllCTHD = JSON.parse(listAllCTHD);
            // get arrHD with MaHoaDon
            var arrHD = $.grep(listAllCTHD, function (item) {
                return item.IDRandomHD === idRandomHD;
            });
            // update again SoThuTu for CTHD with MaHoaDon
            var stt = 1;
            for (let i = arrHD.length - 1; i >= 0; i--) {
                arrHD[i].SoThuTu = stt;
                stt = stt + 1;
            }
            for (let i = listAllCTHD.length - 1; i >= 0; i--) {
                if (listAllCTHD[i].IDRandomHD === idRandomHD) {
                    for (let j = 0; j < arrHD.length; j++) {
                        if (listAllCTHD[i].ID_DonViQuiDoi === arrHD[j].ID_DonViQuiDoi && listAllCTHD[i].ID_ChiTietGoiDV === arrHD[j].ID_ChiTietGoiDV) {
                            listAllCTHD[i].SoThuTu = arrHD[j].SoThuTu;
                            break;
                        }
                    }
                }
            }
            localStorage.setItem(locaStoreName, JSON.stringify(listAllCTHD));
        }
    }

    // goibaoduong
    self.TongGoiDV = ko.observable(0);
    self.ShowPopListDiary_ofCustomer = function () {
        var hd = localStorage.getItem(lcListHD);
        if (hd !== null) {
            hd = JSON.parse(hd);
            var hdOpen = GetHDOpening_byIDRandom(self.HoaDons().IDRandom(), hd);
            if (hdOpen.length > 0) {
                let idCus = hdOpen[0].ID_DoiTuong;
                vmNKGoiBaoDuong.ID_DonVi = id_DonVi;
                let cus = self.ChiTietDoiTuong();
                let obj = {};
                if (cus !== null && cus.length > 0) {
                    obj = {
                        ID: cus[0].ID,
                        MaDoiTuong: cus[0].MaDoiTuong,
                        TenDoiTuong: cus[0].TenDoiTuong,
                        DienThoai: cus[0].DienThoai,
                    };
                }
                vmNKGoiBaoDuong.showModal(idCus, null, 0, 0, obj);
            }
            else {
                ShowMessage_Danger('Vui lòng chọn khách hàng');
            }
        }
        else {
            ShowMessage_Danger('Vui lòng chọn khách hàng');
        }
    }

    $('#vmNKGoiBaoDuong').on('hidden.bs.modal', function () {
        if (vmNKGoiBaoDuong.saveOK) {

            var arrID = vmNKGoiBaoDuong.ListDichVuChosed.map(function (x) {
                return x.ID_ChiTietGoiDV
            })
            // check SoLuongConLai
            var sError = '';
            for (let i = 0; i < vmNKGoiBaoDuong.ListDichVuChosed.length; i++) {
                let itFor = vmNKGoiBaoDuong.ListDichVuChosed[i];
                if ($.inArray(itFor.ID_ChiTietGoiDV, arrID) > -1) {
                    if (itFor.SoLuongConLai <= 0) {
                        sError += ' "' + itFor.TenHangHoa + '" thuộc gói ' + itFor.MaHoaDon;
                    }
                }
            }
            if (sError !== '') {
                ShowMessage_Danger(sError + ' đã dùng hết số buổi');
                return false;
            }

            var cthd = localStorage.getItem(lcListCTHD);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
            }
            else {
                cthd = [];
            }

            // only check hoadon of current userlogin
            let hd = localStorage.getItem(lcListHD);
            if (hd !== null) {
                hd = JSON.parse(hd);
            }
            else {
                hd = [];
            }

            let hdbyUser = $.grep(hd, function (x) {
                return x.NguoiTao === userLogin;
            }).map(function (x) {
                return x.IDRandom;
            });

            cthd = $.grep(cthd, function (x) {
                return $.inArray(x.IDRandomHD, hdbyUser) > -1;
            })

            // check enough soluong in cthd
            for (let i = 0; i < vmNKGoiBaoDuong.ListDichVuChosed.length; i++) {
                let itFor = vmNKGoiBaoDuong.ListDichVuChosed[i];
                if ($.inArray(itFor.ID_ChiTietGoiDV, arrID) > -1) {
                    let itemCT = $.grep(cthd, function (x) {
                        return x.ID_ChiTietGoiDV === itFor.ID_ChiTietGoiDV;
                    });
                    if (itemCT.length > 0) {
                        let soluong = 0;
                        for (let k = 0; k < itemCT.length; k++) {
                            soluong += formatNumberToFloat(itemCT[k].SoLuong);
                        }
                        if (soluong + 1 > itFor.SoLuongConLai) {
                            ShowMessage_Danger('Dịch vụ "' + itFor.TenHangHoa + '" đã chọn đủ số buổi dùng');
                            return false;
                        }
                    }
                    itFor.DonViTinh = [];
                    self.Chose_Service(itFor, itFor.SoLuongConLai < 1 ? itFor.SoLuongConLai : 1, true);
                }
            }
            GetCurrentPage_byMaHoaDon(_maHoaDon);
            BindCTHD_byIDRandomHD(self.HoaDons().IDRandom());
        }
    })

    function Check_Enought_SoLuongConLai_ServicePackage(ctDoing, soluongNew) {
        let idHoaDon = self.HoaDons().ID();
        if (commonStatisJs.CheckNull(idHoaDon) || idHoaDon === const_GuidEmpty) {// don't check if update hoadon
            if (!commonStatisJs.CheckNull(ctDoing.ID_ChiTietGoiDV) && ctDoing.ChatLieu === '4') {
                if (soluongNew > ctDoing.SoLuongConLai) {
                    return 'Dịch vụ "' + ctDoing.TenHangHoa + '" nhập quá số lượng cho phép là ' + ctDoing.SoLuongConLai;
                }
            }
        }
        return '';
    }

    PageLoad();

    // quy cach
    function Check_IsShowQuyCach(loaiHD) {
        var isShowQuyCach = false;
        var lcSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lcSetPrint !== null) {
            lcSetPrint = JSON.parse(lcSetPrint);
            for (let i = 0; i < lcSetPrint.length; i++) {
                if (lcSetPrint[i].LoaiHoaDon === loaiHD) {
                    isShowQuyCach = lcSetPrint[i].ShowEditQuyCach;
                    break;
                }
            }
        }
        return isShowQuyCach;
    }
    self.ShowDivNhapQuyCach = function (item, isDoiTra) {
        var thisObj = event.currentTarget;
        var objDiv = $(thisObj).parent().next('.call-quy-cach');
        var ctDoing = FindCTHD_isDoing(item, isDoiTra);
        var soluongQuyCach = ctDoing.SoLuongQuyCach;
        objDiv.toggle();
        objDiv.find('input').val(formatNumber3Digit(soluongQuyCach));
        objDiv.find('input').focus().select();
    }
    function EditQuyCach_UpdateSoLuong(itemCT, isDoiTra, soluongQuyCach, soluong, thanhtien) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var idRandom = itemCT.IDRandom;
        var quanlytheolo = itemCT.QuanLyTheoLoHang;
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            if (itemCT.LotParent || (itemCT.LaConCungLoai === false && quanlytheolo === false)) {
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandom === idRandom) {
                        cthd[i].SoLuongQuyCach = soluongQuyCach;
                        cthd[i].SoLuong = soluong;
                        // use goidv --> not update ThanhTien
                        if (cthd[i].ChatLieu !== '4') {
                            cthd[i].ThanhTien = thanhtien;
                        }
                        break;
                    }
                }
            }
            else {
                if (quanlytheolo) {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                                cthd[i].DM_LoHang[j].SoLuongQuyCach = soluongQuyCach;
                                cthd[i].DM_LoHang[j].SoLuong = soluong;
                                if (cthd[i].DM_LoHang[j].ChatLieu !== '4') {
                                    cthd[i].DM_LoHang[j].ThanhTien = thanhtien;
                                }
                                i = cthd.length;  // esc for loop
                                break;
                            }
                        }
                    }
                }
                else {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                            if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                                cthd[i].HangCungLoais[j].SoLuongQuyCach = soluongQuyCach;
                                cthd[i].HangCungLoais[j].SoLuong = soluong;
                                if (cthd[i].HangCungLoais[j].ChatLieu !== '4') {
                                    cthd[i].HangCungLoais[j].ThanhTien = thanhtien;
                                }
                                i = cthd.length;
                                break;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }
    function ChangeSoLuong_UpdateSLQuyCach(itemCT, isDoiTra, quycach, soluong) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var idRandom = itemCT.IDRandom;
        var slQuyCach = soluong * quycach;
        var quanlytheolo = itemCT.QuanLyTheoLoHang;
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            if (itemCT.LotParent || (itemCT.LaConCungLoai === false && quanlytheolo === false)) {
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandom === idRandom) {
                        if (parseFloat(cthd[i].SoLuongQuyCach) !== 0) {
                            // chi update SoLuongQuycach neu truoc do da nhap SoLuongQuyCach (tuc SoLuongQuyCach!=0)
                            cthd[i].SoLuongQuyCach = slQuyCach;
                        }
                        break;
                    }
                }
            }
            else {
                if (quanlytheolo) {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                                if (parseFloat(cthd[i].DM_LoHang[j].SoLuongQuyCach) !== 0) {
                                    cthd[i].DM_LoHang[j].SoLuongQuyCach = slQuyCach;
                                }
                                i = cthd.length;  // esc for loop
                                break;
                            }
                        }
                    }
                }
                else {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                            if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                                if (parseFloat(cthd[i].HangCungLoais[j].SoLuongQuyCach) !== 0) {
                                    cthd[i].HangCungLoais[j].SoLuongQuyCach = slQuyCach;
                                }
                                i = cthd.length;
                                break;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }
    function UpdateSoLuong_TPDinhLuong_ofCTHD(idRandomHD, idRandom, soluong, isDoiTra) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                let forOut = cthd[i];
                if (cthd[i].IDRandomHD === idRandomHD) {
                    if (forOut.IDRandom === idRandom) {
                        for (let j = 0; j < forOut.ThanhPhan_DinhLuong.length; j++) {
                            let itemTP = forOut.ThanhPhan_DinhLuong[j];
                            let soluongAfter = itemTP.SoLuongMacDinh * soluong;
                            cthd[i].ThanhPhan_DinhLuong[j].SoLuong = soluongAfter;
                            cthd[i].ThanhPhan_DinhLuong[j].SoLuongQuyCach = soluongAfter * itemTP.QuyCach;
                            cthd[i].ThanhPhan_DinhLuong[j].GiaVonAfter = soluongAfter * itemTP.GiaVon;
                        }
                        break;
                    }
                    else {
                        // update TPDinhLuong for hangcungloai
                        if (forOut.HangCungLoais.length > 0) {
                            for (let j = 0; j < forOut.HangCungLoais.length; j++) {
                                if (forOut.HangCungLoais[j].IDRandom === idRandom) {
                                    for (let k = 0; k < forOut.HangCungLoais[j].ThanhPhan_DinhLuong.length; k++) {
                                        let itemTP = forOut.HangCungLoais[j].ThanhPhan_DinhLuong[k];
                                        let soluongAfter = itemTP.SoLuongMacDinh * soluong;
                                        cthd[i].HangCungLoais[j].ThanhPhan_DinhLuong[k].SoLuong = soluongAfter;
                                        cthd[i].HangCungLoais[j].ThanhPhan_DinhLuong[k].SoLuongQuyCach = soluongAfter * itemTP.QuyCach;
                                        cthd[i].HangCungLoais[j].ThanhPhan_DinhLuong[k].GiaVonAfter = soluongAfter * itemTP.GiaVon;
                                    }
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }
    self.EditQuyCach = function (item) {
        var thisObj = event.currentTarget;
        formatNumberObj(thisObj);
        var valThis = $(thisObj).val();

        var quycach = item.QuyCach;
        var idQuiDoi = item.ID_DonViQuiDoi;
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;

        var soluong = 0;
        var ctDoing = FindCTHD_isDoing(item, false);
        if (ctDoing !== null) {
            let tienGiam = ctDoing.TienChietKhau;
            let dongia = ctDoing.GiaBan;

            if (valThis === '') {
                valThis = 0;
            }
            valThis = formatNumberToFloat(valThis);

            soluong = valThis / quycach;
            thanhtien = soluong * (dongia - tienGiam);

            EditQuyCach_UpdateSoLuong(item, false, valThis, soluong, thanhtien);
            UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
            UpdateChietKhauNV_inCTHD(idRandom, false, ctDoing);

            ShowHideWarning_forCTHD_byIDQuiDoi(idRandomHD, idQuiDoi, idRandom);
            // don't need update SoLuong in TPDinhLuong (because product have QuyCach don't have TPDinhLuong)
            if (item.LoaiHoaDon === 6) {
                UpdateHD_TraHang(idRandomHD);
            }
            else {
                ResetKM_HangHoa_ByIDQuiDoi_orNhomHang(idQuiDoi, item.ID_NhomHangHoa, idRandomHD);
                ResetKM_HoaDon(idRandomHD);
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(idQuiDoi, idRandomHD);
                UpdateCacheHDLe(idRandomHD, false);
                UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
                self.KM_KMApDung([]);
                UpdateKhuyenMai_CTHD(idQuiDoi, idRandomHD);
            }
            BindHD_byIDRandom(idRandomHD);
            Caculator_AmountProduct();
            var key = event.keyCode || event.which;
            if (key === 13 || key === 27) {
                $('#call-quy-cach_' + idRandom).toggle();
            }
            $('#munber_' + idRandom).val(formatNumber3Digit(soluong));
            $('#quycach_' + idRandom).show();
            $('#quycach_' + idRandom).text(formatNumber3Digit(valThis));
            $('#sum-f_' + idRandom).val(formatNumber3Digit(thanhtien));
        }
    }

    self.EditQuyCach_DoiTra = function (item) {
        var thisObj = event.currentTarget;
        formatNumberObj(thisObj);
        var valThis = $(thisObj).val();

        var quycach = item.QuyCach;
        var idQuiDoi = item.ID_DonViQuiDoi;
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var soluong = 0;

        var ctDoing = FindCTHD_isDoing(item, true);
        if (ctDoing !== null) {
            tienGiam = ctDoing.TienChietKhau;
            dongia = ctDoing.GiaBan;

            if (valThis === '') {
                valThis = 0;
            }
            valThis = formatNumberToFloat(valThis);
            soluong = valThis / quycach;
            thanhtien = soluong * (dongia - tienGiam);

            EditQuyCach_UpdateSoLuong(item, true, valThis, soluong, thanhtien);
            UpdateWarning_forCTHD_byIDQuiDoi(idQuiDoi, idRandomHD);
            ShowHideWarning_forCTHD_byIDQuiDoi(idRandomHD, idQuiDoi, idRandom);
            UpdateChietKhauNV_inCTHD(idRandom, true, ctDoing);
            UpdateCacheHDLe(idRandomHD, true);
            UpdateDiemGiaoDich_andResetDiemQuyDoi_forHoaDon();
            BindHD_byIDRandom(idRandomHD);
            var key = event.keyCode || event.which;
            if (key === 13 || key === 27) {
                $('#call-quy-cach_' + idRandom).toggle();
            }
            $('#numberTH_' + idRandom).val(formatNumber3Digit(soluong));
            $('#quycach_' + idRandom).show();
            $('#quycach_' + idRandom).text(formatNumber3Digit(valThis));
            $('#sumTH_' + idRandom).val(formatNumber3Digit(thanhtien));
        }
    }

    self.MouseOutQuyCach = function (item, isDoiTra) {
        var idRandom = item.IDRandom;
        var soluong = 1;
        var cthd = localStorage.getItem(lcListCTHD);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            let ctDoing = FindCTHD_isDoing(item, isDoiTra);
            if (ctDoing !== null) {
                soluong = ctDoing.SoLuong;
                if (soluong < 0.001) {
                    //ShowMessage_Danger('Số lượng sản phẩm quá nhỏ');
                    $('#WrQuycach_' + idRandom).show();
                    $('#contentWrQuycach_' + idRandom).show().delay(3000).hide('slow');
                    // reset SoLuongQuyCach, SoLuong, ThanhTien = 0 for CTHD
                    EditQuyCach_UpdateSoLuong(item, isDoiTra, 0, 0, 0)
                }
                else {
                    $('#WrQuycach_' + idRandom).hide();
                }
            }
        }
    }
    self.ShowContentWr_QuyCach = function (item) {
        var idRandom = item.IDRandom;
        $('#contentWrQuycach_' + idRandom).show().delay(2000).hide('slow');
    }
    function GetListPrinterInstalled() {
        ajaxHelper(BHHoaDonUri + 'GetListPrinterInstalled', 'GET').done(function (data) {
            if (data !== null) {
                console.log(data);
            }
        })
    }
    //GetListPrinterInstalled();
    function GetListIDNhanVien_byUserLogin(funcName) {
        ajaxHelper('/api/DanhMuc/ChamSocKhachHangAPI/' + 'GetListNhanVienLienQuanByIDLoGin_inDepartment?idnvlogin=' + const_GuidEmpty
            + '&idChiNhanh=' + id_DonVi + '&funcName=' + funcName, 'GET').done(function (data) {
                self.ListIDNhanVienQuyen(data);
                switch (funcName) {
                    case 'DatHang':
                        SearchHoaDonDatHang();
                        break;
                };
            })
    }
    function UpdateAppCache() {
        ajaxHelper(BHHoaDonUri + 'UpdateAppcache', 'POST').done(function () {
            console.log('UpdateAppcache susscess');
        })
    }
    function getMin_ArryJson(arr, prop) {
        var min;
        for (let i = 0; i < arr.length; i++) {
            if (!min || parseInt(arr[i][prop]) < parseInt(min[prop]))
                min = arr[i];
        }
        return min;
    };
    function getMax_ArryJson(arr, prop) {
        var max;
        for (let i = 0; i < arr.length; i++) {
            if (!max || parseInt(arr[i][prop]) < parseInt(max[prop]))
                max = arr[i];
        }
        return max;
    };
    function BindTime_inSoDoPhong(isChangeVT) {
        self.Doing_ChangeVTCTHD(isChangeVT);
        // assign infor CreateTime, NhanVien at tab location
        var arrID_ViTri = [];
        var lstCTHD = localStorage.getItem(lcListCTHD);
        var lenTable = self.PhongBans_byIDNhom().length;
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            // get cthd have ID_ViTri
            var arrHaveVT = [];
            for (let i = 0, k = lstCTHD.length; i < k; i++) {
                if (lstCTHD[i].ID_ViTri !== null) {
                    arrHaveVT.push(lstCTHD[i]);
                }
                // find in HangCungLoai
                for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                    if (lstCTHD[i].HangCungLoais[j].ID_ViTri !== null) {
                        arrHaveVT.push(lstCTHD[i].HangCungLoais[j]);
                    }
                }
                // find in DMLoHang
                for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                    if (lstCTHD[i].DM_LoHang[j].ID_ViTri !== null) {
                        arrHaveVT.push(lstCTHD[i].DM_LoHang[j]);
                    }
                }
            }
            // get cthd TimeStart !== 0;
            var cthd_Start = $.grep(arrHaveVT, function (x) {
                return x.TimeStart !== 0;
            });
            if (cthd_Start.length > 0) {
                for (let j = 0; j < lenTable; j++) {
                    var sameVT = $.grep(cthd_Start, function (x) {
                        return x.ID_ViTri === self.PhongBans_byIDNhom()[j].ID;
                    });
                    if (sameVT.length > 0) {
                        var totalTime = 0;
                        var timeRemain = 0;
                        for (let i = 0; i < sameVT.length; i++) {
                            totalTime += sameVT[i].ThoiGianThucHien;
                            timeRemain += sameVT[i].TimeRemain;
                        }
                        var timeMin = getMin_ArryJson(sameVT, 'TimeStart').TimeStart;
                        self.PhongBans_byIDNhom()[j].CreateTime = ConvertTimeFrom24To12(timeMin);
                        self.PhongBans_byIDNhom()[j].ThoiGianThucHien = totalTime;
                        self.PhongBans_byIDNhom()[j].TextTGConLai = timeRemain;
                        arrID_ViTri.push(self.PhongBans_byIDNhom()[j].ID);
                    }
                }
            }
            // only get table chua dc gan ViTri
            var cthd_noStart = $.grep(arrHaveVT, function (x) {
                return x.TimeStart === 0 && $.inArray(x.ID_ViTri, arrID_ViTri) === -1;
            });
            if (cthd_noStart.length > 0) {
                // if LaHangHoa = true --> get {ThoiGian} of CTHD
                for (let j = 0; j < lenTable; j++) {
                    var tblID = self.PhongBans_byIDNhom()[j].ID;
                    if ($.inArray(self.PhongBans_byIDNhom()[j].ID, arrID_ViTri) === -1) {
                        var lst = $.grep(cthd_noStart, function (x) {
                            return x.ID_ViTri === tblID;
                        });
                        if (lst.length > 0) {
                            self.PhongBans_byIDNhom()[j].CreateTime = ConvertTimeFrom24To12(lst[0].ThoiGian.split(' ')[1]);
                            arrID_ViTri.push(self.PhongBans_byIDNhom()[j].ID);
                        }
                    }
                }
            }
            // reset Phong not exist in arrID
            for (let i = 0; i < lenTable; i++) {
                if ($.inArray(self.PhongBans_byIDNhom()[i].ID, arrID_ViTri) === -1) {
                    self.PhongBans_byIDNhom()[i].CreateTime = 0;
                    self.PhongBans_byIDNhom()[i].NhanVien_Phong = '';
                    self.PhongBans_byIDNhom()[i].ThoiGianThucHien = '';
                }
            }
        }
        else {
            // reset again Time    
            for (let j = 0; j < self.PhongBans_byIDNhom().length; j++) {
                self.PhongBans_byIDNhom()[j].CreateTime = 0;
                self.PhongBans_byIDNhom()[j].NhanVien_Phong = '';
                self.PhongBans_byIDNhom()[j].ThoiGianThucHien = '';
            }
        }
        var lstPBAfter = self.PhongBans_byIDNhom();
        self.PhongBans_byIDNhom($.extend(true, [], lstPBAfter));
        // set img for location
        SetImg_Active(arrID_ViTri);
        CountTableUsed();
    }
    self.ClickTab_PhongBan = function (isChangeVT, firstLoad) {
        firstLoad = firstLoad || false;

        if (firstLoad === false && IsShop_SpaSalon() && self.setViewSoDoPhong()) {
            $('#banhangsodo').show();
            $('body').gridLoader({ show: true, iconloading: boxloading });
        }
        var arrIDRandom = [];
        var arrMaHD = []; // mahd is opnening update again from page lst HD

        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD === null) {
            lstHD = [];
        }
        else {
            lstHD = JSON.parse(lstHD);
            // delete all HoaDon with ID !== Guid.Empty, don't delete HD DatHang BG00
            // không xóa hóa đơn được mở ra để cập nhật lại từ phần Danh sách
            lstHD = $.grep(lstHD, function (x) {
                return x.ID === const_GuidEmpty || (x.ID !== const_GuidEmpty && (x.LoaiHoaDon === 3 || x.Status === 1));
            });
            // get all IDRandom of HD don't delete
            for (let i = 0; i < lstHD.length; i++) {
                arrIDRandom.push(lstHD[i].IDRandom);
                if (lstHD[i].ID !== const_GuidEmpty) {
                    arrMaHD.push(lstHD[i].MaHoaDon);
                }
            }
        }
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD === null) {
            lstCTHD = [];
        }
        else {
            lstCTHD = JSON.parse(lstCTHD);
            // delete all CTHD with ID_HoaDon !== Guid.Empty
            lstCTHD = $.grep(lstCTHD, function (x) {
                return $.inArray(x.IDRandomHD, arrIDRandom) > -1;
            });
        }
        var ctdt = localStorage.getItem(lcListCTHD_DoiTra);
        if (ctdt === null) {
            ctdt = [];
        }
        else {
            ctdt = JSON.parse(ctdt);
            ctdt = $.grep(ctdt, function (x) {
                return $.inArray(x.IDRandomHD, arrIDRandom) > -1;
            })
        }
        localStorage.setItem(lcListCTHD_DoiTra, JSON.stringify(ctdt));
        // only load HD_ChoThanhToan from DB if set view SoDoPhong
        let isView = false;
        let lcSetPrint = localStorage.getItem(lcSetPrintConst);
        if (lcSetPrint !== null) {
            lcSetPrint = JSON.parse(lcSetPrint);
            let itemEx = $.grep(lcSetPrint, function (x) {
                return x.ShowSoDoPhong === true && x.LoaiHoaDon === 1 && x.ID_DonVi === id_DonVi;
            });
            isView = itemEx.length > 0 && IsShop_SpaSalon();
        }
        if (isView === false) {
            if (firstLoad) {
                getListHoaDonLe();
            }
            BindTime_inSoDoPhong(isChangeVT);
            ActiveTab_SoDoPhong(true);
        }
        else {
            ajaxHelper(BHHoaDonUri + 'GetListHoaDons_ChoThanhToan?loaiHoaDon=1&idDonVi=' + id_DonVi, 'GET').done(function (obj) {
                if (obj.res === true) {
                    var maHDDB = [];
                    data = obj.data;
                    for (let i = 0; i < data.length; i++) {
                        maHDDB.push(data[i].MaHoaDon);
                        if ($.inArray(data[i].MaHoaDon, arrMaHD) === -1) {
                            // add again after delete
                            data[i].IDRandom = CreateIDRandom('HD_');
                            lstCTHD = AssignCTHD_ChoThanhToan(data[i].BH_HoaDon_ChiTiet, lstCTHD, data[i]);
                            // delete key BH_HoaDon_ChiTiet in data
                            delete data[i]['BH_HoaDon_ChiTiet'];
                            data[i].TenViTriHD = data[i].TenViTri;
                            data[i].CreateTime = moment(data[i].NgayLapHoaDon).format('HH:mm');
                            data[i].NgayLapHoaDon = moment(data[i].NgayLapHoaDon).format('YYYY-MM-DD HH:mm');
                            data[i].StatusOffline = false;
                            data[i].HoanTraTamUng = 0;
                            data[i].DiemGiaoDich = 0;
                            data[i].DiemGiaoDichDB = 0;
                            data[i].TTBangDiem = 0;
                            data[i].DiemHienTai = 0;
                            data[i].DiemQuyDoi = 0;
                            data[i].MaHoaDonTraHang = data[i].MaHoaDonGoc;// used to check delete HDDatHang (if DatHang, after LuuTam)
                            data[i].DaThanhToan = data[i].PhaiThanhToan;
                            data[i].TienMat = data[i].PhaiThanhToan;
                            data[i].TienGui = 0;
                            data[i].TienATM = 0;
                            data[i].TienTheGiaTri = 0;
                            data[i].ID_TaiKhoanPos = null; // set = null, vi co the TT nhieu lan, nhieu ID_TaiKhoan khac nhau
                            data[i].ID_TaiKhoanChuyenKhoan = null;
                            let ptThue = data[i].PTThueHoaDon;
                            if (data[i].TongTienThue > 0 && ptThue === 0) {
                                ptThue = data[i].TongTienThue / data[i].TongTienHang * 100;
                            }
                            ptThue = isNaN(ptThue) ? 0 : ptThue;
                            data[i].PTThueHoaDon = ptThue;
                            data[i].TrangThaiHD = 3; // bind HD TamLuu if # userLogin (3.TamLuu, 4.DaThanhToan)
                            data[i].IsKhuyenMaiHD = false;
                            data[i].PTGiam_KM = 0;
                            data[i].KhuyeMai_GiamGia = 0;
                            data[i].TongGiaGocHangTra = 0;
                            data[i].TongGiamGiaDB = 0;
                            data[i].TongTienTra = 0;
                            data[i].TongThueDB = 0;
                            data[i].TongGiamGiaKM_HD = data[i].TongGiamGia;//= TongGG vi DatHang khong co KMai
                            data[i].KhuyenMai_GhiChu = '';
                            data[i].IsOpeningKMaiHD = false;
                            data[i].ThoiGianThucHien = 0;
                            data[i].TienTheGiaTri = 0;
                            data[i].ID_NhomDTApplySale = null;
                            // get from DB
                            for (let k = 0; k < data[i].BH_NhanVienThucHiens.length; k++) {
                                data[i].BH_NhanVienThucHiens[k].IDRandom = CreateIDRandom('CKHD_');
                                data[i].BH_NhanVienThucHiens[k].ChietKhauMacDinh = data[i].BH_NhanVienThucHiens[k].PT_ChietKhau;
                                if (data[i].BH_NhanVienThucHiens[k].TinhChietKhauTheo === 3)
                                    data[i].BH_NhanVienThucHiens[k].ChietKhauMacDinh = data[i].BH_NhanVienThucHiens[k].TienChietKhau / data[i].BH_NhanVienThucHiens[k].HeSo;
                            }
                            data[i].Status = 0;  // not bind hdTamLuu, only bind when click MoPhieu
                            // tinh ThoiGianThucHien DichVu
                            var totalTime = 0;
                            for (let j = 0; j < lstCTHD.length; j++) {
                                totalTime += lstCTHD[j].ThoiGianThucHien;
                            }
                            data[i].ThoiGianThucHien = totalTime;
                            lstHD.push(data[i]);
                        }
                    }
                }
                $('body').gridLoader({ show: false });
                // find HD with Status= 1 but was delete
                var arrHDDelete = $.grep(arrMaHD, function (x) {
                    return $.inArray(x, maHDDB) === -1;
                });
                lstHD = $.grep(lstHD, function (x) {
                    return $.inArray(x.MaHoaDon, arrHDDelete) === -1;
                });
                lstCTHD = $.grep(lstCTHD, function (x) {
                    return $.inArray(x.MaHoaDon, arrHDDelete) === -1;
                });
                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                if (firstLoad) {
                    getListHoaDonLe();
                }
                BindTime_inSoDoPhong(isChangeVT);
                ActiveTab_SoDoPhong(true);
            });
        }
    }
    // if Vitri had chose: return false, else return arrID_Vitri
    function CheckViTri_Chosed() {
        var phongbanID = self.IDPhongBan_Chosing();
        var idPhongBan_ofHDCurrent = null;
        var arrID_ViTri = [];
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                // get all ID_ViTri of all HoaDon (all User)
                if (lstHD[i].ID_ViTri !== null && $.inArray(lstHD[i].ID_ViTri, arrID_ViTri) === -1) {
                    arrID_ViTri.push(lstHD[i].ID_ViTri);
                }
            }
            // find ID_ViTri old
            var itemX = GetHDOpening_byMaHoaDon(self.DichVu_isDoing().MaHoaDon, lstHD);
            if (itemX.length > 0) {
                idPhongBan_ofHDCurrent = itemX[0].ID_ViTri;
            }
            // if this vitri had chosed
            if ($.inArray(phongbanID, arrID_ViTri) > -1 && phongbanID !== idPhongBan_ofHDCurrent) {
                ShowMessage_Danger('Phòng bàn (vị trí) này đã được chọn');
                return false;
            }
            else {
                arrID_ViTri = arrID_ViTri.filter(x => x !== idPhongBan_ofHDCurrent);
                arrID_ViTri.push(phongbanID);
                return arrID_ViTri;
            }
        }
        return false;
    }
    // chon phong o chi tiet DV
    self.ChosePhongBan = function (item) {
        var phongbanID = item.ID;
        self.IDPhongBan_Chosing(phongbanID);
        var arrID_ViTri = CheckViTri_Chosed();
        if (arrID_ViTri !== false) {
            SetImg_Active(arrID_ViTri);
        }
    }
    function ChosePhong_ActiveTabHangHoa() {
        // active tab HangHoa
        $('#tabSoDo li').removeClass('active');
        $('#tabSoDo li:eq(1)').addClass('active');
        $('#banhangsodo, #banhanghanghoa').removeClass('active');
        $('#banhanghanghoa').addClass('active');
        $('#divListHD').show();
        $('.filter-so-do').hide();
        $('.filter-ban-le').show();
        $('#banhangsodo').hide();
    }
    // chon phong o tab So do phong
    self.ChosePhong_HD = function (item) {
        var phongbanID = item.ID;
        self.IDPhongBan_Chosing(phongbanID);
        var timeCreate = FormatDatetime_AMPM(new Date());
        var arrReturn = [];
        var arrCTHD = [];
        var arrOT = [];
        var itemHD = [];
        var doFunc = 0;
        var max = 1;
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
        }
        else {
            lstCTHD = [];
        }
        // add new HoaDon if not exist, else open (using LoaiHD = 1)
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            var itemEx = $.grep(lstHD, function (x) {
                return x.ID_ViTri === phongbanID;
            });
            if (itemEx.length > 0) {
                var idRandom = itemEx[0].IDRandom;
                // open HD
                itemHD = $.grep(lstHD, function (x) {
                    return x.IDRandom === idRandom;
                });
                if (itemHD.length > 0) {
                    arrCTHD = $.grep(lstCTHD, function (x) {
                        return x.IDRandomHD === idRandom;
                    });
                    // check same User
                    if (itemHD[0].NguoiTao === userLogin) {
                        doFunc = 1;
                    }
                    else {// popup
                        doFunc = 2;
                    }
                }
                else {
                    // error not exist HD with IDRandom
                }
            }
            else {
                // check is changing VT CTHD
                if (self.Doing_ChangeVTCTHD()) {
                    // check exist thisPhong at other user
                    let idRandomEx = '';
                    for (let i = 0, k = lstCTHD.length; i < k; i++) {
                        if (lstCTHD[i].ID_ViTri === phongbanID) {
                            idRandomEx = lstCTHD[i].IDRandomHD;
                            break;
                        }
                        for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                            if (lstCTHD[i].HangCungLoais[j].ID_ViTri === phongbanID) {
                                idRandomEx = lstCTHD[i].IDRandomHD;
                                i = k;
                                break;
                            }
                        }
                        // continue check if i < k
                        if (i < k) {
                            for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                                if (lstCTHD[i].DM_LoHang[j].ID_ViTri === phongbanID) {
                                    idRandomEx = lstCTHD[i].IDRandomHD;
                                    i = k;
                                    break;
                                }
                            }
                        }
                    }
                    if (idRandomEx !== '') {
                        itemHD = $.grep(lstHD, function (x) {
                            return x.IDRandom === idRandomEx;
                        });
                        if (itemHD.length > 0) {
                            if (itemHD[0].NguoiTao === userLogin) {
                                // update & bind & send data
                                doFunc = 3;
                            }
                            else {
                                // popup
                                arrCTHD = $.grep(lstCTHD, function (x) {
                                    return x.IDRandomHD === itemHD[0].IDRandom;
                                });
                                doFunc = 2;
                            }
                        }
                        else {
                            // error exist CT but not exist HD
                        }
                    }
                    else {
                        // update & bind & send data
                        doFunc = 3;
                    }
                }
                else {
                    // check vtri in CTHD
                    var existViTri = false;
                    let idRandomEx = '';
                    for (let i = 0, k = lstCTHD.length; i < k; i++) {
                        if (lstCTHD[i].ID_ViTri === phongbanID) {
                            idRandomEx = lstCTHD[i].IDRandomHD;
                            break;
                        }
                        for (let j = 0; j < lstCTHD[i].HangCungLoais.length; j++) {
                            if (lstCTHD[i].HangCungLoais[j].ID_ViTri === phongbanID) {
                                idRandomEx = lstCTHD[i].IDRandomHD;
                                i = k;
                                break;
                            }
                        }
                        if (i < k) {
                            for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                                if (lstCTHD[i].DM_LoHang[j].ID_ViTri === phongbanID) {
                                    idRandomEx = lstCTHD[i].IDRandomHD;
                                    i = k;
                                    break;
                                }
                            }
                        }
                    }
                    if (idRandomEx !== '') {
                        existViTri = true;
                        // check HD have this CTHD 
                        itemHD = $.grep(lstHD, function (x) {
                            return x.IDRandom === idRandomEx;
                        });
                        if (itemHD.length > 0) {
                            arrCTHD = $.grep(lstCTHD, function (x) {
                                return x.IDRandomHD === idRandomEx;
                            });
                            // this user
                            if (itemHD[0].NguoiTao === userLogin) {
                                doFunc = 1;  // bind with data co san
                            }
                            else {
                                // other user (popup)
                                doFunc = 2;
                            }
                        }
                    }
                    if (existViTri === false) {
                        // get listHD with User 
                        var arrHD_byUser = $.grep(lstHD, function (x) {
                            return x.StatusOffline === false && x.NguoiTao === userLogin && x.TrangThaiHD === 1;
                        });
                        var arrHD = $.grep(arrHD_byUser, function (item) {
                            return item.LoaiHoaDon === 1;
                        });
                        if (arrHD.length > 0) {
                            max = Math.max.apply(Math, arrHD.map(function (item) {
                                return item.MaHoaDon.match(/\d+/);
                            }));
                        }
                        else {
                            // khong add HoaDon 1, vi neu add sẽ bị add cùng lúc Hóa đơn 1, Hóa đơn 2
                            max = 0;
                        }
                        // check HD with MaHD max exist CTHD
                        var idRandomHD = '';
                        if (max !== 0) {
                            // find HD with MaHoaDon = max
                            var itemHDMax = $.grep(arrHD, function (x) {
                                return x.MaHoaDon === nameHD_InsertBH + max;
                            });
                            if (itemHDMax.length > 0) {
                                idRandomHD = itemHDMax[0].IDRandom;
                            }
                            arrCTHD = $.grep(lstCTHD, function (x) {
                                return x.IDRandomHD === idRandomHD;
                            });
                            if (arrCTHD.length === 0) {
                                doFunc = 4;// update HD
                                // update ID_ViTri for HoaDon
                                for (let i = 0; i < lstHD.length; i++) {
                                    if (lstHD[i].IDRandom === idRandomHD) {
                                        lstHD[i].CreateTime = timeCreate;
                                        lstHD[i].ID_ViTri = phongbanID;
                                        lstHD[i].TenViTriHD = item.TenViTri;
                                        break;
                                    }
                                }
                                localStorage.setItem(lcListHD, JSON.stringify(lstHD));
                                _maHoaDon = nameHD_InsertBH + max;
                            }
                            else {
                                // create newHoaDon 
                                doFunc = 5;
                            }
                        }
                        else {
                            doFunc = 5;
                        }
                    }
                }
            }
        }
        else {
            lstHD = [];
            doFunc = 5;
        }
        switch (doFunc) {
            case 1: // bind infor HD, CTHD with data
                _maHoaDon = itemHD[0].MaHoaDon;
                UpdateStatus_HDTamLuu(lstHD, itemHD[0].IDRandom);
                self.HoaDons().SetData(itemHD[0]);
                self.HangHoaAfterAdds($.extend(true, [], arrCTHD));
                GetInForCustomer_byID(itemHD[0].ID_DoiTuong);
                self.SetNhanVien(itemHD[0].ID_NhanVien);
                self.SetBangGia(itemHD[0].ID_BangGia);
                self.SetChiNhanh(itemHD[0].ID_DonVi);
                OnOff_Timer(itemHD[0].NgayLapHoaDon);
                SetText_lblTienMat(itemHD[0], 1);
                ChosePhong_ActiveTabHangHoa();
                SendDataBanHangToPos_byUser(itemHD[0].IDRandom, 1);
                break;
            case 2: // show popup hd other user (don't active tab HangHoa)
                var cusName = 'Khách lẻ';
                var itemCus = $.grep(self.DoiTuongs(), function (x) {
                    return x.ID === itemHD[0].ID_DoiTuong;
                });
                if (itemCus.length > 0) {
                    cusName = itemCus[0].TenDoiTuong;
                }
                var banggia = 'Bảng giá chuẩn';
                var itemBG = $.grep(self.AllBangGia(), function (x) {
                    return x.ID === itemHD[0].ID_BangGia;
                });
                if (itemBG.length > 0) {
                    banggia = itemBG[0].TenGiaBan;
                }
                var nvien = '';
                var itemNV = $.grep(self.NhanViens(), function (x) {
                    return x.ID === itemHD[0].ID_NhanVien;
                });
                if (itemNV.length > 0) {
                    nvien = itemNV[0].TenNhanVien;
                }
                itemHD[0].TenDoiTuong = cusName;
                itemHD[0].TenBangGia = banggia;
                itemHD[0].TenNhanVien = nvien;
                itemHD[0].NguoiTaoHD = itemHD[0].NguoiTao;
                itemHD[0].NgayLapHoaDon = GetNgayLapHD_whenSave(itemHD[0].NgayLapHoaDon);
                itemHD[0].BH_HoaDon_ChiTiet = arrCTHD;
                self.Modal_HoaDons(itemHD[0]);
                self.Modal_HoaDons().BH_HoaDon_ChiTiet = arrCTHD;
                $('#hdOtherClient').modal('show');
                // check role hide/show button MoPhieu
                var updateHdTam = $.grep(self.Quyen_NguoiDung(), function (x) {
                    return x.MaQuyen === 'HoaDon_CapNhatHDTamLuu';
                })
                if (updateHdTam.length > 0) {
                    $('#divMoPhieu').css('display', '');
                }
                else {
                    $('#divMoPhieu').css('display', 'none');
                }
                break;
            case 3: // update Vtri in CTHD & bind & send data
                // check HDTamLuu
                itemHD = $.grep(lstHD, function (x) {
                    return x.MaHoaDon === self.CTHD_ChangingVT().MaHoaDon;
                });
                if (itemHD[0].TrangThaiHD === 3) {
                    // update ID_ViTri for this CTHD into DB
                    UpdateViTri_inCTHD_toDB(self.CTHD_ChangingVT().ID, phongbanID);
                    UpdateStatus_HDTamLuu(lstHD, itemHD[0].IDRandom);
                    // if HD TamLuu, IDRandom has change --> check by MaHoaDon
                    for (let i = 0; i < lstCTHD.length; i++) {
                        if (lstCTHD[i].MaHoaDon === self.CTHD_ChangingVT().MaHoaDon && lstCTHD[i].ID_DonViQuiDoi === self.CTHD_ChangingVT().ID_DonViQuiDoi) {
                            var qlTheoLo = lstCTHD[i].QuanLyTheoLoHang;
                            if (qlTheoLo === false) {
                                lstCTHD[i].ID_ViTri = phongbanID;
                                lstCTHD[i].TenViTri = item.TenViTri;
                            }
                            else {
                                for (let j = 0; j < lstCTHD[i].DM_LoHang.length; j++) {
                                    if (lstCTHD[i].DM_LoHang[j].ID_LoHang === self.CTHD_ChangingVT().ID_LoHang) {
                                        // update ViTri in LoHang
                                        if (lstCTHD[i].DM_LoHang[j].LotParent) {
                                            // udate parent
                                            lstCTHD[i].ID_ViTri = phongbanID;
                                            lstCTHD[i].TenViTri = item.TenViTri;
                                        }
                                        // update into DM_LoHang in CTHD
                                        lstCTHD[i].DM_LoHang[j].ID_ViTri = phongbanID;
                                        lstCTHD[i].DM_LoHang[j].TenViTri = item.TenViTri;
                                    }
                                }
                            }
                            break;
                        }
                    }
                }
                else {
                    lstCTHD = UpdateViTri_inCacheCTHD(lstCTHD, phongbanID, item.TenViTri);
                }
                localStorage.setItem(lcListCTHD, JSON.stringify(lstCTHD));
                localStorage.setItem(lcMaHD, self.CTHD_ChangingVT().MaHoaDon);// assign used to BindHD_CTHDafterSave
                BindHD_CTHDafterSave();
                ChosePhong_ActiveTabHangHoa();
                // send to display customer
                SendDataBanHangToPos_byUser(self.CTHD_ChangingVT().IDRandomHD, 1);
                break;
            case 4:// update IDVitri in HD
                ChosePhong_ActiveTabHangHoa();
                self.HangHoaAfterAdds([]);
                Caculator_AmountProduct();
                break;
            case 5:  // create newHD
                if (lstHD === null) {
                    lstHD = [];
                }
                var objNew = newHoaDon(nameHD_InsertBH + (max + 1));
                objNew.CreateTime = timeCreate;
                objNew.ID_ViTri = phongbanID;
                objNew.TenViTriHD = item.TenViTri;
                lstHD.push(objNew);
                self.resetInforHD_CTHD();
                _maHoaDon = objNew.MaHoaDon;
                Caculator_AmountProduct();
                ChosePhong_ActiveTabHangHoa();
                break;
        }
        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        // bind list HoaDon
        localStorage.setItem(lcMaHD, _maHoaDon);
        GetCurrentPage_byMaHoaDon(_maHoaDon);
        // after chose, reset changing VT = false 
        //self.Doing_ChangeVTCTHD(false);
    }
    // thu gon code
    function UpdateViTri_inCacheCTHD(cthd, idViTri, tenViTri) {
        let quanlytheolo = self.CTHD_ChangingVT().QuanLyTheoLoHang;
        let concungloai = self.CTHD_ChangingVT().LaConCungLoai;
        let idRandom = self.CTHD_ChangingVT().IDRandom;
        let lenCT = cthd.length;
        if (self.CTHD_ChangingVT().LotParent || (concungloai === false && quanlytheolo === false)) {
            for (let i = 0; i < lenCT; i++) {
                if (cthd[i].IDRandom === idRandom) {
                    cthd[i].ID_ViTri = idViTri;
                    cthd[i].TenViTri = tenViTri;
                    break;
                }
            }
        }
        else {
            if (quanlytheolo) {
                for (let i = 0; i < lenCT; i++) {
                    for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                        if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                            cthd[i].DM_LoHang[j].ID_ViTri = idViTri;
                            cthd[i].DM_LoHang[j].TenViTri = tenViTri;
                            i = lenCT;  // esc for loop
                            break;
                        }
                    }
                }
            }
            else {
                for (let i = 0; i < lenCT; i++) {
                    for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                        if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                            cthd[i].HangCungLoais[j].ID_ViTri = idViTri;
                            cthd[i].HangCungLoais[j].TenViTri = tenViTri;
                            i = lenCT;
                            break;
                        }
                    }
                }
            }
        }
        return cthd;
    }
    function UpdateStatus_HDTamLuu(lstHD, idRandom) {
        for (let i = 0; i < lstHD.length; i++) {
            if (lstHD[i].IDRandom === idRandom) {
                lstHD[i].Status = 1;// open
                break;
            }
        }
        localStorage.setItem(lcListHD, JSON.stringify(lstHD));
    }
    // use first load, xulidonhang, chonTraHnag, clickTabDH, GoiDV
    function ActiveTab_SoDoPhong(isFistLoad) {
        var isView = false;
        var loaiHoaDon = GetLoaiHoaDon_ofHDopening();
        $('#banhangsodo, #banhanghanghoa').removeClass('active');
        $('#tabSoDo li').removeClass('active');
        if (loaiHoaDon === 1) {
            // cai dat view SoDoPhong o bat ky loai nao cung dc apdung cho loai 1
            var lcSetPrint = localStorage.getItem(lcSetPrintConst);
            if (lcSetPrint !== null) {
                lcSetPrint = JSON.parse(lcSetPrint);
                var itemEx = $.grep(lcSetPrint, function (x) {
                    return x.ShowSoDoPhong === true && x.LoaiHoaDon === 1 && x.ID_DonVi === id_DonVi;
                });
                isView = itemEx.length > 0 && IsShop_SpaSalon();
            }
        }
        if (isFistLoad) {
            if (isView) {
                $('#imgLogoOpen').hide();
                $('#tabSoDo').show();
                $('#banhangsodo').addClass('active');
                $('#divListHD').hide();
                $('#tabSoDo li:eq(0)').addClass('active');
                $('.filter-so-do').show();
                $('.filter-ban-le').hide();
                $('#banhangsodo').show();
            }
            else {
                $('#imgLogoOpen').show();
                $('#tabSoDo').hide();
                $('#banhanghanghoa').addClass('active');
                $('#divListHD').show();
                $('.filter-so-do').hide();
                $('.filter-ban-le').show();
                $('#banhangsodo').hide();
            }
        }
        else {
            // awlay active tab HangHoa
            $('#banhanghanghoa').addClass('active');
            $('#divListHD').show();
            $('.filter-so-do').hide();
            $('.filter-ban-le').show();
            if (isView) {
                $('#imgLogoOpen').hide();
                $('#tabSoDo').show();
                $('#tabSoDo li:eq(1)').addClass('active');
            }
            else {
                $('#imgLogoOpen').show();
                $('#tabSoDo').hide();
                $('#banhangsodo').hide();
            }
        }
    }
    function ChangeColorImg(phongbanID) {
        if (_maHoaDon === '') {
            _maHoaDon = $('.bill-bxslide li.using font').text();
        }
        var idPhongBan_ofHDCurrent = null;
        var arrID_ViTri = [];
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].NguoiTao === userLogin) {
                    if (lstHD[i].ID_ViTri !== null && $.inArray(lstHD[i].ID_ViTri, arrID_ViTri) === -1) {
                        arrID_ViTri.push(lstHD[i].ID_ViTri);
                    }
                }
            }
            // find ID_ViTri old
            var itemX = $.grep(lstHD, function (x) {
                return x.MaHoaDon === _maHoaDon && x.NguoiTao === userLogin;
            });
            if (itemX.length > 0) {
                idPhongBan_ofHDCurrent = itemX[0].ID_ViTri;
            }
        }
        // not get Id_ViTri old
        arrID_ViTri = arrID_ViTri.filter(x => x !== idPhongBan_ofHDCurrent);
        arrID_ViTri.push(phongbanID);
        SetImg_Active(arrID_ViTri);
    }
    function SetImg_Active(arrID_ViTri) {
        // reset img default
        $('img[id^=imgLocation_]').attr('src', '/Content/images/nhahang/vi-tri.png');
        $('#VTTatCa img').each(function () {
            var id = $(this).attr('id').split('_')[1];
            if ($.inArray(id, arrID_ViTri) > -1) {
                $('#imgLocation_' + id).attr('src', '/Content/images/nhahang/vi-tri-active.png');
            }
        })
    }
    self.GetPhongBan_ByIDNhom = function (item) {
        $('.logoOpen24 ul li').removeClass('active');
        $('.logoOpen24 ul li:eq(0)').addClass('active');
        var idNhom = item.ID;
        if (item.ID === undefined) {
            self.PhongBans_byIDNhom(self.AllPhongBans());
        }
        else {
            var lst = $.grep(self.AllPhongBans(), function (x) {
                return x.ID_KhuVuc === idNhom;
            });
            self.PhongBans_byIDNhom(lst);
        }
        // bind NhanVien, ViTri and set active img
        self.ClickTab_PhongBan(self.Doing_ChangeVTCTHD());
    }
    function ArrowRight_findNextLi(i, lstCTHD_opening, idRandomHD, idRandomFocus, charStart, isDoiTra) {
        if (i < lstCTHD_opening.length - 1) {
            // focus in next Lot
            idRandomFocus = lstCTHD_opening[i + 1].IDRandom;
        }
        else {
            if (isDoiTra === false) {
                let ctDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                if (ctDoiTra !== null) {
                    ctDoiTra = JSON.parse(ctDoiTra);
                }
                else {
                    ctDoiTra = [];
                }
                ctDoiTra = $.grep(ctDoiTra, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });
                // find doitra  
                if (ctDoiTra.length > 0) {
                    // find li fisrt (= elm last)
                    idRandomFocus = ctDoiTra[0].IDRandom;
                    charStart = 'numberTH_';
                }
                else {
                    idRandomFocus = null;
                    // focus txtThanhToan
                    if (lstCTHD_opening[0].LoaiHoaDon === 6) {
                        $('#txtDaTraKhach_KM').focus().select();
                    }
                    else {
                        $('#txtDaThanhToan').focus().select();
                    }
                }
            }
            else {
                FocusTienThanhToan_WhenEnterCTHDDoiTra(idRandomHD);
                idRandomFocus = null;
            }
        }
        return {
            IDRandom: idRandomFocus,
            CharStart: charStart,
        }
    }
    function ArrowRight_Focus(lstCTHD_opening, idRandom, idQuiDoi, idRandomHD, charStart, isDoiTra) {
        for (let i = 0; i < lstCTHD_opening.length; i++) {
            if (lstCTHD_opening[i].ID_DonViQuiDoi === idQuiDoi) {
                let lenLo = lstCTHD_opening[i].DM_LoHang.length;
                if (lenLo > 0) {
                    if (lstCTHD_opening[i].IDRandom === idRandom) {
                        if (lenLo > 1) {
                            idRandom = lstCTHD_opening[i].DM_LoHang[1].IDRandom;
                        }
                        else {
                            let obj = ArrowRight_findNextLi(i, lstCTHD_opening, idRandomHD, idRandom, charStart, isDoiTra);
                            idRandom = obj.IDRandom;
                            charStart = obj.CharStart;
                        }
                    }
                    else {
                        // find LoHang
                        for (let j = 1; j < lenLo; j++) {
                            if (lstCTHD_opening[i].DM_LoHang[j].IDRandom === idRandom) {
                                if (j < lstCTHD_opening[i].DM_LoHang.length - 1) {
                                    // focus in next Lot
                                    idRandom = lstCTHD_opening[i].DM_LoHang[j + 1].IDRandom;
                                }
                                else {
                                    let obj = ArrowRight_findNextLi(i, lstCTHD_opening, idRandomHD, idRandom, charStart, isDoiTra);
                                    idRandom = obj.IDRandom;
                                    charStart = obj.CharStart;
                                }
                                break;
                            }
                        }
                    }// else Lo
                }
                else {
                    // find cungloai
                    lenLo = lstCTHD_opening[i].HangCungLoais.length;
                    if (lenLo > 0) {
                        if (lstCTHD_opening[i].IDRandom === idRandom) {
                            idRandom = lstCTHD_opening[i].HangCungLoais[0].IDRandom;
                        }// end  = idransom
                        else {
                            for (let j = 0; j < lenLo; j++) {
                                if (lstCTHD_opening[i].HangCungLoais[j].IDRandom === idRandom) {
                                    if (j < lstCTHD_opening[i].HangCungLoais.length - 1) {
                                        // focus in next Lot
                                        idRandom = lstCTHD_opening[i].HangCungLoais[j + 1].IDRandom;
                                    }
                                    else {
                                        let obj = ArrowRight_findNextLi(i, lstCTHD_opening, idRandomHD, idRandom, charStart, isDoiTra);
                                        idRandom = obj.IDRandom;
                                        charStart = obj.CharStart;
                                    }
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        let obj = ArrowRight_findNextLi(i, lstCTHD_opening, idRandomHD, idRandom, charStart, isDoiTra);
                        idRandom = obj.IDRandom;
                        charStart = obj.CharStart;
                    }
                }
                break;
            }
        }
        // focus input soluong 
        $('input[id=' + charStart + idRandom + ']').focus().select();
    }
    function ArrowRight_CTHD(itemCT, event) {
        var keyCode = event.keyCode || event.which;
        if (keyCode === 39) {
            var thisObj = event.currentTarget;
            var id = $(thisObj).attr('id');
            var arrSplit = id.split('_');
            var idRandom = itemCT.IDRandom;
            var loaiHD = itemCT.LoaiHoaDon;
            var roleChangeSale = true;
            switch (loaiHD) {
                case 1:
                    roleChangeSale = self.roleChangePriceProduct_Invoice();
                    break;
                case 2:
                    roleChangeSale = self.roleChangePriceProduct_Invoice();
                    break;
                case 3:
                    roleChangeSale = self.roleChangePriceProduct_Order();
                    break;
                case 6:
                    roleChangeSale = self.roleChangePriceProduct_Return();
                    break;
                case 19:
                    roleChangeSale = self.roleChangePriceProduct_ServicePackage();
                    break;
            }
            // if have role change price
            if (roleChangeSale === true) {
                var charStartInput = arrSplit[0];
                switch (charStartInput) {
                    case 'munber':
                        $('input[id=' + idRandom + ']').focus().select();
                        break;
                    case 'numberTH':
                        $('#priceTH_' + idRandom).focus().select();
                        break;
                    case 'sum-f':
                        var lstCTHD = localStorage.getItem(lcListCTHD);
                        lstCTHD = JSON.parse(lstCTHD);
                        var lstCTHD_opening = $.grep(lstCTHD, function (x) {
                            return x.IDRandomHD === itemCT.IDRandomHD;
                        });
                        ArrowRight_Focus(lstCTHD_opening, idRandom, itemCT.ID_DonViQuiDoi, itemCT.IDRandomHD, 'munber_', false);
                        break;
                    case 'sumTH':
                        // get ct doitra
                        var ctDoiTra = localStorage.getItem(lcListCTHD_DoiTra);
                        ctDoiTra = JSON.parse(ctDoiTra);
                        var ctDoiTra_opening = $.grep(ctDoiTra, function (x) {
                            return x.IDRandomHD === itemCT.IDRandomHD;
                        });
                        ArrowRight_Focus(ctDoiTra_opening, idRandom, itemCT.ID_DonViQuiDoi, itemCT.IDRandomHD, 'numberTH_', true);
                        break;
                    case 'pri-g': // chietkhau
                        $('#sum-f_' + idRandom).focus().select();
                        $(thisObj).closest('.callprice').hide();
                        break;
                    case 'pri-gTH':
                        $('#sumTH_' + idRandom).focus().select();
                        $(thisObj).closest('.callprice').hide();
                        break;
                    case 'priceTH':
                        self.showDivSale_CTHD_DoiTra(itemCT);
                        break;
                    default: // price cthd
                        self.showDivSale_CTHD(itemCT);
                        break;
                }
            }
        }
    }
    function ArrowLeft_CTHD(itemCT, event) {
        var keyCode = event.keyCode || event.which;
        if (keyCode === 37) {
            var thisObj = event.currentTarget;
            var id = $(thisObj).attr('id');
            var arrSplit = id.split('_');
            var idRandom = itemCT.IDRandom;
            var loaiHD = itemCT.LoaiHoaDon;
            var roleChangeSale = true;
            switch (loaiHD) {
                case 1:
                    roleChangeSale = self.roleChangePriceProduct_Invoice();
                    break;
                case 2:
                    roleChangeSale = self.roleChangePriceProduct_Invoice();
                    break;
                case 3:
                    roleChangeSale = self.roleChangePriceProduct_Order();
                    break;
                case 6:
                    roleChangeSale = self.roleChangePriceProduct_Return();
                    break;
                case 19:
                    roleChangeSale = self.roleChangePriceProduct_ServicePackage();
                    break;
            }
            // if have role change price
            if (roleChangeSale === true) {
                var charStartInput = arrSplit[0];
                switch (charStartInput) {
                    case 'numberTH':
                        Shift_DoiTra(itemCT, event, 'sumTH_', 3, 37);
                        break;
                    case 'munber':
                        Shift_SoLuongPriceCTHD(itemCT, event, 'sum-f_', 3, 37);
                        break;
                    case 'pri-g':
                        $('input[id=' + idRandom + ']').focus().select();
                        $(thisObj).closest('.callprice').hide();
                        break;
                    case 'pri-gTH':
                        $('#priceTH_' + idRandom).focus().select();
                        $(thisObj).closest('.callprice').hide();
                        break;
                    case 'sumTH':
                        self.showDivSale_CTHD_DoiTra(itemCT);
                        break;
                    case 'sum-f':
                        self.showDivSale_CTHD(itemCT);
                        break;
                    case 'priceTH':
                        $('#numberTH_' + idRandom).focus().select();
                        break;
                    default:
                        $('#munber_' + idRandom).focus().select();
                        break;
                }
            }
        }
    }


    self.ShowPop_ChangeTPDinhLuong = function (item, isDoiTra) {
        var cthdDoing = FindCTHD_isDoing(item, isDoiTra);
        if (cthdDoing !== null) {
            if (item.LoaiHangHoa === 2) {
                var arrTPDinhLuong = [];
                let thanhtien = (cthdDoing.GiaBan - cthdDoing.TienChietKhau) * cthdDoing.SoLuong;
                item.ThanhTien = thanhtien;
                item.SoLuong = cthdDoing.SoLuong;
                vmThanhPhanDinhLuong.DichVu_isDoing = item;
                self.DichVu_isDoing(item);
                arrTPDinhLuong = cthdDoing.ThanhPhan_DinhLuong;

                if (arrTPDinhLuong.length === 0) {
                    // get TP dinh luong by ID_QuiDoi
                    let lstTPDinhLuong = $.grep(vmThanhPhanDinhLuong.All_DinhLuongDichVu, function (x) {
                        return x.ID_DichVu === item.ID_DonViQuiDoi;
                    });
                    if (lstTPDinhLuong.length > 0) {
                        for (let i = 0; i < lstTPDinhLuong.length; i++) {
                            lstTPDinhLuong[i].STT = i + 1;
                            lstTPDinhLuong[i].GhiChu = '';
                            lstTPDinhLuong[i].isDefault = false;
                            lstTPDinhLuong[i].IDRandom = 'TPDL_' + Math.floor(Math.random() * 10000000 + 1);
                            lstTPDinhLuong[i].SoLuong = formatNumber3Digit(cthdDoing.SoLuong * lstTPDinhLuong[i].SoLuongMacDinh);
                            lstTPDinhLuong[i].SoLuongQuyCach = lstTPDinhLuong[i].SoLuong * lstTPDinhLuong[i].QuyCach;
                            lstTPDinhLuong[i].GiaVonAfter = lstTPDinhLuong[i].SoLuong * lstTPDinhLuong[i].GiaVon;// = GiaVon(co ban) * SoLuong
                            arrTPDinhLuong.push(lstTPDinhLuong[i]);
                        }
                    }
                }
                vmThanhPhanDinhLuong.ID_DonVi = id_DonVi;
                vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed = arrTPDinhLuong;
                vmThanhPhanDinhLuong.showModal(isDoiTra, false);
            }
            else {
                if (item.LoaiHoaDon === 6 && isDoiTra === false) {
                    vmThanhPhanCombo.showModal(cthdDoing, 3, isDoiTra);// 3.trahang: khong dc thaydoi tpcombo
                }
                else {
                    vmThanhPhanCombo.showModal(cthdDoing, 1, isDoiTra);
                }
            }
        }
    }

    $('#vmThanhPhanDinhLuong').on('hidden.bs.modal', function () {
        if (vmThanhPhanDinhLuong.saveOK && vmThanhPhanDinhLuong.formType === 0) {
            if (!vmThanhPhanDinhLuong.isCombo) {// khong phai combo
                self.Agree_TPDinhLuong();
            }
            else {
                self.Combo_AgreeTPDinhLuong();
            }
        }
    })

    function Update_SoLuongBanDau_forListTPDinhLuong() {
        var soluongHang = parseFloat(self.DichVu_isDoing().SoLuong);
        // find all TPDinhLuong_BanDau and update TPDinhLuong_New
        var lstTPDinhLuong = $.grep(vmThanhPhanDinhLuong.All_DinhLuongDichVu, function (x) {
            return x.ID_DichVu === self.DichVu_isDoing().ID_DonViQuiDoi;
        });
        if (lstTPDinhLuong.length > 0) {
            var arrIDQuiDoi_afterChange = [];
            for (let i = 0; i < lstTPDinhLuong.length; i++) {
                let itemOut = lstTPDinhLuong[i];
                for (let j = 0; j < vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed.length; j++) {
                    let itemIn = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed[j];
                    if (itemIn.ID_DonViQuiDoi === itemOut.ID_DonViQuiDoi) {
                        arrIDQuiDoi_afterChange.push(itemOut.ID_DonViQuiDoi);
                        vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed[j].SoLuongMacDinh = itemIn.SoLuong / soluongHang;
                        break;
                    }
                }
            }
            // Nếu add 1 TP định lượng--> update again SoLuongMacDinh
            for (let j = 0; j < vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed.length; j++) {
                let itemIn = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed[j];
                if ($.inArray(itemIn.ID_DonViQuiDoi, arrIDQuiDoi_afterChange) === -1) {
                    vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed[j].SoLuongMacDinh = itemIn.SoLuong / soluongHang;
                }
            }
            // assign again lstTPDinhLuong for variable other ---> 
            var lstTPDinhLuong2 = $.extend(true, [], lstTPDinhLuong);
            //push list DinhLuongBanDau into list chosed if deleted
            for (let i = 0; i < lstTPDinhLuong2.length; i++) {
                if ($.inArray(lstTPDinhLuong2[i].ID_DonViQuiDoi, arrIDQuiDoi_afterChange) === -1) {
                    lstTPDinhLuong2[i].SoLuong = 0;// soluong thuc te su dung
                    lstTPDinhLuong2[i].SoLuongMacDinh = 0;
                    lstTPDinhLuong2[i].GiaVon = 0; // neu khong su dung dinh luong nay nua --> gia von =0
                    self.Grid_TPDinhLuongChosed.push(lstTPDinhLuong2[i]);
                }
            }
        }
        else {
            // truong hop HangHoa khong co TPDinhLuong: if change SoLuong/SLQuyCach TPDinhLuong --> update again SoLongMacDinh
            for (let i = 0; i < vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed.length; i++) {
                let itemIn = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed[i];
                vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed[i].SoLuongMacDinh = itemIn.SoLuong / soluongHang;
            }
        }
    }

    self.Agree_TPDinhLuong = function () {
        var loaiHD = GetLoaiHoaDon_ofHDopening();
        var cacheName = lcListCTHD;
        if (loaiHD === 6) {
            cacheName = lcListCTHD_DoiTra;
        }
        Update_SoLuongBanDau_forListTPDinhLuong();

        var idRandom = self.DichVu_isDoing().IDRandom;
        var quanlytheolo = self.DichVu_isDoing().QuanLyTheoLoHang;
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            if (self.DichVu_isDoing().LotParent || (quanlytheolo === false && self.DichVu_isDoing().LaConCungLoai === false)) {
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandom === idRandom) {
                        cthd[i].ThanhPhan_DinhLuong = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed;
                        break;
                    }
                }
            }
            else {
                if (quanlytheolo) {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].DM_LoHang.length; j++) {
                            if (cthd[i].DM_LoHang[j].IDRandom === idRandom) {
                                cthd[i].DM_LoHang[j].ThanhPhan_DinhLuong = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed;
                                i = cthd.length;  // esc for loop
                                break;
                            }
                        }
                    }
                }
                else {
                    for (let i = 0; i < cthd.length; i++) {
                        for (let j = 0; j < cthd[i].HangCungLoais.length; j++) {
                            if (cthd[i].HangCungLoais[j].IDRandom === idRandom) {
                                cthd[i].HangCungLoais[j].ThanhPhan_DinhLuong = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed;
                                i = cthd.length;
                                break;
                            }
                        }
                    }
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }

    // chiet khau nhan vien ban goi
    function Agree_ChietKhauHoaDon(idRanDom) {
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRanDom) {
                    lstHD[i].BH_NhanVienThucHiens = vmThanhToanGara.GridNVienBanGoi_Chosed;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
    }


    //Caculator_TimeRemain();
    function Caculator_TimeRemainHD() {
        $('#allLocation ul li').each(function () {
            var start = $(this).find('.sp-room-time').text();
            var timeUse = $(this).find('.timeUse').text();
            var sVal = getMinutesBetweenDates_ToDay(start, timeUse);
            $(this).find('.timeRemain').text(sVal + ' phút');
            setTimeout(Caculator_TimeRemainHD, 5000);// 5s
        });
    }
    Caculator_TimeRemainCTHD();
    function Caculator_TimeRemainCTHD() {
        $('.time-room').each(function () {
            // only update if StartTime !=0
            var start = $(this).val();
            if (start !== '0' && start !== '') {
                var thisID = $(this).attr('id').split('_')[2];
                var closestVT = $(this).closest('.room-view-vi-tri');
                // check CTHD/CTGD_DoiTra
                var divDoiTra = $(this).closest('.bill-listchoose');
                var cacheName = lcListCTHD_DoiTra;
                if ($(divDoiTra).attr('id') === 'divCTDoiTra') {
                    cacheName = lcListCTHD;
                }
                var timeUse = $(closestVT).find('.timeUse').text();
                var sVal = getMinutesBetweenDates_ToDay(start, timeUse);
                if (sVal > 0) {
                    $(closestVT).find('.timeRemain').text(sVal + ' phút');
                    $(closestVT).find('.timeRemain').closest('.room-position').css('display', '');
                }
                else {
                    $(closestVT).find('.timeOver').text(sVal * (-1) + ' phút');
                    $(closestVT).find('.timeRemain').closest('.room-position').css('display', 'none');
                    $(closestVT).find('.overtime').css('display', '');
                }
                // update time over for CTHD
                var cthd = localStorage.getItem(lcListCTHD);
                if (cthd !== null) {
                    cthd = JSON.parse(cthd);
                    for (let i = 0; i < cthd.length; i++) {
                        if (cthd[i].IDRandom === 'RandomCTHD_' + thisID) {
                            cthd[i].TimeRemain = sVal > 0 ? sVal : 0;
                            cthd[i].QuaThoiGian = sVal > 0 ? 0 : sVal * (-1);
                            break;
                        }
                    }
                    localStorage.setItem(lcListCTHD, JSON.stringify(cthd));
                }
            }
        });
        setTimeout(Caculator_TimeRemainCTHD, 5000);// 5s
    }
    function getMinutesBetweenDates_ToDay(timeIn, timeUse) {
        timeUse = parseInt(timeUse.toString().replace(/\D/g, ''));// get number from string
        if (isNaN(timeUse) === false) {
            var today = moment(new Date()).format('YYYY-MM-DD');
            var ngaygioVao = today.concat(' ', timeIn);
            var diff = (new Date() - new Date(ngaygioVao)) / 1000;
            var hours = Math.floor(diff / 3600);
            var minutes = Math.floor(diff % 3600) / 60; // = sophut da su dung
            var timeRemain = timeUse;
            if (hours >= 1) {
                timeRemain = Math.ceil(timeUse - (minutes + hours * 60));
            }
            else {
                if (minutes > 0) {
                    timeRemain = Math.ceil(timeUse - minutes);
                }
            }
            return timeRemain;
        }
        return 0;
    }
    function getMinutesBetweenDates(dateFrom, dateTo) {
        var start = moment(dateFrom).format('YYYY-MM-DD HH:mm:ss');
        var end = moment(dateTo).format('YYYY-MM-DD HH:mm:ss');
        var diff = (new Date(end) - new Date(start)) / 1000;
        var hours = Math.floor(diff / 3600);
        var minutes = Math.floor(diff % 3600) / 60;
        var sophut = 0;
        if (hours > 24) {
            sophut = hours * 60;
        }
        else {
            if (hours >= 1) {
                sophut = Math.ceil(minutes + hours * 60);
            }
            else {
                if (minutes > 0) {
                    sophut = Math.ceil(minutes);
                }
                else {
                    sophut = 0;
                }
            }
        }
        return sophut;
    }
    // CTHD have ID_ViTri
    self.ListTable_Empty = ko.observableArray();
    self.ListFoor_Empty = ko.observableArray();
    self.TableEmpty_ByIDNhom = ko.observableArray();
    self.Doing_ChangeVTCTHD = ko.observable(false);// used to change VT CTHD
    self.CTHD_ChangingVT = ko.observableArray();
    self.ClickTimeStart = function (item, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = item.IDRandomHD;
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var lstCTHD = localStorage.getItem(cacheName);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            for (let i = 0; i < lstCTHD.length; i++) {
                // DichVu hasn't Lohang --> dont' need for DM_LoHang
                if (lstCTHD[i].IDRandom === idRandom) {
                    lstCTHD[i].TimeStart = FormatDatetime_24Hours(new Date());
                    break;
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(lstCTHD));
            // caculator again timeDoing of HoaDon todo
            // bind again CTHD
            var arrCT = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandomHD;
            });
            if (isDoiTra) {
                self.NewProducts(arrCT);
            }
            else {
                self.HangHoaAfterAdds(arrCT);
            }
        }
    }
    self.ChangeViTri_CTHD = function (item, isDoiTra) {
        var idRandomHD = item.IDRandomHD;
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        // doivitri
        if (item.ID_ViTri !== null) {
            // count table empty (if same HD, same KH --> allow same ID_ViTri)
            var lstCTHD = localStorage.getItem(cacheName);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                var cthdOtherHD = $.grep(lstCTHD, function (x) {
                    return x.ID_ViTri !== null && x.IDRandomHD !== idRandomHD;
                });
                var vtriUsed = [];
                for (let i = 0; i < cthdOtherHD.length; i++) {
                    vtriUsed.push(cthdOtherHD[i].ID_ViTri);
                }
                var vtriEmpty = $.grep(self.AllPhongBans(), function (x) {
                    return $.inArray(x.ID, vtriUsed) === -1;
                });
                self.ListTable_Empty(vtriEmpty);
                self.TableEmpty_ByIDNhom(vtriEmpty);
            }
            $('#modalPopupdoivitri').modal('show');
        }
        else {
            // chose Vitri
            $('.filter-ban-le').hide();
            $('.filter-so-do').show();
            $('#divListHD').hide();
            $('#banhangsodo, #banhanghanghoa').removeClass('active');
            $('#tabSoDo li').removeClass('active');
            $('#tabSoDo li:eq(0)').addClass('active');
            $('#banhangsodo').addClass('active');
            self.ClickTab_PhongBan(true);
        }
        self.CTHD_ChangingVT(item);
    }
    self.GetTableEmpty_ByIDNhom = function (item) {
        var idNhom = item.ID;
        if (item.ID === undefined) {
            self.TableEmpty_ByIDNhom(self.ListTable_Empty());
        }
        else {
            var lst = $.grep(self.ListTable_Empty(), function (x) {
                return x.ID_KhuVuc === idNhom;
            });
            self.TableEmpty_ByIDNhom(lst);
        }
    }
    self.ChangeTime_CTHD = function (item, isDoiTra) {
        var $this = event.currentTarget;
        $($this).datetimepicker({
            datepicker: false,
            step: 5,
            format: 'H:m',
            onSelectTime: function (e, evt) {
                var hour = e.getHours() > 9 ? e.getHours() : "0" + e.getHours();
                var min = e.getMinutes() > 9 ? e.getMinutes() : "0" + e.getMinutes();
                $(evt).val(hour + ":" + min);
                // update again timeStart, timeRemain, timeOver for CTHD
                // DichVu hasn't Lohang --> dont' need for DM_LoHang
                var cacheName = lcListCTHD;
                if (isDoiTra) {
                    cacheName = lcListCTHD_DoiTra;
                }
                var timeAfter = hour + ":" + min;
                console.log('timeAfter ', timeAfter)
                var lstCTHD = localStorage.getItem(cacheName);
                if (lstCTHD !== null) {
                    lstCTHD = JSON.parse(lstCTHD);
                    for (let i = 0; i < lstCTHD.length; i++) {
                        if (lstCTHD[i].IDRandom === item.IDRandom) {
                            lstCTHD[i].TimeStart = timeAfter;
                            var sophut = getMinutesBetweenDates_ToDay(timeAfter, lstCTHD[i].ThoiGianThucHien);
                            var divVtri = $($this).closest('.room-position');
                            if (sophut > 0) {
                                lstCTHD[i].TimeRemain = sophut;
                                lstCTHD[i].QuaThoiGian = 0;
                                // hide/show div of time remain/time over
                                $(divVtri).next().next().find('.timeRemain').text(sophut + ' phút');
                                $(divVtri).next().css('display', 'none');
                                $(divVtri).next().next().find('.timeRemain').closest('.room-position').css('display', '');
                            }
                            else {
                                sophut = sophut * (-1);
                                lstCTHD[i].TimeRemain = 0;
                                lstCTHD[i].QuaThoiGian = sophut;
                                $(divVtri).next().find('.timeOver').text(sophut + ' phút');
                                $(divVtri).next().css('display', '');
                                $(divVtri).next().next().find('.timeRemain').closest('.room-position').css('display', 'none');
                            }
                            break;
                        }
                    }
                    localStorage.setItem(cacheName, JSON.stringify(lstCTHD));
                }
                $($this).datetimepicker('destroy');
            }
        })
    }
    self.EditTime_CTHD = function (item, isDoiTra) {
        var $this = event.currentTarget;
        var keyCode = event.keyCode || event.which;
        var gtri = $($this).val();
        if (gtri.indexOf(':') === -1) gtri = gtri.substr(0, 2) + ':' + gtri.substr(2, 2);
        if (keyCode === 13) {
            console.log('gtri ', gtri)
            var cacheName = lcListCTHD;
            if (isDoiTra) {
                cacheName = lcListCTHD_DoiTra;
            }
            var lstCTHD = localStorage.getItem(cacheName);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                for (let i = 0; i < lstCTHD.length; i++) {
                    if (lstCTHD[i].IDRandom === item.IDRandom) {
                        lstCTHD[i].TimeStart = gtri;
                        var sophut = getMinutesBetweenDates_ToDay(gtri, lstCTHD[i].ThoiGianThucHien);
                        var divVtri = $($this).closest('.room-position');
                        if (sophut > 0) {
                            lstCTHD[i].TimeRemain = sophut;
                            lstCTHD[i].QuaThoiGian = 0;
                            // hide/show div of time remain/time over
                            $(divVtri).next().next().find('.timeRemain').text(sophut + ' phút');
                            $(divVtri).next().css('display', 'none');
                            $(divVtri).next().next().find('.timeRemain').closest('.room-position').css('display', '');
                        }
                        else {
                            sophut = sophut * (-1);
                            lstCTHD[i].TimeRemain = 0;
                            lstCTHD[i].QuaThoiGian = sophut;
                            $(divVtri).next().find('.timeOver').text(sophut + ' phút');
                            $(divVtri).next().css('display', '');
                            $(divVtri).next().next().find('.timeRemain').closest('.room-position').css('display', 'none');
                        }
                        break;
                    }
                }
                localStorage.setItem(cacheName, JSON.stringify(lstCTHD));
            }
        }
    }
    function UpdateViTri_inCTHD_toDB(idCTHD, idViTri) {
        if (idCTHD !== undefined) {
            ajaxHelper(BHHoaDonUri + 'UpdateViTri_CTHD?idCTHD=' + idCTHD + '&idViTri=' + idViTri, 'GET').done(function (x) {
            })
        }
    }
    self.Popup_ChoseTable = function (item) {
        self.IDPhongBan_Chosing(item.ID);
        self.SaveVitri_Chosed();
        // update ID_ViTri for CTHD into DB
        if (self.CTHD_ChangingVT().ID !== undefined) {
            UpdateViTri_inCTHD_toDB(self.CTHD_ChangingVT().ID, item.ID);
        }
    }
    self.SaveVitri_Chosed = function () {
        // get tableName by ID
        var itemPB = $.grep(self.AllPhongBans(), function (x) {
            return x.ID === self.IDPhongBan_Chosing();
        });
        if (itemPB.length > 0) {
            var loaiHD = GetLoaiHoaDon_ofHDopening();
            var cacheName = lcListCTHD;
            if (loaiHD === 6) {
                cacheName = lcListCTHD_DoiTra;
            }
            var lstCTHD = localStorage.getItem(cacheName);
            if (lstCTHD !== null) {
                lstCTHD = JSON.parse(lstCTHD);
                lstCTHD = UpdateViTri_inCacheCTHD(lstCTHD, self.IDPhongBan_Chosing(), itemPB[0].TenViTri);
                localStorage.setItem(cacheName, JSON.stringify(lstCTHD));
            }
            // bind again lst HangHoa
            var arr = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === self.CTHD_ChangingVT().IDRandomHD;
            });
            self.HangHoaAfterAdds(arr);
            $('#modalPopupdoivitri').modal('hide');
            SendDataBanHangToPos_byUser(self.CTHD_ChangingVT().IDRandomHD, 1);
        }
    }
    self.saveHD_OtherUser = function () {
        var itemHD = self.Modal_HoaDons();
        if (itemHD !== undefined) {
            UpdateInforKH_inLstDoiTuongs(itemHD, false);
            var idRandomHD = itemHD.IDRandom;
            var _idDoiTuong = itemHD.ID_DoiTuong;
            // tim CTHoaDon t/u voi HoaDon
            var objCTAdd = [];
            var listAllCTHD = localStorage.getItem(lcListCTHD);
            if (listAllCTHD !== null) {
                listAllCTHD = JSON.parse(listAllCTHD);
                objCTAdd = GetCTHoaDon_FromArr(listAllCTHD, idRandomHD);
            }
            if (objCTAdd.length === 0) {
                ShowMessage_Danger('Vui lòng nhập chi tiết hóa đơn');
                SaveHD_RemoveDisable();
                return;
            }
            else {
                var msgErr = "";
                // Khong cho phep ban hang khi het ton kho
                var xuatAm = self.ThietLap().XuatAm;
                if (xuatAm === false) {
                    for (let i = 0; i < objCTAdd.length; i++) {
                        if (objCTAdd[i].LaHangHoa && objCTAdd[i].SoLuong > objCTAdd[i].TonKho) {
                            msgErr += objCTAdd[i].TenHangHoa + ", ";
                        }
                    }
                    if (msgErr !== "") {
                        msgErr = Remove_LastComma(msgErr);
                        ShowMessage_Danger('Không đủ số lượng tồn kho cho sản phẩm ' + msgErr);
                        SaveHD_RemoveDisable();
                        return false;
                    }
                }
                // check if Soluong = 0
                //for (let i = 0; i < objCTAdd.length; i++) {
                //    if (objCTAdd[i].SoLuong === 0) {
                //        msgErr += objCTAdd[i].TenHangHoa + ", ";
                //    }
                //}
                //if (msgErr !== "") {
                //    msgErr = Remove_LastComma(msgErr);
                //    ShowMessage_Danger('Chưa nhập số lượng cho hàng hóa ' + msgErr);
                //    SaveHD_RemoveDisable();
                //    return false;
                //}
                //msgErr = CheckTonKho_SameIDHangHoa_DifferenceDVT(objCTAdd);
                //if (msgErr !== '') {
                //    ShowMessage_Danger('Không đủ số lượng tồn kho cho sản phẩm ' + msgErr);
                //    SaveHD_RemoveDisable();
                //    return;
                //}
                // check if chua nhap so lo
                for (let i = 0; i < objCTAdd.length; i++) {
                    if (objCTAdd[i].QuanLyTheoLoHang) {
                        if (objCTAdd[i].ID_LoHang === null || objCTAdd[i].ID_LoHang === undefined) {
                            ShowMessage_Danger('Vui lòng nhập đầy đủ thông tin lô cho hàng hóa ');
                            SaveHD_RemoveDisable();
                            return;
                        }
                    }
                }
                // Nếu đặt hàng, sau đó xử lí đơn hàng, nhưng hàng đã ngừng kinh doanh --> thông báo
                if (itemHD.ID_HoaDon !== null && itemHD.ID_HoaDon !== undefined) {
                    var errNgungKinhDoanh = CheckHang_NgungKinhDoanh(objCTAdd);
                    if (errNgungKinhDoanh !== '') {
                        errNgungKinhDoanh = Remove_LastComma(errNgungKinhDoanh);
                        ShowMessage_Danger('Hàng hóa ' + errNgungKinhDoanh + ' đã ngừng kinh doanh');
                        SaveHD_RemoveDisable();
                        return;
                    }
                }
                if (_idDoiTuong === null || _idDoiTuong === undefined || _idDoiTuong === '' || _idDoiTuong === const_GuidEmpty) {
                    if (itemHD.PhaiThanhToan > itemHD.DaThanhToan) {
                        msgErr = "Là khách lẻ, nên không cho phép nợ";
                        ShowMessage_Danger(msgErr);
                        SaveHD_RemoveDisable();
                        return false;
                    }
                }
                // update DonGia in CTHD if GiaBan > DonGia ban dau (update 21.12.2017)
                for (let i = 0; i < objCTAdd.length; i++) {
                    if (objCTAdd[i].GiaBan > objCTAdd[i].DonGia) {
                        objCTAdd[i].DonGia = objCTAdd[i].GiaBan;
                    }
                }
                // remove CTHD with QuanLyTheoLo, but ID_Lo== null
                objCTAdd = GetArrCTHD_withIDLoHangOtherNull(objCTAdd);
                // update status NVien before save
                var myData = {};
                var maHD = itemHD.MaHoaDon;
                // Neu la HoaDonoffline => giu nguyen ma
                if (maHD.indexOf('Copy') === -1 && maHD.indexOf('O') >= 0) {
                    itemHD.MaHoaDon = maHD;
                }
                else {
                    itemHD.MaHoaDon = null; // gan ma hoa don = null de khi save sinh MaHoaDon tu dong
                }
                // get GhiChu_KhuyenMai = GhiChuKM_ofHH + GhiChuKM_HD
                var ghichuKMHD = '';
                for (let i = 0; i < objCTAdd.length; i++) {
                    if (objCTAdd[i].IsKhuyenMai && objCTAdd[i].TenKhuyenMai !== '') {
                        ghichuKMHD += objCTAdd[i].TenKhuyenMai + '<br /> ';
                    }
                }
                ghichuKMHD += itemHD.KhuyenMai_GhiChu;
                if (ghichuKMHD === undefined || ghichuKMHD.indexOf('undefined') > -1) {
                    ghichuKMHD = '';
                }
                itemHD.KhuyenMai_GhiChu = ghichuKMHD;
                // check NgayLapHD is null, and get
                var ngaylapHD = GetNgayLapHD_whenSave(itemHD.NgayLapHoaDon);
                itemHD.NgayLapHoaDon = ngaylapHD;

                itemHD.NguoiTao = userLogin;// assign again NguoiTao
                myData.objHoaDon = itemHD;
                myData.objCTHoaDon = objCTAdd;
                myData.IsSetGiaVonTrungBinh = self.ThietLap().GiaVonTrungBinh;
                var lstHD2 = localStorage.getItem(lcListHD);
                if (lstHD2 !== null) {
                    lstHD2 = JSON.parse(lstHD2);
                    // delete HD with MaHoaDon BG0000 (HD tao tu HD DatHang)
                    lstHD2 = $.grep(lstHD2, function (item) {
                        return item.MaHoaDon !== itemHD.MaHoaDonTraHang;
                    });
                    localStorage.setItem(lcListHD, JSON.stringify(lstHD2));
                }
                PostHD_SoQuy_SaveHD(myData, false);
                $('#hdOtherClient').modal('hide');
            }
        }
        else {
            ShowMessage_Danger('Vui lòng nhập thông tin hóa đơn');
            SaveHD_RemoveDisable();
            return;
        }
    }
    self.ClickTab_HangHoa = function () {
        $('#banhangsodo').hide();
        // when this HD was ThanhToan by other user --> read again infor HD
        BindHD_CTHDafterSave();
        Call_6Func(false);
    }
    self.HDOther_MoPhieu = function () {
        $('#hdOtherClient').modal('hide');
        $('#banhangsodo').hide();
        var hdOpening = self.Modal_HoaDons();
        var idRandom = hdOpening.IDRandom;
        _maHoaDon = hdOpening.MaHoaDon;// must assign _maHoaDon (used to bind infor HD)
        self.IDPhongBan_Chosing(hdOpening.ID_ViTri);

        // update Status HD = 1 --> opening hd other user
        var lstHD = localStorage.getItem(lcListHD);
        if (lstHD !== null) {
            lstHD = JSON.parse(lstHD);
            for (let i = 0; i < lstHD.length; i++) {
                if (lstHD[i].IDRandom === idRandom) {
                    lstHD[i].Status = 1;
                    break;
                }
            }
            localStorage.setItem(lcListHD, JSON.stringify(lstHD));
        }
        var arrHangHoa = [];
        var lstCTHD = localStorage.getItem(lcListCTHD);
        if (lstCTHD !== null) {
            lstCTHD = JSON.parse(lstCTHD);
            arrHangHoa = $.grep(lstCTHD, function (x) {
                return x.IDRandomHD === idRandom;
            })
        }
        self.HangHoaAfterAdds(arrHangHoa);
        GetInForCustomer_byID(hdOpening.ID_DoiTuong);
        self.SetNhanVien(hdOpening.ID_NhanVien);
        self.SetBangGia(hdOpening.ID_BangGia);
        self.SetChiNhanh(hdOpening.ID_DonVi);

        self.HoaDons().SetData(hdOpening);
        OnOff_Timer(hdOpening.NgayLapHoaDon);
        SetText_lblTienMat(hdOpening, 1);
        GetCurrentPage_byMaHoaDon(_maHoaDon);
        $('#ddlDMChungTus').removeAttr('disabled');
        $('#txtSearchHH').focus();
        ClearTextSearch();
        Call_6Func();
        //SetBorder_LotEnd_CTHD();
    }
    $("#banhangsodo").on('LoadSoDoPhong', function () {
        //self.ClickTab_PhongBan(false);
    });

    function SendDataBanHangToPos_byUser(idRandom, func) {
        if (connected) {
            var hdOpening = localStorage.getItem(lcListHD);
            if (hdOpening !== null) {
                hdOpening = JSON.parse(hdOpening);
                hdOpening = $.grep(hdOpening, function (x) {
                    return x.IDRandom === idRandom;
                });
                if (hdOpening.length > 0) {
                    var cthd = localStorage.getItem(lcListCTHD);
                    if (cthd !== null) {
                        cthd = JSON.parse(cthd);
                        cthd = $.grep(cthd, function (x) {
                            return x.IDRandomHD === idRandom;
                        });
                        if (hdOpening[0].LoaiHoaDon === 1) {
                            // only send hdopening
                            var objSend = CreateObjHub_User(idRandom, hdOpening, cthd, func);
                            hubAlert.server.sendDataBanHang_ToDisplayCustomer(objSend);
                        }
                    }
                }
            }
        }
    }
    // form add new product
    self.ShowForm_NewProduct = function () {
        var roleInsert = CheckQuyenExist('HangHoa_ThemMoi');
        if (!roleInsert) {
            ShowMessage_Danger('Không có quyền thêm mới hàng hóa, dịch vụ');
            return;
        }
        $('#partialAddProduct').modal('show');
        partialProduct.AddProductSuccess(false);
        partialProduct.ID_NhanVien(_idNhanVien);
        partialProduct.ID_DonVi(id_DonVi);
        partialProduct.UserLogin(userLogin);
        partialProduct.newProduct(new NewProduct());
        $('.tenNhomHH').text('---Chọn nhóm---');
        $('#divgiavon').css('display', '');
        $('#divtonkho').css('display', '');
        $('#title-partialproduct').text('Thêm mới hàng hóa');
        var arr = $.grep(self.NhomHangHoas(), function (x) {
            return x.LaNhomHangHoa === true;
        });
        partialProduct.NhomHangHoas_ByKind(arr);
    }
    $('#partialAddProduct').on('hidden.bs.modal', function () {
        if (partialProduct.AddProductSuccess()) {
            self.addHangHoa(partialProduct.ProductAfterAdd());
            db.DM_HangHoa.put(partialProduct.ProductAfterAdd());
            self.HangHoaAll.unshift(partialProduct.ProductAfterAdd());
            self.HangHoas.unshift(partialProduct.ProductAfterAdd());
            self.HangHoaOlds.unshift(partialProduct.ProductAfterAdd());
        }
    })
    // calendar
    self.ShowCalendar = function () {
        partialCalendar.ID_DonVi(id_DonVi);
        partialCalendar.ID_NhanVien(_idNhanVien);
        partialCalendar.UserLogin(userLogin);
        //partialCalendar.AllKhachHang(self.DoiTuongs());
        partialCalendar.ListService(self.HangHoaAll());
        partialCalendar.Calendar_ResetNew();

        //check if using service
        if (self.ChiTietDoiTuong() !== null && self.ChiTietDoiTuong().length > 0) {
            partialCalendar.newCalendar().ID_KhachHang(self.ChiTietDoiTuong()[0].ID);
            $('#partialCalendar jqauto-customer ._jsInput').val(self.ChiTietDoiTuong()[0].TenDoiTuong);
            if (self.HangHoaAfterAdds().length > 0) {
                for (let i = 0; i < self.HangHoaAfterAdds().length; i++) {
                    let itemFor = self.HangHoaAfterAdds()[i];
                    if (itemFor.LaHangHoa === false && itemFor.ID_ChiTietGoiDV !== null && itemFor.ID_ChiTietGoiDV !== const_GuidEmpty) {
                        partialCalendar.ListServiceChosed.push(itemFor);
                    }
                }
                $('#partialCalendar').modal('show');
            }
            else {
                // tim hoadon su dung gan nhat
                ajaxHelper(BHHoaDonUri + 'GetInvoiceUseServive_Newest?idKhachHang=' + self.ChiTietDoiTuong()[0].ID, 'POST').done(function (x) {
                    if (x.res === true) {
                        for (let i = 0; i < x.data.length; i++) {
                            let itemFor = x.data[i];
                            partialCalendar.ListServiceChosed.push(itemFor);
                        }
                        $('#partialCalendar').modal('show');
                    }
                });
            }
        }
        else {
            $('#partialCalendar').modal('show');
        }
    }

    $('#ThemMoiKhachHang').on('hidden.bs.modal', function () {
        if (vmThemMoiKhach.saveOK) {
            if (vmThemMoiKhach.isNew) {
                vmThemMoiKhach.customerDoing.IDNhomDoiTuongs = vmThemMoiKhach.customerDoing.IDNhomKhachs;
                vmThemMoiKhach.customerDoing.TenNguoiNop = vmThemMoiKhach.customerDoing.TenDoiTuong;
                vmThemMoiKhach.customerDoing.MaNguoiNop = vmThemMoiKhach.customerDoing.MaDoiTuong;
                newModelBanLe.Change_KhachHang(vmThemMoiKhach.customerDoing);
            }
            else {
                GetInforKhachHangFromDB_ByID(vmThemMoiKhach.customerDoing.ID);
            }
        }
    })

    // combo
    function UpdateThanhPhanCombo(idRandomPr, comboDoing, isDoiTra = false) {
        //var idRandomPr = ctParent.IDRandom;
        var idRandom = comboDoing.IDRandom;
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === idRandomPr) {
                    for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                        let forIn = cthd[i].ThanhPhanComBo[j];
                        if (forIn.IDRandom === idRandom) {
                            if (forIn.LoaiHoaDon === 1 || forIn.LoaiHoaDon === 25) {
                                if (forIn.LaPTPhiDichVu) {
                                    comboDoing.TongPhiDichVu = Math.round(forIn.PhiDichVu * comboDoing.GiaBan * comboDoing.SoLuong / 100);
                                }
                                else {
                                    comboDoing.TongPhiDichVu = forIn.PhiDichVu * comboDoing.SoLuong;
                                }
                            }
                            cthd[i].ThanhPhanComBo[j] = comboDoing;
                            break;
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }

    self.Combo_editSale = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var $this = $(event.currentTarget);

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    if (formatNumberToFloat(itFor.GiaBan) === 0) {
                        return;
                    }
                    formatNumberObj($this);

                    let ck = 0, ptCK = 0;
                    let ckNew = formatNumberToFloat($this.val())
                    if ($('#vnd_' + idRandom).hasClass('active-re')) {
                        if (ckNew > 100) {
                            $this.val(100);
                            ckNew = 100;
                        }
                        ck = itFor.GiaBan * ckNew / 100;
                        ptCK = ckNew;
                    }
                    else {
                        // neu giam gia > gia cu
                        if (ckNew > itFor.GiaBan) {
                            $this.val(formatNumber3Digit(itFor.GiaBan));
                            ckNew = itFor.GiaBan;
                        }
                        ck = ckNew;
                    }

                    if (itFor.PTThue > 0) {
                        itFor.TienThue = itFor.PTThue * (itFor.GiaBan - ck) / 100;
                        $('#tax_' + idRandom).val(formatNumber3Digit(itFor.TienThue));
                    }
                    itFor.TienChietKhau = ck;
                    itFor.PTChietKhau = ptCK;
                    itFor.ThanhTien = itFor.SoLuong * (itFor.DonGia - itFor.TienChietKhau);
                    itFor.ThanhToan = itFor.SoLuong * (itFor.DonGia - itFor.TienChietKhau + itFor.TienThue);
                    comboDoing = itFor;

                    $('#sum-f_' + idRandom).val(formatNumber3Digit(itFor.ThanhToan));
                    $('#btn_sale_' + idRandom).text(formatNumber3Digit(itFor.TienChietKhau));
                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
            Combo_UpdateChietKhauNV(itemPr.IDRandom, idRandom, isDoiTra);
        }
    }
    self.Combo_clickVND = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var $this = $('#vnd_' + idRandom);
        if ($this.hasClass('active-re')) {
            $this.removeClass('active-re');
        }
        else {
            $this.addClass('active-re');
        }

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    if (itFor.GiaBan !== 0) {
                        let ptCK = itFor.PTChietKhau;
                        let tienCK = itFor.TienChietKhau;
                        if ($this.hasClass('active-re')) {
                            ptCK = tienCK / itFor.GiaBan * 100;
                            $('#pri-g_' + idRandom).val(ptCK);
                        }
                        else {
                            $('#pri-g_' + idRandom).val(formatNumber3Digit(tienCK));
                            ptCK = 0;
                        }
                        itFor.PTChietKhau = ptCK;
                        itFor.TienChietKhau = tienCK;
                        comboDoing = itFor;
                    }
                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
        }
    }

    self.Combo_editPrice = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = itemPr.IDRandomHD;
        var loaiHD = self.HoaDons().LoaiHoaDon();
        var $this = $(event.currentTarget);
        formatNumberObj($this);
        var priceNew = formatNumberToFloat($this.val());

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    let ck = itFor.TienChietKhau;
                    let thue = itFor.TienThue;

                    if (parseInt(itFor.ChatLieu) === 4) {
                        ShowMessage_Danger('Dịch vụ thuộc gói đã mua. Không thay đổi đơn giá');
                        $this.val(formatNumber3Digit(itFor.GiaBan));
                        return false;
                    }

                    if (priceNew === 0) {
                        ck = 0;
                        thue = 0;
                    }
                    // caculator again tienGiam, newPrice
                    if (itFor.PTChietKhau > 0) {
                        ck = itFor.PTChietKhau * priceNew / 100;
                    }
                    if (itFor.PTThue > 0) {
                        thue = itFor.PTThue * (priceNew - ck) / 100;
                    }

                    itFor.DonGia = priceNew;
                    itFor.GiaBan = priceNew;
                    itFor.TienChietKhau = ck;
                    itFor.TienThue = thue;
                    itFor.ThanhTien = itFor.SoLuong * (priceNew - ck);
                    itFor.ThanhToan = itFor.SoLuong * (priceNew - ck + thue);
                    comboDoing = itFor;
                    if (isDoiTra) {
                        $('#sumTH_' + idRandom).val(formatNumber3Digit(itFor.ThanhToan));
                    }
                    else {
                        $('#sum-f_' + idRandom).val(formatNumber3Digit(itFor.ThanhToan));
                    }
                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
            if (loaiHD === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }
            Combo_UpdateChietKhauNV(itemPr.IDRandom, idRandom, isDoiTra);
            var keyCode = event.keyCode || event.which;
            if (keyCode === 13) {
                Combo_FocusLiNext(ctDoing, idRandom, '', isDoiTra);
                let char = '';
                if (isDoiTra) {
                    char = 'priceTH_';
                }
                Combo_FocusLiNext(ctDoing, idRandom, char, isDoiTra);
            }
        }
    }
    self.Combo_editSumPrice = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = itemPr.IDRandomHD;
        var loaiHD = self.HoaDons().LoaiHoaDon();

        var $this = $(event.currentTarget);
        formatNumberObj($this);
        var sumPrice = formatNumberToFloat($this.val());

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {

            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    let soluong = itFor.SoLuong;
                    let priceOld = itFor.GiaBan;

                    if (parseInt(itFor.ChatLieu) === 4) {
                        ShowMessage_Danger('Dịch vụ thuộc gói đã mua. Không thay đổi thành tiền');
                        $this.val(formatNumber3Digit(itFor.ThanhTien));
                        return false;
                    }

                    if (soluong === 0) {
                        // keep GiaBan, caculator again SoLuong
                        soluong = sumPrice / priceOld;
                        priceNew = priceOld;
                    }
                    else {
                        priceNew = Caculator_Price_byTienGiam(0, soluong, sumPrice);
                    }
                    // reset chietkhau, thue
                    itFor.PTChietKhau = 0;
                    itFor.TienChietKhau = 0;
                    itFor.TienThue = 0;
                    itFor.PTThue = 0;
                    itFor.SoLuong = soluong;
                    itFor.DonGia = priceNew;
                    itFor.GiaBan = priceNew;
                    itFor.ThanhToan = sumPrice;
                    itFor.ThanhTien = sumPrice;
                    comboDoing = itFor;

                    if (isDoiTra) {
                        $('#priceTH_' + idRandom).val(formatNumber3Digit(priceNew));
                        $('#numberTH_' + idRandom).val(formatNumber3Digit(soluong));
                    }
                    else {
                        $('#munber_' + idRandom).val(formatNumber3Digit(soluong));
                        $('input[id =' + idRandom + ']').val(formatNumber3Digit(priceNew));
                    }
                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
            if (loaiHD === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }
            Combo_UpdateChietKhauNV(itemPr.IDRandom, idRandom, isDoiTra);
            var keyCode = event.keyCode || event.which;
            if (keyCode === 13) {
                Combo_FocusLiNext(ctDoing, idRandom, 'sum-f_', isDoiTra);
            }
        }
    }

    self.Combo_editSoluong = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = itemPr.IDRandomHD;
        var loaiHD = self.HoaDons().LoaiHoaDon();

        var $this = $(event.currentTarget);
        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {

            let newNumber = formatNumberToFloat($this.val());
            if (isDoiTra == false && loaiHD === 6 && self.HoaDons().ID_HoaDon() !== null) {
                // trahang tu HDMua --> chi nhap toida = soluongmua
                if (newNumber > item.SoLuongDaMua) {
                    newNumber = item.SoLuongDaMua;
                    $this.val(item.SoLuongDaMua);
                }
            }
            let keyCode = event.keyCode || event.which;
            if (keyCode === 38) {
                newNumber = newNumber + 1;
            }

            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    if (parseInt(itFor.ChatLieu) === 4 && newNumber > itFor.SoLuongConLai) {
                        ShowMessage_Danger('Dịch vụ chỉ được sử dụng tối đa ' + itFor.SoLuongConLai);
                        $this.val(formatNumber3Digit(itFor.SoLuong));
                        return false;
                    }
                    if (keyCode === 40) {
                        if (itFor.SoLuong > 1) {
                            newNumber = newNumber - 1;
                        }
                    }
                    itFor.SoLuong = newNumber;
                    itFor.SoLuongMacDinh = newNumber / ctDoing.SoLuong;

                    if (parseInt(itFor.ChatLieu) !== 4) {
                        itFor.ThanhTien = newNumber * (itFor.DonGia - itFor.TienChietKhau);
                        itFor.ThanhToan = newNumber * (itFor.DonGia - itFor.TienChietKhau + itFor.TienThue);
                        if (isDoiTra) {
                            $('#sumTH_' + idRandom).val(formatNumber3Digit(itFor.ThanhToan));
                        }
                        else {
                            $('#sum-f_' + idRandom).val(formatNumber3Digit(itFor.ThanhToan));
                        }
                    }
                    comboDoing = itFor;

                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
            if (loaiHD === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }

            Combo_UpdateSoLuong_TPDinhLuong(itemPr.IDRandom, idRandom, newNumber, isDoiTra);
            Combo_UpdateChietKhauNV(itemPr.IDRandom, idRandom, isDoiTra);
            if (keyCode === 13) {
                let char = 'munber_';
                if (isDoiTra) {
                    char = 'numberTH_';
                }
                Combo_FocusLiNext(ctDoing, idRandom, char, isDoiTra);
            }
        }
    }
    self.Combo_giamSoLuong = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = itemPr.IDRandomHD;
        var loaiHD = self.HoaDons().LoaiHoaDon();

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            var soluong = 1;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    if (itFor.SoLuong >= 1) {
                        itFor.SoLuong = itFor.SoLuong - 1;
                    }
                    soluong = itFor.SoLuong;
                    itFor.SoLuongMacDinh = itFor.SoLuong / ctDoing.SoLuong;

                    if (parseInt(itFor.ChatLieu) !== 4) {
                        itFor.ThanhToan = itFor.SoLuong * (itFor.GiaBan - itFor.TienChietKhau + itFor.TienThue);
                        itFor.ThanhTien = itFor.SoLuong * (itFor.GiaBan - itFor.TienChietKhau);
                    }
                    comboDoing = itFor;

                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
            if (loaiHD === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }
            Combo_UpdateSoLuong_TPDinhLuong(itemPr.IDRandom, idRandom, soluong, isDoiTra);
            Combo_UpdateChietKhauNV(itemPr.IDRandom, idRandom, isDoiTra);
            BindCTHD_byIDRandomHD(itemPr.IDRandomHD);
        }
    }
    self.Combo_tangSoLuong = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = itemPr.IDRandomHD;
        var loaiHD = self.HoaDons().LoaiHoaDon();

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            var soluong = 1;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    if (isDoiTra === false && loaiHD === 6 && self.HoaDons().ID_HoaDon() !== null) {
                        if (itFor.SoLuong + 1 > itFor.SoLuongDaMua) {
                            ShowMessage_Danger(itFor.TenHangHoa + ' chỉ được trả tối đa số lượng = ' + itFor.SoLuongDaMua);
                            return false;
                        }
                    }
                    if (parseInt(itFor.ChatLieu) === 4 && itFor.SoLuong + 1 > itFor.SoLuongConLai) {
                        ShowMessage_Danger('Dịch vụ chỉ được sử dụng tối đa ' + itFor.SoLuongConLai);
                        $(event.currentTarget).val(formatNumber3Digit(itFor.SoLuong));
                        return false;
                    }
                    itFor.SoLuong += 1;
                    itFor.SoLuongMacDinh = itFor.SoLuong / ctDoing.SoLuong;
                    if (parseInt(itFor.ChatLieu) !== 4) {
                        itFor.ThanhToan = itFor.SoLuong * (itFor.GiaBan - itFor.TienChietKhau + itFor.TienThue);
                        itFor.ThanhTien = itFor.SoLuong * (itFor.GiaBan - itFor.TienChietKhau);
                        soluong = itFor.SoLuong;
                    }
                    comboDoing = itFor;
                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
            if (loaiHD === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }
            Combo_UpdateSoLuong_TPDinhLuong(itemPr.IDRandom, idRandom, soluong, isDoiTra);
            Combo_UpdateChietKhauNV(itemPr.IDRandom, idRandom, isDoiTra);
            BindCTHD_byIDRandomHD(itemPr.IDRandomHD);
        }
    }
    self.Combo_xoaHangHoa = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var idRandomHD = itemPr.IDRandomHD;
        var loaiHD = self.HoaDons().LoaiHoaDon();

        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === itemPr.IDRandom) {
                    for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                        let forIn = cthd[i].ThanhPhanComBo[j];
                        if (forIn.IDRandom === idRandom) {
                            cthd[i].ThanhPhanComBo.splice(j, 1);
                            break;
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));

            if (loaiHD === 3) {
                Update_StatusXuLy_ofHDDatHang(idRandomHD);
            }
        }
        BindCTHD_byIDRandomHD(itemPr.IDRandomHD);
    }

    self.Combo_editThue = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var $this = $(event.currentTarget);

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    if (formatNumberToFloat(itFor.GiaBan) === 0) {
                        return;
                    }
                    formatNumberObj($this);

                    let tienThue = 0, ptThue = 0;
                    let giasauCK = itFor.GiaBan - itFor.TienChietKhau;

                    let taxNew = formatNumberToFloat($this.val());
                    if ($('#taxCT_' + idRandom).hasClass('active-re')) {
                        if (taxNew > 100) {
                            taxNew = 100;
                            $this.val(100);
                        }
                        ptThue = taxNew;
                        tienThue = giasauCK * ptThue / 100;
                    }
                    else {
                        if (taxNew > giasauCK) {
                            taxNew = giasauCK;
                        }
                        tienThue = taxNew;
                    }

                    itFor.PTThue = ptThue;
                    itFor.TienThue = tienThue;
                    itFor.ThanhTien = giasauCK * itFor.SoLuong;
                    itFor.ThanhToan = (giasauCK + tienThue) * itFor.SoLuong;
                    comboDoing = itFor;

                    $('#sum-f_' + idRandom).val(formatNumber3Digit(itFor.ThanhToan));
                    $('#tax_' + idRandom).text(formatNumber3Digit(itFor.TienThue));
                    $('#tax_' + idRandom).parent().css('display', itFor.TienThue > 0 ? '' : 'none');
                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
        }
    }
    self.Combo_clickThue = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;

        var $this = $('#taxCT_' + idRandom);
        if ($this.hasClass('active-re')) {
            $this.removeClass('active-re');
        }
        else {
            $this.addClass('active-re');
        }

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            var comboDoing = null;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    if (itFor.GiaBan !== 0) {
                        let ptThue = itFor.PTThue;
                        let tienThue = itFor.TienThue;
                        if ($this.hasClass('active-re')) {
                            ptThue = tienThue / (itFor.GiaBan - itFor.TienChietKhau) * 100;
                            $('##ipTaxCT_' + idRandom).val(ptThue);
                        }
                        else {
                            ('##ipTaxCT_' + idRandom).val(formatNumber3Digit(tienThue));
                            ptThue = 0;
                        }
                        itFor.PTThue = ptThue;
                        itFor.TienThue = tienThue;
                        comboDoing = itFor;
                    }
                    break;
                }
            }
            if (comboDoing !== null) {
                UpdateThanhPhanCombo(itemPr.IDRandom, comboDoing, isDoiTra);
            }
        }
    }

    self.Combo_ShowDivSale = function (item, itemPr, isDoiTra) {
        return; // tpcombo: don't show popup chietkhau
        var role = GetRoleChangePrice(item.LoaiHoaDon);
        if (role === false) {
            return false;
        }
        var idRandom = item.IDRandom;
        var $this = $(event.currentTarget);
        var ipGiam = $('#pri-g_' + idRandom);
        var iconGiam = $('#vnd_' + idRandom);

        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    let ptGiam = itFor.PTChietKhau;
                    let tienGiam = itFor.TienChietKhau;
                    if (ptGiam > 0 || tienGiam === 0) {
                        ipGiam.val(ptGiam);
                        iconGiam.addClass('active-re');
                    }
                    else {
                        ipGiam.val(formatNumber3Digit(tienGiam));
                        iconGiam.removeClass('active-re');
                    }

                    if (itFor.PTThue > 0 || (itFor.TienThue === 0 && itFor.PTThue === 0)) {
                        $('#ipTaxCT_' + idRandom).val(itFor.PTThue);
                        $('#taxCT_' + idRandom).addClass('active-re');
                    }
                    else {
                        $('#ipTaxCT_' + idRandom).val(formatNumber3Digit(itFor.TienThue));
                        $('#taxCT_' + idRandom).removeClass('active-re');
                    }
                    break;
                }
            }
            $($this).siblings(".callprice").toggle();
            ipGiam.focus().select().focus();
        }
    }

    self.Combo_UpdateGhiChu = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var ghichu = $(event.currentTarget).val();

        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === itemPr.IDRandom) {
                    for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                        let forIn = cthd[i].ThanhPhanComBo[j];
                        if (forIn.IDRandom === idRandom) {
                            cthd[i].ThanhPhanComBo[j].GhiChu = ghichu;
                            break;
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }

    self.Combo_ShowPopChangeTPDinhLuong = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var arrTPDinhLuong = [];
        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    itFor.IDRandomPr = itemPr.IDRandom;
                    self.DichVu_isDoing(itFor);
                    vmThanhPhanDinhLuong.DichVu_isDoing = itFor;
                    arrTPDinhLuong = itFor.ThanhPhan_DinhLuong;
                    break;
                }
            }
        }
        if (arrTPDinhLuong.length === 0) {
            // get TP dinh luong by ID_QuiDoi
            let lstTPDinhLuong = $.grep(vmThanhPhanDinhLuong.All_DinhLuongDichVu, function (x) {
                return x.ID_DichVu === item.ID_DonViQuiDoi;
            });
            if (lstTPDinhLuong.length > 0) {
                for (let i = 0; i < lstTPDinhLuong.length; i++) {
                    lstTPDinhLuong[i].STT = i + 1;
                    lstTPDinhLuong[i].GhiChu = '';
                    lstTPDinhLuong[i].isDefault = false;
                    lstTPDinhLuong[i].IDRandom = 'TPDL_' + Math.floor(Math.random() * 10000000 + 1);
                    lstTPDinhLuong[i].SoLuong = self.DichVu_isDoing().SoLuong * lstTPDinhLuong[i].SoLuongMacDinh;
                    lstTPDinhLuong[i].SoLuongQuyCach = lstTPDinhLuong[i].SoLuong * lstTPDinhLuong[i].QuyCach;
                    lstTPDinhLuong[i].GiaVonAfter = lstTPDinhLuong[i].SoLuong * lstTPDinhLuong[i].GiaVon;// = GiaVon(co ban) * SoLuong
                    arrTPDinhLuong.push(lstTPDinhLuong[i]);
                }
            }
        }
        vmThanhPhanDinhLuong.ID_DonVi = id_DonVi;
        vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed = arrTPDinhLuong;
        vmThanhPhanDinhLuong.showModal(isDoiTra, true);
    }

    self.Combo_AgreeTPDinhLuong = function () {
        Update_SoLuongBanDau_forListTPDinhLuong();

        var cacheName = lcListCTHD;
        if (vmThanhPhanDinhLuong.isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            var idRandomPr = vmThanhPhanDinhLuong.DichVu_isDoing.IDRandomPr;
            if (!commonStatisJs.CheckNull(idRandomPr)) {
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandom === idRandomPr) {
                        for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                            let forIn = cthd[i].ThanhPhanComBo[j];
                            if (forIn.IDRandom === vmThanhPhanDinhLuong.DichVu_isDoing.IDRandom) {
                                forIn.ThanhPhan_DinhLuong = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed;
                                break;
                            }
                        }
                        break;
                    }
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }

    self.Combo_showPopupUserDiscount = function (item, itemPr, isDoiTra) {
        var idRandom = item.IDRandom;
        var ctDoing = FindCTHD_isDoing(itemPr, isDoiTra);
        if (ctDoing !== null) {
            var combo = ctDoing.ThanhPhanComBo;
            for (let i = 0; i < combo.length; i++) {
                let itFor = combo[i];
                if (itFor.IDRandom === idRandom) {
                    let phiDV = 0;
                    // chi tinh phiDV khi su dung
                    if (item.LaHangHoa === false && (item.LoaiHoaDon === 1 || item.LoaiHoaDon === 25 || isDoiTra)) {
                        phiDV = itFor.TongPhiDichVu;
                        phiDV = phiDV === undefined ? 0 : phiDV;
                    }
                    itFor.TongPhiDichVu = phiDV;
                    itFor.IDRandomPr = itemPr.IDRandom;

                    let thanhtien = (itFor.GiaBan - itFor.TienChietKhau) * itFor.SoLuong;
                    thanhtien = thanhtien < 0 ? 0 : thanhtien;
                    itFor.ThanhTien = thanhtien;

                    self.DichVu_isDoing(itFor);
                    vmHoaHongDV.GridNV_TVTH = itFor.BH_NhanVienThucHien;
                    vmHoaHongDV.DichVu_isDoing = itFor;
                    let loaiHD = self.HoaDons().LoaiHoaDon();
                    if (loaiHD === 6) {
                        if (self.HoaDons().MaHoaDon().indexOf('DV') > -1) {
                            loaiHD = 19;
                        }
                        else {
                            loaiHD = 1;
                        }
                    }
                    vmHoaHongDV.inforHoaDon.LoaiHoaDon = loaiHD;
                    vmHoaHongDV.showModal(itFor, isDoiTra, true);
                    break;
                }
            }
        }
    }

    self.Combo_AgreeNhanVienTVTH = function () {
        var nvTH = '';
        var nvTV = '';
        var nvTH_Print = '';
        var nvTV_Print = '';
        for (let i = 0; i < vmHoaHongDV.GridNV_TVTH.length; i++) {
            let itemFor = vmHoaHongDV.GridNV_TVTH[i];
            let dvtCK = ' đ';
            let valCK = formatNumber3Digit(itemFor.TienChietKhau);
            if (itemFor.PT_ChietKhau > 0) {
                dvtCK = ' %';
                valCK = formatNumber3Digit(itemFor.PT_ChietKhau);
            }
            switch (itemFor.TacVu) {
                case 1: // thuchien
                case 3: // thuchien theoyc
                    nvTH += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                    nvTH_Print += itemFor.TenNhanVien + ', ';
                    break;
                case 2: // tuvan
                case 4: // bangoi
                    nvTV += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                    nvTV_Print += itemFor.TenNhanVien + ', ';
                    break;
            }
        }

        var cacheName = lcListCTHD;
        if (vmHoaHongDV.isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }

        nvTH = nvTH !== '' ? 'Thực hiện: ' + Remove_LastComma(nvTH) : '';
        nvTH_Print = nvTH_Print !== '' ? Remove_LastComma(nvTH_Print) : '';
        nvTV = nvTV !== '' ? 'Tư vấn: ' + Remove_LastComma(nvTV) : '';
        nvTV_Print = nvTV_Print !== '' ? Remove_LastComma(nvTV_Print) : '';

        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            var idRandomPr = vmHoaHongDV.DichVu_isDoing.IDRandomPr;
            if (!commonStatisJs.CheckNull(idRandomPr)) {
                let tinhHoaHongtruocCK = vmHoaHongDV.TinhHoaHongTruocCK ? 1 : 0;
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandom === idRandomPr) {
                        for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                            let forIn = cthd[i].ThanhPhanComBo[j];
                            if (forIn.IDRandom === vmHoaHongDV.DichVu_isDoing.IDRandom) {
                                forIn.GhiChu_NVThucHien = nvTH;
                                forIn.GhiChu_NVThucHienPrint = nvTH_Print;
                                forIn.GhiChu_NVTuVan = nvTV;
                                forIn.GhiChu_NVTuVanPrint = nvTV_Print;
                                forIn.HoaHongTruocChietKhau = tinhHoaHongtruocCK;
                                forIn.BH_NhanVienThucHien = vmHoaHongDV.GridNV_TVTH;
                                break;
                            }
                        }
                        break;
                    }
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
        if (vmHoaHongDV.isDoiTra) {
            Bind_CTHĐoiTra_afterHideColumn();
        }
        else {
            BindCTHD_byIDRandomHD(self.HoaDons().IDRandom());
        }
        HideShow_Icon_ChietKhauNV();
    }

    function ChangeSoLuongParent_UpdateCombo(idRandom, soluong, isDoiTra, typeEdit = 0) {// typeEdit= 1: editsoluong
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === idRandom) {
                    for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                        let forIn = cthd[i].ThanhPhanComBo[j];
                        let slCombo = forIn.SoLuongMacDinh * soluong;
                        forIn.SoLuong = slCombo;
                        forIn.SoLuongQuyCach = slCombo * forIn.QuyCach;

                        if (parseInt(forIn.ChatLieu) !== 4) {
                            forIn.ThanhTien = slCombo * (forIn.DonGia - forIn.TienChietKhau);
                            forIn.ThanhToan = slCombo * (forIn.DonGia - forIn.TienChietKhau + forIn.TienThue);
                            if (forIn.LaPTPhiDichVu) {
                                forIn.TongPhiDichVu = Math.round(forIn.PhiDichVu * forIn.DonGia * forIn.SoLuong / 100);
                            }
                            else {
                                forIn.TongPhiDichVu = forIn.PhiDichVu * forIn.SoLuong;
                            }
                        }

                        if (typeEdit === 1) {
                            if (isDoiTra) {
                                $('#numberTH_' + forIn.IDRandom).val(formatNumber3Digit(forIn.SoLuong));
                                $('#sumTH_' + forIn.IDRandom).val(formatNumber3Digit(forIn.ThanhToan));
                            }
                            else {
                                $('#munber_' + forIn.IDRandom).val(formatNumber3Digit(forIn.SoLuong));
                                $('#sum-f_' + forIn.IDRandom).val(formatNumber3Digit(forIn.ThanhToan));
                            }
                        }

                        for (let k = 0; k < forIn.ThanhPhan_DinhLuong.length; k++) {
                            let itemTP = forIn.ThanhPhan_DinhLuong[k];
                            let slTPhan = itemTP.SoLuongMacDinh * forIn.SoLuong;
                            forIn.ThanhPhan_DinhLuong[k].SoLuong = slTPhan;
                            forIn.ThanhPhan_DinhLuong[k].SoLuongQuyCach = slTPhan * itemTP.QuyCach;
                            forIn.ThanhPhan_DinhLuong[k].GiaVonAfter = slTPhan * itemTP.GiaVon;
                        }

                        if (forIn.BH_NhanVienThucHien.length > 0) {
                            let tongPhiDV = forIn.TongPhiDichVu;
                            if (forIn.LoaiHoaDon === 19) {
                                tongPhiDV = 0;
                            }
                            let gtriTinh = 0;
                            if (forIn.HoaHongTruocChietKhau === 1) {
                                gtriTinh = forIn.DonGia * forIn.SoLuong;
                            }
                            else {
                                gtriTinh = (forIn.DonGia - forIn.TienChietKhau) * forIn.SoLuong;
                            }
                            gtriTinh = gtriTinh - tongPhiDV;
                            gtriTinh = gtriTinh < 0 ? 0 : gtriTinh;

                            for (let k = 0; k < forIn.BH_NhanVienThucHien.length; k++) {
                                let nvien = forIn.BH_NhanVienThucHien[k];
                                let tienCKNew = nvien.ChietKhauMacDinh * forIn.SoLuong * nvien.HeSo;
                                if (nvien.PT_ChietKhau > 0) {
                                    tienCKNew = Math.round(gtriTinh * nvien.PT_ChietKhau / 100) * nvien.HeSo;
                                }
                                cthd[i].ThanhPhanComBo[j].BH_NhanVienThucHien[k].TienChietKhau = tienCKNew;
                            }
                            forIn = CTHD_GetGhiChu_NVTuVanTH(forIn);
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }

    function Combo_UpdateSoLuong_TPDinhLuong(idRandomPr, idRandom, soluong, isDoiTra) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === idRandomPr) {
                    for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                        let forIn = cthd[i].ThanhPhanComBo[j];
                        if (forIn.IDRandom === idRandom) {
                            for (let k = 0; k < forIn.ThanhPhan_DinhLuong.length; k++) {
                                let itemTP = forIn.ThanhPhan_DinhLuong[k];
                                let soluongAfter = itemTP.SoLuongMacDinh * soluong;
                                forIn.ThanhPhan_DinhLuong[k].SoLuong = soluongAfter;
                                forIn.ThanhPhan_DinhLuong[k].SoLuongQuyCach = soluongAfter * itemTP.QuyCach;
                                forIn.ThanhPhan_DinhLuong[k].GiaVonAfter = soluongAfter * itemTP.GiaVon;
                            }
                            break;
                        }
                    }
                    break;
                }
            }
            localStorage.setItem(cacheName, JSON.stringify(cthd));
        }
    }

    function Combo_UpdateChietKhauNV(idRandomPr, idRandom, isDoiTra) {
        var cacheName = lcListCTHD;
        if (isDoiTra) {
            cacheName = lcListCTHD_DoiTra;
        }
        var cthd = localStorage.getItem(cacheName);
        if (cthd !== null) {
            cthd = JSON.parse(cthd);
            for (let i = 0; i < cthd.length; i++) {
                if (cthd[i].IDRandom === idRandomPr) {
                    for (let j = 0; j < cthd[i].ThanhPhanComBo.length; j++) {
                        let forIn = cthd[i].ThanhPhanComBo[j];
                        if (forIn.IDRandom === idRandom) {
                            if (forIn.BH_NhanVienThucHien.length > 0) {
                                let tongPhiDV = forIn.TongPhiDichVu;
                                if (forIn.LoaiHoaDon === 19) {
                                    tongPhiDV = 0;
                                }

                                let gtriTinh = 0;
                                if (forIn.HoaHongTruocChietKhau === 1) {
                                    gtriTinh = forIn.DonGia * forIn.SoLuong;
                                }
                                else {
                                    gtriTinh = (forIn.DonGia - forIn.TienChietKhau) * forIn.SoLuong;
                                }
                                gtriTinh = gtriTinh - tongPhiDV;
                                gtriTinh = gtriTinh < 0 ? 0 : gtriTinh;

                                for (let k = 0; k < forIn.BH_NhanVienThucHien.length; k++) {
                                    let nvien = forIn.BH_NhanVienThucHien[k];
                                    let tienCKNew = nvien.ChietKhauMacDinh * forIn.SoLuong * nvien.HeSo;
                                    if (nvien.PT_ChietKhau > 0) {
                                        tienCKNew = Math.round(gtriTinh * nvien.PT_ChietKhau / 100) * nvien.HeSo;
                                    }
                                    cthd[i].ThanhPhanComBo[j].BH_NhanVienThucHien[k].TienChietKhau = tienCKNew;
                                }
                                forIn = CTHD_GetGhiChu_NVTuVanTH(forIn);
                            }
                            break;
                        }
                    }
                    break;
                }
            }
        }
        localStorage.setItem(cacheName, JSON.stringify(cthd));
    }

    $('#vmThanhPhanCombo').on('hidden.bs.modal', function () {
        if (vmThanhPhanCombo.saveOK) {
            var ctDoing = vmThanhPhanCombo.DichVu_isDoing;
            var lst = vmThanhPhanCombo.ListCombo;
            // format again
            for (let i = 0; i < lst.length; i++) {
                lst[i].SoLuong = formatNumberToFloat(lst[i].SoLuong);
                lst[i].DonGia = formatNumberToFloat(lst[i].DonGia);
                lst[i].GiaBan = formatNumberToFloat(lst[i].GiaBan);
                lst[i].ThanhTien = formatNumberToFloat(lst[i].ThanhTien);
                lst[i].ThanhToan = formatNumberToFloat(lst[i].ThanhToan);
            }

            var cacheName = lcListCTHD;
            if (vmThanhPhanCombo.isDoiTra) {
                cacheName = lcListCTHD_DoiTra;
            }
            var cthd = localStorage.getItem(cacheName);
            if (cthd !== null) {
                cthd = JSON.parse(cthd);
                for (let i = 0; i < cthd.length; i++) {
                    if (cthd[i].IDRandom === ctDoing.IDRandom) {
                        cthd[i].ThanhPhanComBo = lst;
                        break;
                    }
                }
                localStorage.setItem(cacheName, JSON.stringify(cthd));
            }
            if (self.HoaDons().LoaiHoaDon() === 3 && self.HoaDons().ID() !== const_GuidEmpty) {
                Update_StatusXuLy_ofHDDatHang(ctDoing.IDRandomHD);
            }
            // update tpdluong, ck nvien
            ChangeSoLuongParent_UpdateCombo(ctDoing.IDRandom, ctDoing.SoLuong, vmThanhPhanCombo.isDoiTra);
            BindCTHD_byIDRandomHD(ctDoing.IDRandomHD);
        }
    })

    $('#ThongTinThanhToanKHNCC').on('hidden.bs.modal', function () {
        if (vmThanhToanGara.saveOK) {
            self.agreePay();
        }
    })

    $('#vmUpAnhHoaDon').on('hidden.bs.modal', function () {
        if (vmUpAnhHoaDon.saveOK) {

        }
    })

    window.addEventListener("storage", function () {
        if (localStorage.getItem('IdDonVi') === null) {
            localStorage.setItem('IdDonVi', id_DonVi);
        }
        else {
            if (localStorage.getItem('IdDonVi') !== id_DonVi) {
                window.location.reload(true);
            }
        }
    }, false);
}
HUbChat.client.returnLoadSoDoPhong = function (url) {
    if (window.location.host.indexOf(url) >= 0 && $('#banhangsodo').css('display') !== 'none') {
        $("#banhangsodo").trigger("LoadSoDoPhong");
    }
};
// use upload file
var FileModel = function (filef, srcf) {
    var self = this;
    this.file = filef;
    this.URLAnh = srcf;
};
var newModelBanLe = new NewModel_BanHangLe();
ko.applyBindings(newModelBanLe, document.getElementById('divPage'));
var partialProduct = new PartialAddProduct();
ko.applyBindings(partialProduct, document.getElementById('partial_product_group'));
var partialCalendar = new PartialCalendar();
ko.applyBindings(partialCalendar, document.getElementById('partialCalendar'));

ko.observableArray.fn.refresh = function () {
    var data = this().slice(0);
    this([]);
    this(data);
};

var DateNgaySinh;
function refreshDate() {
    DateNgaySinh = $("#txtNgaySinh").datepicker({
        //showOn: 'focus',
        altFormat: "dd/mm/yy",
        buttonImage: '/Content/images/icon/ngaysinh.png',
        showOn: "button",
        buttonImageOnly: true,
        dateFormat: "dd/mm/yy"
    });
}
var _maHoaDon = '';
function ShowSearchDT() {
    $('.user-choose').css('display', 'none');
    $('#divSearchKH').css('display', '');
    $('#divKhachLe').hide();
}
function HideSearchDT() {
    $('#divSearchKH').css('display', 'none');
    $('.user-choose').show();
}
function SetCheckAll(obj) {
    var isChecked = $(obj).is(":checked");
    $('input[type=checkbox]').each(function () {
        $(this).prop('checked', isChecked);
    })
    $('#ckAllNhom').removeClass('squarevt');
}
function RemoveCheck() {
    $('input[type=checkbox]').each(function () {
        $(this).prop('checked', false);
    })
}
$('input[type=text]').click(function () {
    $(this).select();
});
function getNumber(e, obj) {
    var elementAfer = $(obj).next();
    if (!elementAfer.hasClass('active-re')) {
        // chi cho phep nhap so
        return keypressNumber(e);
    }
    else {
        var keyCode = window.event.keyCode || e.which;
        if (keyCode < 48 || keyCode > 57) {
            // cho phep nhap dau .
            if (keyCode === 8 || keyCode === 127 || keyCode === 46) {
                return;
            }
            return false;
        }
    }
}
function HideLostFocust() {
    $('#showseach, #showseach_nguoiGT, #showseach_Kh, #showseach_KhPT').delay(300).hide(0, function () {
    });
}

$(function () {
    $(window.document).on('shown.bs.modal', '.modal', function () {
        window.setTimeout(function () {
            $('[autofocus]', this).focus();
            $('[autofocus]').select();
        }.bind(this), 100);
    });
})
function focustextBox(ele) {
    if (window.innerWidth > 1024) {
        ele.select()
    }
}