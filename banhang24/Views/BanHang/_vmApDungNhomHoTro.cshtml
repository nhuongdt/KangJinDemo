<style>
    #vmApDungNhomHoTro th {
        text-align: center;
        vertical-align: middle
    }

    #vmApDungNhomHoTro .span-group {
        font-size: 14px;
        color: var(--color-main);
        text-decoration: underline
    }

    #vmApDungNhomHoTro .td-stt {
        width: 5%;
    }

    #vmApDungNhomHoTro .td-action {
        width: 15%;
    }

    #vmApDungNhomHoTro .span-i {
        font-size: 15px;
    }

    #vmApDungNhomHoTro table input[type=text] {
        border: none;
        outline: none;
        border-bottom: 1px solid #ccc !important
    }

    #vmApDungNhomHoTro table .td-input-bottom {
        vertical-align: bottom;
    }

    #vmApDungNhomHoTro .number {
        width: 15%;
    }

    #vmApDungNhomHoTro .ghichubr {
        width: 100%;
        padding: 0px !important;
        text-align: left;
        font-style: italic;
        font-size: 12px !important;
        color: blue;
    }
</style>
<div id="vmApDungNhomHoTro" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button class="close close-modal" type="button" data-dismiss="modal">×</button>
                <h4 class="modal-title">{{typeUpdate == 0?'Hóa đơn hỗ trợ':'Áp dụng hỗ trợ'}}</h4>
            </div>

            <div class="modal-body">
                <div>
                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <label class="span-group">Thông tin hóa đơn</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Mã hóa đơn:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                <input type="text" class="form-control" v-model="InvoiceChosing.MaHoaDon" readonly placeholder="Mã tự động" />
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Khách hàng:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                <customers :text-search="InvoiceChosing.TenDoiTuong"
                                           :loai-doi-tuong="1"
                                           :disable-search="typeUpdate == 2"
                                           :id-chi-nhanh="inforLogin.ID_DonVi"
                                           v-on:reset-customer-parent="$root.ResetCustomer"
                                           v-on:change-customer-parent="$root.ChangeCustomer">
                                </customers>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Ngày lập:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                <my-date-time :date-chose="InvoiceChosing.NgayLapHoaDon"
                                              :role-change-date="$root.roleChangeNgayLapHD"
                                              v-on:change-date="ChangeNgayLapHoaDon">
                                </my-date-time>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Người tạo:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                {{InvoiceChosing.NguoiTao}}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group" v-if="typeUpdate !== 0">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <span class="span-group">Chọn nhóm áp dụng</span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <div class="table-reponsive table_price table_error table-frame">
                            <table class="table">
                                <thead class="thead-boder">
                                    <tr>
                                        <th class="td-stt">#</th>
                                        <th>Tên  nhóm hàng hóa (dịch vụ)</th>
                                        <th style="width: 15%">Xuất ngày thuốc</th>
                                        <th style="width: 10%">Số ngày</th>
                                        <th style="width: 30%">Ghi chú</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(item, index) in NhomHangEnoughCondition">
                                        <td class="text-center">
                                            <input type="radio" name="rdoApply" value="true" v-model="item.IsApply"
                                                   v-on:change="ChoseNhomApply(index,item)" />
                                        </td>
                                        <td>
                                            {{item.TenNhomHangHoa}}
                                        </td>
                                        <td class="text-center">
                                            <input type="checkbox" value="true" v-model="item.IsXuatNgayThuoc"
                                                   v-bind:disabled="!item.IsApply"
                                                   v-on:change="ChangeCheck_XuatNgayThuoc(index)" />
                                        </td>
                                        <td>
                                            <input class="form-control text-right" onkeypress="keypressNumber_limitNumber(event,this)"
                                                   v-bind:disabled="!item.IsXuatNgayThuoc"
                                                   v-on:keyup="EditNgayThuoc(index)"
                                                   v-model="item.SoNgayThuoc" />
                                        </td>
                                        <td>
                                            <input class="form-control"
                                                   v-model="item.GhiChu"
                                                   v-on:keyup="EditGhiChu(index)" />
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <span class="span-group">Sản phẩm hỗ trợ chung</span>
                    </div>
                </div>
                <div class="form-group margin-top-10" v-if="typeUpdate !== 0">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <div class="css-form-detail">
                            <products :con-ton-kho="0"
                                      :loai-hang-hoa="1"
                                      :show-gia-von="true"
                                      :show-image="false"
                                      :show-ton-kho="false"
                                      :id-chi-nhanh="inforLogin.ID_DonVi"
                                      :role-add="false"
                                      :have-condition="true"
                                      :list-all="listData.AllPublicProducts"
                                      v-on:chose-product="ChoseProduct_Public">
                            </products>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12" v-if="PublicProducts.length > 0">
                        <div class="table-reponsive table_price table_error table-frame"
                             style=" overflow: auto; max-height: 400px">
                            <table class="table">
                                <thead class="thead-boder">
                                    <tr>
                                        <th>Tên dịch vụ</th>
                                        <th class="number">Số lượng</th>
                                        <th class="td-action">
                                            <span class="span-i red" style="cursor:pointer" title="Xóa tất cả" v-on:click="PublicProducts_RemoveAll">
                                                <i class="fal fa-times"></i>
                                            </span>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(item, index) in PublicProducts">
                                        <td>
                                            <span>
                                                <span>
                                                    {{item.TenHangHoa}}
                                                </span>
                                                <span class="blue" v-if="item.TenDonViTinh">
                                                    ({{item.TenDonViTinh}})
                                                </span>
                                            </span><br />
                                            <input type="text" placeholder="Ghi chú" class="ghichubr"
                                                   v-on:keyup.13="Enter_FocusNext(0)"
                                                   v-model="item.GhiChu"
                                                   v-on:keyup="PublicProducts_EditGhiChu(index)" />
                                            <span v-if="item.BH_NhanVienThucHien.length > 0">
                                                <span>NVTH:</span>
                                                <span> {{item.BH_NhanVienThucHien.map(function(x){return x.TenNhanVien}).toString(',')}}</span>
                                            </span>
                                        </td>
                                        <td class="td-input-bottom">
                                            <input type="text"
                                                   class="form-control text-right"
                                                   onkeypress="keypressNumber_limitNumber(event,this)"
                                                   onclick="this.select()"
                                                   v-model="item.TienChietKhau"
                                                   v-on:keyup.13="Enter_FocusNext(1)"
                                                   v-on:keyup="PublicProducts_EditTienChietKhau(index, item)" />
                                        </td>
                                        <td class="text-center td-action td-input-bottom">
                                            <a>
                                                <span class="span-i" v-on:click="PublicProducts_Remove(index, item)" title="Xóa dòng">
                                                    <i class="fal fa-times"></i>
                                                </span>  &nbsp;
                                                <span class="span-i" title="Hoa hồng nhân viên"
                                                      v-if="roleCapNhatHoaHongDichVu"
                                                      v-on:click="showModal_HoaHongNV(item)">
                                                    <i class="fa fa-user"></i>
                                                </span>&nbsp;
                                                <span class="span-i" title="Thành phần định lượng"
                                                      v-on:click="showModalTPDL(item)"
                                                      v-if="item.LoaiHangHoa == 2 && $root.roleChangeDinhLuong_NeuKhacNgay">
                                                    <i class="fa fa-list-alt"></i>
                                                </span>
                                            </a>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div v-if="NhomHangApply.IsXuatNgayThuoc">
                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <span class="span-group">Sản phẩm hỗ trợ theo ngày thuốc</span>
                        </div>
                    </div>
                    <div class="form-group margin-top-10" v-if="typeUpdate !== 0">
                        <div class="col-sm-7 col-md-7 col-lg-7 col-xs-7">
                            <div class="css-form-detail">
                                <products :con-ton-kho="0"
                                          :loai-hang-hoa="1"
                                          :show-gia-von="true"
                                          :show-image="false"
                                          :show-ton-kho="false"
                                          :id-chi-nhanh="inforLogin.ID_DonVi"
                                          :role-add="false"
                                          :have-condition="true"
                                          :list-all="listData.AllDayProducts"
                                          v-on:chose-product="ChoseProduct_Day">
                                </products>
                            </div>
                        </div>
                        <div class="col-sm-5 col-md-5 col-lg-5 col-xs-5">
                            <label>
                                <input type="checkbox" v-model="$root.NhomHangApply.IsChuyenPhatNhanh" /> Chuyển phát nhanh
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12" v-if="DayProducts.length > 0">
                            <div class="table-reponsive table_price table_error table-frame"
                                 style=" overflow: auto; max-height: 400px">
                                <table class="table">
                                    <thead class="thead-boder">
                                        <tr>
                                            <th>Tên hàng hóa</th>
                                            <th class="number">Số lượng/ngày</th>
                                            <th class="number">Tổng xuất</th>
                                            <th class="td-stt">
                                                <span class="span-i red" style="cursor:pointer" title="Xóa tất cả" v-on:click="DayProducts_RemoveAll">
                                                    <i class="fal fa-times"></i>
                                                </span>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for="(item, index) in DayProducts">
                                            <td>
                                                <span>
                                                    <span>
                                                        {{item.TenHangHoa}}
                                                    </span>
                                                    <span class="blue" v-if="item.TenDonViTinh">
                                                        ({{item.TenDonViTinh}})
                                                    </span>
                                                </span><br />
                                                <input type="text" placeholder="Ghi chú" class="ghichubr"
                                                       v-on:keyup.13="Enter_FocusNext(0)"
                                                       v-on:keyup="DayProducts_EditGhiChu(index)" />

                                            </td>
                                            <td class="td-input-bottom">
                                                <input type="text"
                                                       class="form-control text-right"
                                                       onkeypress="keypressNumber_limitNumber(event,this)"
                                                       onclick="this.select()"
                                                       v-model="item.TienChietKhau"
                                                       v-on:keyup.13="Enter_FocusNext(1)"
                                                       v-on:keyup="DayProducts_EditTienChietKhau(index)" />
                                            </td>
                                            <td class="td-input-bottom">
                                                <input type="text"
                                                       class="form-control text-right"
                                                       onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-on:keyup.13="Enter_FocusNext(2)"
                                                       v-model="item.SoLuong"
                                                       readonly />
                                            </td>
                                            <td class="text-center td-stt td-input-bottom">
                                                <a>
                                                    <span class="span-i" v-on:click="DayProducts_Remove(index, item)" title="Xóa dòng">
                                                        <i class="fal fa-times"></i>
                                                    </span>  &nbsp;
                                                </a>
                                            </td>
                                        </tr>
                                    </tbody>
                                    <tfoot>
                                        <tr class="bg12 bold">
                                            <td colspan="2" class="text-left">Tổng cộng</td>
                                            <td class="text-right">{{formatNumber3Digit(TongXuatNgayThuoc)}}</td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="container-fluid">
                    <button type="button" class="btn btn-cancel" data-dismiss="modal">
                        <i class="fal fa-ban"></i> {{typeUpdate == 0?'Đóng':'Bỏ qua'}}
                    </button>
                    <button type="button" class="btn btn-main" v-if="!isLoading && typeUpdate!== 0"
                            v-on:click="Agree">
                        <i class="fa fa-save"></i> {{typeUpdate==1?'Lưu':'Cập nhật'}}
                    </button>
                    <button type="button" class="btn btn-main" v-if="isLoading">
                        <i class="fa fa-save"></i> Đang lưu
                    </button>
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    var vmApDungNhomHoTro = new Vue({
        el: '#vmApDungNhomHoTro',
        components: {
            'products': cmpChoseProduct,
            'my-date-time': cpmDatetime,
            'customers': cmpChoseCustomer,
        },
        created: function () {
            var self = this;
            self.UrlAPI = {
                NhomHang: '/api/DanhMuc/DM_NhomHangHoaAPI/',
                HoaDon: '/api/DanhMuc/BH_HoaDonAPI/',
            }

            self.inforLogin = {
                ID_DonVi: $('#txtDonVi').val(),
                ID_NhanVien: $('#txtIDNhanVien').val(),
                UserLogin: $('#txtUserLogin').val(),
            }

            if (commonStatisJs.CheckNull(self.inforLogin.ID_DonVi)) {
                self.inforLogin = {
                    ID_DonVi: VHeader.IdDonVi,
                    ID_NhanVien: VHeader.IdNhanVien,
                    UserLogin: VHeader.UserLogin,
                };

                // Chỉ check quyền này khi cạp nhật hóa đơn hỗ trợ
                let hhDV = $.grep(VHeader.Quyen, function (x) {
                    return x === 'BanHang_HoaDongDichVu_CapNhat';
                })
                self.roleCapNhatHoaHongDichVu = hhDV.length > 0;
                self.roleChangeDinhLuong = VHeader.Quyen.indexOf('HoaDon_ThayDoiThanhPhanDinhLuong') > -1;
                self.roleChangeDinhLuong_NeuKhacNgay = VHeader.Quyen.indexOf('HoaDon_ThayDoiThanhPhanDinhLuong_NeuKhacNgay') > -1;
                self.roleChangeNgayLapHD = VHeader.Quyen.indexOf('HoaDon_ThayDoiThoiGian') > -1;
            }
            console.log('vmApDungNhomHoTro')
            self.GetListNhomHang_SetupHotro();
        },
        data: {
            saveOK: false,
            isLoading: false,
            typeUpdate: 1,// 1.insert, 2.update, 0.view
            typeProduct: 1,// 1.sp ngaythuoc, 0. sp chung

            roleChangeDinhLuong: true,
            roleChangeDinhLuong_NeuKhacNgay: true,
            roleCapNhatHoaHongDichVu: true,
            roleChangeNgayLapHD: false,
            roleUpdate_ifOtherDate: false,

            listData: {
                AllNhomHangs: [],
                AllPublicProducts: [],
                AllDayProducts: [],
                NhomHang_TongSuDung: [],
            },

            inforOld: {
                HoaDon: {},
                NhomHang: {},
                SanPham: [],
            },

            NhomHangApply: {
                TenNhomHangHoa: '', Id_NhomHang: null, IsXuatNgayThuoc: false, SoNgayThuoc: 0,
                IsChuyenPhatNhanh: false,
                GhiChu: '',
            },
            PublicProducts: [],
            DayProducts: [],
            NhomHangEnoughCondition: [],

            TongXuatNgayThuoc: 0,
            TongXuatChung: 0,

            newHDHoaTro: {
                IDRandomHD: '',
                ID_NhomHang: null,
                SoNgayThuoc: '',
                IsXuatNgayThuoc: false,
                SPChung: [],
                SPNgayThuoc: [],
                // used to save diary
                TenNhomHangHoa: '',
                MaDoiTuong: '',
                TenDoiTuong: '',
            },

            InvoiceChosing: {
                ID: null,
                IDRandom: null,
                ID_DonVi: null,
                ID_DoiTuong: null,
                SoNgayThuoc: '',
                MaDoiTuong: '',
                TenDoiTuong: '',
                MaHoaDon: '',
                NgayLapHoaDon: '',
                NguoiTao: '',
            }
        },
        methods: {
            GetListNhomHang_SetupHotro: function () {
                let self = this;
                self.listData.AllNhomHangs = [];
                let param = {
                    IDChiNhanhs: [self.inforLogin.ID_DonVi]
                }
                ajaxHelper(self.UrlAPI.NhomHang + 'GetListNhomHang_SetupHoTro', 'POST', param).done(function (x) {
                    if (x.res) {
                        self.listData.AllNhomHangs = x.dataSoure;
                    }
                })
            },
            GetTongGiaTriSuDung_ofKhachHang: function (idCus, toDate = null) {// call when change cus at banle
                let self = this;
                self.listData.NhomHang_TongSuDung = [];
            },
            NhomHang_GetListSanPhamHoTro: function () {
                let self = this;
                if (!commonStatisJs.CheckNull(self.NhomHangApply.Id_NhomHang)) {
                    $.getJSON(self.UrlAPI.NhomHang + 'NhomHang_GetListSanPhamHoTro?idNhom=' + self.NhomHangApply.Id_NhomHang).done(function (x) {
                        let sp_public = [], sp_day = [];
                        if (x.res) {
                            sp_public = $.grep(x.dataSoure, function (x1) {
                                return x1.LaSanPhamNgayThuoc === 0;
                            });
                            sp_day = $.grep(x.dataSoure, function (x1) {
                                return x1.LaSanPhamNgayThuoc === 1;
                            });
                        }
                        self.listData.AllPublicProducts = sp_public;
                        self.listData.AllDayProducts = sp_day;
                    })
                }
                else {
                    self.listData.AllPublicProducts = [];
                    self.listData.AllDayProducts = [];
                }
            },
            ChoseNhomApply: function (index, item) {
                let self = this;
                let $this = $(event.currentTarget);
                let isCheck = $this.is(':checked');

                // change nhom
                if (item.Id_NhomHang !== self.NhomHangApply.Id_NhomHang) {
                    self.NhomHangApply.IsXuatNgayThuoc = true;
                    self.NhomHangApply.SoNgayThuoc = '';
                    self.NhomHangApply.TenNhomHangHoa = item.TenNhomHangHoa;
                    self.NhomHangApply.Id_NhomHang = item.Id_NhomHang;
                    self.NhomHangApply.IsChuyenPhatNhanh = false;

                    // reset product
                    self.PublicProducts = [];
                    self.DayProducts = [];

                    // reset cache
                    let hdHoTro = localStorage.getItem('hdHoTro');
                    if (hdHoTro != null) {
                        hdHoTro = JSON.parse(hdHoTro);
                    }
                    else {
                        hdHoTro = [];
                    }

                    for (let i = 0; i < hdHoTro.length; i++) {
                        if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                            hdHoTro[i].SPChung = [];
                            hdHoTro[i].SPNgayThuoc = [];
                            hdHoTro[i].IsXuatNgayThuoc = true;
                            hdHoTro[i].SoNgayThuoc = '';
                            hdHoTro[i].ID_NhomHang = item.Id_NhomHang;
                            hdHoTro[i].TenNhomHangHoa = item.TenNhomHangHoa;
                            hdHoTro[i].IsChuyenPhatNhanh = false;
                            break;
                        }
                    }
                    localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));

                    for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                        if (i === index) {
                            self.NhomHangEnoughCondition[i].IsApply = isCheck;
                            self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = true;// default xuatngaythuoc
                        }
                        else {
                            self.NhomHangEnoughCondition[i].IsApply = false;
                            self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = false;
                            self.NhomHangEnoughCondition[i].SoNgayThuoc = '';
                        }
                    }
                    self.NhomHang_GetListSanPhamHoTro();
                }
            },
            ChangeCheck_XuatNgayThuoc: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                let isCheck = $this.is(':checked');
                if (!isCheck) {
                    self.DayProducts = [];
                    self.NhomHangApply.SoNgayThuoc = '';
                    self.NhomHangApply.IsChuyenPhatNhanh = false;
                    self.NhomHangApply.GhiChu = '';
                }
                self.NhomHangApply.IsXuatNgayThuoc = isCheck;

                for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                    if (i === index) {
                        self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = isCheck;
                        self.NhomHangEnoughCondition[i].SoNgayThuoc = '';
                        self.NhomHangEnoughCondition[i].GhiChu = '';
                        break;
                    }
                }
            },
            NhomHangEnoughCondition_getAll: function () {
                // get all nhom (khong can check dieu kien)
                let self = this;
                let arrIDNhom = [];
                for (let i = 0; i < self.listData.AllNhomHangs.length; i++) {
                    let forIn = self.listData.AllNhomHangs[i];
                    if ($.inArray(forIn.Id_NhomHang, arrIDNhom) === -1) {
                        arrIDNhom.push(forIn.Id_NhomHang);
                        let obj = {
                            Id_NhomHang: forIn.Id_NhomHang,
                            TenNhomHangHoa: forIn.TenNhomHangHoa,
                            SoNgayThuoc: '',
                            IsXuatNgayThuoc: false,
                            IsApply: false,
                            GhiChu: '',
                        }
                        self.NhomHangEnoughCondition.push(obj);
                    }
                }

                let nhomApply = self.NhomHangApply;
                if (!commonStatisJs.CheckNull(nhomApply.Id_NhomHang)) {
                    for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                        if (self.NhomHangEnoughCondition[i].Id_NhomHang === nhomApply.Id_NhomHang) {
                            self.NhomHangEnoughCondition[i].IsApply = true;
                            self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = nhomApply.IsXuatNgayThuoc;
                            self.NhomHangEnoughCondition[i].SoNgayThuoc = nhomApply.SoNgayThuoc;
                            self.NhomHangEnoughCondition[i].GhiChu = nhomApply.GhiChu;
                            break;
                        }
                    }
                }
            },
            CheckOtherDate: function () {
                let self = this;
                let role = false;
                if (self.typeUpdate === 1) {
                    role = true;
                }
                else {
                    role = VHeader.Quyen.indexOf('GiaoDich_ChoPhepSuaDoiChungTu_NeuKhacNgayHienTai') > -1;
                }
                let now = moment(new Date()).format('YYYY-MM-DD');
                let ngaylap = moment(self.InvoiceChosing.NgayLapHoaDon, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD');
                if (now === ngaylap) {// neu trung ngay: luon co quyen sua
                    role = true;
                }
                self.roleUpdate_ifOtherDate = role;
            },
            showModal: function (hdChosing) {// check nhom dudk at banle.js
                let self = this;
                self.saveOK = false;
                self.isLoading = false;
                self.roleUpdate_ifOtherDate = true;
                self.typeUpdate = 1;
                self.TongXuatNgayThuoc = 0;
                self.TongXuatChung = 0;
                self.NhomHangApply = {
                    TenNhomHangHoa: '', Id_NhomHang: null, IsXuatNgayThuoc: false, SoNgayThuoc: 0,
                    IsChuyenPhatNhanh: false, GhiChu: '',
                };
                self.PublicProducts = [];
                self.DayProducts = [];
                self.NhomHangEnoughCondition = [];
                self.InvoiceChosing = hdChosing;
                self.InvoiceChosing.NgayLapHoaDon = moment(new Date()).format('YYYY-MM-DD HH:mm');

                self.inforOld = {
                    HoaDon: {},
                    NhomHang: {},
                    SanPham: [],
                };
                self.NhomHangEnoughCondition_getAll();

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                let exist = false;
                for (let i = 0; i < hdHoTro.length; i++) {
                    let itFor = hdHoTro[i];
                    if (itFor.IDRandomHD === hdChosing.IDRandom) {
                        exist = true;
                        self.newHDHoaTro.ID_NhomHang = itFor.ID_NhomHang;
                        self.newHDHoaTro.SoNgayThuoc = itFor.SoNgayThuoc;
                        self.newHDHoaTro.IsXuatNgayThuoc = itFor.IsXuatNgayThuoc;
                        self.newHDHoaTro.SPChung = itFor.SPChung;
                        self.newHDHoaTro.SPNgayThuoc = itFor.SPNgayThuoc;
                        self.newHDHoaTro.TenNhomHangHoa = itFor.TenNhomHangHoaa;
                        self.newHDHoaTro.MaDoiTuong = itFor.MaDoiTuong;
                        self.newHDHoaTro.TenDoiTuong = itFor.TenDoiTuong;

                        self.NhomHangApply.IsChuyenPhatNhanh = itFor.IsChuyenPhatNhanh;
                        self.NhomHangApply.GhiChu = itFor.GhiChu;

                        self.PublicProducts = itFor.SPChung;
                        self.DayProducts = itFor.SPNgayThuoc;
                        break;
                    }
                }

                if (self.NhomHangEnoughCondition.length > 0) {
                    if (!exist) {
                        self.NhomHangEnoughCondition[0].IsApply = false;
                        self.NhomHangEnoughCondition[0].IsXuatNgayThuoc = false;
                        self.NhomHangApply.Id_NhomHang = null;
                        self.NhomHangApply.TenNhomHangHoa = '';
                        self.NhomHangApply.IsChuyenPhatNhanh = false;
                        self.NhomHangApply.GhiChu = '';
                    }
                    else {
                        self.NhomHangApply.Id_NhomHang = self.newHDHoaTro.ID_NhomHang;
                        self.NhomHangApply.TenNhomHangHoa = self.newHDHoaTro.TenNhomHangHoa;
                        self.NhomHangApply.IsXuatNgayThuoc = self.newHDHoaTro.IsXuatNgayThuoc;
                        self.NhomHangApply.SoNgayThuoc = self.newHDHoaTro.SoNgayThuoc;

                        for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                            if (self.NhomHangEnoughCondition[i].Id_NhomHang == self.newHDHoaTro.ID_NhomHang) {
                                self.NhomHangEnoughCondition[i].IsApply = true;
                                self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = self.newHDHoaTro.IsXuatNgayThuoc;
                                self.NhomHangEnoughCondition[i].SoNgayThuoc = self.newHDHoaTro.SoNgayThuoc;
                                self.NhomHangEnoughCondition[i].GhiChu = self.NhomHangApply.GhiChu;
                                break;
                            }
                        }
                    }
                }
                self.NhomHang_GetListSanPhamHoTro();
                self.Caculator_TongSLXuat(1);

                $('#vmApDungNhomHoTro').modal('show');
            },
            showModalUpdate: function (idHoaDon, cthd = []) {
                let self = this;
                self.saveOK = false;
                self.isLoading = false;
                self.typeUpdate = 2;

                self.PublicProducts = [];
                self.DayProducts = [];
                self.NhomHangEnoughCondition = [];

                // get infor hd by id
                $.getJSON(self.UrlAPI.HoaDon + 'GetInfor_HDHoTro?idHoaDon=' + idHoaDon).done(function (x) {
                    if (x.res && x.dataSoure.length > 0) {
                        let hd = x.dataSoure[0];

                        let dtNow = moment(new Date()).format('YYYY-MM-DD')
                        let ngayLapPhieu = moment(hd.NgayLapHoaDon).format('YYYY-MM-DD');
                        let role = VHeader.Quyen.indexOf('HoaDon_ThayDoiThanhPhanDinhLuong_NeuKhacNgay') > -1
                        if (dtNow === ngayLapPhieu) {
                            role = self.roleChangeDinhLuong;
                        }
                        self.roleChangeDinhLuong_NeuKhacNgay = role;

                        self.InvoiceChosing = {
                            IDRandom: hd.ID,
                            ID: hd.ID,
                            ID_DonVi: hd.ID_DonVi,
                            ID_DoiTuong: hd.ID_DoiTuong,
                            SoNgayThuoc: hd.SoNgayThuoc,

                            MaHoaDon: hd.MaHoaDon,
                            MaDoiTuong: hd.MaDoiTuong,
                            TenDoiTuong: hd.TenDoiTuong,
                            NgayLapHoaDon: hd.NgayLapHoaDon,
                            NguoiTao: hd.NguoiTao,
                        }

                        self.NhomHangApply = {
                            TenNhomHangHoa: hd.TenNhomHangHoa,
                            Id_NhomHang: hd.Id_NhomHang,
                            IsXuatNgayThuoc: hd.SoNgayThuoc > 0,
                            IsChuyenPhatNhanh: hd.IsChuyenPhatNhanh,
                            SoNgayThuoc: hd.SoNgayThuoc,
                            GhiChu: hd.DienGiai,
                        };

                        // assign nvthuchien + tpdinhluong (get from giaodichban_dat_tra.js: avoi get again data multiple time
                        for (let i = 0; i < cthd.length; i++) {
                            let forOut = cthd[i];
                            for (let j = 0; j < x.dataSoure.length; j++) {
                                let forIn = x.dataSoure[j];
                                if (forOut.ID === forIn.ID_ChiTietHD) {
                                    forIn.BH_NhanVienThucHien = forOut.BH_NhanVienThucHien;
                                    forIn.ThanhPhan_DinhLuong = [];
                                    if (!commonStatisJs.CheckNull(forOut.ThanhPhan_DinhLuong)) {
                                        // assign soluongmacdinh+ soluong quycach
                                        for (let k = 0; k < forOut.ThanhPhan_DinhLuong.length; k++) {
                                            let tp = forOut.ThanhPhan_DinhLuong[k];
                                            forOut.ThanhPhan_DinhLuong[k].STT = k + 1;
                                            forOut.ThanhPhan_DinhLuong[k].isDefault = false;
                                            forOut.ThanhPhan_DinhLuong[k].SoLuongMacDinh = 1 / forIn.SoLuong;
                                            forOut.ThanhPhan_DinhLuong[k].SoLuongQuyCach = tp.QuyCach * tp.SoLuong;
                                            forOut.ThanhPhan_DinhLuong[k].GiaVonAfter = tp.GiaVon * forIn.SoLuong;
                                        }
                                        forIn.ThanhPhan_DinhLuong = forOut.ThanhPhan_DinhLuong;
                                    }
                                    break;
                                }
                            }
                        }

                        let spChung = $.grep(x.dataSoure, function (x) {
                            return x.ChatLieu == '';
                        });
                        let spNgay = $.grep(x.dataSoure, function (x) {
                            return x.ChatLieu == 6;
                        })
                        spChung.map(function (x) {
                            x['IDRandom'] = x.ID_ChiTietHD
                        });
                        spNgay.map(function (x) {
                            x['IDRandom'] = x.ID_ChiTietHD
                        });
                        self.PublicProducts = spChung;
                        self.DayProducts = spNgay

                        self.inforOld = {
                            HoaDon: $.extend({}, true, self.InvoiceChosing),
                            NhomHang: $.extend({}, true, self.NhomHangApply),
                            SanPham: [...x.dataSoure],
                        };

                        self.NhomHangEnoughCondition_getAll();
                    }
                    self.NhomHang_GetListSanPhamHoTro();
                    self.Caculator_TongSLXuat(1);
                    $('#vmApDungNhomHoTro').modal('show');
                })
            },
            showUpdate_AssignDataToCache: function () {
                let self = this;
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        hdHoTro.splice(i, 1);
                        break;
                    }
                }

                hdHoTro.push({
                    IDRandomHD: self.InvoiceChosing.IDRandom,
                    ID_NhomHang: self.NhomHangApply.Id_NhomHang,
                    ID_DonVi: self.InvoiceChosing.ID_DonVi,
                    ID_DoiTuong: self.InvoiceChosing.ID_DoiTuong,
                    SoNgayThuoc: self.NhomHangApply.SoNgayThuoc,
                    IsXuatNgayThuoc: self.NhomHangApply.IsXuatNgayThuoc,
                    SPChung: self.PublicProducts,
                    SPNgayThuoc: self.DayProducts,
                    TenNhomHangHoa: self.NhomHangApply.TenNhomHangHoa,
                    MaDoiTuong: self.InvoiceChosing.MaDoiTuong,
                    TenDoiTuong: self.InvoiceChosing.TenDoiTuong,
                })
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
            },
            ChoseProduct_Public: function (item) {
                let self = this;
                let ex = $.grep(self.PublicProducts, function (x) {
                    return x.Id_DonViQuiDoi === item.Id_DonViQuiDoi && x.Id_LoHang === item.Id_LoHang;
                });
                if (ex.length > 0) {
                    ShowMessage_Danger('Dịch vụ đã được chọn');
                    return;
                }
                let obj = {
                    IDRandom: CreateIDRandom('ctHoTro_'),
                    LoaiHangHoa: item.LoaiHangHoa,
                    Id_DonViQuiDoi: item.Id_DonViQuiDoi,
                    Id_LoHang: item.Id_LoHang,
                    MaHangHoa: item.MaHangHoa,
                    TenHangHoa: item.TenHangHoa,
                    TenDonViTinh: item.TenDonViTinh,
                    SoLuong: item.SoLuong,
                    TienChietKhau: item.SoLuong,// soluong * songaythuoc
                    GhiChu: '',
                    BH_NhanVienThucHien: [],
                    ThanhPhan_DinhLuong: [],
                    QuanLyTheoLoHang: false,
                };
                self.PublicProducts.unshift(obj);
                self.Caculator_TongSLXuat(0);
            },
            ChoseProduct_Day: function (item) {
                let self = this;
                let ex = $.grep(self.DayProducts, function (x) {
                    return x.Id_DonViQuiDoi === item.Id_DonViQuiDoi && x.Id_LoHang === item.Id_LoHang;
                });
                if (ex.length > 0) {
                    ShowMessage_Danger('Hàng hóa đã được chọn');
                    return;
                }
                let obj = {
                    IDRandom: CreateIDRandom('ctHoTro_'),
                    LoaiHangHoa: item.LoaiHangHoa,
                    Id_DonViQuiDoi: item.Id_DonViQuiDoi,
                    Id_LoHang: item.Id_LoHang,
                    MaHangHoa: item.MaHangHoa,
                    TenHangHoa: item.TenHangHoa,
                    TenDonViTinh: item.TenDonViTinh,
                    TienChietKhau: item.SoLuong,
                    SoLuong: item.SoLuong * self.NhomHangApply.SoNgayThuoc,
                    GhiChu: '',
                    BH_NhanVienThucHien: [],
                    ThanhPhan_DinhLuong: [],
                    QuanLyTheoLoHang: false,
                };
                self.DayProducts.unshift(obj);
                self.Caculator_TongSLXuat(1);
            },
            PublicProducts_Remove: function (index, item) {
                let self = this;
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts.splice(i, 1);
                        break;
                    }
                }
                // assign again to cache
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let j = 0; j < hdHoTro[i].SPChung.length; j++) {
                            let sp = hdHoTro[i].SPChung[j];
                            if (sp.IDRandom === item.IDRandom) {
                                hdHoTro[i].SPChung.splice(j, 1);
                                break;
                            }
                        }
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
                self.Caculator_TongSLXuat(0);
            },
            PublicProducts_RemoveAll: function () {
                let self = this;
                self.PublicProducts = [];

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        hdHoTro[i].SPChung = [];
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
                self.Caculator_TongSLXuat(0);
            },
            DayProducts_Remove: function (index, item) {
                let self = this;
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts.splice(i, 1);
                        break;
                    }
                }

                // assign again to cache
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let j = 0; j < hdHoTro[i].SPNgayThuoc.length; j++) {
                            let sp = hdHoTro[i].SPNgayThuoc[j];
                            if (sp.IDRandom === item.IDRandom) {
                                hdHoTro[i].SPNgayThuoc.splice(j, 1);
                                break;
                            }
                        }
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));

                self.Caculator_TongSLXuat(1);
            },
            DayProducts_RemoveAll: function () {
                let self = this;

                self.DayProducts = [];
                self.NhomHangApply.IsXuatNgayThuoc = false;
                self.NhomHangApply.SoNgayThuoc = '';
                self.NhomHangApply.IsChuyenPhatNhanh = false;
                for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                    self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = false;
                    self.NhomHangEnoughCondition[i].SoNgayThuoc = '';
                }

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        hdHoTro[i].SPNgayThuoc = [];
                        hdHoTro[i].IsXuatNgayThuoc = false;
                        hdHoTro[i].SoNgayThuoc = 0;
                        hdHoTro[i].IsChuyenPhatNhanh = false;
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
                self.Caculator_TongSLXuat(1);
            },
            Caculator_TongSLXuat: function (type = 1) {
                let self = this;
                let sumSL = 0;
                switch (type) {
                    case 1:
                        for (let i = 0; i < self.DayProducts.length; i++) {
                            let itFor = self.DayProducts[i];
                            sumSL += formatNumberToFloat(itFor.SoLuong);
                        }
                        self.TongXuatNgayThuoc = sumSL;
                        break;
                }
            },
            Enter_FocusNext: function (index) {
                let $this = $(event.currentTarget);
                let $tr = $this.closest('tr').next();
                $tr.find('td').eq(index).find('input').focus().select();
            },
            EditNgayThuoc: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                formatNumberObj($this);
                let gtri = $this.val();
                self.NhomHangApply.SoNgayThuoc = formatNumberToFloat($this.val());

                for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                    if (i === index) {
                        self.NhomHangEnoughCondition[i].SoNgayThuoc = gtri;
                        break;
                    }
                }

                for (let i = 0; i < self.DayProducts.length; i++) {
                    self.DayProducts[i].SoLuong = formatNumberToFloat(self.DayProducts[i].TienChietKhau) * self.NhomHangApply.SoNgayThuoc;
                }
                self.Caculator_TongSLXuat(1);
            },
            EditGhiChu: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                self.NhomHangApply.GhiChu = $this.val();

                for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                    if (i === index) {
                        self.NhomHangEnoughCondition[i].GhiChu = $this.val();
                        break;
                    }
                }
            },
            PublicProducts_EditTienChietKhau: function (index, item) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts[i].TienChietKhau = $this.val();
                        self.PublicProducts[i].SoLuong = $this.val();
                        break;
                    }
                }
                self.editSoLuong_UpdateTPDLuong(item, formatNumberToFloat($this.val()));
                self.editSoLuong_UpdateHoaHongNV(item, formatNumberToFloat($this.val()));
            },
            DayProducts_EditTienChietKhau: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts[i].TienChietKhau = $this.val();
                        self.DayProducts[i].SoLuong = formatNumberToFloat(self.DayProducts[i].TienChietKhau) * self.NhomHangApply.SoNgayThuoc;
                        break;
                    }
                }
                self.Caculator_TongSLXuat(1);
            },
            PublicProducts_EditGhiChu: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts[i].GhiChu = $this.val();
                        break;
                    }
                }
            },
            DayProducts_EditGhiChu: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts[i].GhiChu = $this.val();
                        break;
                    }
                }
            },
            showModalTPDL: async function (item) {
                let self = this;
                if (formatNumberToFloat(item.SoLuong) === 0) {
                    ShowMessage_Danger('Vui lòng nhập số lượng trước khi nhập nguyên vật liệu');
                    return;
                }
                if (item.ThanhPhan_DinhLuong !== null && item.ThanhPhan_DinhLuong.length > 0) {
                    vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed = item.ThanhPhan_DinhLuong;
                }
                else {
                    const dataTPDL = await self.GetDinhLuongDV_FromIDQuyDoi(item.Id_DonViQuiDoi);
                    let arrTPDinhLuong = [];
                    for (let i = 0; i < dataTPDL.length; i++) {
                        dataTPDL[i].STT = i + 1;
                        dataTPDL[i].GhiChu = '';
                        dataTPDL[i].isDefault = false;
                        dataTPDL[i].IDRandom = 'TPDL_' + Math.floor(Math.random() * 10000000 + 1);
                        dataTPDL[i].SoLuongMacDinh = 1 / item.SoLuong;;
                        dataTPDL[i].SoLuong = formatNumber3Digit(item.SoLuong * dataTPDL[i].SoLuong);
                        dataTPDL[i].SoLuongQuyCach = dataTPDL[i].SoLuong * dataTPDL[i].QuyCach;
                        dataTPDL[i].GiaVonAfter = dataTPDL[i].SoLuong * dataTPDL[i].GiaVon;// = GiaVon(co ban) * SoLuong
                        arrTPDinhLuong.push(dataTPDL[i]);
                    }
                    vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed = arrTPDinhLuong;
                }

                vmThanhPhanDinhLuong.DichVu_isDoing = item;

                vmThanhPhanDinhLuong.showModal(false, false, 1);
            },
            GetTonKho_byIDQuyDoi: async function (param) {
                let xx = await ajaxHelper('/api/DanhMuc/DM_HangHoaAPI/' + 'GetTonKho_byIDQuyDois', 'POST', param).done(function (x) { })
                    .then(function (x) {
                        if (x.res) return x.data;
                        return [];
                    }).fail(function () {
                        return [];
                    });
                return xx;
            },
            GetDinhLuongDV_FromIDQuyDoi: async function (idQuiDoi) {
                let self = this;
                let xx = await ajaxHelper('/api/DanhMuc/DM_HangHoaAPI/' + 'GetDinhLuongDV_FromIDQuyDoi?idQuiDoi=' + idQuiDoi + '&idDonVi=' + self.inforLogin.ID_DonVi, 'GET').done(function (x) { })
                    .then(function (x) {
                        if (x.res) return x.dataSoure;
                        return [];
                    }).fail(function () {
                        return [];
                    });
                return xx;
            },
            Agree_TPDL: function () {
                let self = this;
                let ctDoing = vmThanhPhanDinhLuong.DichVu_isDoing;

                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (self.PublicProducts[i].IDRandom === ctDoing.IDRandom) {
                        self.PublicProducts[i].ThanhPhan_DinhLuong = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed;
                        break;
                    }
                }
            },
            editSoLuong_UpdateTPDLuong: function (item, sluongNew) {
                for (let m = 0; m < item.ThanhPhan_DinhLuong.length; m++) {
                    let tp = item.ThanhPhan_DinhLuong[m];
                    let soluongAfter = formatNumberToFloat(tp.SoLuongMacDinh) * sluongNew;
                    item.ThanhPhan_DinhLuong[m].SoLuong = soluongAfter;
                    item.ThanhPhan_DinhLuong[m].SoLuongQuyCach = soluongAfter * tp.QuyCach;
                    item.ThanhPhan_DinhLuong[m].GiaVonAfter = soluongAfter * tp.GiaVon;
                }
            },
            showModal_HoaHongNV: function (item) {
                let self = this;

                if (formatNumberToFloat(item.SoLuong) === 0) {
                    ShowMessage_Danger('Vui lòng nhập số lượng trước khi nhập hoa hồng');
                    return;
                }
                vmHoaHongDV.inforHoaDon = $.extend({}, true, self.InvoiceChosing);
                vmHoaHongDV.inforHoaDon.LoaiHoaDon = 36;

                let ctDoing = {};
                if (self.typeUpdate === 1) {
                    ctDoing = {
                        ID: null,
                        IDRandom: item.IDRandom,
                        ID_DonViQuiDoi: item.Id_DonViQuiDoi,
                        ID_LoHang: item.Id_LoHang,
                        SoLuong: item.SoLuong,
                        DonGia: 0,
                        ThanhTien: 0,
                        LaPTPhiDichVu: true,
                        PhiDichVu: 0,
                        TongPhiDichVu: 0,
                        MaHangHoa: item.MaHangHoa,
                        TenHangHoa: item.TenHangHoa,
                        LaHangHoa: false,
                        LoaiHangHoa: item.LoaiHangHoa,
                        ChietKhauMD_NV: 0,
                        ChietKhauMD_NVTheoPT: false,
                        BH_NhanVienThucHien: item.BH_NhanVienThucHien,
                        ThanhPhan_DinhLuong: item.ThanhPhan_DinhLuong,
                    }
                }
                else {
                    ctDoing = {
                        ID: item.ID_ChiTietHD,
                        IDRandom: item.ID_ChiTietHD,
                        ID_DonViQuiDoi: item.ID_DonViQuiDoi,
                        ID_LoHang: item.ID_LoHang,
                        SoLuong: item.SoLuong,
                        DonGia: 0,
                        ThanhTien: 0,
                        LaPTPhiDichVu: true,
                        PhiDichVu: 0,
                        TongPhiDichVu: 0,
                        MaHangHoa: item.MaHangHoa,
                        TenHangHoa: item.TenHangHoa,
                        LaHangHoa: false,
                        LoaiHangHoa: item.LoaiHangHoa,
                        ChietKhauMD_NV: 0,
                        ChietKhauMD_NVTheoPT: false,
                        BH_NhanVienThucHien: item.BH_NhanVienThucHien,
                        ThanhPhan_DinhLuong: item.ThanhPhan_DinhLuong,
                    }
                }

                vmHoaHongDV.GridNV_TVTH = ctDoing.BH_NhanVienThucHien;
                vmHoaHongDV.showModal(ctDoing, false, false);
            },
            Agree_HoaHongNV: function () {
                let self = this;
                let ctDoing = vmHoaHongDV.DichVu_isDoing;

                let nvTH = '', nvTV = '';
                let nvTH_Print = '', nvTV_Print = '';
                for (let i = 0; i < vmHoaHongDV.GridNV_TVTH.length; i++) {
                    let itemFor = vmHoaHongDV.GridNV_TVTH[i];
                    let dvtCK = ' đ';
                    let valCK = formatNumber3Digit(itemFor.TienChietKhau);
                    if (itemFor.PT_ChietKhau > 0) {
                        dvtCK = ' %';
                        valCK = formatNumber3Digit(itemFor.PT_ChietKhau);
                    }
                    switch (itemFor.TacVu) {
                        case 1: // thuchien
                        case 3: // thuchien theoyc
                            nvTH += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                            nvTH_Print += itemFor.TenNhanVien + ', ';
                            break;
                        case 2: // tuvan
                        case 4: // bangoi
                            nvTV += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                            nvTV_Print += itemFor.TenNhanVien + ', ';
                            break;
                    }
                }

                nvTH = nvTH !== '' ? 'Thực hiện: ' + Remove_LastComma(nvTH) : '';
                nvTH_Print = nvTH_Print !== '' ? Remove_LastComma(nvTH_Print) : '';
                nvTV = nvTV !== '' ? 'Tư vấn:' + Remove_LastComma(nvTV) : '';
                nvTV_Print = nvTV_Print !== '' ? Remove_LastComma(nvTV_Print) : '';

                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (self.PublicProducts[i].IDRandom === ctDoing.IDRandom) {
                        self.PublicProducts[i].GhiChu_NVThucHien = nvTH;
                        self.PublicProducts[i].GhiChu_NVThucHienPrint = nvTH_Print;
                        self.PublicProducts[i].GhiChu_NVTuVan = nvTV;
                        self.PublicProducts[i].GhiChu_NVTuVanPrint = nvTV_Print;
                        self.PublicProducts[i].HoaHongTruocChietKhau = vmHoaHongDV.TinhHoaHongTruocCK ? 1 : 0;
                        self.PublicProducts[i].BH_NhanVienThucHien = vmHoaHongDV.GridNV_TVTH;
                        break;
                    }
                }
            },
            editSoLuong_UpdateHoaHongNV: function (item, sluongNew) {
                for (let i = 0; i < item.BH_NhanVienThucHien.length; i++) {
                    let nv = item.BH_NhanVienThucHien[i];
                    item.BH_NhanVienThucHien[i].TienChietKhau = nv.ChietKhauMacDinh * sluongNew * nv.HeSo;
                }
            },
            CheckSave: function () {
                let self = this;

                if (commonStatisJs.CheckNull(self.InvoiceChosing.ID_DoiTuong)) {
                    ShowMessage_Danger('Vui lòng chọn khách hàng');
                    return;
                }

                let nhomApply = self.NhomHangApply;
                if (commonStatisJs.CheckNull(nhomApply.Id_NhomHang)) {
                    ShowMessage_Danger('Vui lòng chọn nhóm áp dụng');
                    return;
                }

                if (self.PublicProducts.length === 0 && self.DayProducts.length === 0) {
                    ShowMessage_Danger('Vui lòng chọn sản phẩm hỗ trợ');
                    return false;
                }

                if (nhomApply.IsXuatNgayThuoc) {
                    if (nhomApply.SoNgayThuoc === 0) {
                        ShowMessage_Danger('Vui lòng nhập số ngày thuốc');
                        return false;
                    }
                    if (self.DayProducts.length === 0) {
                        ShowMessage_Danger('Vui lòng chọn sản phẩm hỗ trợ ngày thuốc');
                        return false;
                    }
                }

                let arrNumber0 = $.grep(self.PublicProducts, function (x) {
                    return formatNumberToFloat(x.SoLuong) == 0;
                })
                if (arrNumber0.length > 0) {
                    ShowMessage_Danger('Sản phẩm chung: Chưa nhập đủ thông tin cột Số lượng');
                    return false;
                }

                arrNumber0 = $.grep(self.DayProducts, function (x) {
                    return formatNumberToFloat(x.SoLuong) == 0;
                })
                if (arrNumber0.length > 0) {
                    ShowMessage_Danger('Sản phẩm ngày thuốc: Chưa nhập đủ thông tin cột Số lượng');
                    return false;
                }
                return true;
            },
            CheckTonKho: async function () {
                let self = this;

                let lstCTHD = [];
                for (var i = 0; i < self.PublicProducts.length; i++) {
                    let itFor = self.PublicProducts[i];
                    switch (itFor.LoaiHangHoa) {
                        case 1:
                            {
                                itFor.ID_DonViQuiDoi = itFor.Id_DonViQuiDoi;
                                lstCTHD.push(itFor);
                            }
                            break;
                        case 2:
                            {
                                if (itFor.ThanhPhan_DinhLuong !== null && itFor.ThanhPhan_DinhLuong !== undefined) {
                                    for (var j = 0; j < itFor.ThanhPhan_DinhLuong.length; j++) {
                                        let itForIn = itFor.ThanhPhan_DinhLuong[j];
                                        lstCTHD.push(itForIn);
                                    }
                                }
                                else {
                                    // get tpdl default (fromDB)
                                    const dataTPDL = await self.GetDinhLuongDV_FromIDQuyDoi(itFor.Id_DonViQuiDoi);
                                    for (var j = 0; j < dataTPDL.length; j++) {
                                        let itForIn = dataTPDL[j];
                                        lstCTHD.push(itForIn);
                                    }
                                }
                            }
                            break;
                    }
                }

                for (var i = 0; i < self.DayProducts.length; i++) {
                    let itFor = self.DayProducts[i];
                    switch (itFor.LoaiHangHoa) {
                        case 1:
                            {
                                itFor.ID_DonViQuiDoi = itFor.Id_DonViQuiDoi;
                                lstCTHD.push(itFor);
                            }
                            break;
                        case 2:
                            {
                                if (itFor.ThanhPhan_DinhLuong !== null && itFor.ThanhPhan_DinhLuong !== undefined) {
                                    for (var j = 0; j < itFor.ThanhPhan_DinhLuong.length; j++) {
                                        let itForIn = itFor.ThanhPhan_DinhLuong[j];
                                        lstCTHD.push(itForIn);
                                    }
                                }
                                else {
                                    // get tpdl default (fromDB)
                                    const dataTPDL = await self.GetDinhLuongDV_FromIDQuyDoi(itFor.Id_DonViQuiDoi);
                                    for (var j = 0; j < dataTPDL.length; j++) {
                                        let itForIn = dataTPDL[j];
                                        lstCTHD.push(itForIn);
                                    }
                                }
                            }
                            break;
                    }
                }

                let arrCTNew = GroupCTHD_byIDQuyDoi(lstCTHD);// this func at Public.js

                let arrIDQuyDoi = $.unique(arrCTNew.map(function (x) {
                    return x.ID_DonViQuiDoi;
                }));
                let arrIDLoHang = arrCTNew.map(function (x) {
                    return x.ID_LoHang;
                }).filter(x => x !== null);

                let param = {
                    ID_ChiNhanh: self.inforLogin.ID_DonVi,
                    IdHoaDonUpdate: self.typeUpdate === 2 ? self.InvoiceChosing.ID : const_GuidEmpty,
                    ToDate: moment(new Date()).format('YYYY-MM-DD HH:mm'),
                    ListIDQuyDoi: arrIDQuyDoi,
                    ListIDLoHang: arrIDLoHang,
                }

                let msgErr = '';
                let dataCheck = await self.GetTonKho_byIDQuyDoi(param);
                if (arrIDQuyDoi.length > 0 && (commonStatisJs.CheckNull(dataCheck) || dataCheck.length === 0)) {
                    ShowMessage_Danger('Lỗi lấy dữ liệu tồn kho');
                    return false;
                }
                if (commonStatisJs.CheckNull(dataCheck)) return true;
                for (let i = 0; i < arrCTNew.length; i++) {
                    let forOut = arrCTNew[i];
                    let dataDB = $.grep(dataCheck, function (o) {
                        return o.ID_DonViQuiDoi === forOut.ID_DonViQuiDoi
                            && (!forOut.QuanLyTheoLoHang || (o.ID_LoHang === forOut.ID_LoHang))
                    });
                    if (dataDB.length > 0 && RoundDecimal(dataDB[0].TonKho) < RoundDecimal(formatNumberToFloat(forOut.SoLuong))) {
                        msgErr += forOut.TenHangHoa.concat(' ', forOut.QuanLyTheoLoHang ? ' (' + forOut.MaLoHang + ') ' : '', ', ');
                    }
                }
                if (!commonStatisJs.CheckNull(msgErr)) {
                    ShowMessage_Danger('Không đủ tồn kho cho hàng hóa ' + Remove_LastComma(msgErr));
                    return false;
                }
                return true;
            },
            Agree: async function () {
                let self = this;
                let check = self.CheckSave();
                if (!check) {
                    return;
                }

                let checkTonKho = await self.CheckTonKho();
                if (!checkTonKho) {
                    return;
                }

                self.saveOK = true;

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                let ex = false;
                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        ex = true;
                        hdHoTro[i].ID_NhomHang = self.NhomHangApply.Id_NhomHang;
                        hdHoTro[i].SoNgayThuoc = self.NhomHangApply.SoNgayThuoc;
                        hdHoTro[i].IsXuatNgayThuoc = self.NhomHangApply.IsXuatNgayThuoc;
                        hdHoTro[i].IsChuyenPhatNhanh = self.NhomHangApply.IsChuyenPhatNhanh;
                        hdHoTro[i].DienGiai = self.NhomHangApply.GhiChu;
                        hdHoTro[i].SPChung = self.PublicProducts;
                        hdHoTro[i].SPNgayThuoc = self.DayProducts;
                        hdHoTro[i].TenNhomHangHoa = self.NhomHangApply.TenNhomHangHoa;
                        hdHoTro[i].ID_DoiTuong = self.InvoiceChosing.ID_DoiTuong;
                        hdHoTro[i].MaDoiTuong = self.InvoiceChosing.MaDoiTuong;
                        hdHoTro[i].TenDoiTuong = self.InvoiceChosing.TenDoiTuong;
                        break;
                    }
                }

                if (!ex) {
                    hdHoTro.push({
                        IDRandomHD: self.InvoiceChosing.IDRandom,
                        ID_NhomHang: self.NhomHangApply.Id_NhomHang,
                        ID_DonVi: self.InvoiceChosing.ID_DonVi,
                        ID_DoiTuong: self.InvoiceChosing.ID_DoiTuong,
                        SoNgayThuoc: self.NhomHangApply.SoNgayThuoc,
                        IsXuatNgayThuoc: self.NhomHangApply.IsXuatNgayThuoc,
                        IsChuyenPhatNhanh: self.NhomHangApply.IsChuyenPhatNhanh,
                        DienGiai: self.NhomHangApply.GhiChu,
                        SPChung: self.PublicProducts,
                        SPNgayThuoc: self.DayProducts,
                        TenNhomHangHoa: self.NhomHangApply.TenNhomHangHoa,
                        MaDoiTuong: self.InvoiceChosing.MaDoiTuong,
                        TenDoiTuong: self.InvoiceChosing.TenDoiTuong,
                    })
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));

                //if (self.typeUpdate === 2) {
                self.saveHoaDonHoTro(self.InvoiceChosing.IDRandom);
                //}
            },
            ChangeNgayLapHoaDon: function (e) {
                let self = this;
                let dt = moment(e).format('YYYY-MM-DD HH:mm');
                self.InvoiceChosing.NgayLapHoaDon = dt;
            },
            ChangeCustomer: function (item) {
                let self = this;
                self.InvoiceChosing.ID_DoiTuong = item.ID;
                self.InvoiceChosing.TenDoiTuong = item.TenDoiTuong;
                self.InvoiceChosing.MaDoiTuong = item.MaDoiTuong;

                let $this = $(event.currentTarget);
                $($this).closest('div').hide();
                $($this).closest('div').prev('focus');
            },
            ResetCustomer: function () {
                let self = this;
                self.InvoiceChosing.ID_DoiTuong = null;
                self.InvoiceChosing.TenDoiTuong = '';
                self.InvoiceChosing.MaDoiTuong = '';
            },
            saveHoaDonHoTro: function (idRandomHD, ngaylapHD) {// used to lui ngaylapHD
                let self = this;

                let hd = {};
                let cthd = [], spChung = [], spNgay = [];
                let sListSP = '', sChung = '', sNgay = '';

                let sType = 'Thêm mới', user = ' <br /> Người tạo: ' + self.inforLogin.UserLogin;
                let sOld = '';

                let url = 'Post_HoaDonHoTro';
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                if (self.typeUpdate === 1) {
                    let hdEx = $.grep(hdHoTro, function (x) {
                        return x.IDRandomHD === idRandomHD;
                    });

                    if (hdEx.length > 0) {
                        hd = {
                            ID: self.InvoiceChosing.ID,
                            LoaiHoaDon: 36,
                            ID_DonVi: hdEx[0].ID_DonVi,
                            ID_DoiTuong: hdEx[0].ID_DoiTuong,
                            ID_CheckIn: hdEx[0].ID_NhomHang,
                            ID_NhanVien: self.inforLogin.ID_NhanVien,
                            NguoiTao: self.inforLogin.UserLogin,
                            TongGiamGia: formatNumberToFloat(hdEx[0].SoNgayThuoc),
                            NgayLapHoaDon: self.InvoiceChosing.NgayLapHoaDon,
                            ChoThanhToan: false,
                            DienGiai: hdEx[0].DienGiai,
                            An_Hien: hdEx[0].IsChuyenPhatNhanh,

                            TenDoiTuong: hdEx[0].TenDoiTuong,
                            MaDoiTuong: hdEx[0].MaDoiTuong,
                            TenNhomHangHoa: hdEx[0].TenNhomHangHoa,
                        };

                        spChung = hdEx[0].SPChung;
                        spNgay = hdEx[0].SPNgayThuoc;
                    }
                }
                else {
                    url = 'Post_HoaDonHoTro?idHoaDonOld=' + self.InvoiceChosing.ID;// hủy hóa đơn cũ + tạo hóa đơn mới "Mahoaon_01" (giống phiếu xuất kho)
                    spChung = self.PublicProducts;
                    spNgay = self.DayProducts;

                    hd = {
                        ID: self.InvoiceChosing.ID,
                        LoaiHoaDon: 36,
                        MaHoaDon: self.InvoiceChosing.MaHoaDon,
                        ID_DonVi: self.InvoiceChosing.ID_DonVi,
                        ID_DoiTuong: self.InvoiceChosing.ID_DoiTuong,
                        ID_CheckIn: self.NhomHangApply.Id_NhomHang,
                        ID_NhanVien: self.inforLogin.ID_NhanVien,
                        NguoiTao: self.inforLogin.UserLogin,
                        TongGiamGia: formatNumberToFloat(self.NhomHangApply.SoNgayThuoc),
                        NgayLapHoaDon: self.InvoiceChosing.NgayLapHoaDon,
                        ChoThanhToan: false,
                        DienGiai: self.NhomHangApply.GhiChu,
                        An_Hien: self.NhomHangApply.IsChuyenPhatNhanh,

                        TenDoiTuong: self.InvoiceChosing.TenDoiTuong,
                        MaDoiTuong: self.InvoiceChosing.MaDoiTuong,
                        TenNhomHangHoa: self.NhomHangApply.TenNhomHangHoa,
                    };

                    sType = 'Cập nhật';
                    user = ' <br /> Người sửa: ' + VHeader.UserLogin;

                    sOld = '<br /> <b> Thông tin cũ: </b>';
                    sOld = sOld.concat('<br> Mã hóa đơn: ', self.InvoiceChosing.MaHoaDon);
                    sOld = sOld.concat('<br> Ngày lập: ', moment(self.inforOld.HoaDon.NgayLapHoaDon).format('DD/MM/YYYY HH:mm'));
                    sOld = sOld.concat('<br> Nhóm hàng: ', self.inforOld.NhomHang.TenNhomHangHoa);
                    sOld = sOld.concat('<br /> Xuất ngày thuốc: ', self.inforOld.NhomHang.IsXuatNgayThuoc ? self.inforOld.NhomHang.SoNgayThuoc : 'không');
                    sOld = sOld.concat('<br /> Chuyển phát nhanh: ', self.inforOld.NhomHang.IsChuyenPhatNhanh ? 'có' : 'không');

                    let arrChung = $.grep(self.inforOld.SanPham, function (x) {
                        return x.ChatLieu !== '6';
                    })
                    if (arrChung.length > 0) {
                        sOld = sOld.concat('<br /> <b> Sản phẩm chung gồm: </b>');

                        for (let i = 0; i < arrChung.length; i++) {
                            let itFor = arrChung[i];
                            sOld += ' <br /> '.concat(i + 1, '. ', itFor.TenHangHoa, ' (', itFor.MaHangHoa,
                                ') Số lượng ', itFor.TienChietKhau);
                        }
                    }

                    let arrNgay = $.grep(self.inforOld.SanPham, function (x) {
                        return x.ChatLieu === '6';
                    })
                    if (arrNgay.length > 0) {
                        sOld = sOld.concat('<br /> <b> Sản phẩm ngày thuốc gồm: </b>');

                        for (let i = 0; i < arrNgay.length; i++) {
                            let itFor = arrNgay[i];
                            sOld += ' <br /> '.concat(i + 1, '. ', itFor.TenHangHoa, ' (', itFor.MaHangHoa,
                                ') Số lượng ', itFor.TienChietKhau, '/ngày, Tổng xuất ', itFor.SoLuong);
                        }
                    }
                }

                if (spChung.length > 0) {
                    sListSP = '<br /> <b> Sản phẩm chung gồm: </b>';
                }

                for (let i = 0; i < spChung.length; i++) {
                    let itFor = spChung[i];
                    let obj = {
                        SoThuTu: cthd.length + 1,
                        MaHangHoa: itFor.MaHangHoa,
                        TenHangHoa: itFor.TenHangHoa,
                        ID_DonViQuiDoi: itFor.Id_DonViQuiDoi,
                        ID_LoHang: itFor.Id_LoHang,
                        SoLuong: itFor.SoLuong,
                        TienChietKhau: itFor.TienChietKhau,
                        GhiChu: itFor.GhiChu,
                        BH_NhanVienThucHien: itFor.BH_NhanVienThucHien,
                        ThanhPhan_DinhLuong: itFor.ThanhPhan_DinhLuong,
                        ChatLieu: ''
                    }
                    cthd.push(obj);
                    sChung += ' <br /> '.concat(obj.SoThuTu, '. ', obj.TenHangHoa, ' (', obj.MaHangHoa,
                        ') Số lượng ', obj.TienChietKhau);
                }
                sListSP += sChung;

                if (spNgay.length > 0) {
                    sListSP += '<br /> <b> Sản phẩm ngày thuốc gồm: </b>';
                }
                for (let i = 0; i < spNgay.length; i++) {
                    let itFor = spNgay[i];
                    let obj = {
                        SoThuTu: cthd.length + 1,
                        MaHangHoa: itFor.MaHangHoa,
                        TenHangHoa: itFor.TenHangHoa,
                        ID_DonViQuiDoi: itFor.Id_DonViQuiDoi,
                        ID_LoHang: itFor.Id_LoHang,
                        SoLuong: itFor.SoLuong,
                        TienChietKhau: itFor.TienChietKhau,
                        GhiChu: itFor.GhiChu,
                        BH_NhanVienThucHien: itFor.BH_NhanVienThucHien,
                        ThanhPhan_DinhLuong: itFor.ThanhPhan_DinhLuong,
                        ChatLieu: '6' // !important: used to create phieuxuat SPNgaythuoc
                    }
                    cthd.push(obj);
                    sNgay += ' <br /> '.concat(obj.SoThuTu, '. ', obj.TenHangHoa, ' (', obj.MaHangHoa,
                        ') Số lượng ', obj.TienChietKhau, '/ngày, Tổng xuất ', obj.SoLuong);
                }
                sListSP += sNgay;

                let myData = {
                    objHoaDon: hd,
                    objCTHoaDon: cthd,
                }
                if (!$.isEmptyObject(hd)) {
                    self.isLoading = true;
                    ajaxHelper(self.UrlAPI.HoaDon + url, 'POST', myData).done(function (x) {
                        if (x.res) {
                            ShowMessage_Success(sType + ' hóa đơn hỗ trợ thành công');

                            let data = x.data;
                            let diary = {
                                ID_DonVi: self.inforLogin.ID_DonVi,
                                ID_NhanVien: self.inforLogin.ID_NhanVien,
                                LoaiNhatKy: self.typeUpdate,
                                ChucNang: 'Áp dụng hỗ trợ ',
                                NoiDung: sType.concat(' hóa đơn hỗ trợ ', data.MaHoaDon,
                                    ', Khách hàng ', hd.TenDoiTuong, '(', hd.MaDoiTuong, ')'),
                                NoiDungChiTiet: 'Nội dung chi tiết '.concat(' <br /> Tên nhóm hàng: ', hd.TenNhomHangHoa,
                                    ' <br /> Xuất ngày thuốc: ', hd.TongGiamGia > 0 ? hd.TongGiamGia : 'không',
                                    ' <br /> Chuyển phát nhanh: ', hd.An_Hien ? 'có' : 'không',
                                    ' <br /> Ngày lập phiếu: ', moment(data.NgayLapHoaDon).format('DD/MM/YYYY HH:mm'),
                                    sListSP, user, sOld),
                                LoaiHoaDon: 36,
                                ID_HoaDon: self.typeUpdate === 1 ? data.ID : self.InvoiceChosing.ID, // !important: nếu cập nhật, lưu idHoaDonOld để chạy lại tồn kho
                                ThoiGianUpdateGV: self.typeUpdate === 1 ? data.NgayLapHoaDon : self.InvoiceChosing.NgayLapHoaDon
                            }
                            Post_NhatKySuDung_UpdateGiaVon(diary);

                            hdHoTro = $.grep(hdHoTro, function (x) {
                                return x.IDRandomHD !== idRandomHD;
                            });
                            localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));

                            self.CreatePhieuXuat_NguyenVatLieu(data.ID);
                            self.Post_BHChiTiet_DinhDanh(data.ID);

                            // always save: xuatNgayThuoc --> khong xuat (or nguoclai)
                            self.CreatePhieuXuat_FromHoaDon(data.ID, 36, false);
                            self.CreatePhieuXuat_FromHoaDon(data.ID, 36, true);

                            if (self.typeUpdate === 2) {
                                if (moment(self.inforOld.HoaDon.NgayLapHoaDon).format('YYYY-MM-DD') !==
                                    moment(self.InvoiceChosing.NgayLapHoaDon, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD')) {
                                    self.ChangeNgayLapHD_UpdatePhieuXuatKho(self.InvoiceChosing.ID);
                                }
                            }
                        }
                        else {
                            ShowMessage_Danger(sType + ' hóa đơn hỗ trợ thất bại');
                        }
                    }).always(function () {
                        self.isLoading = false;
                        $('#vmApDungNhomHoTro').modal('hide');
                    })
                }
            },

            Post_BHChiTiet_DinhDanh: function (idHoaDon) {
                let self = this;
                ajaxHelper(self.UrlAPI.HoaDon + 'Post_BHChiTiet_DinhDanh?idHoaDon=' + idHoaDon).done(function (x) {

                })
            },

            CreatePhieuXuat_NguyenVatLieu: function (idHoaDon) {
                let self = this;
                ajaxHelper(self.UrlAPI.HoaDon + 'CreatePhieuXuatKho_NguyenVatLieu?idHoaDon=' + idHoaDon, 'GET').done(function (x) {
                    if (x.res) {

                    }
                })
            },
            CreatePhieuXuat_FromHoaDon: function (idHoaDon, loaiHoaDon = 36, xuatNgayThuoc = false) {
                let self = this;
                $.getJSON(self.UrlAPI.HoaDon + 'CreatePhieuXuat_FromHoaDon?idHoaDon=' + idHoaDon
                    + "&loaiHoaDon=" + loaiHoaDon + '&isXuatNgayThuoc=' + xuatNgayThuoc).done(function (x) {
                        if (x.res) {
                        }
                    })
            },
            ChangeNgayLapHD_UpdatePhieuXuatKho: function (idHoaDon) {
                let self = this;
                ajaxHelper(self.UrlAPI.HoaDon + 'ChangeNgayLapHD_UpdatePhieuXuatKho?idHoaDon=' + idHoaDon, 'GET').done(function (x) {
                });
            },
        }
    })

    $('#vmThanhPhanDinhLuong').on('hidden.bs.modal', function () {
        if (vmThanhPhanDinhLuong.saveOK && vmThanhPhanDinhLuong.formType === 1) {
            vmApDungNhomHoTro.Agree_TPDL();
        }
    })

    $('#vmEditHoaHongDV').on('hidden.bs.modal', function () {
        if (vmHoaHongDV.saveOK && vmHoaHongDV.inforHoaDon.LoaiHoaDon === 36) {
            if (vmHoaHongDV.isNew) {
                vmApDungNhomHoTro.Agree_HoaHongNV();
            }
        }
    })

    // insert object at index
    Array.prototype.insert = function (index, item) {
        this.splice(index, 0, item);
    };
</script>